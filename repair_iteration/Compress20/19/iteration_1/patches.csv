bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length];  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length];  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  byte[this.tmpbuf.length];	  this.entryEOF    =   "   ";    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf,  0,  this.tmpbuf.length);  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf,  0,  this.tmpbuf.length);	  this.entryEOF    =   "   ";    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  this.entryEOF  =  new  ByteArrayInputStream(this.tmpbuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  new  ByteArrayInputStream(this.tmpbuf,  0,  this.tmpbuf.length);  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  ByteArrayInputStream(this.tmpbuf,  0,  this.tmpbuf.length);	  this.entryEOF    =   "   ";    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length);  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf.length);	  this.entryEOF    =   "   ";    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  +  1];  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  +  1];  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  byte[this.tmpbuf.length  +  1];	  this.entryEOF    =   "   ";    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length  -  1,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length  -  1,  this.tmpbuf.length);  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf.length  -  1,  this.tmpbuf.length);	  this.entryEOF    =   "   ";    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
8	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
9	[BUG]  [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
10	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
11	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
12	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpBuf[  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpBuf[  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpBuf[	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
13	[BUG]  [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
14	[BUG]  [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
15	[BUG]  [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEO  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEO  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEO	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
16	[BUG]  [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
17	[BUG]  [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  true;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
18	[BUG]  [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
19	[BUG]  [BUGGY]  this.entryEOF  |=  true;  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  |=  true;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  true;	  this.entryEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
20	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length));  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length));  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length));	  this.entryEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
21	[BUG]  [BUGGY]  this.entryEOF  |=  0;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  |=  0;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  0;	  this.entryEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
22	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,  0,  this.tmpbuf.length));  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,  0,  this.tmpbuf.length));  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOFRactory(this.tmpbuf,  0,  this.tmpbuf.length));	  this.entryEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
23	[BUG]  [BUGGY]  this.entryEOF  |=  BYTE_BYTES_BUF;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  |=  BYTE_BYTES_BUF;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  BYTE_BYTES_BUF;	  this.entryEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
24	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length));  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length));  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length));	  this.entryEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
25	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)+  1;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)+  1;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  0,  this.tmpbuf.length)+  1;	  this.entryEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
26	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entryBytesRead    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
27	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBytesRead  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBytesRead  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBytesRead	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entryBytesRead    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
28	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBy  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBy  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBy	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entryBytesRead    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
29	[BUG]  [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBytesRead  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBytesRead  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBytesRead	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entryBytesRead    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
30	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entryBytesRead    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
31	[BUG]  [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBy  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBy  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryBy	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entryBytesRead    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
32	[BUG]  [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length));  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length));  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length));	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
33	[BUG]  [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length);  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
34	[BUG]  [BUGGY]  in.close();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  in.close();  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	in.close();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
35	[BUG]  [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length));  in.close();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length));  in.close();  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length));  in.close();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
36	[BUG]  [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length  -  1));  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length  -  1));  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length  -  1));	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length);  ensureOpen();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length);  ensureOpen();  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	InputStream  in  =  new  BufferedInputStream(this.tmpbuf,  0,  this.tmpbuf.length);  ensureOpen();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
38	[BUG]  [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length));  closeEntry();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length));  closeEntry();  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tmpbuf  =  new  BufferedReader(new  InputStreamReader(this.tmpbuf,  0,  this.tmpbuf.length));  closeEntry();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
39	[BUG]  [BUGGY]  This.entryEOF  =  true;  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  This.entryEOF  =  true;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  true;	  This.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
40	[BUG]  [BUGGY]  This.entryEOF  =  null;  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  This.entryEOF  =  null;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  null;	  This.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
41	[BUG]  [BUGGY]  Iterator.entryEOF  =  true;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  Iterator.entryEOF  =  true;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator.entryEOF  =  true;	  This.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
42	[BUG]  [BUGGY]  Iterator.entryEOF  =  false;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  Iterator.entryEOF  =  false;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	Iterator.entryEOF  =  false;	  This.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
43	[BUG]  [BUGGY]  this.tryEOF  =  true;  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.tryEOF  =  true;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.tryEOF  =  true;	  this.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
44	[BUG]  [BUGGY]  this.entryEOF  =  entry;  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  entry;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  entry;	  this.entryEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
45	[BUG]  [BUGGY]  this.entryEOF  =  entryEOF;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  entryEOF;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  entryEOF;	  this.entryEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
46	[BUG]  [BUGGY]  this.entryEOF  = "/ ".equals(this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  = "/ ".equals(this.tmpbuf.length);  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  = "/ ".equals(this.tmpbuf.length);	  this.entryEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
47	[BUG]  [BUGGY]  this.entryEOF  =  tmpbuf;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  tmpbuf;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  tmpbuf;	  this.entryEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
48	[BUG]  [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
49	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpBuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
50	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
51	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  <  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
52	[BUG]  [BUGGY]  if(entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    (CpioArch    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
53	[BUG]  [BUGGY]  if(entry  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(entry  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    (CpioArch    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
54	[BUG]  [BUGGY]  if(entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    (CpioArch    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
55	[BUG]  [BUGGY]  if(entry  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(entry  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry  ==  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    (CpioArch    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
56	[BUG]  [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    (CpioArch    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
57	[BUG]  [BUGGY]  this.entryEOF  =  true;  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  true;  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  true;  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    (CpioArch    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
58	[BUG]  [BUGGY]  this.EntryEOF  =  true;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.EntryEOF  =  true;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  true;	  this.EntryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
59	[BUG]  [BUGGY]  this.EntryEOF  =  null;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.EntryEOF  =  null;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  =  null;	  this.EntryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
60	[BUG]  [BUGGY]  This.EntryEOF  =  true;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  This.EntryEOF  =  true;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.EntryEOF  =  true;	  this.EntryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
61	[BUG]  [BUGGY]  this.EntryEOF  = " ";  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.EntryEOF  = " ";  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  = " ";	  this.EntryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
62	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
63	[BUG]  [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  null;  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  null;  }  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  null;  }	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
64	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
65	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmp	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
66	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.t	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
67	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
68	[BUG]  [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  -  1];  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  new  byte[this.tmpbuf.length  -  1];  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  byte[this.tmpbuf.length  -  1];	  this.entryEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
69	[BUG]  [BUGGY]  this.entryEOF  =  entryBytesRead;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  entryBytesRead;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  entryBytesRead;	  this.entryEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
70	[BUG]  [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entry	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
71	[BUG]  [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
72	[BUG]  [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
73	[BUG]  [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  ==  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
74	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cpi  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cpi  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  Cpi	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
75	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryB  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryB  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entryB	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entryBytesRead    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
76	[BUG]  [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length  +  1,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  new  String(this.tmpbuf.length  +  1,  this.tmpbuf.length);  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  new  String(this.tmpbuf.length  +  1,  this.tmpbuf.length);	  this.entryEOF    =   "   ";    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
77	[BUG]  [BUGGY]  if(entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEnt	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    (CpioArch    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
78	[BUG]  [BUGGY]  if(entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entry!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArch	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    (CpioArch    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
79	[BUG]  [BUGGY]  this.entryEOF  |=  TWO_BYTES_BUF;  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  |=  TWO_BYTES_BUF;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  TWO_BYTES_BUF;	  this.entryEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
80	[BUG]  [BUGGY]  this.entryEOF  |=  JSON_BYTES_BUF;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  |=  JSON_BYTES_BUF;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JSON_BYTES_BUF;	  this.entryEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
81	[BUG]  [BUGGY]  this.entryEOF  &=  false;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  &=  false;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  &=  false;	  this.entryEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
82	[BUG]  [BUGGY]  this.entryEOF  |=  1;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  |=  1;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  1;	  this.entryEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
83	[BUG]  [BUGGY]  this.entryEOF  |=  null;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  |=  null;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  null;	  this.entryEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
84	[BUG]  [BUGGY]  The.entryEOF  =  true;  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  The.entryEOF  =  true;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	The.entryEOF  =  true;	  This.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
85	[BUG]  [BUGGY]  It.entryEOF  =  true;  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  It.entryEOF  =  true;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	It.entryEOF  =  true;	  This.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
86	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
87	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
88	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
89	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
90	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF)  {  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF)  {  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF)  {	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
91	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF)  {  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF)  {  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF)  {	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
92	[BUG]  [BUGGY]  this.entryEOF  = "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  = "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  = "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAMES);	  this.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
93	[BUG]  [BUGGY]  this.entryEOF  = "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_ERROR);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  = "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_ERROR);  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  = "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_ERROR);	  this.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
94	[BUG]  [BUGGY]  this.entryEOF  = "null ".equals(this.tmpbuf.length)?  false  :  false;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  = "null ".equals(this.tmpbuf.length)?  false  :  false;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  = "null ".equals(this.tmpbuf.length)?  false  :  false;	  this.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
95	[BUG]  [BUGGY]  this.entryEOF  = "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAME);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  = "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAME);  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  = "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_FIELD_NAME);	  this.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
96	[BUG]  [BUGGY]  this.entryEOF  = "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  = "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_BYTES_BUF);  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  = "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.QUOTE_BYTES_BUF);	  this.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
97	[BUG]  [BUGGY]  this.entryEOF  = "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_EXTENDS);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  = "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_EXTENDS);  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  = "null ".equals(this.tmpbuf.length)&&  isEnabled(Feature.AUTO_CLOSE_EXTENDS);	  this.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
98	[BUG]  [BUGGY]  this.EntryEOF  = "null ";  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.EntryEOF  = "null ";  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  = "null ";	  this.EntryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
99	[BUG]  [BUGGY]  this.EntryEOF  = "noPMD ";  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.EntryEOF  = "noPMD ";  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.EntryEOF  = "noPMD ";	  this.EntryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
100	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
101	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
102	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =    (CpioArch    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
103	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
104	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.entryEOF!=  null)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbu	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
105	[BUG]  [BUGGY]  this.entryEOF  = "java.util.ArrayList ";  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  = "java.util.ArrayList ";  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  = "java.util.ArrayList ";	  this.entryEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
106	[BUG]  [BUGGY]  this.entryEOF  = "null ";  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  = "null ";  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  = "null ";	  this.entryEOF    =    null;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
107	[BUG]  [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(entryEOF)  {  this.entryEOF  =  false;  }  else  if(this.tmpbuf.length  >  0)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
108	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
109	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
110	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
111	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
112	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getData  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getData  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getData	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
113	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  closed  =  true;  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  closed  =  true;  }  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  closed  =  true;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
114	[BUG]  [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  <  2)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  <  2)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  <  2)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
115	[BUG]  [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  <  1)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  <  1)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  =  true;  }  else  if(this.tmpbuf.length  <  1)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  this.tmpbuf[i]  =  entryEOF	  this.entryEOF    =    false;    }    else    if(this.tmpbuf.length    >    0)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    this.tmpbuf[i]    =    entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
116	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf);  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf);	  this.entryEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
117	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)>  0;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)>  0;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)>  0;	  this.entryEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
118	[BUG]  [BUGGY]  this.entryEOF  |=(this.tmpbuf.length  <  2)?  false  :  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  |=(this.tmpbuf.length  <  2)?  false  :  this.tmpbuf.length);  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=(this.tmpbuf.length  <  2)?  false  :  this.tmpbuf.length);	  this.entryEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
119	[BUG]  [BUGGY]  this.entryEOF  |=(this.tmpbuf.length  <  3)?  false  :  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  |=(this.tmpbuf.length  <  3)?  false  :  this.tmpbuf.length);  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=(this.tmpbuf.length  <  3)?  false  :  this.tmpbuf.length);	  this.entryEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
120	[BUG]  [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)  }  ;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)  }  ;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  |=  JsonStringEncoder.getInstance().encodeAsIOF(this.tmpbuf,  this.tmpbuf.length)  }  ;	  this.entryEOF    |=    false;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
121	[BUG]  [BUGGY]  This.entryEOF  =  this.in!=  null?  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length):  false;  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  This.entryEOF  =  this.in!=  null?  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length):  false;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in!=  null?  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length):  false;	  This.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
122	[BUG]  [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length));  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length));  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length));	  This.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
123	[BUG]  [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)  }  ;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)  }  ;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)  }  ;	  This.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
124	[BUG]  [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)>  0;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)>  0;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)>  0;	  This.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
125	[BUG]  [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)+  1;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)+  1;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	This.entryEOF  =  this.in  ==  null?  false  :  this.in.read(this.tmpbuf,  0,  this.tmpbuf.length)+  1;	  This.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
126	[BUG]  [BUGGY]  this.entryEOF  = "null ".equals(this.tmpbuf.length)&&  this.tmpbuf.length  >  0;  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  = "null ".equals(this.tmpbuf.length)&&  this.tmpbuf.length  >  0;  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  = "null ".equals(this.tmpbuf.length)&&  this.tmpbuf.length  >  0;	  this.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
127	[BUG]  [BUGGY]  this.entryEOF  = "null ".equals(this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  = "null ".equals(this.tmpbuf.length);  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  = "null ".equals(this.tmpbuf.length);	  this.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
128	[BUG]  [BUGGY]  this.entryEOF  = "null ".equalsIgnoreCase(this.tmpbuf.toString());  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  = "null ".equalsIgnoreCase(this.tmpbuf.toString());  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  = "null ".equalsIgnoreCase(this.tmpbuf.toString());	  this.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
129	[BUG]  [BUGGY]  this.entryEOF  = "null ".equalsIgnoreCase(this.tmpbuf.getLength());  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  = "null ".equalsIgnoreCase(this.tmpbuf.getLength());  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  = "null ".equalsIgnoreCase(this.tmpbuf.getLength());	  this.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
130	[BUG]  [BUGGY]  this.entryEOF  = "null ".equalsIgnoreCase(this.tmpbuf.getLength()));  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }    [BUGGY]  this.entryEOF  = "null ".equalsIgnoreCase(this.tmpbuf.getLength()));  [BUGGY]    }  [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	162	162	1	replace	this.entryEOF  = "null ".equalsIgnoreCase(this.tmpbuf.getLength()));	  this.entryEOF    =    false;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
