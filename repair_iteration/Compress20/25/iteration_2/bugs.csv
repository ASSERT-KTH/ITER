bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);	  this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  this.entry  =  readNextCpioEntry();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  readNextCpioEntry();  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readNextCpioEntry();	  this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  this.entry  =  readFully();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  readFully();  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully();	  this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(0);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  readOldBinaryEntry(0);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldBinaryEntry(0);	  this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
5	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryEOF.length);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryEOF.length);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entryEOF.length);	  if(this.entryEOF)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
6	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);	  if(this.entryEOF)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
7	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryEOF);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryEOF);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entryEOF);	  if(this.entryEOF)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
8	[BUG]  [BUGGY]  this.entryEOF  =  getNextCPIOEntry();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entryEOF  =  getNextCPIOEntry();  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  getNextCPIOEntry();	  if(this.entryEOF)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
9	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(TWO_BYTES_BUF,  0,  this.blockSize);	  if(this.entryEOF)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
10	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
11	[BUG]  [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
12	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.entry.clone();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =(CpioArchiveEntry)this.entry.clone();  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.entry.clone();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
13	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.entry.getValue();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =(CpioArchiveEntry)this.entry.getValue();  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.entry.getValue();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
14	[BUG]  [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }	  ensureOpen();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
15	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }	  ensureOpen();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
16	[BUG]  [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }	  ensureOpen();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
17	[BUG]  [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }	  ensureOpen();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
18	[BUG]  [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }	  ensureOpen();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
19	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }	  ensureOpen();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
20	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(true,  false);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  readOldBinaryEntry(true,  false);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldBinaryEntry(true,  false);	  this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
21	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(true,  true);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  readOldBinaryEntry(true,  true);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldBinaryEntry(true,  true);	  this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
22	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(false,  true);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  readOldBinaryEntry(false,  true);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldBinaryEntry(false,  true);	  this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
23	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(true,  0);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  readOldBinaryEntry(true,  0);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldBinaryEntry(true,  0);	  this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
24	[BUG]  [BUGGY]  this.entry  =  getNextCpioEntry();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  getNextCpioEntry();  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  getNextCpioEntry();	  this.entry    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
25	[BUG]  [BUGGY]  this.entry  =  getNextArchiveEntry();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  getNextArchiveEntry();  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  getNextArchiveEntry();	  this.entry    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
26	[BUG]  [BUGGY]  this.entry  =  getNextCPIOEntry(null);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  getNextCPIOEntry(null);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  getNextCPIOEntry(null);	  this.entry    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
27	[BUG]  [BUGGY]  this.entry  =  getNextCPIOEntry(true);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  getNextCPIOEntry(true);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  getNextCPIOEntry(true);	  this.entry    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
28	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
29	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.entry.length);	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
30	[BUG]  [BUGGY]  if(this.entry!=  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry!=  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
31	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
32	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entry.length);	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
33	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
34	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
35	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(false,  false);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  readOldBinaryEntry(false,  false);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldBinaryEntry(false,  false);	  this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
36	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(false,  MAGIC_OLD_BINARY);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  readOldBinaryEntry(false,  MAGIC_OLD_BINARY);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldBinaryEntry(false,  MAGIC_OLD_BINARY);	  this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
37	[BUG]  [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
38	[BUG]  [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
39	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
40	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entry.length);  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
41	[BUG]  [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
42	[BUG]  [BUGGY]  this.entryEOF  =  readOldBinaryEntry(true);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entryEOF  =  readOldBinaryEntry(true);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  readOldBinaryEntry(true);	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
43	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
44	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
45	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
46	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
47	[BUG]  [BUGGY]  this.entry  =  entryEOF;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  entryEOF;  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  entryEOF;	  this.entry    =    null;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
48	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  new  CpioArchiveEntry();  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry();	  this.entry    =    null;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
49	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  new  CpioArchiveEntry(this);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this);	  this.entry    =    null;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
50	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntryImpl();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  new  CpioArchiveEntryImpl();  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntryImpl();	  this.entry    =    null;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
51	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
52	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
53	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryEOF);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryEOF);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.entryEOF);	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
54	[BUG]  [BUGGY]  if(this.entryEOF)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entryEOF)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  }	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
55	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
56	[BUG]  [BUGGY]  if(this.entry!=  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry!=  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  }	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
57	[BUG]  [BUGGY]  if(this.entry!=  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry!=  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
58	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  }	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
59	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
60	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
61	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
62	[BUG]  [BUGGY]  if(this.entry!=  null)  {  closeArchiveEntry();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry!=  null)  {  closeArchiveEntry();  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  closeArchiveEntry();  }	  if(this.entry!=    null)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
63	[BUG]  [BUGGY]  if(this.entry!=  null)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry!=  null)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
64	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
65	[BUG]  [BUGGY]  if(this.entry!=  null)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry!=  null)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
66	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
67	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
68	[BUG]  [BUGGY]  this.entry  =  readOldArchiveEntry();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  readOldArchiveEntry();  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldArchiveEntry();	  this.entry    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
69	[BUG]  [BUGGY]  this.entry  =  readOldArchiveEntry(false);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  readOldArchiveEntry(false);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldArchiveEntry(false);	  this.entry    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
70	[BUG]  [BUGGY]  this.entry  =  readOldArchiveEntry(true);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  readOldArchiveEntry(true);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldArchiveEntry(true);	  this.entry    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
71	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
72	[BUG]  [BUGGY]  this.entry  =  readNextCpioEntry(true);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  readNextCpioEntry(true);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readNextCpioEntry(true);	  this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
73	[BUG]  [BUGGY]  this.entry  =  readFully(false);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  readFully(false);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(false);	  this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
74	[BUG]  [BUGGY]  this.entry  =  readNextCpioEntry(false);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  readNextCpioEntry(false);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readNextCpioEntry(false);	  this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
75	[BUG]  [BUGGY]  if(this.entry!=  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry!=  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
76	[BUG]  [BUGGY]  if(this.entry!=  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry!=  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
77	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
78	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
79	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);	  if(this.entryEOF)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
80	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);	  if(this.entryEOF)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
81	[BUG]  [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR	  ensureOpen();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
82	[BUG]  [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_B  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_B  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_B	  ensureOpen();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
83	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }	  ensureOpen();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
84	[BUG]  [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  true);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  true);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(FOUR_BYTES_BUF,  true);	  this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
85	[BUG]  [BUGGY]  this.entry  =  readIOldBinaryEntry(false);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  readIOldBinaryEntry(false);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readIOldBinaryEntry(false);	  this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
86	[BUG]  [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(FOUR_BYTES_BUF);	  this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
87	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
88	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  closeArchiveEntry();  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry  ==  null)  {  closeArchiveEntry();  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  closeArchiveEntry();  }	  if(this.entry    ==    null)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
89	[BUG]  [BUGGY]  if(this.entryEOF)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entryEOF)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }	  ensureOpen();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
90	[BUG]  [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }	  ensureOpen();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
91	[BUG]  [BUGGY]  if(this.entryEOF)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entryEOF)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }	  ensureOpen();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
92	[BUG]  [BUGGY]  if(this.in!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  this.entry  =  readOldBinaryEntry();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.in!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  this.entry  =  readOldBinaryEntry();  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.in!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  this.entry  =  readOldBinaryEntry();  }	  ensureOpen();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
93	[BUG]  [BUGGY]  if(this.entryEOF)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entryEOF)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }	  ensureOpen();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
94	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.inputStream);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.inputStream);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this.inputStream);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
95	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.getValue();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.getValue();  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.in.getValue();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
96	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.read();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.read();  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.in.read();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
97	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
98	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
99	[BUG]  [BUGGY]  if(this.entryEOF)  {  closeArchiveEntry();  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entryEOF)  {  closeArchiveEntry();  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  closeArchiveEntry();  }	  if(this.entryEOF)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
100	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  closeEntry();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entryEOF!=  null)  {  closeEntry();  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF!=  null)  {  closeEntry();  }	  if(this.entryEOF)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
101	[BUG]  [BUGGY]  if(this.entryEOF  ==  null)  {  closeEntry();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entryEOF  ==  null)  {  closeEntry();  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF  ==  null)  {  closeEntry();  }	  if(this.entryEOF)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
102	[BUG]  [BUGGY]  readFully(this.entry,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  readFully(this.entry,  0,  this.blockSize);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entry,  0,  this.blockSize);	  if(this.entryEOF)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
103	[BUG]  [BUGGY]  this.entryEOF  =  closeEntry();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entryEOF  =  closeEntry();  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  closeEntry();	  if(this.entryEOF)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
104	[BUG]  [BUGGY]  this.entry  =  readFully(true);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  readFully(true);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(true);	  this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
105	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
106	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)getNextCPIOEntry();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =(CpioArchiveEntry)getNextCPIOEntry();  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)getNextCPIOEntry();	  this.entry    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
107	[BUG]  [BUGGY]  this.entry  =  createNextCPIOEntry();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  createNextCPIOEntry();  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  createNextCPIOEntry();	  this.entry    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
108	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
109	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entryEOF!=  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF!=  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
110	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  this.closeEntry();  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry  ==  null)  {  this.closeEntry();  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  this.closeEntry();  }	  if(this.entry    ==    null)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
111	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  magicString);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  magicString);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this,  magicString);	  this.entry    =    null;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
112	[BUG]  [BUGGY]  this.entry  =  readOldCircuitEntry(false);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  this.entry  =  readOldCircuitEntry(false);  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldCircuitEntry(false);	  this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
113	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
114	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry	  if(this.entryEOF)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
115	[BUG]  [BUGGY]  if(this.entry!=  null)  {  this.closeEntry();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {    [BUGGY]  if(this.entry!=  null)  {  this.closeEntry();  }  [BUGGY]    }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  this.closeEntry();  }	  if(this.entry!=    null)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
