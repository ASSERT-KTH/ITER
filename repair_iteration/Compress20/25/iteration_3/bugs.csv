bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.entry  =  getNextCPIOEntry(false);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  getNextCPIOEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  getNextCPIOEntry(false);	  this.entry    =    getNextCPIOEntry(true);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
2	[BUG]  [BUGGY]  this.entry  =  getNextCPIOEntry(true,  false);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  getNextCPIOEntry(true,  false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  getNextCPIOEntry(true,  false);	  this.entry    =    getNextCPIOEntry(true);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
3	[BUG]  [BUGGY]  this.entry  =  getNextCPIOEntry(true,  0);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  getNextCPIOEntry(true,  0);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  getNextCPIOEntry(true,  0);	  this.entry    =    getNextCPIOEntry(true);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
4	[BUG]  [BUGGY]  this.entry  =  getNextCPIOEntry(true,  true);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  getNextCPIOEntry(true,  true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  getNextCPIOEntry(true,  true);	  this.entry    =    getNextCPIOEntry(true);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
5	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.entry.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(THIS_BYTES_BUF,  0,  this.entry.length);	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
6	[BUG]  [BUGGY]  readFully(this.entry,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entry,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entry,  0,  FOUR_BYTES_BUF.length);	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
7	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);	  if(this.entryEOF)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
8	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }	  if(this.entry!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
9	[BUG]  [BUGGY]  this.entry  =  readNextCPIOEntry();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readNextCPIOEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readNextCPIOEntry();	  this.entry    =    readNextCpioEntry();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
10	[BUG]  [BUGGY]  this.entry  =  readOldCpioEntry();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldCpioEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldCpioEntry();	  this.entry    =    readNextCpioEntry();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
11	[BUG]  [BUGGY]  this.entry  =  readNextBinaryEntry();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readNextBinaryEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readNextBinaryEntry();	  this.entry    =    readNextCpioEntry();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
13	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
14	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
15	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
16	[BUG]  [BUGGY]  if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_B  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_B  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_B	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
17	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
18	[BUG]  [BUGGY]  this.entryEOF  =  null;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  null;  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  null;	  if(this.entryEOF    ==    null)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
19	[BUG]  [BUGGY]  this.entryEOF  =  new  byte[TWO_BYTES_BUF.length];  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  new  byte[TWO_BYTES_BUF.length];  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  new  byte[TWO_BYTES_BUF.length];	  if(this.entryEOF    ==    null)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
20	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryEOF.length  -  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryEOF.length  -  1);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entryEOF.length  -  1);	  readFully(TWO_BYTES_BUF,    0,    this.entryEOF.length);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
21	[BUG]  [BUGGY]  readFully(this.entryEOF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entryEOF,  0,  TWO_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entryEOF,  0,  TWO_BYTES_BUF.length);	  readFully(TWO_BYTES_BUF,    0,    this.entryEOF.length);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
22	[BUG]  [BUGGY]  readFully(this.entryEOF,  0,  this.entryEOF.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entryEOF,  0,  this.entryEOF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entryEOF,  0,  this.entryEOF.length);	  readFully(TWO_BYTES_BUF,    0,    this.entryEOF.length);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
23	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryEOF.length  +  1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryEOF.length  +  1);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entryEOF.length  +  1);	  readFully(TWO_BYTES_BUF,    0,    this.entryEOF.length);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
24	[BUG]  [BUGGY]  this.entry  =  readOldCircuitEntry(true);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldCircuitEntry(true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldCircuitEntry(true);	  this.entry    =    readOldCircuitEntry(false);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
25	[BUG]  [BUGGY]  this.entry  =  readOldCircuitEntry(false,  true);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldCircuitEntry(false,  true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldCircuitEntry(false,  true);	  this.entry    =    readOldCircuitEntry(false);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
26	[BUG]  [BUGGY]  this.entry  =  readOldCircuitEntry(false,  false);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldCircuitEntry(false,  false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldCircuitEntry(false,  false);	  this.entry    =    readOldCircuitEntry(false);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
27	[BUG]  [BUGGY]  this.entry  =  readOldCircuitEntry();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldCircuitEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldCircuitEntry();	  this.entry    =    readOldCircuitEntry(false);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
28	[BUG]  [BUGGY]  this.entry  =  getNextCPIOEntry(null,  null);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  getNextCPIOEntry(null,  null);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  getNextCPIOEntry(null,  null);	  this.entry    =    getNextCPIOEntry(null);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
29	[BUG]  [BUGGY]  this.entry  =  getNextCPIOEntry(System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize));  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  getNextCPIOEntry(System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize));  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  getNextCPIOEntry(System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize));	  this.entry    =    getNextCPIOEntry(null);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
30	[BUG]  [BUGGY]  this.entry  =  getNextCPIOEntry(this);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  getNextCPIOEntry(this);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  getNextCPIOEntry(this);	  this.entry    =    getNextCPIOEntry(null);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
31	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
32	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.siZE);  this.entry  =  readOldBinaryEntry(false);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.siZE);  this.entry  =  readOldBinaryEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.siZE);  this.entry  =  readOldBinaryEntry(false);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
33	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  this.entry  =  readOldBinaryEntry(true);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  this.entry  =  readOldBinaryEntry(true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  this.entry  =  readOldBinaryEntry(true);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
34	[BUG]  [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(TWO_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
35	[BUG]  [BUGGY]  this.entry  =  readNextCpioEntry(false,  true);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readNextCpioEntry(false,  true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readNextCpioEntry(false,  true);	  this.entry    =    readNextCpioEntry(false);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
36	[BUG]  [BUGGY]  this.entry  =  readNextBinaryEntry(true);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readNextBinaryEntry(true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readNextBinaryEntry(true);	  this.entry    =    readNextCpioEntry(false);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
37	[BUG]  [BUGGY]  this.entry  =  readNextCpioEntry(false,  false);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readNextCpioEntry(false,  false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readNextCpioEntry(false,  false);	  this.entry    =    readNextCpioEntry(false);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
38	[BUG]  [BUGGY]  this.entry  =  readNextCPIOEntry(true);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readNextCPIOEntry(true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readNextCPIOEntry(true);	  this.entry    =    readNextCpioEntry(false);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
39	[BUG]  [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  ensureOpen();  }	  if(this.entry!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
40	[BUG]  [BUGGY]  readFully(this.entry,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entry,  0,  this.entry.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entry,  0,  this.entry.length);	  if(this.entry!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
41	[BUG]  [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }	  if(this.entry!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
42	[BUG]  [BUGGY]  readFully(this.entry,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entry,  0,  TWO_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entry,  0,  TWO_BYTES_BUF.length);	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
43	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.tmpbuf.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(TWO_BYTES_BUF,  0,  this.tmpbuf.length);	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
44	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
45	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.entryEOF.clone();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.entryEOF.clone();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.entryEOF.clone();	  this.entry    =(CpioArchiveEntry)this.entry.clone();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
46	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.clone();  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.clone();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.clone();	  this.entry    =(CpioArchiveEntry)this.entry.clone();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
47	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.clone();  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.clone();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.in.clone();	  this.entry    =(CpioArchiveEntry)this.entry.clone();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
48	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.entry.cloneTree();  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.entry.cloneTree();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.entry.cloneTree();	  this.entry    =(CpioArchiveEntry)this.entry.clone();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
49	[BUG]  [BUGGY]  readFully(this.entry,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entry,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entry,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
50	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }	  if(this.entry!=    null)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
51	[BUG]  [BUGGY]  readFully(this.entry,  0,  FOUR_BYTES_BUF.length);  this.entry  =  readOldBinaryEntry();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entry,  0,  FOUR_BYTES_BUF.length);  this.entry  =  readOldBinaryEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entry,  0,  FOUR_BYTES_BUF.length);  this.entry  =  readOldBinaryEntry();	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
52	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.bytes.length);  this.entry  =  readOldBinaryEntry();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.bytes.length);  this.entry  =  readOldBinaryEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.bytes.length);  this.entry  =  readOldBinaryEntry();	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
53	[BUG]  [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }	  if(this.entry    ==    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
54	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }	  if(this.entry    ==    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
55	[BUG]  [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length  -  1);  this.entry  =  readOldBinaryEntry(true);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length  -  1);  this.entry  =  readOldBinaryEntry(true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length  -  1);  this.entry  =  readOldBinaryEntry(true);	  System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
56	[BUG]  [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.bytes.length);  this.entry  =  readOldBinaryEntry(true);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.bytes.length);  this.entry  =  readOldBinaryEntry(true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(TWO_BYTES_BUF,  0,  this.bytes.length);  this.entry  =  readOldBinaryEntry(true);	  System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
57	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  magicString,  tmpbuf);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  magicString,  tmpbuf);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this,  magicString,  tmpbuf);	  this.entry    =    new    CpioArchiveEntry(this,    magicString);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
58	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  FOUR_BYTES_BUF,  magicString);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  FOUR_BYTES_BUF,  magicString);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this,  FOUR_BYTES_BUF,  magicString);	  this.entry    =    new    CpioArchiveEntry(this,    magicString);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
59	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  magicString,  TWO_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  magicString,  TWO_BYTES_BUF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this,  magicString,  TWO_BYTES_BUF);	  this.entry    =    new    CpioArchiveEntry(this,    magicString);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
60	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  magicString,  null);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  magicString,  null);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this,  magicString,  null);	  this.entry    =    new    CpioArchiveEntry(this,    magicString);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
61	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  magicString,  BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  magicString,  BYTES_BUF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this,  magicString,  BYTES_BUF);	  this.entry    =    new    CpioArchiveEntry(this,    magicString);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
62	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  magicString,  JSON_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  magicString,  JSON_BYTES_BUF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this,  magicString,  JSON_BYTES_BUF);	  this.entry    =    new    CpioArchiveEntry(this,    magicString);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
63	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  in);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  in);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this,  in);	  this.entry    =    new    CpioArchiveEntry(this,    magicString);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
64	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);	  readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
65	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }	  if(this.entry    ==    null)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
66	[BUG]  [BUGGY]  if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    true)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
67	[BUG]  [BUGGY]  if(!CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(!CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(!CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    true)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
68	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    true)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
69	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(true,  MAGIC_OLD_BINARY);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldBinaryEntry(true,  MAGIC_OLD_BINARY);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldBinaryEntry(true,  MAGIC_OLD_BINARY);	  this.entry    =    readOldBinaryEntry(false,    MAGIC_OLD_BINARY);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
70	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(true,  BYTES_OLD_BINARY);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldBinaryEntry(true,  BYTES_OLD_BINARY);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldBinaryEntry(true,  BYTES_OLD_BINARY);	  this.entry    =    readOldBinaryEntry(false,    MAGIC_OLD_BINARY);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
71	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(true,  MAX_OLD_BINARY);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldBinaryEntry(true,  MAX_OLD_BINARY);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldBinaryEntry(true,  MAX_OLD_BINARY);	  this.entry    =    readOldBinaryEntry(false,    MAGIC_OLD_BINARY);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
72	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.entry.getKey();  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.entry.getKey();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.entry.getKey();	  this.entry    =(CpioArchiveEntry)this.entry.getValue();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
73	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.entry.getNext();  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.entry.getNext();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.entry.getNext();	  this.entry    =(CpioArchiveEntry)this.entry.getValue();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
74	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.entry.getObject();  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.entry.getObject();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.entry.getObject();	  this.entry    =(CpioArchiveEntry)this.entry.getValue();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
75	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.entry.getValue()  +  1;  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.entry.getValue()  +  1;  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.entry.getValue()  +  1;	  this.entry    =(CpioArchiveEntry)this.entry.getValue();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
76	[BUG]  [BUGGY]  this.closeEntry();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.closeEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.closeEntry();	  if(this.entry!=    null)    {    this.closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
77	[BUG]  [BUGGY]  if(this.entry!=  null)  {  this.closeArchiveEntry();  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  this.closeArchiveEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  this.closeArchiveEntry();  }	  if(this.entry!=    null)    {    this.closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
78	[BUG]  [BUGGY]  this.entryEOF  =  getNextCPIOEntryEOF();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  getNextCPIOEntryEOF();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  getNextCPIOEntryEOF();	  if(this.entry!=    null)    {    this.closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
79	[BUG]  [BUGGY]  if(this.entry!=  null)  {  this.closePio();  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  this.closePio();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  this.closePio();  }	  if(this.entry!=    null)    {    this.closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
80	[BUG]  [BUGGY]  this.entryEOF  =  readOldBinaryEntry();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  readOldBinaryEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  readOldBinaryEntry();	  this.entryEOF    =    closeEntry();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
81	[BUG]  [BUGGY]  this.entryEOF  =  openCpioEntry();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  openCpioEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  openCpioEntry();	  this.entryEOF    =    closeEntry();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
82	[BUG]  [BUGGY]  this.entryEOF  =  closeCpioEntry();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  closeCpioEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  closeCpioEntry();	  this.entryEOF    =    closeEntry();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
83	[BUG]  [BUGGY]  this.entryEOF  =  getNextCpioEntry();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  getNextCpioEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  getNextCpioEntry();	  this.entryEOF    =    closeEntry();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
84	[BUG]  [BUGGY]  this.entryEOF  =  getNextCIOEntry();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  getNextCIOEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  getNextCIOEntry();	  this.entryEOF    =    closeEntry();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
85	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);	  if(this.entry!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
86	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);	  if(this.entry!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
87	[BUG]  [BUGGY]  this.entry  =  getNextChioEntry();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  getNextChioEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  getNextChioEntry();	  this.entry    =    getNextCpioEntry();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
88	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
89	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
90	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
91	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
92	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
93	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
94	[BUG]  [BUGGY]  this.entry  =  getNextCIOEntry();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  getNextCIOEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  getNextCIOEntry();	  this.entry    =    getNextArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
95	[BUG]  [BUGGY]  this.entry  =  getNextPropertyEntry();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  getNextPropertyEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  getNextPropertyEntry();	  this.entry    =    getNextArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
96	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
97	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
98	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(this.entryEOF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(this.entryEOF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(this.entryEOF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
99	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
100	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
101	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
102	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(this.entryEOF,  false)  ==  CPI_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(this.entryEOF,  false)  ==  CPI_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(this.entryEOF,  false)  ==  CPI_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  }	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
103	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  1);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  1);	  readFully(FOUR_BYTES_BUF,    0,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
104	[BUG]  [BUGGY]  System.arraycopy(this.entry,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(this.entry,  0,  this.entry.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(this.entry,  0,  this.entry.length);	  System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
105	[BUG]  [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length  -  1);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length  -  1);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length  -  1);	  System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
106	[BUG]  [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length,  this.blockSize);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length,  this.blockSize);	  System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
107	[BUG]  [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length,  TWO_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length,  TWO_BYTES_BUF.length);	  System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
108	[BUG]  [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length,  SIX_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length,  SIX_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length,  SIX_BYTES_BUF.length);	  System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
109	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  MAX_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  MAX_BYTES_BUF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this,  MAX_BYTES_BUF);	  this.entry    =    new    CpioArchiveEntry(this);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
110	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  MISSING_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  MISSING_BYTES_BUF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this,  MISSING_BYTES_BUF);	  this.entry    =    new    CpioArchiveEntry(this);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
111	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  BYTES_BUF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this,  BYTES_BUF);	  this.entry    =    new    CpioArchiveEntry(this);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
112	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  0);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  0);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this,  0);	  this.entry    =    new    CpioArchiveEntry(this);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
113	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  true);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this,  true);	  this.entry    =    new    CpioArchiveEntry(this);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
114	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntryImpl(System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize));  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntryImpl(System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize));  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntryImpl(System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize));	  this.entry    =    new    CpioArchiveEntryImpl();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
115	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntryImpl(TWO_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntryImpl(TWO_BYTES_BUF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntryImpl(TWO_BYTES_BUF);	  this.entry    =    new    CpioArchiveEntryImpl();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
116	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntryImpl(this.blockSize);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntryImpl(this.blockSize);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntryImpl(this.blockSize);	  this.entry    =    new    CpioArchiveEntryImpl();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
117	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntryImpl(64);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntryImpl(64);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntryImpl(64);	  this.entry    =    new    CpioArchiveEntryImpl();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
118	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntryImpl(System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize),  0);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntryImpl(System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize),  0);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntryImpl(System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize),  0);	  this.entry    =    new    CpioArchiveEntryImpl();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
119	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntryImpl(System.arraycopy(FOUR_BYTES_BUF,  0,  this.length));  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntryImpl(System.arraycopy(FOUR_BYTES_BUF,  0,  this.length));  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntryImpl(System.arraycopy(FOUR_BYTES_BUF,  0,  this.length));	  this.entry    =    new    CpioArchiveEntryImpl();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
120	[BUG]  [BUGGY]  this.entry  =  readOldArchiveEntry(true,  false);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldArchiveEntry(true,  false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldArchiveEntry(true,  false);	  this.entry    =    readOldArchiveEntry(true);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
121	[BUG]  [BUGGY]  this.entry  =  readOldArchiveEntry(true,  true);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldArchiveEntry(true,  true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldArchiveEntry(true,  true);	  this.entry    =    readOldArchiveEntry(true);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
122	[BUG]  [BUGGY]  this.entry  =  readOldArchiveEntry(false,  true);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldArchiveEntry(false,  true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldArchiveEntry(false,  true);	  this.entry    =    readOldArchiveEntry(true);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
123	[BUG]  [BUGGY]  this.entry  =  readOldArchiveEntry(true,  0);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldArchiveEntry(true,  0);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldArchiveEntry(true,  0);	  this.entry    =    readOldArchiveEntry(true);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
124	[BUG]  [BUGGY]  readFully(this.entry,  0,  this.blockSize  -  1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entry,  0,  this.blockSize  -  1);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entry,  0,  this.blockSize  -  1);	  readFully(this.entry,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
125	[BUG]  [BUGGY]  readFully(this.entry,  0,  this.blockSize  +  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entry,  0,  this.blockSize  +  1);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entry,  0,  this.blockSize  +  1);	  readFully(this.entry,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
126	[BUG]  [BUGGY]  readFully(this.entry,  0,  this.blockSize,  this.magicString);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entry,  0,  this.blockSize,  this.magicString);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entry,  0,  this.blockSize,  this.magicString);	  readFully(this.entry,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
127	[BUG]  [BUGGY]  readFully(this.entry,  0,  this.blockSize,  this.size);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entry,  0,  this.blockSize,  this.size);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entry,  0,  this.blockSize,  this.size);	  readFully(this.entry,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
128	[BUG]  [BUGGY]  readFully(this.blockBuffer,  0,  this.entrySize);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.blockBuffer,  0,  this.entrySize);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.blockBuffer,  0,  this.entrySize);	  readFully(this.entry,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
129	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.magicString);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.magicString);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this.magicString);	  this.entry    =    new    CpioArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
130	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize));  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize));  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize));	  this.entry    =    new    CpioArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
131	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(0);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(0);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(0);	  this.entry    =    new    CpioArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
132	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(null);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(null);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(null);	  this.entry    =    new    CpioArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
133	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(false);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(false);	  this.entry    =    new    CpioArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
134	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(System.arraycopy(MAGIC_OLD_BINARY,  0,  this.entry.length));  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(System.arraycopy(MAGIC_OLD_BINARY,  0,  this.entry.length));  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(System.arraycopy(MAGIC_OLD_BINARY,  0,  this.entry.length));	  this.entry    =    new    CpioArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
135	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
136	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
137	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
138	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
139	[BUG]  [BUGGY]  if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_B  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_B  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_B	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
140	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
141	[BUG]  [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.	  if(this.entry!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
142	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.	  if(this.entry!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
143	[BUG]  [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System	  if(this.entry!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
144	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System	  if(this.entry!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
145	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.getNextCPIOEntry();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.getNextCPIOEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.getNextCPIOEntry();	  this.entry    =(CpioArchiveEntry)getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
146	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)getNextCPIOEntry(0);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)getNextCPIOEntry(0);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)getNextCPIOEntry(0);	  this.entry    =(CpioArchiveEntry)getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
147	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)getNextCCIOEntry();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)getNextCCIOEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)getNextCCIOEntry();	  this.entry    =(CpioArchiveEntry)getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
148	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)getNextPIOEntry();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)getNextPIOEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)getNextPIOEntry();	  this.entry    =(CpioArchiveEntry)getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
149	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)getNextCEIOEntry();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)getNextCEIOEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)getNextCEIOEntry();	  this.entry    =(CpioArchiveEntry)getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
150	[BUG]  [BUGGY]  this.entry  =  readFully(false,  MAGIC_OLD_BINARY);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(false,  MAGIC_OLD_BINARY);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(false,  MAGIC_OLD_BINARY);	  this.entry    =    readFully(false);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
151	[BUG]  [BUGGY]  this.entry  =  readFully(false,  true);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(false,  true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(false,  true);	  this.entry    =    readFully(false);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
152	[BUG]  [BUGGY]  this.entry  =  readFully(false,  MAX_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(false,  MAX_BYTES_BUF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(false,  MAX_BYTES_BUF);	  this.entry    =    readFully(false);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
153	[BUG]  [BUGGY]  this.entry  =  readFully(false,  MISSING_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(false,  MISSING_BYTES_BUF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(false,  MISSING_BYTES_BUF);	  this.entry    =    readFully(false);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
154	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  1);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  1);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  1);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
155	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length,  this.blockSize);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length,  this.blockSize);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
156	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length,  TWO_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length,  TWO_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
157	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length,  SIX_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length,  SIX_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length,  SIX_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
158	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  1,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  1,  this.blockSize);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  1,  this.blockSize);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
159	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
160	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
161	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
162	[BUG]  [BUGGY]  if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
163	[BUG]  [BUGGY]  if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
164	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryEOF);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryEOF);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.entryEOF);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);	  if(this.entryEOF)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
165	[BUG]  [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length  -  1);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length  -  1);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length  -  1);	  System.arraycopy(TOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
166	[BUG]  [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length,  TWO_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length,  TWO_BYTES_BUF.length);	  System.arraycopy(TOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
167	[BUG]  [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length,  SIX_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length,  SIX_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length,  SIX_BYTES_BUF.length);	  System.arraycopy(TOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
168	[BUG]  [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length,  this.blockSize);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length,  this.blockSize);	  System.arraycopy(TOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
169	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(true,  false,  MAGIC_OLD_BINARY);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldBinaryEntry(true,  false,  MAGIC_OLD_BINARY);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldBinaryEntry(true,  false,  MAGIC_OLD_BINARY);	  this.entry    =    readOldBinaryEntry(true,    false);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
170	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(true,  false,  true);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldBinaryEntry(true,  false,  true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldBinaryEntry(true,  false,  true);	  this.entry    =    readOldBinaryEntry(true,    false);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
171	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF!=  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF!=  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  }	  if(this.entryEOF!=    null)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
172	[BUG]  [BUGGY]  if(this.entryEOF  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }	  if(this.entryEOF!=    null)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
173	[BUG]  [BUGGY]  if(this.entryEOF  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  }	  if(this.entryEOF!=    null)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
174	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(false,  true,  MAGIC_OLD_BINARY);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldBinaryEntry(false,  true,  MAGIC_OLD_BINARY);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldBinaryEntry(false,  true,  MAGIC_OLD_BINARY);	  this.entry    =    readOldBinaryEntry(false,    true);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
175	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(false,  true,  false);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldBinaryEntry(false,  true,  false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldBinaryEntry(false,  true,  false);	  this.entry    =    readOldBinaryEntry(false,    true);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
176	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF,  this.blockSize);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF,  this.blockSize);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
177	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF,  tmpbuf);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF,  tmpbuf);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF,  tmpbuf);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
178	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF,  TWO_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF,  TWO_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
179	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF,  this.tmpbuf);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF,  this.tmpbuf);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF,  this.tmpbuf);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
180	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF,  SIX_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF,  SIX_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF,  SIX_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
181	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  this.entryEOF);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  this.entryEOF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  this.entryEOF);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
182	[BUG]  [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.bytes.length);  this.entry  =  readOldBinaryEntry(false);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.bytes.length);  this.entry  =  readOldBinaryEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(TWO_BYTES_BUF,  0,  this.bytes.length);  this.entry  =  readOldBinaryEntry(false);	  System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
183	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.bytes.length);  this.entry  =  readOldBinaryEntry(false);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.bytes.length);  this.entry  =  readOldBinaryEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.bytes.length);  this.entry  =  readOldBinaryEntry(false);	  System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
184	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  1);  this.entry  =  readOldBinaryEntry();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  1);  this.entry  =  readOldBinaryEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  1);  this.entry  =  readOldBinaryEntry();	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
185	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.bytes.length);  this.entry  =  readOldBinaryEntry();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.bytes.length);  this.entry  =  readOldBinaryEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.bytes.length);  this.entry  =  readOldBinaryEntry();	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
186	[BUG]  [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
187	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(false,  0);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldBinaryEntry(false,  0);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldBinaryEntry(false,  0);	  this.entry    =    readOldBinaryEntry(true,    0);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
188	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(true,  0,  0);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldBinaryEntry(true,  0,  0);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldBinaryEntry(true,  0,  0);	  this.entry    =    readOldBinaryEntry(true,    0);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
189	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(true,  1);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldBinaryEntry(true,  1);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldBinaryEntry(true,  1);	  this.entry    =    readOldBinaryEntry(true,    0);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
190	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(false,  0,  0);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldBinaryEntry(false,  0,  0);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldBinaryEntry(false,  0,  0);	  this.entry    =    readOldBinaryEntry(true,    0);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
191	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entry.length  -  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entry.length  -  1);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.entry.length  -  1);	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
192	[BUG]  [BUGGY]  readFully(this.entry,  0,  this.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entry,  0,  this.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entry,  0,  this.length);	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
193	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  this.entry  =  readOldBinaryEntry();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  this.entry  =  readOldBinaryEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  this.entry  =  readOldBinaryEntry();	  if(this.in!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
194	[BUG]  [BUGGY]  if(this.in  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  this.entry  =  readOldBinaryEntry();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.in  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  this.entry  =  readOldBinaryEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.in  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  this.entry  =  readOldBinaryEntry();  }	  if(this.in!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
195	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.in.length);  this.entry  =  readOldBinaryEntry();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.in.length);  this.entry  =  readOldBinaryEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.in.length);  this.entry  =  readOldBinaryEntry();	  if(this.in!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
196	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.in.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.in.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.in.length);	  if(this.in!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
197	[BUG]  [BUGGY]  this.in  =  readOldBinaryEntry();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.in  =  readOldBinaryEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.in  =  readOldBinaryEntry();	  if(this.in!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
198	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.in.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  this.entry  =  readOldBinaryEntry();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.in.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  this.entry  =  readOldBinaryEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.in.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  this.entry  =  readOldBinaryEntry();	  if(this.in!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
199	[BUG]  [BUGGY]  this.entry  =  readNextCpioEntry(true,  false);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readNextCpioEntry(true,  false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readNextCpioEntry(true,  false);	  this.entry    =    readNextCpioEntry(true);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
200	[BUG]  [BUGGY]  this.entry  =  readNextCpioEntry(true,  true);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readNextCpioEntry(true,  true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readNextCpioEntry(true,  true);	  this.entry    =    readNextCpioEntry(true);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
201	[BUG]  [BUGGY]  this.entry  =  readNextCpioEntry(true,  0);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readNextCpioEntry(true,  0);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readNextCpioEntry(true,  0);	  this.entry    =    readNextCpioEntry(true);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
202	[BUG]  [BUGGY]  if(this.entry!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }	  if(this.entry    ==    null)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
203	[BUG]  [BUGGY]  readFully(this.entryEOF,  0,  FOUR_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entryEOF,  0,  FOUR_BYTES_BUF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entryEOF,  0,  FOUR_BYTES_BUF);	  readFully(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
204	[BUG]  [BUGGY]  readFully(this.entry,  0,  FOUR_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entry,  0,  FOUR_BYTES_BUF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entry,  0,  FOUR_BYTES_BUF);	  readFully(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
205	[BUG]  [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(TWO_BYTES_BUF);	  this.entry    =    readFully(FOUR_BYTES_BUF);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
206	[BUG]  [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);	  this.entry    =    readFully(FOUR_BYTES_BUF);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
207	[BUG]  [BUGGY]  this.entry  =  readFully(SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);	  this.entry    =    readFully(FOUR_BYTES_BUF);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
208	[BUG]  [BUGGY]  this.entry  =  readFully(THIS_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(THIS_BYTES_BUF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(THIS_BYTES_BUF);	  this.entry    =    readFully(FOUR_BYTES_BUF);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
209	[BUG]  [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  tmpbuf.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(TWO_BYTES_BUF,  0,  tmpbuf.length);	  this.entry    =    readFully(FOUR_BYTES_BUF);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
210	[BUG]  [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  tmpbuf);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  tmpbuf);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(TWO_BYTES_BUF,  tmpbuf);	  this.entry    =    readFully(FOUR_BYTES_BUF);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
211	[BUG]  [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_B  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_B  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_B	  if(this.entry!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_B    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
212	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_B  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_B  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_B	  if(this.entry!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_B    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
213	[BUG]  [BUGGY]  this.entry  =  readIOldBinaryEntry(true);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readIOldBinaryEntry(true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readIOldBinaryEntry(true);	  this.entry    =    readIOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
214	[BUG]  [BUGGY]  this.entry  =  readIOldBinaryEntry(false,  true);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readIOldBinaryEntry(false,  true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readIOldBinaryEntry(false,  true);	  this.entry    =    readIOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
215	[BUG]  [BUGGY]  this.entry  =  readIOldBinaryEntry(false,  false);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readIOldBinaryEntry(false,  false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readIOldBinaryEntry(false,  false);	  this.entry    =    readIOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
216	[BUG]  [BUGGY]  this.entry  =  readBinaryEntry(true);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readBinaryEntry(true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readBinaryEntry(true);	  this.entry    =    readIOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
217	[BUG]  [BUGGY]  readFully(this.entry,  0,  this.length);  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entry,  0,  this.length);  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entry,  0,  this.length);  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
218	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
219	[BUG]  [BUGGY]  ReadFully(this.entry,  0,  this.length);  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  ReadFully(this.entry,  0,  this.length);  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	ReadFully(this.entry,  0,  this.length);  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
220	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entry.length);  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
221	[BUG]  [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  false);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(FOUR_BYTES_BUF,  false);	  this.entry    =    readFully(FOUR_BYTES_BUF,    true);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
222	[BUG]  [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  true);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(TWO_BYTES_BUF,  true);	  this.entry    =    readFully(FOUR_BYTES_BUF,    true);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
223	[BUG]  [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  true);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(FOUR_BYTES_BUF,  0,  true);	  this.entry    =    readFully(FOUR_BYTES_BUF,    true);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
224	[BUG]  [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  true,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  true,  TWO_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(FOUR_BYTES_BUF,  true,  TWO_BYTES_BUF.length);	  this.entry    =    readFully(FOUR_BYTES_BUF,    true);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
225	[BUG]  [BUGGY]  this.entry  =  readFully(THIS_BYTES_BUF,  true);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(THIS_BYTES_BUF,  true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(THIS_BYTES_BUF,  true);	  this.entry    =    readFully(FOUR_BYTES_BUF,    true);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
226	[BUG]  [BUGGY]  this.entry  =  readFully(SIX_BYTES_BUF,  true);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(SIX_BYTES_BUF,  true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(SIX_BYTES_BUF,  true);	  this.entry    =    readFully(FOUR_BYTES_BUF,    true);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
227	[BUG]  [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  true,  MAGIC_OLD_BINARY);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  true,  MAGIC_OLD_BINARY);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(FOUR_BYTES_BUF,  true,  MAGIC_OLD_BINARY);	  this.entry    =    readFully(FOUR_BYTES_BUF,    true);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
228	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  1);  this.entry  =  readOldBinaryEntry(false);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  1);  this.entry  =  readOldBinaryEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  1);  this.entry  =  readOldBinaryEntry(false);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
229	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf.length);  this.entry  =  readOldBinaryEntry(false);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf.length);  this.entry  =  readOldBinaryEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf.length);  this.entry  =  readOldBinaryEntry(false);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
230	[BUG]  [BUGGY]  this.entry  =  createNextCIOEntry();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  createNextCIOEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  createNextCIOEntry();	  this.entry    =    createNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
231	[BUG]  [BUGGY]  this.entry  =  createNextCPIOEntry(false);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  createNextCPIOEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  createNextCPIOEntry(false);	  this.entry    =    createNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
232	[BUG]  [BUGGY]  this.entry  =  createNextCpioEntry();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  createNextCpioEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  createNextCpioEntry();	  this.entry    =    createNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
233	[BUG]  [BUGGY]  this.entry  =  createNextCPIOEntry(true);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  createNextCPIOEntry(true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  createNextCPIOEntry(true);	  this.entry    =    createNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
234	[BUG]  [BUGGY]  this.entry  =  createNextCPIOEntry(null);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  createNextCPIOEntry(null);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  createNextCPIOEntry(null);	  this.entry    =    createNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
235	[BUG]  [BUGGY]  this.entry  =  readNext();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readNext();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readNext();	  this.entry    =    readFully();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
236	[BUG]  [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);	  this.entry    =    readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
237	[BUG]  [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  this.tmpbuf.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(TWO_BYTES_BUF,  0,  this.tmpbuf.length);	  this.entry    =    readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
238	[BUG]  [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);	  this.entry    =    readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
239	[BUG]  [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF,  TWO_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF,  TWO_BYTES_BUF.length);	  this.entry    =    readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
240	[BUG]  [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);	  this.entry    =    readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
241	[BUG]  [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  this.length);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  this.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(TWO_BYTES_BUF,  0,  this.length);	  this.entry    =    readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
242	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
243	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(this.entryEOF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(this.entryEOF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(this.entryEOF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
244	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
245	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
246	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
247	[BUG]  [BUGGY]  this.entry  =  readOldArchiveEntry(false,  MAGIC_OLD_BINARY);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldArchiveEntry(false,  MAGIC_OLD_BINARY);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldArchiveEntry(false,  MAGIC_OLD_BINARY);	  this.entry    =    readOldArchiveEntry(false);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
248	[BUG]  [BUGGY]  this.entry  =  readOldArchiveEntry(false,  false);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldArchiveEntry(false,  false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldArchiveEntry(false,  false);	  this.entry    =    readOldArchiveEntry(false);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
249	[BUG]  [BUGGY]  this.entry  =  readOldArchiveEntry(false,  BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldArchiveEntry(false,  BYTES_BUF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldArchiveEntry(false,  BYTES_BUF);	  this.entry    =    readOldArchiveEntry(false);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
250	[BUG]  [BUGGY]  readFully(this.entryEOF,  0,  TWO_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entryEOF,  0,  TWO_BYTES_BUF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entryEOF,  0,  TWO_BYTES_BUF);	  readFully(TWO_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
251	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryEOF,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryEOF,  this.blockSize);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entryEOF,  this.blockSize);	  readFully(TWO_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
252	[BUG]  [BUGGY]  this.entryEOF  =  getNextECIOEntry();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  getNextECIOEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  getNextECIOEntry();	  this.entryEOF    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
253	[BUG]  [BUGGY]  this.entryEOF  =  getNextCPIOEntry(false);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  getNextCPIOEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  getNextCPIOEntry(false);	  this.entryEOF    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
254	[BUG]  [BUGGY]  this.entryEOF  =  getNextCPIOEntry(null);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  getNextCPIOEntry(null);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  getNextCPIOEntry(null);	  this.entryEOF    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
255	[BUG]  [BUGGY]  this.entryEOF  =  getNextCPIOEntry(true);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  getNextCPIOEntry(true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  getNextCPIOEntry(true);	  this.entryEOF    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
256	[BUG]  [BUGGY]  this.entry  =  new  byte[SIX_BYTES_BUF];  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  byte[SIX_BYTES_BUF];  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  byte[SIX_BYTES_BUF];	  this.entry    =    entryEOF;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
257	[BUG]  [BUGGY]  this.entry  =  new  byte[FOUR_BYTES_BUF];  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  byte[FOUR_BYTES_BUF];  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  byte[FOUR_BYTES_BUF];	  this.entry    =    entryEOF;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
258	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entry.length  -  1);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entry.length  -  1);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entry.length  -  1);	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
259	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entry.length  +  1);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entry.length  +  1);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entry.length  +  1);	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
260	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.readObject();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.readObject();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.in.readObject();	  this.entry    =(CpioArchiveEntry)this.in.read();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
261	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)in.read();  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)in.read();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)in.read();	  this.entry    =(CpioArchiveEntry)this.in.read();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
262	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.readFully();  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.readFully();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.in.readFully();	  this.entry    =(CpioArchiveEntry)this.in.read();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
263	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.getNext();  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.getNext();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.in.getNext();	  this.entry    =(CpioArchiveEntry)this.in.read();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
264	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  1);  this.entry  =  readOldBinaryEntry(true);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  1);  this.entry  =  readOldBinaryEntry(true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  1);  this.entry  =  readOldBinaryEntry(true);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
265	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.bytes.length);  this.entry  =  readOldBinaryEntry(true);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.bytes.length);  this.entry  =  readOldBinaryEntry(true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.bytes.length);  this.entry  =  readOldBinaryEntry(true);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
266	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.getKey();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.getKey();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.in.getKey();	  this.entry    =(CpioArchiveEntry)this.in.getValue();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
267	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.next();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.next();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.in.next();	  this.entry    =(CpioArchiveEntry)this.in.getValue();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
268	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.getObject();  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.getObject();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.in.getObject();	  this.entry    =(CpioArchiveEntry)this.in.getValue();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
269	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
270	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
271	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
272	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
273	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
274	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
275	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.inputStream,  this.magicString);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.inputStream,  this.magicString);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this.inputStream,  this.magicString);	  this.entry    =    new    CpioArchiveEntry(this.inputStream);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
276	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.inputStream,  magicString);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.inputStream,  magicString);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this.inputStream,  magicString);	  this.entry    =    new    CpioArchiveEntry(this.inputStream);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
277	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.inputStream,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.inputStream,  this.blockSize);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this.inputStream,  this.blockSize);	  this.entry    =    new    CpioArchiveEntry(this.inputStream);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
278	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.inputStream,  this.mediaString);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.inputStream,  this.mediaString);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this.inputStream,  this.mediaString);	  this.entry    =    new    CpioArchiveEntry(this.inputStream);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
279	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.inputStream,  MAX_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.inputStream,  MAX_BYTES_BUF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this.inputStream,  MAX_BYTES_BUF);	  this.entry    =    new    CpioArchiveEntry(this.inputStream);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
280	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.inputStream,  MISSING_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.inputStream,  MISSING_BYTES_BUF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this.inputStream,  MISSING_BYTES_BUF);	  this.entry    =    new    CpioArchiveEntry(this.inputStream);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
281	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.inputStream,  tmpbuf);  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.inputStream,  tmpbuf);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this.inputStream,  tmpbuf);	  this.entry    =    new    CpioArchiveEntry(this.inputStream);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
282	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
283	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize  -  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize  -  1);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(TWO_BYTES_BUF,  0,  this.blockSize  -  1);	  readFully(TWO_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
284	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize  +  1);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize  +  1);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(TWO_BYTES_BUF,  0,  this.blockSize  +  1);	  readFully(TWO_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
285	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize  -  2);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize  -  2);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(TWO_BYTES_BUF,  0,  this.blockSize  -  2);	  readFully(TWO_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
286	[BUG]  [BUGGY]  this.entryEOF  =  readOldBinaryEntry(false);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  readOldBinaryEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  readOldBinaryEntry(false);	  if(this.entry    ==    null)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
287	[BUG]  [BUGGY]  readFully(this.entry,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entry,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entry,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
288	[BUG]  [BUGGY]  readFully(this.entry,  0,  this.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entry,  0,  this.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entry,  0,  this.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
289	[BUG]  [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
290	[BUG]  [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
291	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
292	[BUG]  [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
293	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(true,  true,  false);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldBinaryEntry(true,  true,  false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldBinaryEntry(true,  true,  false);	  this.entry    =    readOldBinaryEntry(true,    true);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
294	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
295	[BUG]  [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(TWO_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
296	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  this.entry  =  readOldBinaryEntry(false);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  this.entry  =  readOldBinaryEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  this.entry  =  readOldBinaryEntry(false);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
297	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryIOF);  this.entry  =  readOldBinaryEntry(false);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryIOF);  this.entry  =  readOldBinaryEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryIOF);  this.entry  =  readOldBinaryEntry(false);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
298	[BUG]  [BUGGY]  MAGIC_OLD_BINARY  =  CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  {  this.entry  =  readOldBinaryEntry(false);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  MAGIC_OLD_BINARY  =  CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  {  this.entry  =  readOldBinaryEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	MAGIC_OLD_BINARY  =  CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  {  this.entry  =  readOldBinaryEntry(false);	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
299	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
300	[BUG]  [BUGGY]  MAGIC_OLD_BINARY  =  CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  {  this.entry  =  readOldBinaryEntry(true);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  MAGIC_OLD_BINARY  =  CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  {  this.entry  =  readOldBinaryEntry(true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	MAGIC_OLD_BINARY  =  CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  {  this.entry  =  readOldBinaryEntry(true);	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
301	[BUG]  [BUGGY]  this.entryEOF  =  readOldBinaryEntry(true,  false);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  readOldBinaryEntry(true,  false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  readOldBinaryEntry(true,  false);	  this.entryEOF    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
302	[BUG]  [BUGGY]  this.entryEOF  =  readOldBinaryEntry(true,  true);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  readOldBinaryEntry(true,  true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  readOldBinaryEntry(true,  true);	  this.entryEOF    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
303	[BUG]  [BUGGY]  this.entryEOF  =  readOldBinaryEntry(true,  0);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  readOldBinaryEntry(true,  0);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  readOldBinaryEntry(true,  0);	  this.entryEOF    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
304	[BUG]  [BUGGY]  this.entryEOF  =  readOldBinaryEntry(false,  true);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  readOldBinaryEntry(false,  true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  readOldBinaryEntry(false,  true);	  this.entryEOF    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
305	[BUG]  [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  1,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  1,  TWO_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(TWO_BYTES_BUF,  1,  TWO_BYTES_BUF.length);	  this.entry    =    readOldBinaryEntry(0);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
306	[BUG]  [BUGGY]  this.entry  =  readFully(true,  MAGIC_OLD_BINARY);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(true,  MAGIC_OLD_BINARY);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(true,  MAGIC_OLD_BINARY);	  this.entry    =    readFully(true);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
307	[BUG]  [BUGGY]  this.entry  =  readFully(true,  false);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(true,  false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(true,  false);	  this.entry    =    readFully(true);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
308	[BUG]  [BUGGY]  this.entry  =  readFully(true,  true);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(true,  true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(true,  true);	  this.entry    =    readFully(true);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
309	[BUG]  [BUGGY]  this.entry  =  readFully(true,  MISSING_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(true,  MISSING_BYTES_BUF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(true,  MISSING_BYTES_BUF);	  this.entry    =    readFully(true);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
310	[BUG]  [BUGGY]  this.entry  =  readFully(this.getNextCPIOEntry());  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(this.getNextCPIOEntry());  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(this.getNextCPIOEntry());	  this.entry    =    readFully(FOUR_BYTES_BUF);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
311	[BUG]  [BUGGY]  this.entry  =  readFully(this.nextCPIOEntry);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(this.nextCPIOEntry);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(this.nextCPIOEntry);	  this.entry    =    readFully(FOUR_BYTES_BUF);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
312	[BUG]  [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(TWO_BYTES_BUF,  0);	  this.entry    =    readFully(FOUR_BYTES_BUF);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
313	[BUG]  [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  System.  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  System.  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  System.	  if(this.entry!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
314	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry  ==  null)  {  ensureOpen();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  ensureOpen();  }	  if(this.entry!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
315	[BUG]  [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR	  if(this.entry!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
316	[BUG]  [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(TWO_BYTES_BUF,  0,  this.blockSize);	  this.entry    =    readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
317	[BUG]  [BUGGY]  this.entry  =  readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length);	  this.entry    =    readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
318	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(true,  0L);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldBinaryEntry(true,  0L);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldBinaryEntry(true,  0L);	  this.entry    =    readOldBinaryEntry(true,    0);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
319	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }	  if(this.entry!=    null)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
320	[BUG]  [BUGGY]  if(this.entry!=  null)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }	  if(this.entry!=    null)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
321	[BUG]  [BUGGY]  this.entry  =  readNextArchiveEntry(false);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readNextArchiveEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readNextArchiveEntry(false);	  this.entry    =    readNextCpioEntry(true);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
322	[BUG]  [BUGGY]  this.entry  =  readNextCPIOEntry(false);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readNextCPIOEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readNextCPIOEntry(false);	  this.entry    =    readNextCpioEntry(true);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
323	[BUG]  [BUGGY]  if(this.entry!=  null)  {  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
324	[BUG]  [BUGGY]  if(this.entry.length!=  0)  {  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry.length!=  0)  {  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry.length!=  0)  {  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
325	[BUG]  [BUGGY]  if(this.entry!=  null)  {  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  else  {  System.arraycopy(TWO  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  else  {  System.arraycopy(TWO  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  else  {  System.arraycopy(TWO	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
326	[BUG]  [BUGGY]  if(this.entry!=  null)  {  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  else  {  System.arraycopy(TWO_  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  else  {  System.arraycopy(TWO_  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  else  {  System.arraycopy(TWO_	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
327	[BUG]  [BUGGY]  if(this.entry!=  null)  {  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  else  {  System.arraycopy(TWO_B  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  else  {  System.arraycopy(TWO_B  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  else  {  System.arraycopy(TWO_B	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
328	[BUG]  [BUGGY]  if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
329	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_B  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry  ==  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_B  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_B	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
330	[BUG]  [BUGGY]  if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arra  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arra  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arra	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
331	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry  ==  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
332	[BUG]  [BUGGY]  ReadFully(this.entryEOF,  0,  FOUR_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  ReadFully(this.entryEOF,  0,  FOUR_BYTES_BUF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	ReadFully(this.entryEOF,  0,  FOUR_BYTES_BUF);	  readFully(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
333	[BUG]  [BUGGY]  readFully(this.entryBytesRead,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entryBytesRead,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entryBytesRead,  0,  FOUR_BYTES_BUF.length);	  readFully(FOUR_BYTES_BUF,    0,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
334	[BUG]  [BUGGY]  readFully(this.entryBytesRead,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entryBytesRead,  0,  TWO_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entryBytesRead,  0,  TWO_BYTES_BUF.length);	  readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
335	[BUG]  [BUGGY]  readFully(THIS_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(THIS_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(THIS_BUF,  0,  TWO_BYTES_BUF.length);	  readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
336	[BUG]  [BUGGY]  this.entry  =  readNextBinaryEntry(false);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readNextBinaryEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readNextBinaryEntry(false);	  this.entry    =    readIOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
337	[BUG]  [BUGGY]  this.entry  =  readIOldBinaryEntry();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readIOldBinaryEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readIOldBinaryEntry();	  this.entry    =    readIOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
338	[BUG]  [BUGGY]  readFully(this.block,  0,  this.entryBytesRead);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.block,  0,  this.entryBytesRead);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.block,  0,  this.entryBytesRead);	  readFully(this.entry,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
339	[BUG]  [BUGGY]  readFully(this.blockSize,  0,  this.entryBytesRead);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.blockSize,  0,  this.entryBytesRead);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.blockSize,  0,  this.entryBytesRead);	  readFully(this.entry,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
340	[BUG]  [BUGGY]  readFully(this.block,  0,  this.entrySize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.block,  0,  this.entrySize);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.block,  0,  this.entrySize);	  readFully(this.entry,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
341	[BUG]  [BUGGY]  readFully(this.entry,  0,  this.blockSize  -  2);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entry,  0,  this.blockSize  -  2);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entry,  0,  this.blockSize  -  2);	  readFully(this.entry,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
342	[BUG]  [BUGGY]  if(this.entry!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }	  if(this.entry    ==    null)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
343	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  2);  this.entry  =  readOldBinaryEntry();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  2);  this.entry  =  readOldBinaryEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  2);  this.entry  =  readOldBinaryEntry();	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
344	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(false,  true,  0);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldBinaryEntry(false,  true,  0);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldBinaryEntry(false,  true,  0);	  this.entry    =    readOldBinaryEntry(false,    true);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
345	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryLength);  this.entry  =  readOldBinaryEntry(false);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryLength);  this.entry  =  readOldBinaryEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryLength);  this.entry  =  readOldBinaryEntry(false);	  System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
346	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryLength);  this.entry  =  readOldBinaryEntry(true);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryLength);  this.entry  =  readOldBinaryEntry(true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryLength);  this.entry  =  readOldBinaryEntry(true);	  System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
347	[BUG]  [BUGGY]  System.arraycopy(this.entryEOF,  0,  FOUR_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(this.entryEOF,  0,  FOUR_BYTES_BUF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(this.entryEOF,  0,  FOUR_BYTES_BUF);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
348	[BUG]  [BUGGY]  System.arraycopy(this.entry,  0,  FOUR_BYTES_BUF,  this.entryEOF);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(this.entry,  0,  FOUR_BYTES_BUF,  this.entryEOF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(this.entry,  0,  FOUR_BYTES_BUF,  this.entryEOF);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
349	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryIOF,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryIOF,  this.blockSize);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryIOF,  this.blockSize);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
350	[BUG]  [BUGGY]  System.arraycopy(this.entry,  0,  FOUR_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(this.entry,  0,  FOUR_BYTES_BUF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(this.entry,  0,  FOUR_BYTES_BUF);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
351	[BUG]  [BUGGY]  this.entry  =  readNextArchiveEntry();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readNextArchiveEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readNextArchiveEntry();	  this.entry    =    readOldArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
352	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arra  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arra  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arra	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
353	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
354	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(F  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(F  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(F	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
355	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
356	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
357	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
358	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry  ==  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
359	[BUG]  [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
360	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry  ==  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
361	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry  ==  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
362	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(this.entry)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldB  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(this.entry)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldB  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(this.entry)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldB	  if(this.entry    ==    null)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
363	[BUG]  [BUGGY]  readFully(SIX_BYTES_BUF,  0,  this.entryEOF);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(SIX_BYTES_BUF,  0,  this.entryEOF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(SIX_BYTES_BUF,  0,  this.entryEOF);	  if(this.entryEOF)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
364	[BUG]  [BUGGY]  this.entry  =  readNextArchiveEntry(true);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readNextArchiveEntry(true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readNextArchiveEntry(true);	  this.entry    =    readOldArchiveEntry(false);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
365	[BUG]  [BUGGY]  this.entry  =  readOldArchiveEntry(false,  0);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldArchiveEntry(false,  0);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldArchiveEntry(false,  0);	  this.entry    =    readOldArchiveEntry(false);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
366	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.get();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.get();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.in.get();	  this.entry    =(CpioArchiveEntry)this.in.read();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
367	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.length);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(TWO_BYTES_BUF,  0,  this.length);	  if(this.entry    ==    null)    {    this.closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
368	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  FOUR_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  FOUR_BYTES_BUF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this,  FOUR_BYTES_BUF);	  this.entry    =    new    CpioArchiveEntry(this,    magicString);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
369	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  cpioString);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  cpioString);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this,  cpioString);	  this.entry    =    new    CpioArchiveEntry(this,    magicString);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
370	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  BYTES_BUF,  magicString);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  BYTES_BUF,  magicString);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this,  BYTES_BUF,  magicString);	  this.entry    =    new    CpioArchiveEntry(this,    magicString);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
371	[BUG]  [BUGGY]  readFully(this.entry,  0,  this.entryEOF);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entry,  0,  this.entryEOF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entry,  0,  this.entryEOF);	  readFully(TWO_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
372	[BUG]  [BUGGY]  readFully(this.entryEOF,  0,  this.entryBytesRead);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entryEOF,  0,  this.entryBytesRead);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entryEOF,  0,  this.entryBytesRead);	  readFully(TWO_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
373	[BUG]  [BUGGY]  readFully(this.entryEOF,  0,  this.bytesRead);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entryEOF,  0,  this.bytesRead);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entryEOF,  0,  this.bytesRead);	  readFully(TWO_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
374	[BUG]  [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.	  if(this.entry    ==    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
375	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  closeEntry();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.tmpbuf!=  null)  {  closeEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.tmpbuf!=  null)  {  closeEntry();  }	  if(this.entryEOF!=    null)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
376	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.blockSize);	  if(this.entryEOF!=    null)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
377	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.keyboard.clone();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.keyboard.clone();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.keyboard.clone();	  this.entry    =(CpioArchiveEntry)this.entry.clone();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
378	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.blockSize.clone();  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.blockSize.clone();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.blockSize.clone();	  this.entry    =(CpioArchiveEntry)this.entry.clone();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
379	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.data.clone();  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.data.clone();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.data.clone();	  this.entry    =(CpioArchiveEntry)this.entry.clone();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
380	[BUG]  [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  ensureOpen();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }	  if(this.entry!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
381	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }	  if(this.entry!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
382	[BUG]  [BUGGY]  if(this.tmpbuf  ==  null)  {  closeEntry();  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.tmpbuf  ==  null)  {  closeEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.tmpbuf  ==  null)  {  closeEntry();  }	  if(this.entryEOF    ==    null)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
383	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  2);  this.entry  =  readOldBinaryEntry(true);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  2);  this.entry  =  readOldBinaryEntry(true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  2);  this.entry  =  readOldBinaryEntry(true);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
384	[BUG]  [BUGGY]  this.entry  =  tmpbuf;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  tmpbuf;  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  tmpbuf;	  this.entry    =    entryEOF;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
385	[BUG]  [BUGGY]  this.entry  =  readNextCircuitEntry(false);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readNextCircuitEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readNextCircuitEntry(false);	  this.entry    =    readOldCircuitEntry(false);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
386	[BUG]  [BUGGY]  this.entry  =  readNextCircuitEntry(true);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readNextCircuitEntry(true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readNextCircuitEntry(true);	  this.entry    =    readOldCircuitEntry(false);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
387	[BUG]  [BUGGY]  this.entry  =  readNewCircuitEntry(true);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readNewCircuitEntry(true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readNewCircuitEntry(true);	  this.entry    =    readOldCircuitEntry(false);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
388	[BUG]  [BUGGY]  readFully(this.entry,  0,  this.length);  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entry,  0,  this.length);  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entry,  0,  this.length);  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
389	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
390	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  0,  this.length);  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  0,  this.length);  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  0,  this.length);  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
391	[BUG]  [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
392	[BUG]  [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
393	[BUG]  [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
394	[BUG]  [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
395	[BUG]  [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
396	[BUG]  [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  F  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  F  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  F	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
397	[BUG]  [BUGGY]  if(this.entry!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }	  if(this.entry!=    null)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
398	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.entry.getData();  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.entry.getData();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.entry.getData();	  this.entry    =(CpioArchiveEntry)this.entry.getValue();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
399	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  2);  this.entry  =  readOldBinaryEntry(false);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  2);  this.entry  =  readOldBinaryEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  2);  this.entry  =  readOldBinaryEntry(false);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
400	[BUG]  [BUGGY]  this.entry  =  readIOldArchiveEntry(false);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readIOldArchiveEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readIOldArchiveEntry(false);	  this.entry    =    readOldArchiveEntry(true);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
401	[BUG]  [BUGGY]  this.entry  =  readOldArchiveEntry(true,  null);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldArchiveEntry(true,  null);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldArchiveEntry(true,  null);	  this.entry    =    readOldArchiveEntry(true);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
402	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry  ==  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
403	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
404	[BUG]  [BUGGY]  if(MagicUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(MagicUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(MagicUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
405	[BUG]  [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
406	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry  ==  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
407	[BUG]  [BUGGY]  if(this.entry.length!=  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry.length!=  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry.length!=  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
408	[BUG]  [BUGGY]  if(this.entry.length  ==  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry.length  ==  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry.length  ==  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
409	[BUG]  [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  else  {  System.arraycopy(FOUR  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  else  {  System.arraycopy(FOUR  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  else  {  System.arraycopy(FOUR	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
410	[BUG]  [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  else  {  System.arraycopy(FOUR_  [CE]  illegal  start  of  type  [FE]                                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  else  {  System.arraycopy(FOUR_  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  else  {  System.arraycopy(FOUR_	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
411	[BUG]  [BUGGY]  this.entryEOF  =  getNextArchiveEntry();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  getNextArchiveEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  getNextArchiveEntry();	  this.entryEOF    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
412	[BUG]  [BUGGY]  this.entryEOF  =  readOldArchiveEntry();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  readOldArchiveEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  readOldArchiveEntry();	  this.entryEOF    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
413	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }	  if(this.entry!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
414	[BUG]  [BUGGY]  readFully(this.entryBytesRead,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entryBytesRead,  0,  this.blockSize);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entryBytesRead,  0,  this.blockSize);	  readFully(TWO_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
415	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead);	  readFully(TWO_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
416	[BUG]  [BUGGY]  this.entry  =  getNextCPIOEntry(null,  0);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  getNextCPIOEntry(null,  0);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  getNextCPIOEntry(null,  0);	  this.entry    =    getNextCPIOEntry(null);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
417	[BUG]  [BUGGY]  this.entryEOF  =  closeArchiveEntry();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  closeArchiveEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  closeArchiveEntry();	  this.entryEOF    =    closeEntry();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
418	[BUG]  [BUGGY]  this.entryEOF  =  closeCpioArchiveEntry();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  closeCpioArchiveEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  closeCpioArchiveEntry();	  this.entryEOF    =    closeEntry();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
419	[BUG]  [BUGGY]  this.entryEOF  =  closeCpio();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  closeCpio();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  closeCpio();	  this.entryEOF    =    closeEntry();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
420	[BUG]  [BUGGY]  this.entry  =  getNextCPIOEntry(0);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  getNextCPIOEntry(0);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  getNextCPIOEntry(0);	  this.entry    =    readOldBinaryEntry(0);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
421	[BUG]  [BUGGY]  this.entry  =  readFully(0);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(0);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(0);	  this.entry    =    readOldBinaryEntry(0);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
422	[BUG]  [BUGGY]  if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
423	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_B  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry  ==  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_B  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_B	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
424	[BUG]  [BUGGY]  if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
425	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry  ==  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
426	[BUG]  [BUGGY]  if(this.entryEOF)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_B  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_B  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_B	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
427	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(this.entryBytesRead,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(this.entryBytesRead,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(this.entryBytesRead,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
428	[BUG]  [BUGGY]  this.entry  =  getNextCpioArchiveEntry();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  getNextCpioArchiveEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  getNextCpioArchiveEntry();	  this.entry    =    getNextArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
429	[BUG]  [BUGGY]  this.entry  =  getNextPIOEntry();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  getNextPIOEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  getNextPIOEntry();	  this.entry    =    getNextArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
430	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  false);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this,  false);	  this.entry    =    new    CpioArchiveEntry(this);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
431	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  null);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  null);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this,  null);	  this.entry    =    new    CpioArchiveEntry(this);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
432	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  tmpbuf);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  tmpbuf);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this,  tmpbuf);	  this.entry    =    new    CpioArchiveEntry(this);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
433	[BUG]  [BUGGY]  if(this.entry!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }	  if(this.entry!=    null)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(true);    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
434	[BUG]  [BUGGY]  if(this.entry!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  }	  if(this.entry!=    null)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(true);    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
435	[BUG]  [BUGGY]  this.entry  =  createNextArchiveEntry();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  createNextArchiveEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  createNextArchiveEntry();	  this.entry    =    createNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
436	[BUG]  [BUGGY]  if(this.key!=  null)  {  closeArchiveEntry();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.key!=  null)  {  closeArchiveEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.key!=  null)  {  closeArchiveEntry();  }	  if(this.entry!=    null)    {    closeArchiveEntry();    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
437	[BUG]  [BUGGY]  if(this.internalGetNextCPIOEntry()!=  null)  {  closeArchiveEntry();  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.internalGetNextCPIOEntry()!=  null)  {  closeArchiveEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.internalGetNextCPIOEntry()!=  null)  {  closeArchiveEntry();  }	  if(this.entry!=    null)    {    closeArchiveEntry();    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
438	[BUG]  [BUGGY]  System.arraycopy(SIZE_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(SIZE_BYTES_BUF,  0,  this.entry.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(SIZE_BYTES_BUF,  0,  this.entry.length);	  System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
439	[BUG]  [BUGGY]  this.entry  =  readBinaryEntry(true,  MAGIC_OLD_BINARY);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readBinaryEntry(true,  MAGIC_OLD_BINARY);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readBinaryEntry(true,  MAGIC_OLD_BINARY);	  this.entry    =    readOldBinaryEntry(false,    MAGIC_OLD_BINARY);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
440	[BUG]  [BUGGY]  this.entry  =  readNewBinaryEntry(true,  MAGIC_OLD_BINARY);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readNewBinaryEntry(true,  MAGIC_OLD_BINARY);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readNewBinaryEntry(true,  MAGIC_OLD_BINARY);	  this.entry    =    readOldBinaryEntry(false,    MAGIC_OLD_BINARY);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
441	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(true,  BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldBinaryEntry(true,  BYTES_BUF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldBinaryEntry(true,  BYTES_BUF);	  this.entry    =    readOldBinaryEntry(false,    MAGIC_OLD_BINARY);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
442	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(this.entry)  ==  MAGIC_OLD_BINARY)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(this.entry)  ==  MAGIC_OLD_BINARY)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(this.entry)  ==  MAGIC_OLD_BINARY)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry	  if(this.entry    ==    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
443	[BUG]  [BUGGY]  this.entry  =  readIOldBinaryEntry(true,  false);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readIOldBinaryEntry(true,  false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readIOldBinaryEntry(true,  false);	  this.entry    =    readOldBinaryEntry(false,    false);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
444	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead);  this.entry  =  readOldBinaryEntry(false);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead);  this.entry  =  readOldBinaryEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead);  this.entry  =  readOldBinaryEntry(false);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
445	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entrySize);  this.entry  =  readOldBinaryEntry(true);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entrySize);  this.entry  =  readOldBinaryEntry(true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entrySize);  this.entry  =  readOldBinaryEntry(true);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
446	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead);  this.entry  =  readOldBinaryEntry(true);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead);  this.entry  =  readOldBinaryEntry(true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead);  this.entry  =  readOldBinaryEntry(true);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
447	[BUG]  [BUGGY]  this.entry  =  readNextBytesRead(false);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readNextBytesRead(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readNextBytesRead(false);	  this.entry    =    readNextCpioEntry(false);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
448	[BUG]  [BUGGY]  this.entry  =  readNextPioEntry(true);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readNextPioEntry(true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readNextPioEntry(true);	  this.entry    =    readNextCpioEntry(false);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
449	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(true);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(true);	  this.entry    =    new    CpioArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
450	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize),  0);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize),  0);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize),  0);	  this.entry    =    new    CpioArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
451	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize  -  1));  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize  -  1));  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize  -  1));	  this.entry    =    new    CpioArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
452	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.inputStream,  in);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.inputStream,  in);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this.inputStream,  in);	  this.entry    =    new    CpioArchiveEntry(this.inputStream);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
453	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.inputStream,  this.module);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.inputStream,  this.module);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this.inputStream,  this.module);	  this.entry    =    new    CpioArchiveEntry(this.inputStream);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
454	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.inputStream,  0);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.inputStream,  0);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this.inputStream,  0);	  this.entry    =    new    CpioArchiveEntry(this.inputStream);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
455	[BUG]  [BUGGY]  this.entryEOF  =  readBinaryEntry(false);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  readBinaryEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  readBinaryEntry(false);	  this.entryEOF    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
456	[BUG]  [BUGGY]  if(this.entry!=  null)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }	  if(this.entry!=    null)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
457	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_B  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_B  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF!=  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_B	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
458	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.getNextCPIOEntry();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.getNextCPIOEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.in.getNextCPIOEntry();	  this.entry    =(CpioArchiveEntry)this.in.getValue();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
459	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.siZE);  this.entry  =  readOldBinaryEntry(true);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.siZE);  this.entry  =  readOldBinaryEntry(true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.siZE);  this.entry  =  readOldBinaryEntry(true);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
460	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
461	[BUG]  [BUGGY]  if(this.entry!=  null)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }	  if(this.entry!=    null)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
462	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntryImpl(System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize  -  1));  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntryImpl(System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize  -  1));  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntryImpl(System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize  -  1));	  this.entry    =    new    CpioArchiveEntryImpl();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
463	[BUG]  [BUGGY]  this.entry  =  readFully(this.nextCPIOEntry,  true);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(this.nextCPIOEntry,  true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(this.nextCPIOEntry,  true);	  this.entry    =    readFully(FOUR_BYTES_BUF,    true);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
464	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryEOF.length);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryEOF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.entryEOF.length);	  readFully(TWO_BYTES_BUF,    0,    this.entryEOF.length);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
465	[BUG]  [BUGGY]  readFully(this.entry,  0,  this.entryEOF.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entry,  0,  this.entryEOF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entry,  0,  this.entryEOF.length);	  readFully(TWO_BYTES_BUF,    0,    this.entryEOF.length);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
466	[BUG]  [BUGGY]  readFully(this.entryEOF,  0,  this.entryBytesRead.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entryEOF,  0,  this.entryBytesRead.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entryEOF,  0,  this.entryBytesRead.length);	  readFully(TWO_BYTES_BUF,    0,    this.entryEOF.length);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
467	[BUG]  [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
468	[BUG]  [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
469	[BUG]  [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
470	[BUG]  [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
471	[BUG]  [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
472	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry  ==  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    true)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
473	[BUG]  [BUGGY]  System.arraycopy(this.entry,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(this.entry,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(this.entry,  0,  FOUR_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
474	[BUG]  [BUGGY]  this.entry  =  readFully(true,  0);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(true,  0);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(true,  0);	  this.entry    =    readFully(true);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
475	[BUG]  [BUGGY]  this.entry  =  readFully(true,  null);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(true,  null);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(true,  null);	  this.entry    =    readFully(true);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
476	[BUG]  [BUGGY]  ReadFully(this.entry,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  ReadFully(this.entry,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	ReadFully(this.entry,  0,  FOUR_BYTES_BUF.length);	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
477	[BUG]  [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
478	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.in.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.in.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(TWO_BYTES_BUF,  0,  this.in.length);	  if(this.in!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
479	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.in.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.in.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.in.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);	  if(this.in!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
480	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.in.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.in.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(TWO_BYTES_BUF,  0,  this.in.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in.length);	  if(this.in!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
481	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(true,  false,  0);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldBinaryEntry(true,  false,  0);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldBinaryEntry(true,  false,  0);	  this.entry    =    readOldBinaryEntry(true,    false);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
482	[BUG]  [BUGGY]  this.entry  =  readBinaryEntry(false,  true);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readBinaryEntry(false,  true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readBinaryEntry(false,  true);	  this.entry    =    readOldBinaryEntry(true,    true);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
483	[BUG]  [BUGGY]  System.arraycopy(fOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(fOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(fOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);	  System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
484	[BUG]  [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length  -  1);  this.entry  =  readOldBinaryEntry(false);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length  -  1);  this.entry  =  readOldBinaryEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length  -  1);  this.entry  =  readOldBinaryEntry(false);	  System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
485	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)getNextCRIOEntry();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)getNextCRIOEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)getNextCRIOEntry();	  this.entry    =(CpioArchiveEntry)getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
486	[BUG]  [BUGGY]  if(this.entryEOF)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_B  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_B  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_B	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
487	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(this.entryBytesRead,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(this.entryBytesRead,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(this.entryBytesRead,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
488	[BUG]  [BUGGY]  this.entry  =  readBytesRead(false);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readBytesRead(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readBytesRead(false);	  this.entry    =    readFully(false);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
489	[BUG]  [BUGGY]  this.entry  =  readFully(false,  0);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(false,  0);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(false,  0);	  this.entry    =    readFully(false);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
490	[BUG]  [BUGGY]  ReadFully(this.entry,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  ReadFully(this.entry,  0,  TWO_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	ReadFully(this.entry,  0,  TWO_BYTES_BUF.length);	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
491	[BUG]  [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
492	[BUG]  [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
493	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  1,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  1,  this.entry.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  -  1,  this.entry.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
494	[BUG]  [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
495	[BUG]  [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
496	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  MIR_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  MIR_BYTES_BUF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this,  MIR_BYTES_BUF);	  this.entry    =    new    CpioArchiveEntry(this);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
497	[BUG]  [BUGGY]  this.entryEOF  =  closeOpenArchiveEntry();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  closeOpenArchiveEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  closeOpenArchiveEntry();	  this.entryEOF    =    closeEntry();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
498	[BUG]  [BUGGY]  this.entryEOF  =  closeDirectoryEntry();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  closeDirectoryEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  closeDirectoryEntry();	  this.entryEOF    =    closeEntry();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
499	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  ensureOpen();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  ensureOpen();  }	  if(this.entry!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
500	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(false, "0 ");  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldBinaryEntry(false, "0 ");  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldBinaryEntry(false, "0 ");	  this.entry    =    readOldBinaryEntry(true,    0);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
501	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntryImpl(System.arraycopy(FOUR_BYTES_BUF,  1,  this.blockSize));  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntryImpl(System.arraycopy(FOUR_BYTES_BUF,  1,  this.blockSize));  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntryImpl(System.arraycopy(FOUR_BYTES_BUF,  1,  this.blockSize));	  this.entry    =    new    CpioArchiveEntryImpl();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
502	[BUG]  [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  false);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(TWO_BYTES_BUF,  false);	  this.entry    =    readFully(FOUR_BYTES_BUF,    true);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
503	[BUG]  [BUGGY]  this.entry  =  readOldArchiveEntry(true,  MAGIC_OLD_BINARY);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldArchiveEntry(true,  MAGIC_OLD_BINARY);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldArchiveEntry(true,  MAGIC_OLD_BINARY);	  this.entry    =    readOldBinaryEntry(false,    MAGIC_OLD_BINARY);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
504	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(false,  BYTE_OLD_BINARY);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldBinaryEntry(false,  BYTE_OLD_BINARY);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldBinaryEntry(false,  BYTE_OLD_BINARY);	  this.entry    =    readOldBinaryEntry(false,    MAGIC_OLD_BINARY);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
505	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.inputStream,  this.keyDesc);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.inputStream,  this.keyDesc);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this.inputStream,  this.keyDesc);	  this.entry    =    new    CpioArchiveEntry(this.inputStream);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
506	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.inputStream,  this.dirty);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.inputStream,  this.dirty);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this.inputStream,  this.dirty);	  this.entry    =    new    CpioArchiveEntry(this.inputStream);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
507	[BUG]  [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length  -  1,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length  -  1,  this.blockSize);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(TOUR_BYTES_BUF,  0,  this.entry.length  -  1,  this.blockSize);	  System.arraycopy(TOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
508	[BUG]  [BUGGY]  System.arraycopy(THIS_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(THIS_BYTES_BUF,  0,  this.entry.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(THIS_BYTES_BUF,  0,  this.entry.length);	  System.arraycopy(TOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
509	[BUG]  [BUGGY]  this.entry  =  readFully(true,  tmpbuf);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(true,  tmpbuf);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(true,  tmpbuf);	  this.entry    =    readFully(true);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
510	[BUG]  [BUGGY]  if(this.entryEOF)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
511	[BUG]  [BUGGY]  if(this.entry!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }	  if(this.entry!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
512	[BUG]  [BUGGY]  this.entry  =  findNextCPIOEntry(false);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  findNextCPIOEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  findNextCPIOEntry(false);	  this.entry    =    getNextCPIOEntry(true);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
513	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  this.closeArchiveEntry();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry  ==  null)  {  this.closeArchiveEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null)  {  this.closeArchiveEntry();  }	  if(this.entry    ==    null)    {    this.closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
514	[BUG]  [BUGGY]  this.closeArchiveEntry();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.closeArchiveEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.closeArchiveEntry();	  if(this.entry    ==    null)    {    this.closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
515	[BUG]  [BUGGY]  if(this.entryEOF)  {  this.closeEntry();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF)  {  this.closeEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  this.closeEntry();  }	  if(this.entry    ==    null)    {    this.closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
516	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.in,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.in,  this.blockSize);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this.in,  this.blockSize);	  this.entry    =    entryEOF;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
517	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.in);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.in);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this.in);	  this.entry    =    entryEOF;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
518	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  +  1,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  +  1,  this.blockSize);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length  +  1,  this.blockSize);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
519	[BUG]  [BUGGY]  this.entryEOF  =  createNextCPIOEntry();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  createNextCPIOEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  createNextCPIOEntry();	  this.entryEOF    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
520	[BUG]  [BUGGY]  this.entryEOF  =  super.getNextCPIOEntry();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  super.getNextCPIOEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  super.getNextCPIOEntry();	  this.entryEOF    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
521	[BUG]  [BUGGY]  this.entryEOF  =  getNextCPIOEntry(this.blockSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entryEOF  =  getNextCPIOEntry(this.blockSize);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entryEOF  =  getNextCPIOEntry(this.blockSize);	  this.entryEOF    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
522	[BUG]  [BUGGY]  readFully(this.blockSize,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.blockSize,  0,  this.blockSize);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.blockSize,  0,  this.blockSize);	  readFully(TWO_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
523	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this	  if(this.entry    ==    null)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
524	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.entry.getAscii();  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.entry.getAscii();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.entry.getAscii();	  this.entry    =(CpioArchiveEntry)this.entry.getValue();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
525	[BUG]  [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);	  this.entry    =    readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
526	[BUG]  [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);	  this.entry    =    readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
527	[BUG]  [BUGGY]  if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
528	[BUG]  [BUGGY]  if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
529	[BUG]  [BUGGY]  if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
530	[BUG]  [BUGGY]  if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
531	[BUG]  [BUGGY]  if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
532	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  closeArchiveEntry();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF!=  null)  {  closeArchiveEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF!=  null)  {  closeArchiveEntry();  }	  if(this.entryEOF)    {    closeArchiveEntry();    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
533	[BUG]  [BUGGY]  if(this.entryEOF  ==  null)  {  closeArchiveEntry();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF  ==  null)  {  closeArchiveEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF  ==  null)  {  closeArchiveEntry();  }	  if(this.entryEOF)    {    closeArchiveEntry();    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
534	[BUG]  [BUGGY]  readFully(this.entryEOF,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entryEOF,  0,  this.blockSize);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entryEOF,  0,  this.blockSize);	  if(this.entryEOF)    {    closeArchiveEntry();    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
535	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length);	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
536	[BUG]  [BUGGY]  if(this.entry!=  null)  {  this.closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  this.closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  this.closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }	  if(this.entry!=    null)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
537	[BUG]  [BUGGY]  if(this.entry  ==  null  ||  this.blockSize  <  =  0)  {  closeArchiveEntry();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry  ==  null  ||  this.blockSize  <  =  0)  {  closeArchiveEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null  ||  this.blockSize  <  =  0)  {  closeArchiveEntry();  }	  if(this.entry    ==    null)    {    closeArchiveEntry();    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
538	[BUG]  [BUGGY]  if(this.entry  ==  null  ||  this.blockSize  ==  0)  {  closeArchiveEntry();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry  ==  null  ||  this.blockSize  ==  0)  {  closeArchiveEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry  ==  null  ||  this.blockSize  ==  0)  {  closeArchiveEntry();  }	  if(this.entry    ==    null)    {    closeArchiveEntry();    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
539	[BUG]  [BUGGY]  this.entry  =  readFully(this.tmpbuf,  FOUR_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(this.tmpbuf,  FOUR_BYTES_BUF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(this.tmpbuf,  FOUR_BYTES_BUF);	  this.entry    =    readFully(FOUR_BYTES_BUF);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
540	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.blockSize);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this.blockSize);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this.blockSize);	  this.entry    =    new    CpioArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
541	[BUG]  [BUGGY]  if(this.entry.length  >  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry.length  >  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry.length  >  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
542	[BUG]  [BUGGY]  if(this.entry.length  ==  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry.length  ==  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry.length  ==  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
543	[BUG]  [BUGGY]  if(this.entry.length  >  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry.length  >  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry.length  >  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
544	[BUG]  [BUGGY]  if(this.entry.length  ==  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry.length  ==  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry.length  ==  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
545	[BUG]  [BUGGY]  if(this.entry.length  >  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry.length  >  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry.length  >  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
546	[BUG]  [BUGGY]  if(this.entry.length  ==  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry.length  ==  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry.length  ==  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
547	[BUG]  [BUGGY]  readFully(SIX_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(SIX_BYTES_BUF,  0,  this.entry.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(SIX_BYTES_BUF,  0,  this.entry.length);	  if(this.entryEOF)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
548	[BUG]  [BUGGY]  System.arraycopy(ARRAY_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(ARRAY_BYTES_BUF,  0,  this.entry.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(ARRAY_BYTES_BUF,  0,  this.entry.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
549	[BUG]  [BUGGY]  this.entry  =  createNextCpioArchiveEntry();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  createNextCpioArchiveEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  createNextCpioArchiveEntry();	  this.entry    =    createNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
550	[BUG]  [BUGGY]  this.entry  =  createNextCPIOEntry(this.magicString);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  createNextCPIOEntry(this.magicString);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  createNextCPIOEntry(this.magicString);	  this.entry    =    createNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
551	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(this.entryBytesRead,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(this.entryBytesRead,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(this.entryBytesRead,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
552	[BUG]  [BUGGY]  if(this.entryEOF)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
553	[BUG]  [BUGGY]  if(this.entryEOF  ==  null)  {  this.closeEntry();  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF  ==  null)  {  this.closeEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF  ==  null)  {  this.closeEntry();  }	  if(this.entryEOF    ==    null)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
554	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this	  if(this.entry    ==    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
555	[BUG]  [BUGGY]  if(this.entryEOF)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF)  {  ensureOpen();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  ensureOpen();  }	  if(this.entry!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_B    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
556	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.tmpbuf!=  null)  {  ensureOpen();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.tmpbuf!=  null)  {  ensureOpen();  }	  if(this.entry!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_B    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
557	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(this.entry.length)  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(this.entry.length)  ==  0)  {  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(this.entry.length)  ==  0)  {	  if(this.entry!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_B    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
558	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.entryEOF.length);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.entryEOF.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(THIS_BYTES_BUF,  0,  this.entryEOF.length);	  readFully(TWO_BYTES_BUF,    0,    this.entryEOF.length);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
559	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(this.entry,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
560	[BUG]  [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length  -  1,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length  -  1,  this.blockSize);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length  -  1,  this.blockSize);	  System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
561	[BUG]  [BUGGY]  if(this.entryEOF)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }	  if(this.entry    ==    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
562	[BUG]  [BUGGY]  if(this.entryEOF)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(false);  }	  System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
563	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry	  System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
564	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry	  System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
565	[BUG]  [BUGGY]  if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry();  }	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
566	[BUG]  [BUGGY]  if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
567	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  magicString,  this.in);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  magicString,  this.in);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this,  magicString,  this.in);	  this.entry    =    new    CpioArchiveEntry(this,    magicString);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
568	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  magicString,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  magicString,  this.blockSize);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this,  magicString,  this.blockSize);	  this.entry    =    new    CpioArchiveEntry(this,    magicString);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
569	[BUG]  [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  magicString,  entryEOF);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  new  CpioArchiveEntry(this,  magicString,  entryEOF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  new  CpioArchiveEntry(this,  magicString,  entryEOF);	  this.entry    =    new    CpioArchiveEntry(this,    magicString);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
570	[BUG]  [BUGGY]  this.entry  =  readFully(this.blockSize);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readFully(this.blockSize);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readFully(this.blockSize);	  this.entry    =    readFully();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
571	[BUG]  [BUGGY]  this.entry  =  readInt();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readInt();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readInt();	  this.entry    =    readFully();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
572	[BUG]  [BUGGY]  this.entry  =  readBytesRead();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readBytesRead();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readBytesRead();	  this.entry    =    readFully();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
573	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  }	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
574	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
575	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEscaped);  this.entry  =  readOldBinaryEntry(false);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEscaped);  this.entry  =  readOldBinaryEntry(false);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEscaped);  this.entry  =  readOldBinaryEntry(false);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
576	[BUG]  [BUGGY]  this.entry  =  readIOldArchiveEntry(true);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readIOldArchiveEntry(true);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readIOldArchiveEntry(true);	  this.entry    =    readIOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
577	[BUG]  [BUGGY]  if(this.entryEOF  ==  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF  ==  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF  ==  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
578	[BUG]  [BUGGY]  if(this.entryEOF  ==  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_B  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF  ==  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_B  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF  ==  null)  {  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(FOUR_B	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
579	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry();  }	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
580	[BUG]  [BUGGY]  readFully(this.in,  0,  this.in.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.in,  0,  this.in.length);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.in,  0,  this.in.length);	  if(this.in!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
581	[BUG]  [BUGGY]  if(this.in!=  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.in!=  null)  {  ensureOpen();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.in!=  null)  {  ensureOpen();  }	  if(this.in!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
582	[BUG]  [BUGGY]  if(this.in  ==  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.in  ==  null)  {  ensureOpen();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.in  ==  null)  {  ensureOpen();  }	  if(this.in!=    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.in.length);    this.entry    =    readOldBinaryEntry();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
583	[BUG]  [BUGGY]  if(this.entryEOF)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }	  if(this.entry    ==    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
584	[BUG]  [BUGGY]  if(this.entryEOF)  {  ensureOpen();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF)  {  ensureOpen();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  ensureOpen();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }	  if(this.entry    ==    null)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
585	[BUG]  [BUGGY]  this.entry  =  getNextCPIOEntry(System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize  -  1));  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  getNextCPIOEntry(System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize  -  1));  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  getNextCPIOEntry(System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize  -  1));	  this.entry    =    getNextCPIOEntry(null);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
586	[BUG]  [BUGGY]  if(this.entry.length  >  0)  {  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry.length  >  0)  {  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry.length  >  0)  {  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
587	[BUG]  [BUGGY]  if(this.entry.length  ==  0)  {  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry.length  ==  0)  {  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry.length  ==  0)  {  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
588	[BUG]  [BUGGY]  if(this.entry.length  <  SIX_BYTES_BUF)  {  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry.length  <  SIX_BYTES_BUF)  {  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry.length  <  SIX_BYTES_BUF)  {  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
589	[BUG]  [BUGGY]  readFully(this.entryEOF,  0,  this.entryEOF);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.entryEOF,  0,  this.entryEOF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.entryEOF,  0,  this.entryEOF);	  readFully(TWO_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
590	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(this.entry,  true)  ==  MAGIC_OLD_BINARY)  {  closeEntry();  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  }	  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    closeEntry();    }    else    {    System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
591	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.getData();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.getData();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.in.getData();	  this.entry    =(CpioArchiveEntry)this.in.getValue();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
592	[BUG]  [BUGGY]  readFully(this.blockSize,  0,  this.entry);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  readFully(this.blockSize,  0,  this.entry);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	readFully(this.blockSize,  0,  this.entry);	  readFully(this.entry,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
593	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(CpioUtil.byteArray2long(this.entry,  false)  ==  MAGIC_OLD_BINARY)  {	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    if(CpioUtil.byteArray2long(TWO_BYTES_BUF,    false)    ==    MAGIC_OLD_BINARY)    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
594	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.readLine();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.readLine();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.in.readLine();	  this.entry    =(CpioArchiveEntry)this.in.read();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
595	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.close();  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.in.close();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.in.close();	  this.entry    =(CpioArchiveEntry)this.in.read();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
596	[BUG]  [BUGGY]  if(this.entryEOF)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  System.arraycopy(TWO_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }	  System.arraycopy(TWO_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
597	[BUG]  [BUGGY]  if(this.entryEOF)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(true);  }	  if(this.entryEOF)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
598	[BUG]  [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryEOF);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryEOF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(TWO_BYTES_BUF,  0,  this.entryEOF);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
599	[BUG]  [BUGGY]  System.arraycopy(this.entry,  0,  FOUR_BYTES_BUF,  0,  this.entryEOF);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  System.arraycopy(this.entry,  0,  FOUR_BYTES_BUF,  0,  this.entryEOF);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	System.arraycopy(this.entry,  0,  FOUR_BYTES_BUF,  0,  this.entryEOF);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
600	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(FOUR  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(FOUR  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(FOUR	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
601	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }  else  {  getNextCPIOEntry();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }  else  {  getNextCPIOEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }  else  {  getNextCPIOEntry();  }	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
602	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(TWO_B  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(TWO_B  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryEOF);  this.entry  =  readOldBinaryEntry(false);  }  else  {  System.arraycopy(TWO_B	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryEOF);    this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
603	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)getNextCRCIOEntry();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)getNextCRCIOEntry();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)getNextCRCIOEntry();	  this.entry    =(CpioArchiveEntry)getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
604	[BUG]  [BUGGY]  if(this.entryEOF)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  ensureOpen();  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }	  if(this.entryEOF)    {    ensureOpen();    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(false);    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
605	[BUG]  [BUGGY]  if(this.entry.length  >  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry.length  >  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry.length  >  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
606	[BUG]  [BUGGY]  if(this.entry.length  >  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry.length  >  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry.length  >  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
607	[BUG]  [BUGGY]  if(this.entry.length!=  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry.length!=  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  else  {  return  null;  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry.length!=  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry.length);  }  else  {  return  null;  }	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
608	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.tmpbuf.clone();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.tmpbuf.clone();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.tmpbuf.clone();	  this.entry    =(CpioArchiveEntry)this.entry.clone();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
609	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.entryEOF;  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.entryEOF;  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.entryEOF;	  this.entry    =(CpioArchiveEntry)this.entry.clone();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
610	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.entries.clone();  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.entries.clone();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.entries.clone();	  this.entry    =(CpioArchiveEntry)this.entry.clone();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
611	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.entryBytesRead.clone();  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.entryBytesRead.clone();  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =(CpioArchiveEntry)this.entryBytesRead.clone();	  this.entry    =(CpioArchiveEntry)this.entry.clone();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
612	[BUG]  [BUGGY]  if(this.entry!=  null)  {  this.closePioEntry();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry!=  null)  {  this.closePioEntry();  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry!=  null)  {  this.closePioEntry();  }	  if(this.entry!=    null)    {    this.closeEntry();    }    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
613	[BUG]  [BUGGY]  if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
614	[BUG]  [BUGGY]  if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entryEOF)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
615	[BUG]  [BUGGY]  if(this.entry.length  ==  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  if(this.entry.length  ==  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	if(this.entry.length  ==  0)  {  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  this.entry  =  readOldBinaryEntry(true);  }	  readFully(FOUR_BYTES_BUF,    0,    this.entry.length);    this.entry    =    readOldBinaryEntry(true);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
616	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(false, "true ");  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldBinaryEntry(false, "true ");  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldBinaryEntry(false, "true ");	  this.entry    =    readOldBinaryEntry(true,    true);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
617	[BUG]  [BUGGY]  this.entry  =  readOldArchiveEntry(false,  null);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {  ensureOpen();  if  (this.entry  !=  null)  {      [BUGGY]  this.entry  =  readOldArchiveEntry(false,  null);  [BUGGY]      }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	189	189	1	replace	this.entry  =  readOldArchiveEntry(false,  null);	  this.entry    =    readOldArchiveEntry(false);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
