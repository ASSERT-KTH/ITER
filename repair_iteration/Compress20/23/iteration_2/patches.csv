bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize  -  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.blockSize  -  1);	  readFully(TWO_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
2	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize  +  1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize  +  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.blockSize  +  1);	  readFully(TWO_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
3	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize  -  2);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize  -  2);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.blockSize  -  2);	  readFully(TWO_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
4	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1));  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1));  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1));	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length));    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
5	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2));  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2));  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2));	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length));    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
6	[BUG]  [BUGGY]  readFully(THIS_BUF,  0,  this.blockSize  -  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BUF,  0,  this.blockSize  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BUF,  0,  this.blockSize  -  1);	  readFully(THIS_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
7	[BUG]  [BUGGY]  readFully(THIS_BUF,  0,  this.blockSize  +  1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BUF,  0,  this.blockSize  +  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BUF,  0,  this.blockSize  +  1);	  readFully(THIS_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
8	[BUG]  [BUGGY]  readFully(this.blockSize,  0,  this.THIS_BUF);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.blockSize,  0,  this.THIS_BUF);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.blockSize,  0,  this.THIS_BUF);	  readFully(THIS_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
9	[BUG]  [BUGGY]  this.nextCPIOEntry  =  getNextCPIOEntry();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.nextCPIOEntry  =  getNextCPIOEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.nextCPIOEntry  =  getNextCPIOEntry();	  if(this.nextCPIOEntry    ==    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
10	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.nextCPIOEntry.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.nextCPIOEntry.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.nextCPIOEntry.length);	  if(this.nextCPIOEntry    ==    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
11	[BUG]  [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    getNextCPIOEntry();    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
12	[BUG]  [BUGGY]  if(this.entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  getNextCPIOEntry();  }  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  getNextCPIOEntry();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  getNextCPIOEntry();  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    getNextCPIOEntry();    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
13	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  getNextCPIOEntry();  }  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.entry  ==  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  getNextCPIOEntry();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.entry  ==  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  getNextCPIOEntry();  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    getNextCPIOEntry();    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
14	[BUG]  [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    getNextCPIOEntry();    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
15	[BUG]  [BUGGY]  if(this.entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  }  else  {  getNextCPIOEntry();  }  [CE]  illegal  start  of  type  [FE]                                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  }  else  {  getNextCPIOEntry();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  }  else  {  getNextCPIOEntry();  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    getNextCPIOEntry();    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
16	[BUG]  [BUGGY]  readFully(this.blockSize,  0,  SIX_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.blockSize,  0,  SIX_BYTES_BUF);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.blockSize,  0,  SIX_BYTES_BUF);	  readFully(SIX_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
17	[BUG]  [BUGGY]  readFully(SIX_BYTES_BUF,  0,  this.blockSize  -  1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(SIX_BYTES_BUF,  0,  this.blockSize  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(SIX_BYTES_BUF,  0,  this.blockSize  -  1);	  readFully(SIX_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
18	[BUG]  [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);	  this.entry    =    readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
19	[BUG]  [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);	  this.entry    =    readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
20	[BUG]  [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  +  1);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  +  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  +  1);	  this.entry    =    readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
21	[BUG]  [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  4);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  4);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  4);	  this.entry    =    readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
22	[BUG]  [BUGGY]  ReadFully(TWO_BYTES_BUF,  0,  this.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(TWO_BYTES_BUF,  0,  this.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(TWO_BYTES_BUF,  0,  this.length);	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    0,    this.length);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
23	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BYTES_BUF,  0,  this.length);	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    0,    this.length);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
24	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  1,  this.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  1,  this.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  1,  this.length);	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    0,    this.length);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
25	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF);	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    0,    this.length);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
26	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  tmpbuf.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  tmpbuf.length);	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    0,    this.length);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
27	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  +  2);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  +  2);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  +  2);	  readFully(FOUR_BYTES_BUF,    0,    FOUR_BYTES_BUF.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
28	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  /  1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  /  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  /  1);	  readFully(FOUR_BYTES_BUF,    0,    FOUR_BYTES_BUF.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
29	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(true);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readOldBinaryEntry(true);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readOldBinaryEntry(true);	  this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
30	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(false,  true);  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readOldBinaryEntry(false,  true);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readOldBinaryEntry(false,  true);	  this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
31	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(false,  false);  [CE]  illegal  start  of  type  [FE]                                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readOldBinaryEntry(false,  false);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readOldBinaryEntry(false,  false);	  this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
32	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry();  [CE]  illegal  start  of  type  [FE]                                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readOldBinaryEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readOldBinaryEntry();	  this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
33	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(false,  0);  [CE]  illegal  start  of  type  [FE]                                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readOldBinaryEntry(false,  0);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readOldBinaryEntry(false,  0);	  this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
34	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryEOF.length  -  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryEOF.length  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.entryEOF.length  -  1);	  readFully(FOUR_BYTES_BUF,    0,    this.entryEOF.length);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
35	[BUG]  [BUGGY]  readFully(this.entryEOF,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.entryEOF,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.entryEOF,  0,  FOUR_BYTES_BUF.length);	  readFully(FOUR_BYTES_BUF,    0,    this.entryEOF.length);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
36	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryEOF.length  +  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryEOF.length  +  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.entryEOF.length  +  1);	  readFully(FOUR_BYTES_BUF,    0,    this.entryEOF.length);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
37	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.enabled)  {  if(getNextCPIOEntry()!=  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.enabled)  {  if(getNextCPIOEntry()!=  null)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.enabled)  {  if(getNextCPIOEntry()!=  null)  {  ensureOpen();  }	  if(this.enabled)    {    if(getNextCPIOEntry()!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
38	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.enabled)  {  if(getNextCPIOEntry()  ==  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.enabled)  {  if(getNextCPIOEntry()  ==  null)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.enabled)  {  if(getNextCPIOEntry()  ==  null)  {  ensureOpen();  }	  if(this.enabled)    {    if(getNextCPIOEntry()!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
39	[BUG]  [BUGGY]  if(!this.enabled)  {  if(getNextCPIOEntry()!=  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(!this.enabled)  {  if(getNextCPIOEntry()!=  null)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(!this.enabled)  {  if(getNextCPIOEntry()!=  null)  {  ensureOpen();  }	  if(this.enabled)    {    if(getNextCPIOEntry()!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
40	[BUG]  [BUGGY]  this.entryEOF  =  getNextCEIOEntryEOF();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCEIOEntryEOF();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCEIOEntryEOF();	  this.entryEOF    =    getNextECIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
41	[BUG]  [BUGGY]  this.entryEOF  =  getNextCCIOEntryEOF();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCCIOEntryEOF();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCCIOEntryEOF();	  this.entryEOF    =    getNextECIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
42	[BUG]  [BUGGY]  this.entryEOF  =  getNextCHIOEntryEOF();  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCHIOEntryEOF();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCHIOEntryEOF();	  this.entryEOF    =    getNextECIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
43	[BUG]  [BUGGY]  this.entryEOF  =  getNextECIOEntry();  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextECIOEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextECIOEntry();	  this.entryEOF    =    getNextECIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
44	[BUG]  [BUGGY]  ReadFully(TWO_BYTES_BUF,  0,  this.blockSize  -  1);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(TWO_BYTES_BUF,  0,  this.blockSize  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(TWO_BYTES_BUF,  0,  this.blockSize  -  1);	  ReadFully(TWO_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
45	[BUG]  [BUGGY]  ReadFully(TWO_BYTES_BUF,  0,  this.blockSize  +  1);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(TWO_BYTES_BUF,  0,  this.blockSize  +  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(TWO_BYTES_BUF,  0,  this.blockSize  +  1);	  ReadFully(TWO_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
46	[BUG]  [BUGGY]  ReadFully(this.blockSize,  0,  TWO_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(this.blockSize,  0,  TWO_BYTES_BUF);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(this.blockSize,  0,  TWO_BYTES_BUF);	  ReadFully(TWO_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
47	[BUG]  [BUGGY]  ReadFully(TWO_BYTES_BUF,  0,  this.blockSize  -  2);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(TWO_BYTES_BUF,  0,  this.blockSize  -  2);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(TWO_BYTES_BUF,  0,  this.blockSize  -  2);	  ReadFully(TWO_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
48	[BUG]  [BUGGY]  ReadFully(this.block,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(this.block,  0,  TWO_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(this.block,  0,  TWO_BYTES_BUF.length);	  ReadFully(TWO_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
49	[BUG]  [BUGGY]  this.entryEOF  =  super.getNextCpioEntryEOF();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  super.getNextCpioEntryEOF();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  super.getNextCpioEntryEOF();	  this.entryEOF    =    super.getNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
50	[BUG]  [BUGGY]  this.entryEOF  =  super.getNextCIOEntryEOF();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  super.getNextCIOEntryEOF();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  super.getNextCIOEntryEOF();	  this.entryEOF    =    super.getNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
51	[BUG]  [BUGGY]  this.entryEOF  =  super.getNextECIOEntryEOF();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  super.getNextECIOEntryEOF();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  super.getNextECIOEntryEOF();	  this.entryEOF    =    super.getNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
52	[BUG]  [BUGGY]  this.entryEOF  =  super.getNextCPIOEntryEOF()  +  1;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  super.getNextCPIOEntryEOF()  +  1;  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  super.getNextCPIOEntryEOF()  +  1;	  this.entryEOF    =    super.getNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
53	[BUG]  [BUGGY]  this.entryEOF  =  super.getNextCHIOEntryEOF();  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  super.getNextCHIOEntryEOF();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  super.getNextCHIOEntryEOF();	  this.entryEOF    =    super.getNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
54	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length  -  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length  -  1);	  readFully(TWO_BYTES_BUF,    0,    this.entryBytesRead.length);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
55	[BUG]  [BUGGY]  readFully(this.entryBytesRead,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.entryBytesRead,  0,  TWO_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.entryBytesRead,  0,  TWO_BYTES_BUF.length);	  readFully(TWO_BYTES_BUF,    0,    this.entryBytesRead.length);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
56	[BUG]  [BUGGY]  readFully(this.entryBytesRead,  0,  this.entryBytesRead.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.entryBytesRead,  0,  this.entryBytesRead.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.entryBytesRead,  0,  this.entryBytesRead.length);	  readFully(TWO_BYTES_BUF,    0,    this.entryBytesRead.length);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
57	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length  -  2);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length  -  2);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length  -  2);	  readFully(TWO_BYTES_BUF,    0,    this.entryBytesRead.length);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
58	[BUG]  [BUGGY]  this.blockSize  =  0;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.blockSize  =  0;  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.blockSize  =  0;	  if(this.blockSize    <    =    0)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
59	[BUG]  [BUGGY]  ReadFully(TWO_BYTES_BUF,  0,  this.blockSize);  return  null;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(TWO_BYTES_BUF,  0,  this.blockSize);  return  null;  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(TWO_BYTES_BUF,  0,  this.blockSize);  return  null;	  ReadFully(FOUR_BYTES_BUF,    0,    this.blockSize);    return    null;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
60	[BUG]  [BUGGY]  ReadFully(this.blockSize,  0,  FOUR_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(this.blockSize,  0,  FOUR_BYTES_BUF);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(this.blockSize,  0,  FOUR_BYTES_BUF);	  ReadFully(FOUR_BYTES_BUF,    0,    this.blockSize);    return    null;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
61	[BUG]  [BUGGY]  ReadFully(FOUR_BYTES_BUF,  0,  this.blockSize);  return  this;  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(FOUR_BYTES_BUF,  0,  this.blockSize);  return  this;  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(FOUR_BYTES_BUF,  0,  this.blockSize);  return  this;	  ReadFully(FOUR_BYTES_BUF,    0,    this.blockSize);    return    null;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
62	[BUG]  [BUGGY]  ReadFully(THIS_BYTES_BUF,  0,  this.blockSize);  return  null;  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(THIS_BYTES_BUF,  0,  this.blockSize);  return  null;  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(THIS_BYTES_BUF,  0,  this.blockSize);  return  null;	  ReadFully(FOUR_BYTES_BUF,    0,    this.blockSize);    return    null;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
63	[BUG]  [BUGGY]  ReadFully(FOUR_BYTES_BUF,  0,  this.blockSize  -  1);  return  null;  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(FOUR_BYTES_BUF,  0,  this.blockSize  -  1);  return  null;  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(FOUR_BYTES_BUF,  0,  this.blockSize  -  1);  return  null;	  ReadFully(FOUR_BYTES_BUF,    0,    this.blockSize);    return    null;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
64	[BUG]  [BUGGY]  ReadFully(this.blockSize,  0,  FOUR_BYTES_BUF);  return  null;  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(this.blockSize,  0,  FOUR_BYTES_BUF);  return  null;  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(this.blockSize,  0,  FOUR_BYTES_BUF);  return  null;	  ReadFully(FOUR_BYTES_BUF,    0,    this.blockSize);    return    null;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
65	[BUG]  [BUGGY]  readFully(this.entryEOF,  0,  TWO_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.entryEOF,  0,  TWO_BYTES_BUF);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.entryEOF,  0,  TWO_BYTES_BUF);	  readFully(TWO_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
66	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.length  -  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.length  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.length  -  1);	  readFully(TWO_BYTES_BUF,    0,    this.length);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
67	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.bytes.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.bytes.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.bytes.length);	  readFully(TWO_BYTES_BUF,    0,    this.length);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
68	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.length  +  1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.length  +  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.length  +  1);	  readFully(TWO_BYTES_BUF,    0,    this.length);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
69	[BUG]  [BUGGY]  int  blockSize  >  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  int  blockSize  >  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	int  blockSize  >  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  }	  if(this.blockSize    >    0)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
70	[BUG]  [BUGGY]  int  blockSize  >  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  0,  blockSize);  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  int  blockSize  >  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  0,  blockSize);  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	int  blockSize  >  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  0,  blockSize);  }	  if(this.blockSize    >    0)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
71	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.getNextCPIOEntry().length);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.getNextCPIOEntry().length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.getNextCPIOEntry().length);	  if(this.getNextCPIOEntry()!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
72	[BUG]  [BUGGY]  this.next  =(CpioArchiveEntry)this.getNextCPIOEntry();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.next  =(CpioArchiveEntry)this.getNextCPIOEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.next  =(CpioArchiveEntry)this.getNextCPIOEntry();	  if(this.getNextCPIOEntry()!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
73	[BUG]  [BUGGY]  if(this.getNextCIOEntry()!=  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.getNextCIOEntry()!=  null)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.getNextCIOEntry()!=  null)  {  ensureOpen();  }	  if(this.getNextCPIOEntry()!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
74	[BUG]  [BUGGY]  this.entryEOF  =  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);	  this.entryEOF    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
75	[BUG]  [BUGGY]  this.entryEOF  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);	  this.entryEOF    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
76	[BUG]  [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);	  this.entryEOF    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
77	[BUG]  [BUGGY]  this.entryEOF  =  readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length);	  this.entryEOF    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
78	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  BYTES_BUF.length  -  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  BYTES_BUF.length  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  BYTES_BUF.length  -  1);	  readFully(FOUR_BYTES_BUF,    0,    BYTES_BUF.length    -    1);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
79	[BUG]  [BUGGY]  if(this.entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
80	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.entry  ==  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.entry  ==  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
81	[BUG]  [BUGGY]  if(this.entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
82	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  1,  TWO_BYTES_BUF.length  -  1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  1,  TWO_BYTES_BUF.length  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  1,  TWO_BYTES_BUF.length  -  1);	  readFully(TWO_BYTES_BUF,    1,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
83	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  1,  TWO_BYTES_BUF.length  +  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  1,  TWO_BYTES_BUF.length  +  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  1,  TWO_BYTES_BUF.length  +  1);	  readFully(TWO_BYTES_BUF,    1,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
84	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  1,  TWO_BYTES_BUF.length  -  2);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  1,  TWO_BYTES_BUF.length  -  2);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  1,  TWO_BYTES_BUF.length  -  2);	  readFully(TWO_BYTES_BUF,    1,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
85	[BUG]  [BUGGY]  this.entryEOF  =  getNextCPIOEntryEOF(false);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCPIOEntryEOF(false);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCPIOEntryEOF(false);	  this.entryEOF    =    getNextCPIOEntryEOF(true);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
86	[BUG]  [BUGGY]  this.entryEOF  =  getNextCPIOEntryEOF(true,  0);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCPIOEntryEOF(true,  0);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCPIOEntryEOF(true,  0);	  this.entryEOF    =    getNextCPIOEntryEOF(true);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
87	[BUG]  [BUGGY]  this.entryEOF  =  getNextCPIOEntryEOF(true,  false);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCPIOEntryEOF(true,  false);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCPIOEntryEOF(true,  false);	  this.entryEOF    =    getNextCPIOEntryEOF(true);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
88	[BUG]  [BUGGY]  this.entryEOF  =  getNextCPIOEntryEOF(true,  true);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCPIOEntryEOF(true,  true);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCPIOEntryEOF(true,  true);	  this.entryEOF    =    getNextCPIOEntryEOF(true);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
89	[BUG]  [BUGGY]  this.entryEOF  =  getNextCPIOEntryEOF(false,  true);  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCPIOEntryEOF(false,  true);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCPIOEntryEOF(false,  true);	  this.entryEOF    =    getNextCPIOEntryEOF(true);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
90	[BUG]  [BUGGY]  this.entryEOF  =  getNextCPIOEntryEOF(false,  false);  [CE]  illegal  start  of  type  [FE]                                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCPIOEntryEOF(false,  false);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCPIOEntryEOF(false,  false);	  this.entryEOF    =    getNextCPIOEntryEOF(true);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
91	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length)  {  ensureOpen();  }	  readFully(TWO_BYTES_BUF,    0,    this.blockSize)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
92	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize  +  1)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize  +  1)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.blockSize  +  1)  {  ensureOpen();  }	  readFully(TWO_BYTES_BUF,    0,    this.blockSize)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
93	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  1,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  1,  this.blockSize);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  1,  this.blockSize);	  if(this.blockSize    <    =    0)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
94	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  this.blockSize);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  this.blockSize);	  readFully(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
95	[BUG]  [BUGGY]  readFully(this.blockSize,  0,  this.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.blockSize,  0,  this.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.blockSize,  0,  this.length);	  readFully(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
96	[BUG]  [BUGGY]  if(entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getCpioArchiveEntry();  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getCpioArchiveEntry();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getCpioArchiveEntry();  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    CpioArchiveEntry    entry    =    getCpioArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
97	[BUG]  [BUGGY]  if(entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getCpioArchiveEntry();  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getCpioArchiveEntry();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getCpioArchiveEntry();  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    CpioArchiveEntry    entry    =    getCpioArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
98	[BUG]  [BUGGY]  if(entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getCpioArchiveEntry();  }  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getCpioArchiveEntry();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getCpioArchiveEntry();  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    CpioArchiveEntry    entry    =    getCpioArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
99	[BUG]  [BUGGY]  if(entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getCpioArchiveEntry();  }  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getCpioArchiveEntry();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getCpioArchiveEntry();  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    CpioArchiveEntry    entry    =    getCpioArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
100	[BUG]  [BUGGY]  if(entry  ==  null)  {  if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getCpi  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(entry  ==  null)  {  if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getCpi  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(entry  ==  null)  {  if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getCpi	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    CpioArchiveEntry    entry    =    getCpioArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
101	[BUG]  [BUGGY]  if(this.closed)  {  if(getNextCPIOEntry()  ==  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.closed)  {  if(getNextCPIOEntry()  ==  null)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.closed)  {  if(getNextCPIOEntry()  ==  null)  {  ensureOpen();  }	  if(this.closed)    {    if(getNextCPIOEntry()!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
102	[BUG]  [BUGGY]  if(!this.closed)  {  if(getNextCPIOEntry()!=  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(!this.closed)  {  if(getNextCPIOEntry()!=  null)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(!this.closed)  {  if(getNextCPIOEntry()!=  null)  {  ensureOpen();  }	  if(this.closed)    {    if(getNextCPIOEntry()!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
103	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize)  {  if(getNextCPIOEntry()!=  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize)  {  if(getNextCPIOEntry()!=  null)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.blockSize)  {  if(getNextCPIOEntry()!=  null)  {  ensureOpen();  }	  if(this.closed)    {    if(getNextCPIOEntry()!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
104	[BUG]  [BUGGY]  this.closed  =  true;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.closed  =  true;  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.closed  =  true;	  if(!this.closed)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
105	[BUG]  [BUGGY]  readFully(TYPE_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TYPE_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TYPE_BYTES_BUF,  0,  TWO_BYTES_BUF.length);	  readFully(TWO_BYTES_BUF,    0,    TYPE_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
106	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.tmpbuf.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.tmpbuf.length);	  readFully(TWO_BYTES_BUF,    0,    TYPE_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
107	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  1,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  1,  TWO_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  1,  TWO_BYTES_BUF.length);	  readFully(FOUR_BYTES_BUF,    1,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
108	[BUG]  [BUGGY]  readFully(this.blockSize,  1,  FOUR_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.blockSize,  1,  FOUR_BYTES_BUF);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.blockSize,  1,  FOUR_BYTES_BUF);	  readFully(FOUR_BYTES_BUF,    1,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
109	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  1,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BYTES_BUF,  1,  this.blockSize);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BYTES_BUF,  1,  this.blockSize);	  readFully(FOUR_BYTES_BUF,    1,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
110	[BUG]  [BUGGY]  this.entryEOF  =  createNextCPIOEntryEOF(tmpbuf);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  createNextCPIOEntryEOF(tmpbuf);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  createNextCPIOEntryEOF(tmpbuf);	  this.entryEOF    =    createNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
111	[BUG]  [BUGGY]  this.entryEOF  =  createNextCPIOEntryEOF(false);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  createNextCPIOEntryEOF(false);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  createNextCPIOEntryEOF(false);	  this.entryEOF    =    createNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
112	[BUG]  [BUGGY]  this.entryEOF  =  createNextCIOEntryEOF();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  createNextCIOEntryEOF();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  createNextCIOEntryEOF();	  this.entryEOF    =    createNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
113	[BUG]  [BUGGY]  this.entryEOF  =  createNextCPIOEntryEOF(true);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  createNextCPIOEntryEOF(true);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  createNextCPIOEntryEOF(true);	  this.entryEOF    =    createNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
114	[BUG]  [BUGGY]  this.entryEOF  =  createNextCPIOEntryEOF(null);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  createNextCPIOEntryEOF(null);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  createNextCPIOEntryEOF(null);	  this.entryEOF    =    createNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
115	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1)  {  ensureOpen();  }	  readFully(TWO_BYTES_BUF,    0,    this.blockSize    -    1)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
116	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize  -  2)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize  -  2)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.blockSize  -  2)  {  ensureOpen();  }	  readFully(TWO_BYTES_BUF,    0,    this.blockSize    -    1)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
117	[BUG]  [BUGGY]  readFully(this.blockSize,  0,  this.blockSize  -  1)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.blockSize,  0,  this.blockSize  -  1)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.blockSize,  0,  this.blockSize  -  1)  {  ensureOpen();  }	  readFully(TWO_BYTES_BUF,    0,    this.blockSize    -    1)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
118	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  getNextCPIOEntry().length  -  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  getNextCPIOEntry().length  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  getNextCPIOEntry().length  -  1);	  readFully(TWO_BYTES_BUF,    0,    getNextCPIOEntry().length);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
119	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  getNextCPIOEntry().length  +  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  getNextCPIOEntry().length  +  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  getNextCPIOEntry().length  +  1);	  readFully(TWO_BYTES_BUF,    0,    getNextCPIOEntry().length);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
120	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  1);	  readFully(TWO_BYTES_BUF,    0,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
121	[BUG]  [BUGGY]  readFully(this.blockSize,  0,  this.blockSize  +  1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.blockSize,  0,  this.blockSize  +  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.blockSize,  0,  this.blockSize  +  1);	  readFully(this.blockSize,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
122	[BUG]  [BUGGY]  readFully(this.blockSize,  0,  this.blockSize  -  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.blockSize,  0,  this.blockSize  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.blockSize,  0,  this.blockSize  -  1);	  readFully(this.blockSize,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
123	[BUG]  [BUGGY]  readFully(this.entry,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.entry,  0,  this.blockSize);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.entry,  0,  this.blockSize);	  readFully(this.blockSize,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
124	[BUG]  [BUGGY]  ReadFully(this.blockSize,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(this.blockSize,  0,  this.blockSize);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(this.blockSize,  0,  this.blockSize);	  readFully(this.blockSize,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
125	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.getNextCPIOEntry();  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.getNextCPIOEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =(CpioArchiveEntry)this.getNextCPIOEntry();	  this.entry    =(CpioArchiveEntry)getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
126	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)getNextCPIOEntry(0);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =(CpioArchiveEntry)getNextCPIOEntry(0);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =(CpioArchiveEntry)getNextCPIOEntry(0);	  this.entry    =(CpioArchiveEntry)getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
127	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)getNextPIOEntry();  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =(CpioArchiveEntry)getNextPIOEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =(CpioArchiveEntry)getNextPIOEntry();	  this.entry    =(CpioArchiveEntry)getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
128	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)getNextCCIOEntry();  [CE]  illegal  start  of  type  [FE]                                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =(CpioArchiveEntry)getNextCCIOEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =(CpioArchiveEntry)getNextCCIOEntry();	  this.entry    =(CpioArchiveEntry)getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
129	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)getNextCHIOEntry();  [CE]  illegal  start  of  type  [FE]                                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =(CpioArchiveEntry)getNextCHIOEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =(CpioArchiveEntry)getNextCHIOEntry();	  this.entry    =(CpioArchiveEntry)getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
130	[BUG]  [BUGGY]  if(entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCpioEntry();  }  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCpioEntry();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCpioEntry();  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    CpioArchiveEntry    entry    =    getNextCpioEntry();    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
131	[BUG]  [BUGGY]  if(entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCpioEntry();  }  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCpioEntry();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCpioEntry();  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    CpioArchiveEntry    entry    =    getNextCpioEntry();    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
132	[BUG]  [BUGGY]  if(entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCpioEntry();  }  [CE]  illegal  start  of  type  [FE]                                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCpioEntry();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCpioEntry();  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    CpioArchiveEntry    entry    =    getNextCpioEntry();    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
133	[BUG]  [BUGGY]  if(entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCpioEntry();  }  [CE]  illegal  start  of  type  [FE]                                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCpioEntry();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCpioEntry();  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    CpioArchiveEntry    entry    =    getNextCpioEntry();    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
134	[BUG]  [BUGGY]  if(entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCpioEntry();  }  [CE]  illegal  start  of  type  [FE]                                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCpioEntry();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCpioEntry();  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    CpioArchiveEntry    entry    =    getNextCpioEntry();    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
135	[BUG]  [BUGGY]  ReadFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);	  ReadFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
136	[BUG]  [BUGGY]  ReadFully(TWO_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(TWO_BYTES_BUF,  0,  this.entry.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(TWO_BYTES_BUF,  0,  this.entry.length);	  ReadFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
137	[BUG]  [BUGGY]  ReadFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);	  ReadFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
138	[BUG]  [BUGGY]  ReadFully(this.entry,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(this.entry,  0,  TWO_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(this.entry,  0,  TWO_BYTES_BUF.length);	  ReadFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
139	[BUG]  [BUGGY]  ReadFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  +  1);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  +  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  +  1);	  ReadFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
140	[BUG]  [BUGGY]  this.entry  =  readFully(TOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(TOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(TOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);	  this.entry    =    readFully(TOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
141	[BUG]  [BUGGY]  this.entry  =  readFully(TOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(TOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(TOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);	  this.entry    =    readFully(TOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
142	[BUG]  [BUGGY]  this.entry  =  readFully(TOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(TOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(TOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);	  this.entry    =    readFully(TOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
143	[BUG]  [BUGGY]  this.entry  =  readFully(TOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  +  1);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(TOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  +  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(TOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  +  1);	  this.entry    =    readFully(TOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
144	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  4);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  4);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  4);	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length    -    2);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
145	[BUG]  [BUGGY]  if(this.blockSize!=  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  1,  this.blockSize);  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.blockSize!=  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  1,  this.blockSize);  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.blockSize!=  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  1,  this.blockSize);  }	  if(this.blockSize    ==    0)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    1,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
146	[BUG]  [BUGGY]  ReadFully(TWO_BYTES_BUF,  1,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(TWO_BYTES_BUF,  1,  this.blockSize);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(TWO_BYTES_BUF,  1,  this.blockSize);	  if(this.blockSize    ==    0)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    1,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
147	[BUG]  [BUGGY]  this.entry  =  getNextCpioEntry();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  getNextCpioEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  getNextCpioEntry();	  this.entry    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
148	[BUG]  [BUGGY]  this.entry  =  getNextArchiveEntry();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  getNextArchiveEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  getNextArchiveEntry();	  this.entry    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
149	[BUG]  [BUGGY]  this.entry  =  getNextCPIOEntry(null);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  getNextCPIOEntry(null);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  getNextCPIOEntry(null);	  this.entry    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
150	[BUG]  [BUGGY]  this.entry  =  getNextPIOEntry();  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  getNextPIOEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  getNextPIOEntry();	  this.entry    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
151	[BUG]  [BUGGY]  this.entry  =  getNextCPIOEntry(true);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  getNextCPIOEntry(true);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  getNextCPIOEntry(true);	  this.entry    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
152	[BUG]  [BUGGY]  if(!this.enabled)  {  if(getNextCPIOEntry()  ==  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(!this.enabled)  {  if(getNextCPIOEntry()  ==  null)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(!this.enabled)  {  if(getNextCPIOEntry()  ==  null)  {  ensureOpen();  }	  if(this.enabled)    {    if(getNextCPIOEntry()    ==    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
153	[BUG]  [BUGGY]  readFully(this.entryEOF,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.entryEOF,  0,  this.blockSize);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.entryEOF,  0,  this.blockSize);	  readFully(this.blockSize,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
154	[BUG]  [BUGGY]  readFully(this.blockSize,  0,  this.bytesRead);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.blockSize,  0,  this.bytesRead);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.blockSize,  0,  this.bytesRead);	  readFully(this.blockSize,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
155	[BUG]  [BUGGY]  null  {  if(this.blockSize!=  0)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  null  {  if(this.blockSize!=  0)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	null  {  if(this.blockSize!=  0)  {  ensureOpen();  }	  null    {    if(this.blockSize    ==    0)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
156	[BUG]  [BUGGY]  readFully(SIX_BYTES_BUF,  0,  this.blockSize);  return  this;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(SIX_BYTES_BUF,  0,  this.blockSize);  return  this;  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(SIX_BYTES_BUF,  0,  this.blockSize);  return  this;	  readFully(SIX_BYTES_BUF,    0,    this.blockSize);    return    null;    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
157	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  return  this;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  return  this;  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  return  this;	  readFully(SIX_BYTES_BUF,    0,    this.blockSize);    return    null;    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
158	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize  -  1);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.blockSize  -  1);	  readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
159	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize  +  1);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize  +  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.blockSize  +  1);	  readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
160	[BUG]  [BUGGY]  readFully(this.blockSize,  0,  FOUR_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.blockSize,  0,  FOUR_BYTES_BUF);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.blockSize,  0,  FOUR_BYTES_BUF);	  readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
161	[BUG]  [BUGGY]  ReadFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);	  ReadFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
162	[BUG]  [BUGGY]  ReadFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);	  ReadFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
163	[BUG]  [BUGGY]  ReadFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length);	  ReadFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
164	[BUG]  [BUGGY]  ReadFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);	  ReadFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
165	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.blockSize);  return  this;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.blockSize);  return  this;  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BYTES_BUF,  0,  this.blockSize);  return  this;	  readFully(THIS_BYTES_BUF,    0,    this.blockSize);    return    null;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
166	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.blockSize  -  1);  return  null;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.blockSize  -  1);  return  null;  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BYTES_BUF,  0,  this.blockSize  -  1);  return  null;	  readFully(THIS_BYTES_BUF,    0,    this.blockSize);    return    null;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
167	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entry.length  -  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entry.length  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entry.length  -  1);	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
168	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entry.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.entry.length);	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
169	[BUG]  [BUGGY]  readFully(this.entry,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.entry,  0,  TWO_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.entry,  0,  TWO_BYTES_BUF.length);	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
170	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entry.length  +  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entry.length  +  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entry.length  +  1);	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
171	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entry.length  -  2);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entry.length  -  2);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entry.length  -  2);	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
172	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length));  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length));  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length));	  readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length));    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
173	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length));  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length));  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length));	  readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length));    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
174	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1));  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1));  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1));	  readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length));    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
175	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  1));  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  1));  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  1));	  readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length));    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
176	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  return  this;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  return  this;  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.blockSize);  return  this;	  readFully(TWO_BYTES_BUF,    0,    this.blockSize);    return    null;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
177	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize  -  1);  return  null;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize  -  1);  return  null;  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.blockSize  -  1);  return  null;	  readFully(TWO_BYTES_BUF,    0,    this.blockSize);    return    null;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
178	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  return  null;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  return  null;  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  return  null;	  readFully(TWO_BYTES_BUF,    0,    this.blockSize);    return    null;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
179	[BUG]  [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  1);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  1);	  this.entryEOF    =    readFully(FOUR_BYTES_BUF,    0,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
180	[BUG]  [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  2);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  2);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  2);	  this.entryEOF    =    readFully(FOUR_BYTES_BUF,    0,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
181	[BUG]  [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  +  1);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  +  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  +  1);	  this.entryEOF    =    readFully(FOUR_BYTES_BUF,    0,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
182	[BUG]  [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  4);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  4);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  4);	  this.entryEOF    =    readFully(FOUR_BYTES_BUF,    0,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
183	[BUG]  [BUGGY]  readFully(THIS_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BUF,  0,  TWO_BYTES_BUF.length  -  1);	  readFully(THIS_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
184	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);	  readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length    -    1);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
185	[BUG]  [BUGGY]  this.entryEOF  =  getNextCpioEntry();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCpioEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCpioEntry();	  this.entryEOF    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
186	[BUG]  [BUGGY]  this.entryEOF  =  getNextCIOEntry();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCIOEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCIOEntry();	  this.entryEOF    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
187	[BUG]  [BUGGY]  this.entryEOF  =  getNextCPIOEntry(null);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCPIOEntry(null);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCPIOEntry(null);	  this.entryEOF    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
188	[BUG]  [BUGGY]  this.entryEOF  =  getNextArchiveEntry();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextArchiveEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextArchiveEntry();	  this.entryEOF    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
189	[BUG]  [BUGGY]  reader.readFully(TWO_BYTES_BUF,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  reader.readFully(TWO_BYTES_BUF,  0,  this.blockSize);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	reader.readFully(TWO_BYTES_BUF,  0,  this.blockSize);	  readFully(TWO_BYTES_BUF,    0,    this.blockSize);    readFully(TWO_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
190	[BUG]  [BUGGY]  this.entryEOF  =  readFully(TWO_BYTES_BUF,  0,  getNextCPIOEntryEOF());  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  readFully(TWO_BYTES_BUF,  0,  getNextCPIOEntryEOF());  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  readFully(TWO_BYTES_BUF,  0,  getNextCPIOEntryEOF());	  this.entryEOF    =    readFully(FOUR_BYTES_BUF,    0,    getNextCPIOEntryEOF());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
191	[BUG]  [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  getNextCPIOEntryEOF(),  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  getNextCPIOEntryEOF(),  TWO_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  getNextCPIOEntryEOF(),  TWO_BYTES_BUF.length);	  this.entryEOF    =    readFully(FOUR_BYTES_BUF,    0,    getNextCPIOEntryEOF());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
192	[BUG]  [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  getNextCPIOEntryEOF(),  MAX_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  getNextCPIOEntryEOF(),  MAX_BYTES_BUF);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  getNextCPIOEntryEOF(),  MAX_BYTES_BUF);	  this.entryEOF    =    readFully(FOUR_BYTES_BUF,    0,    getNextCPIOEntryEOF());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
193	[BUG]  [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  getNextCPIOEntryEOF(),  MISSING_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  getNextCPIOEntryEOF(),  MISSING_BYTES_BUF);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  getNextCPIOEntryEOF(),  MISSING_BYTES_BUF);	  this.entryEOF    =    readFully(FOUR_BYTES_BUF,    0,    getNextCPIOEntryEOF());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
194	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize  -  1);  return  null;  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize  -  1);  return  null;  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.blockSize  -  1);  return  null;	  readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    return    null;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
195	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize  -  1)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize  -  1)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.blockSize  -  1)  {  ensureOpen();  }	  readFully(FOUR_BYTES_BUF,    0,    this.blockSize)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
196	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize  +  1)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize  +  1)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.blockSize  +  1)  {  ensureOpen();  }	  readFully(FOUR_BYTES_BUF,    0,    this.blockSize)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
197	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length)  {  ensureOpen();  }	  readFully(FOUR_BYTES_BUF,    0,    this.blockSize)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
198	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entrySize);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entrySize);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entrySize);	  readFully(TWO_BYTES_BUF,    0,    blockSize);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
199	[BUG]  [BUGGY]  if(entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCPIOEntry();  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCPIOEntry();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCPIOEntry();  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    CpioArchiveEntry    entry    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
200	[BUG]  [BUGGY]  if(entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCPIOEntry();  }  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCPIOEntry();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCPIOEntry();  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    CpioArchiveEntry    entry    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
201	[BUG]  [BUGGY]  if(entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCPIOEntry();  }  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCPIOEntry();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCPIOEntry();  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    CpioArchiveEntry    entry    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
202	[BUG]  [BUGGY]  if(entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCPIOEntry();  }  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCPIOEntry();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCPIOEntry();  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    CpioArchiveEntry    entry    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
203	[BUG]  [BUGGY]  if(entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCPIOEntry();  }  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCPIOEntry();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCPIOEntry();  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    CpioArchiveEntry    entry    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
204	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.blockSize  -  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.blockSize  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BYTES_BUF,  0,  this.blockSize  -  1);	  readFully(THIS_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
205	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.blockSize  +  1);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.blockSize  +  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BYTES_BUF,  0,  this.blockSize  +  1);	  readFully(THIS_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
206	[BUG]  [BUGGY]  readFully(this.entryEOF,  0,  FOUR_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.entryEOF,  0,  FOUR_BYTES_BUF);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.entryEOF,  0,  FOUR_BYTES_BUF);	  readFully(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
207	[BUG]  [BUGGY]  readFully(this.blockSize,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.blockSize,  0,  TWO_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.blockSize,  0,  TWO_BYTES_BUF.length);	  if(closed)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
208	[BUG]  [BUGGY]  ReadFully(FOUR_BYTES_BUF,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(FOUR_BYTES_BUF,  0,  this.blockSize);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(FOUR_BYTES_BUF,  0,  this.blockSize);	  if(this.blockSize    >    0)    {    ensureOpen();    }    else    {    readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
209	[BUG]  [BUGGY]  this.entryEOF  =  getNextCEntryEOF();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCEntryEOF();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCEntryEOF();	  this.entryEOF    =    getNextCIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
210	[BUG]  [BUGGY]  this.entryEOF  =  getNextCIO();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCIO();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCIO();	  this.entryEOF    =    getNextCIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
211	[BUG]  [BUGGY]  this.entryEOF  =  getNextECIOntryEOF();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextECIOntryEOF();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextECIOntryEOF();	  this.entryEOF    =    getNextCIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
212	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.length  -  1);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.length  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.length  -  1);	  readFully(FOUR_BYTES_BUF,    0,    this.length);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
213	[BUG]  [BUGGY]  readFully(this.entry,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.entry,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.entry,  0,  FOUR_BYTES_BUF.length);	  readFully(FOUR_BYTES_BUF,    0,    this.length);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
214	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.length  +  1);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.length  +  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.length  +  1);	  readFully(FOUR_BYTES_BUF,    0,    this.length);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
215	[BUG]  [BUGGY]  if(in!=  null)  {  if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  in.close();  }  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(in!=  null)  {  if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  in.close();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(in!=  null)  {  if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  in.close();  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    in.close();    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
216	[BUG]  [BUGGY]  if(in!=  null)  {  if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(in!=  null)  {  if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(in!=  null)  {  if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    in.close();    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
217	[BUG]  [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    in.close();    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
218	[BUG]  [BUGGY]  if(in!=  null)  {  if(this.entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  in.close();  }  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(in!=  null)  {  if(this.entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  in.close();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(in!=  null)  {  if(this.entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  in.close();  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    in.close();    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
219	[BUG]  [BUGGY]  this.entryEOF  =  getNextECpioEntryEOF();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextECpioEntryEOF();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextECpioEntryEOF();	  this.entryEOF    =    getNextCpioEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
220	[BUG]  [BUGGY]  this.entryEOF  =  getNextCpioArchiveEntryEOF();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCpioArchiveEntryEOF();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCpioArchiveEntryEOF();	  this.entryEOF    =    getNextCpioEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
221	[BUG]  [BUGGY]  this.entryEOF  =  getNextChioEntryEOF();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextChioEntryEOF();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextChioEntryEOF();	  this.entryEOF    =    getNextCpioEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
222	[BUG]  [BUGGY]  this.entryEOF  =  getNextPioEntryEOF();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextPioEntryEOF();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextPioEntryEOF();	  this.entryEOF    =    getNextCpioEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
223	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.closed)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.closed)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.closed)  {  ensureOpen();  }	  if(this.closed)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
224	[BUG]  [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(FOUR_BYTES_BUF,  0,  BYTES_BUF.length);	  this.entry    =    readFully(TOUR_BYTES_BUF,    0,    BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
225	[BUG]  [BUGGY]  this.entry  =  readFully(TOUR_BYTES_BUF,  0,  BYTES_BUF.length  -  1);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(TOUR_BYTES_BUF,  0,  BYTES_BUF.length  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(TOUR_BYTES_BUF,  0,  BYTES_BUF.length  -  1);	  this.entry    =    readFully(TOUR_BYTES_BUF,    0,    BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
226	[BUG]  [BUGGY]  this.entry  =  readFully(TOUR_BYTES_BUF,  0,  BYTES_BUF.length  -  2);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(TOUR_BYTES_BUF,  0,  BYTES_BUF.length  -  2);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(TOUR_BYTES_BUF,  0,  BYTES_BUF.length  -  2);	  this.entry    =    readFully(TOUR_BYTES_BUF,    0,    BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
227	[BUG]  [BUGGY]  InputStream  in  =  this.getInputStream();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  InputStream  in  =  this.getInputStream();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	InputStream  in  =  this.getInputStream();	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
228	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(),  magicString);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  InputStream  in  =  getInputStream(),  magicString);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	InputStream  in  =  getInputStream(),  magicString);	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
229	[BUG]  [BUGGY]  InputStream  in  =  getInputStream( "UTF-8 ");  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  InputStream  in  =  getInputStream( "UTF-8 ");  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	InputStream  in  =  getInputStream( "UTF-8 ");	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
230	[BUG]  [BUGGY]  InputStream  in  =  getNextCPIOEntry();  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  InputStream  in  =  getNextCPIOEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	InputStream  in  =  getNextCPIOEntry();	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
231	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(),  MAX_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  InputStream  in  =  getInputStream(),  MAX_BYTES_BUF);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	InputStream  in  =  getInputStream(),  MAX_BYTES_BUF);	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
232	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(  magicString);  [CE]  illegal  start  of  type  [FE]                                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  InputStream  in  =  getInputStream(  magicString);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	InputStream  in  =  getInputStream(  magicString);	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
233	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  -  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  -  1);	  readFully(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
234	[BUG]  [BUGGY]  readFully(this.entryBytesRead,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.entryBytesRead,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.entryBytesRead,  0,  FOUR_BYTES_BUF.length);	  readFully(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
235	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  -  2);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  -  2);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  -  2);	  readFully(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
236	[BUG]  [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
237	[BUG]  [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(TWO_BYTES_BUF,  0,  this.blockSize);	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
238	[BUG]  [BUGGY]  if(this.blockSize!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.blockSize!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.blockSize!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
239	[BUG]  [BUGGY]  This.entry  =  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  This.entry  =  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	This.entry  =  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
240	[BUG]  [BUGGY]  this.blockSize  =  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.blockSize  =  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.blockSize  =  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
241	[BUG]  [BUGGY]  this.entryEOF  =  getNextCHIOEntry();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCHIOEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCHIOEntry();	  this.entryEOF    =    getNextPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
242	[BUG]  [BUGGY]  this.entryEOF  =  getNextPIOEntry();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextPIOEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextPIOEntry();	  this.entryEOF    =    getNextPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
243	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);	  readFully(THIS_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
244	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);	  readFully(THIS_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
245	[BUG]  [BUGGY]  if(this.key  ==  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.key  ==  null)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.key  ==  null)  {  ensureOpen();  }	  if(this.key!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
246	[BUG]  [BUGGY]  if(this.key!=  null  ||  this.key.length  ==  0)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.key!=  null  ||  this.key.length  ==  0)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.key!=  null  ||  this.key.length  ==  0)  {  ensureOpen();  }	  if(this.key!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
247	[BUG]  [BUGGY]  if(this.key!=  null  ||  this.key.length  <  0)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.key!=  null  ||  this.key.length  <  0)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.key!=  null  ||  this.key.length  <  0)  {  ensureOpen();  }	  if(this.key!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
248	[BUG]  [BUGGY]  if(this.key!=  null  ||  this.key.length()  ==  0)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.key!=  null  ||  this.key.length()  ==  0)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.key!=  null  ||  this.key.length()  ==  0)  {  ensureOpen();  }	  if(this.key!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
249	[BUG]  [BUGGY]  if(this.key  ==  null  ||  this.key.length!=  0)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.key  ==  null  ||  this.key.length!=  0)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.key  ==  null  ||  this.key.length!=  0)  {  ensureOpen();  }	  if(this.key!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
250	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  /  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  /  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  /  1);	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
251	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  +  2);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  +  2);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  +  2);	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
252	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  1,  this.blockSize);  return  null;  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  1,  this.blockSize);  return  null;  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  1,  this.blockSize);  return  null;	  readFully(FOUR_BYTES_BUF,    1,    this.blockSize);    return    null;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
253	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  1,  TWO_BYTES_BUF.length);  return  null;  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  1,  TWO_BYTES_BUF.length);  return  null;  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  1,  TWO_BYTES_BUF.length);  return  null;	  readFully(FOUR_BYTES_BUF,    1,    this.blockSize);    return    null;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
254	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  1,  this.blockSize);  return  this;  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  1,  this.blockSize);  return  this;  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  1,  this.blockSize);  return  this;	  readFully(FOUR_BYTES_BUF,    1,    this.blockSize);    return    null;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
255	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryEOF.length  -  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryEOF.length  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entryEOF.length  -  1);	  readFully(TWO_BYTES_BUF,    0,    this.entryEOF.length);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
256	[BUG]  [BUGGY]  readFully(this.entryEOF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.entryEOF,  0,  TWO_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.entryEOF,  0,  TWO_BYTES_BUF.length);	  readFully(TWO_BYTES_BUF,    0,    this.entryEOF.length);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
257	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryEOF.length  +  1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryEOF.length  +  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entryEOF.length  +  1);	  readFully(TWO_BYTES_BUF,    0,    this.entryEOF.length);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
258	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryEOF.length  -  2);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryEOF.length  -  2);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entryEOF.length  -  2);	  readFully(TWO_BYTES_BUF,    0,    this.entryEOF.length);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
259	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.getNextCPIOEntry());  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.getNextCPIOEntry());  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.getNextCPIOEntry());	  if(this.getNextCPIOEntry()    ==    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
260	[BUG]  [BUGGY]  this.entryEOF  =  getNextCPIOEntry(true);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCPIOEntry(true);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCPIOEntry(true);	  this.entryEOF    =    getNextCPIOEntry(false);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
261	[BUG]  [BUGGY]  this.entryEOF  =  getNextCPIOEntry(false,  true);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCPIOEntry(false,  true);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCPIOEntry(false,  true);	  this.entryEOF    =    getNextCPIOEntry(false);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
262	[BUG]  [BUGGY]  this.entryEOF  =  readOldBinaryEntry(true);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  readOldBinaryEntry(true);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  readOldBinaryEntry(true);	  this.entryEOF    =    getNextCPIOEntry(false);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
263	[BUG]  [BUGGY]  this.entryEOF  =  getNextCPIOEntry(false,  false);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCPIOEntry(false,  false);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCPIOEntry(false,  false);	  this.entryEOF    =    getNextCPIOEntry(false);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
264	[BUG]  [BUGGY]  this.entryEOF  =  getNextCPIOEntry(false,  0);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCPIOEntry(false,  0);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCPIOEntry(false,  0);	  this.entryEOF    =    getNextCPIOEntry(false);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
265	[BUG]  [BUGGY]  readFully(this.entryBytesRead,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.entryBytesRead,  0,  this.blockSize);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.entryBytesRead,  0,  this.blockSize);	  readFully(this.blockSize,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
266	[BUG]  [BUGGY]  readFully(this.blockSize,  0,  this.entryBytesRead);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.blockSize,  0,  this.entryBytesRead);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.blockSize,  0,  this.entryBytesRead);	  readFully(this.blockSize,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
267	[BUG]  [BUGGY]  readFully(this.entryEOF,  0,  this.entryBytesRead.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.entryEOF,  0,  this.entryBytesRead.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.entryEOF,  0,  this.entryBytesRead.length);	  readFully(TWO_BYTES_BUF,    0,    this.entryEOF.length);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
268	[BUG]  [BUGGY]  this.entryEOF  =  getNextCpioArchiveEntry();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCpioArchiveEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCpioArchiveEntry();	  this.entryEOF    =    getNextCpioEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
269	[BUG]  [BUGGY]  readFully(TYPE_BYTES_BUF,  0,  this.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TYPE_BYTES_BUF,  0,  this.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TYPE_BYTES_BUF,  0,  this.length);	  readFully(TWO_BYTES_BUF,    0,    TYPE_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
270	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  TYPE_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  TYPE_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  TYPE_BYTES_BUF.length);	  readFully(TWO_BYTES_BUF,    0,    TYPE_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
271	[BUG]  [BUGGY]  readFully(this.length,  0,  this.entryEOF);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.length,  0,  this.entryEOF);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.length,  0,  this.entryEOF);	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    0,    this.length);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
272	[BUG]  [BUGGY]  readFully(this.blockSize,  0,  this.sIX_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.blockSize,  0,  this.sIX_BYTES_BUF);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.blockSize,  0,  this.sIX_BYTES_BUF);	  readFully(SIX_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
273	[BUG]  [BUGGY]  readFully(SIX_BYTES_BUF,  0,  this.blockSize  +  1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(SIX_BYTES_BUF,  0,  this.blockSize  +  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(SIX_BYTES_BUF,  0,  this.blockSize  +  1);	  readFully(SIX_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
274	[BUG]  [BUGGY]  if(this.blockSize!=  0)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.blockSize!=  0)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.blockSize!=  0)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
275	[BUG]  [BUGGY]  This.blockSize  =  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  This.blockSize  =  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	This.blockSize  =  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
276	[BUG]  [BUGGY]  if(entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  entry.length);  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  entry.length);  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  entry.length);  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    CpioArchiveEntry    entry    =    getCpioArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
277	[BUG]  [BUGGY]  if(entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  entry.length);  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  entry.length);  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  entry.length);  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    CpioArchiveEntry    entry    =    getCpioArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
278	[BUG]  [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);	  this.entryEOF    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
279	[BUG]  [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TOUR_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(TWO_BYTES_BUF,  0,  TOUR_BYTES_BUF.length);	  this.entry    =    readFully(TOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
280	[BUG]  [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);	  this.entry    =    readFully(TOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
281	[BUG]  [BUGGY]  this.entryEOF  =  createNextCPIOEntry();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  createNextCPIOEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  createNextCPIOEntry();	  this.entryEOF    =    createNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
282	[BUG]  [BUGGY]  this.entryEOF  =  createNextCPIOEntry(false);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  createNextCPIOEntry(false);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  createNextCPIOEntry(false);	  this.entryEOF    =    createNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
283	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  getNextCPIOEntry().length);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  getNextCPIOEntry().length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  getNextCPIOEntry().length);	  readFully(TWO_BYTES_BUF,    0,    getNextCPIOEntry().length);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
284	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.nextCPIOEntry().length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.nextCPIOEntry().length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.nextCPIOEntry().length);	  readFully(TWO_BYTES_BUF,    0,    getNextCPIOEntry().length);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
285	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  getNextCPIOEntry().length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BYTES_BUF,  0,  getNextCPIOEntry().length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BYTES_BUF,  0,  getNextCPIOEntry().length);	  readFully(TWO_BYTES_BUF,    0,    getNextCPIOEntry().length);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
286	[BUG]  [BUGGY]  Null  {  if(this.blockSize  ==  0)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  Null  {  if(this.blockSize  ==  0)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	Null  {  if(this.blockSize  ==  0)  {  ensureOpen();  }	  null    {    if(this.blockSize    ==    0)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
287	[BUG]  [BUGGY]  null  ==  if(this.blockSize  ==  0)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  null  ==  if(this.blockSize  ==  0)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	null  ==  if(this.blockSize  ==  0)  {  ensureOpen();  }	  null    {    if(this.blockSize    ==    0)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
288	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BYTES_BUF,  0,  BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BYTES_BUF,  0,  BYTES_BUF.length);	  readFully(TWO_BYTES_BUF,    0,    BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
289	[BUG]  [BUGGY]  readFully(THIS_BUF,  0,  BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BUF,  0,  BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BUF,  0,  BYTES_BUF.length);	  readFully(TWO_BYTES_BUF,    0,    BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
290	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  +  3);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  +  3);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  +  3);	  readFully(FOUR_BYTES_BUF,    0,    FOUR_BYTES_BUF.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
291	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.blockSize  -  2);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.blockSize  -  2);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BYTES_BUF,  0,  this.blockSize  -  2);	  readFully(THIS_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
292	[BUG]  [BUGGY]  this.in  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.in  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.in  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    in.close();    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
293	[BUG]  [BUGGY]  if(in!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  in.close();  }  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(in!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  in.close();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(in!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  in.close();  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    in.close();    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
294	[BUG]  [BUGGY]  if(in!=  null)  {  if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(in!=  null)  {  if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(in!=  null)  {  if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    in.close();    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
295	[BUG]  [BUGGY]  ReadFully(this.block,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(this.block,  0,  this.blockSize);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(this.block,  0,  this.blockSize);	  ReadFully(TWO_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
296	[BUG]  [BUGGY]  if(this.getNextCIOEntry()  ==  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.getNextCIOEntry()  ==  null)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.getNextCIOEntry()  ==  null)  {  ensureOpen();  }	  if(this.getNextCPIOEntry()    ==    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
297	[BUG]  [BUGGY]  readFully(this.block,  0,  FOUR_BYTES_BUF.length)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.block,  0,  FOUR_BYTES_BUF.length)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.block,  0,  FOUR_BYTES_BUF.length)  {  ensureOpen();  }	  readFully(FOUR_BYTES_BUF,    0,    this.blockSize)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
298	[BUG]  [BUGGY]  readFully(this.blockSize,  0,  FOUR_BYTES_BUF)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.blockSize,  0,  FOUR_BYTES_BUF)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.blockSize,  0,  FOUR_BYTES_BUF)  {  ensureOpen();  }	  readFully(FOUR_BYTES_BUF,    0,    this.blockSize)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
299	[BUG]  [BUGGY]  this.entry  =  readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length);	  this.entry    =    readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
300	[BUG]  [BUGGY]  readFully(this.entryBytesRead);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.entryBytesRead);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.entryBytesRead);	  readFully(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
301	[BUG]  [BUGGY]  readFully(this.entryBytesRead,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.entryBytesRead,  this.blockSize);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.entryBytesRead,  this.blockSize);	  readFully(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
302	[BUG]  [BUGGY]  readFully(this.blockSize,  0);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.blockSize,  0);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.blockSize,  0);	  readFully(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
303	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  blockSize);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  blockSize);	  readFully(TWO_BYTES_BUF,    0,    blockSize);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
304	[BUG]  [BUGGY]  if(this.nextCpioEntry  ==  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.nextCpioEntry  ==  null)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.nextCpioEntry  ==  null)  {  ensureOpen();  }	  if(this.nextCPIOEntry    ==    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
305	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  1,  this.blockSize  -  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  1,  this.blockSize  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  1,  this.blockSize  -  1);	  readFully(FOUR_BYTES_BUF,    1,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
306	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  1,  this.blockSize  +  1);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  1,  this.blockSize  +  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  1,  this.blockSize  +  1);	  readFully(FOUR_BYTES_BUF,    1,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
307	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  +  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  +  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length  +  1);	  readFully(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
308	[BUG]  [BUGGY]  if(this.blockSize  <  =  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize  +  1);  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.blockSize  <  =  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize  +  1);  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.blockSize  <  =  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize  +  1);  }	  if(this.blockSize    <    =    0)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
309	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.blockSize  -  1);  return  this;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.blockSize  -  1);  return  this;  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BYTES_BUF,  0,  this.blockSize  -  1);  return  this;	  readFully(THIS_BYTES_BUF,    0,    this.blockSize);    return    null;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
310	[BUG]  [BUGGY]  readFully(this.entry,  0,  this.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.entry,  0,  this.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.entry,  0,  this.length);	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
311	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.entry.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BYTES_BUF,  0,  this.entry.length);	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
312	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.entryBytesRead.length);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.entryBytesRead.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BYTES_BUF,  0,  this.entryBytesRead.length);	  readFully(TWO_BYTES_BUF,    0,    this.entryBytesRead.length);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
313	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryEOF.length  -  2);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryEOF.length  -  2);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.entryEOF.length  -  2);	  readFully(FOUR_BYTES_BUF,    0,    this.entryEOF.length);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
314	[BUG]  [BUGGY]  InputStream  in  =  getInputStream().openStream();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  InputStream  in  =  getInputStream().openStream();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	InputStream  in  =  getInputStream().openStream();	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
315	[BUG]  [BUGGY]  InputStream  in  =  getInputStream().readFully();  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  InputStream  in  =  getInputStream().readFully();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	InputStream  in  =  getInputStream().readFully();	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
316	[BUG]  [BUGGY]  this.entryEOF  =  super.getNextCPIOEntry();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  super.getNextCPIOEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  super.getNextCPIOEntry();	  this.entryEOF    =    super.getNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
317	[BUG]  [BUGGY]  this.entryEOF  =  super.getNextCPIOEntryEOF(tmpbuf);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  super.getNextCPIOEntryEOF(tmpbuf);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  super.getNextCPIOEntryEOF(tmpbuf);	  this.entryEOF    =    super.getNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
318	[BUG]  [BUGGY]  this.entryEOF  =  super.getNextCEEntryEOF();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  super.getNextCEEntryEOF();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  super.getNextCEEntryEOF();	  this.entryEOF    =    super.getNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
319	[BUG]  [BUGGY]  readFully(THIS_BUF,  0,  this.blockSize  -  2);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BUF,  0,  this.blockSize  -  2);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BUF,  0,  this.blockSize  -  2);	  readFully(THIS_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
320	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryCount);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryCount);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entryCount);	  readFully(TWO_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
321	[BUG]  [BUGGY]  readFully(THIS_BUF,  0,  this.entryBytesRead.length);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BUF,  0,  this.entryBytesRead.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BUF,  0,  this.entryBytesRead.length);	  readFully(THIS_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
322	[BUG]  [BUGGY]  readFully(THIS_BUF,  0,  this.length);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BUF,  0,  this.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BUF,  0,  this.length);	  readFully(THIS_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
323	[BUG]  [BUGGY]  readFully(THIS_BUF,  0,  TWO_BYTES_BUF.length  -  2);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BUF,  0,  TWO_BYTES_BUF.length  -  2);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BUF,  0,  TWO_BYTES_BUF.length  -  2);	  readFully(THIS_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
324	[BUG]  [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  false);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  false);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(FOUR_BYTES_BUF,  false);	  this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
325	[BUG]  [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(FOUR_BYTES_BUF);	  this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
326	[BUG]  [BUGGY]  this.entry  =  readFully(false);  [CE]  illegal  start  of  type  [FE]                                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(false);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(false);	  this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
327	[BUG]  [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  true);  [CE]  illegal  start  of  type  [FE]                                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  true);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(FOUR_BYTES_BUF,  true);	  this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
328	[BUG]  [BUGGY]  this.entry  =  readOldArchiveEntry(true);  [CE]  illegal  start  of  type  [FE]                                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readOldArchiveEntry(true);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readOldArchiveEntry(true);	  this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
329	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length));  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length));  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length));	  readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length));    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
330	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length));  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length));  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length));	  readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length));    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
331	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
332	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize  -  2);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize  -  2);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.blockSize  -  2);	  readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
333	[BUG]  [BUGGY]  if(this.blockSize  >  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  1,  this.blockSize);  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.blockSize  >  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  1,  this.blockSize);  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.blockSize  >  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  1,  this.blockSize);  }	  if(this.blockSize    ==    0)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    1,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
334	[BUG]  [BUGGY]  this.entryEOF  =  getNextCPIOEntryEOF(true,  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length));  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCPIOEntryEOF(true,  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length));  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCPIOEntryEOF(true,  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length));	  this.entryEOF    =    getNextCPIOEntryEOF(true);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
335	[BUG]  [BUGGY]  this.entryEOF  =  getNextCPIOEntryEOF(true,  readFully(FOUR_BYTES_BUF,  0,  BYTES_BUF.length));  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCPIOEntryEOF(true,  readFully(FOUR_BYTES_BUF,  0,  BYTES_BUF.length));  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCPIOEntryEOF(true,  readFully(FOUR_BYTES_BUF,  0,  BYTES_BUF.length));	  this.entryEOF    =    getNextCPIOEntryEOF(true);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
336	[BUG]  [BUGGY]  this.entryEOF  =  getNextCPIOEntryEOF(true,  readFully(FOUR_BYTES_BUF,  0,  tmpbuf.length));  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCPIOEntryEOF(true,  readFully(FOUR_BYTES_BUF,  0,  tmpbuf.length));  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCPIOEntryEOF(true,  readFully(FOUR_BYTES_BUF,  0,  tmpbuf.length));	  this.entryEOF    =    getNextCPIOEntryEOF(true);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
337	[BUG]  [BUGGY]  if(this.open)  {  if(getNextCPIOEntry()!=  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.open)  {  if(getNextCPIOEntry()!=  null)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.open)  {  if(getNextCPIOEntry()!=  null)  {  ensureOpen();  }	  if(this.closed)    {    if(getNextCPIOEntry()!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
338	[BUG]  [BUGGY]  this.entryEOF  =  getNextCCIOEntry();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCCIOEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCCIOEntry();	  this.entryEOF    =    getNextCIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
339	[BUG]  [BUGGY]  if(this.enabled)  {  if(getNextCIOEntry()!=  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.enabled)  {  if(getNextCIOEntry()!=  null)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.enabled)  {  if(getNextCIOEntry()!=  null)  {  ensureOpen();  }	  if(this.enabled)    {    if(getNextCPIOEntry()!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
340	[BUG]  [BUGGY]  this.entryEOF  =  getNextPIArchiveEntry();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextPIArchiveEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextPIArchiveEntry();	  this.entryEOF    =    getNextPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
341	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  getNextCPIOEntry();  }  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  getNextCPIOEntry();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  getNextCPIOEntry();  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    getNextCPIOEntry();    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
342	[BUG]  [BUGGY]  ReadFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);	  ReadFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
343	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  +  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  +  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  +  1);	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
344	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  +  1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  +  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  +  1);	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
345	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize))  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize))  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.blockSize))  {  ensureOpen();  }	  if(this.blockSize    <    =    0)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
346	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  3);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  3);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  3);	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length    -    2);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
347	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.length  -  2);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.length  -  2);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.length  -  2);	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length    -    2);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
348	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length));  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length));  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length));	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length));    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
349	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.length));  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.length));  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.length));	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length));    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
350	[BUG]  [BUGGY]  readFully(this.tmpbuf,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.tmpbuf,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.tmpbuf,  0,  FOUR_BYTES_BUF.length);	  readFully(FOUR_BYTES_BUF,    0,    this.length);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
351	[BUG]  [BUGGY]  ReadFully(this.entryBytesRead,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(this.entryBytesRead,  0,  TWO_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(this.entryBytesRead,  0,  TWO_BYTES_BUF.length);	  ReadFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
352	[BUG]  [BUGGY]  ReadFully(THIS_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(THIS_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(THIS_BUF,  0,  TWO_BYTES_BUF.length);	  ReadFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
353	[BUG]  [BUGGY]  ReadFully(this.nextCPIOEntry,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(this.nextCPIOEntry,  0,  TWO_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(this.nextCPIOEntry,  0,  TWO_BYTES_BUF.length);	  ReadFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
354	[BUG]  [BUGGY]  ReadFully(this.in,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(this.in,  0,  TWO_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(this.in,  0,  TWO_BYTES_BUF.length);	  ReadFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
355	[BUG]  [BUGGY]  readFully(this.entryBytesRead,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.entryBytesRead,  0,  blockSize);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.entryBytesRead,  0,  blockSize);	  readFully(this.blockSize,    0,    blockSize);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
356	[BUG]  [BUGGY]  readFully(this.block,  0,  this.blockSize)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.block,  0,  this.blockSize)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.block,  0,  this.blockSize)  {  ensureOpen();  }	  readFully(TWO_BYTES_BUF,    0,    this.blockSize)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
357	[BUG]  [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  BYTES_BUF.length  -  1);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  BYTES_BUF.length  -  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(FOUR_BYTES_BUF,  0,  BYTES_BUF.length  -  1);	  this.entry    =    readFully(TOUR_BYTES_BUF,    0,    BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
358	[BUG]  [BUGGY]  this.entry  =  readFully(THIS_BYTES_BUF,  0,  BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(THIS_BYTES_BUF,  0,  BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(THIS_BYTES_BUF,  0,  BYTES_BUF.length);	  this.entry    =    readFully(TOUR_BYTES_BUF,    0,    BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
359	[BUG]  [BUGGY]  readFully(this.entry,  0,  FOUR_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.entry,  0,  FOUR_BYTES_BUF);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.entry,  0,  FOUR_BYTES_BUF);	  readFully(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
360	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryBytesRead);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryBytesRead);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.entryBytesRead);	  readFully(FOUR_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
361	[BUG]  [BUGGY]  if(this.blockSize  >=  0)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.blockSize  >=  0)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.blockSize  >=  0)  {  ensureOpen();  }	  if(this.blockSize!=    0)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
362	[BUG]  [BUGGY]  readFully(this.blockSize,  0,  TWO_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.blockSize,  0,  TWO_BYTES_BUF);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.blockSize,  0,  TWO_BYTES_BUF);	  readFully(TWO_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
363	[BUG]  [BUGGY]  readFully(this.length,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.length,  0,  TWO_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.length,  0,  TWO_BYTES_BUF.length);	  readFully(TWO_BYTES_BUF,    0,    this.length);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
364	[BUG]  [BUGGY]  readFully(this.entryBytesRead,  0,  this.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.entryBytesRead,  0,  this.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.entryBytesRead,  0,  this.length);	  readFully(TWO_BYTES_BUF,    0,    this.length);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
365	[BUG]  [BUGGY]  this.entryEOF  =  readOldArchiveEntry(true);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  readOldArchiveEntry(true);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  readOldArchiveEntry(true);	  this.entryEOF    =    getNextCPIOEntry(false);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
366	[BUG]  [BUGGY]  this.entryEOF  =  getNextCPIOEntry(0);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCPIOEntry(0);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCPIOEntry(0);	  this.entryEOF    =    getNextCPIOEntry(false);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
367	[BUG]  [BUGGY]  this.entryEOF  =  getNextCpioEntry(true);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCpioEntry(true);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCpioEntry(true);	  this.entryEOF    =    getNextCPIOEntry(false);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
368	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.length  -  1)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.length  -  1)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.length  -  1)  {  ensureOpen();  }	  readFully(TWO_BYTES_BUF,    0,    this.blockSize    -    1)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
369	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)getNextCRIOEntry();  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =(CpioArchiveEntry)getNextCRIOEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =(CpioArchiveEntry)getNextCRIOEntry();	  this.entry    =(CpioArchiveEntry)getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
370	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)getNextBytesRead();  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =(CpioArchiveEntry)getNextBytesRead();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =(CpioArchiveEntry)getNextBytesRead();	  this.entry    =(CpioArchiveEntry)getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
371	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  1,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BYTES_BUF,  1,  TWO_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BYTES_BUF,  1,  TWO_BYTES_BUF.length);	  readFully(TWO_BYTES_BUF,    1,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
372	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);	  readFully(THIS_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
373	[BUG]  [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  this.getNextCPIOEntryEOF());  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  this.getNextCPIOEntryEOF());  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  this.getNextCPIOEntryEOF());	  this.entryEOF    =    readFully(FOUR_BYTES_BUF,    0,    getNextCPIOEntryEOF());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
374	[BUG]  [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  getNextCPIOEntry().length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  getNextCPIOEntry().length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  getNextCPIOEntry().length);	  this.entryEOF    =    readFully(FOUR_BYTES_BUF,    0,    getNextCPIOEntryEOF());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
375	[BUG]  [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  BYTES_BUF.length);	  this.entryEOF    =    readFully(FOUR_BYTES_BUF,    0,    getNextCPIOEntryEOF());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
376	[BUG]  [BUGGY]  readFully(this.block,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.block,  0,  this.blockSize);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.block,  0,  this.blockSize);	  readFully(SIX_BYTES_BUF,    0,    this.blockSize);    return    null;    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
377	[BUG]  [BUGGY]  ReadFully(this.block,  0,  this.blockSize);  return  null;  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(this.block,  0,  this.blockSize);  return  null;  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(this.block,  0,  this.blockSize);  return  null;	  ReadFully(FOUR_BYTES_BUF,    0,    this.blockSize);    return    null;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
378	[BUG]  [BUGGY]  this.entryEOF  =  super.getNextCEIOEntryEOF();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  super.getNextCEIOEntryEOF();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  super.getNextCEIOEntryEOF();	  this.entryEOF    =    super.getNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
379	[BUG]  [BUGGY]  this.entryEOF  =  super.getNextPIOEntryEOF();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  super.getNextPIOEntryEOF();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  super.getNextPIOEntryEOF();	  this.entryEOF    =    super.getNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
380	[BUG]  [BUGGY]  readFully(this.entry,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.entry,  0,  this.entry.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.entry,  0,  this.entry.length);	  readFully(TWO_BYTES_BUF,    0,    this.entry.length);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
381	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  getNextCPIOEntry();  }  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  getNextCPIOEntry();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  getNextCPIOEntry();  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    getNextCPIOEntry();    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
382	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  getNextCPIOEntry()  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  getNextCPIOEntry()  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  getNextCPIOEntry()	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    getNextCPIOEntry();    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
383	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  getNext  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  getNext  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  getNext	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    getNextCPIOEntry();    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
384	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead);	  readFully(TWO_BYTES_BUF,    0,    blockSize);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
385	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length  +  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length  +  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length  +  1);	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
386	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length  +  1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length  +  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length  +  1);	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
387	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.tmpbuf.length  +  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.tmpbuf.length  +  1);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.tmpbuf.length  +  1);	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
388	[BUG]  [BUGGY]  readFully(this.blockSize,  TWO_BYTES_BUF);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.blockSize,  TWO_BYTES_BUF);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.blockSize,  TWO_BYTES_BUF);	  readFully(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
389	[BUG]  [BUGGY]  readFully(this.blockSize,  this.entryBytesRead);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.blockSize,  this.entryBytesRead);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.blockSize,  this.entryBytesRead);	  readFully(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
390	[BUG]  [BUGGY]  readFully(this.blockSize,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.blockSize,  TWO_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.blockSize,  TWO_BYTES_BUF.length);	  readFully(this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
391	[BUG]  [BUGGY]  while(this.closed)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  while(this.closed)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	while(this.closed)  {  ensureOpen();  }	  if(closed)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
392	[BUG]  [BUGGY]  if(this.open)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.open)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.open)  {  ensureOpen();  }	  if(closed)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
393	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.length  -  3);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.length  -  3);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.length  -  3);	  readFully(FOUR_BYTES_BUF,    0,    FOUR_BYTES_BUF.length    -    3);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
394	[BUG]  [BUGGY]  if(this.enabled  ||  getNextCPIOEntry()!=  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.enabled  ||  getNextCPIOEntry()!=  null)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.enabled  ||  getNextCPIOEntry()!=  null)  {  ensureOpen();  }	  if(this.enabled)    {    if(getNextCPIOEntry()!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
395	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize  -  1))  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize  -  1))  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.blockSize  -  1))  {  ensureOpen();  }	  readFully(TWO_BYTES_BUF,    0,    this.blockSize    -    1)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
396	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.blockSize  -  1)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.blockSize  -  1)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BYTES_BUF,  0,  this.blockSize  -  1)  {  ensureOpen();  }	  readFully(TWO_BYTES_BUF,    0,    this.blockSize    -    1)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
397	[BUG]  [BUGGY]  if(entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getCpioArchiveEntry();  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getCpioArchiveEntry();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  entry.length);  }  else  {  CpioArchiveEntry  entry  =  getCpioArchiveEntry();  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    CpioArchiveEntry    entry    =    getCpioArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
398	[BUG]  [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    CpioArchiveEntry    entry    =    getCpioArchiveEntry();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
399	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.entryEOF);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.entryEOF);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BYTES_BUF,  0,  this.entryEOF);	  readFully(TWO_BYTES_BUF,    0,    this.entryEOF);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
400	[BUG]  [BUGGY]  readFully(this.entry,  0,  BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.entry,  0,  BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.entry,  0,  BYTES_BUF.length);	  readFully(TWO_BYTES_BUF,    0,    BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
401	[BUG]  [BUGGY]  ReadFully(THIS_BYTES_BUF,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  ReadFully(THIS_BYTES_BUF,  0,  this.blockSize);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(THIS_BYTES_BUF,  0,  this.blockSize);	  ReadFully(FOUR_BYTES_BUF,    0,    this.blockSize);    return    null;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
402	[BUG]  [BUGGY]  if(this.blockSize  <  =  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  1,  this.blockSize);  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.blockSize  <  =  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  1,  this.blockSize);  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.blockSize  <  =  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  1,  this.blockSize);  }	  if(this.blockSize    <    =    0)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
403	[BUG]  [BUGGY]  readFully(this.blockSize,  0,  this.blockSize)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.blockSize,  0,  this.blockSize)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.blockSize,  0,  this.blockSize)  {  ensureOpen();  }	  readFully(TWO_BYTES_BUF,    0,    this.blockSize)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
404	[BUG]  [BUGGY]  this.entryEOF  =  getNextCPIO();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCPIO();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCPIO();	  this.entryEOF    =    getNextCIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
405	[BUG]  [BUGGY]  null  {  if(this.blockSize  <  =  0)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  null  {  if(this.blockSize  <  =  0)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	null  {  if(this.blockSize  <  =  0)  {  ensureOpen();  }	  null    {    if(this.blockSize    ==    0)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
406	[BUG]  [BUGGY]  if(this.getNextCpioEntry()  ==  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.getNextCpioEntry()  ==  null)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.getNextCpioEntry()  ==  null)  {  ensureOpen();  }	  if(this.getNextCPIOEntry()    ==    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
407	[BUG]  [BUGGY]  this.entryEOF  =  getNextPIOntryEOF();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextPIOntryEOF();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextPIOntryEOF();	  this.entryEOF    =    getNextPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
408	[BUG]  [BUGGY]  if(this.getNextCpioEntry()!=  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.getNextCpioEntry()!=  null)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.getNextCpioEntry()!=  null)  {  ensureOpen();  }	  if(this.getNextCPIOEntry()!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
409	[BUG]  [BUGGY]  if(this.entryEOF)  {  if(getNextCPIOEntry()!=  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.entryEOF)  {  if(getNextCPIOEntry()!=  null)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.entryEOF)  {  if(getNextCPIOEntry()!=  null)  {  ensureOpen();  }	  if(this.closed)    {    if(getNextCPIOEntry()!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
410	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  TYPE_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BYTES_BUF,  0,  TYPE_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BYTES_BUF,  0,  TYPE_BYTES_BUF.length);	  readFully(TWO_BYTES_BUF,    0,    TYPE_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
411	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)getNextCRCIOEntry();  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =(CpioArchiveEntry)getNextCRCIOEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =(CpioArchiveEntry)getNextCRCIOEntry();	  this.entry    =(CpioArchiveEntry)getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
412	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)getNextCEIOEntry();  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =(CpioArchiveEntry)getNextCEIOEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =(CpioArchiveEntry)getNextCEIOEntry();	  this.entry    =(CpioArchiveEntry)getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
413	[BUG]  [BUGGY]  if(this.blockSize  >  0)  {  ensureOpen();  }  else  {  readFully(THIS_BYTES_BUF,  0,  this.blockSize);  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.blockSize  >  0)  {  ensureOpen();  }  else  {  readFully(THIS_BYTES_BUF,  0,  this.blockSize);  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.blockSize  >  0)  {  ensureOpen();  }  else  {  readFully(THIS_BYTES_BUF,  0,  this.blockSize);  }	  if(this.blockSize    >    0)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
414	[BUG]  [BUGGY]  readFully(this.closed)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.closed)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.closed)  {  ensureOpen();  }	  if(this.closed)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
415	[BUG]  [BUGGY]  readFully(this.closed);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.closed);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.closed);	  if(this.closed)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
416	[BUG]  [BUGGY]  this.entry  =  createNextCPIOEntry();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  createNextCPIOEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  createNextCPIOEntry();	  this.entry    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
417	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)getNextPioEntry();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =(CpioArchiveEntry)getNextPioEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =(CpioArchiveEntry)getNextPioEntry();	  this.entry    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
418	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)this.blockSize;  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =(CpioArchiveEntry)this.blockSize;  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =(CpioArchiveEntry)this.blockSize;	  this.entry    =    getNextCPIOEntry();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
419	[BUG]  [BUGGY]  this.entryEOF  =  createCpioArchiveEntryEOF();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  createCpioArchiveEntryEOF();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  createCpioArchiveEntryEOF();	  this.entryEOF    =    createNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
420	[BUG]  [BUGGY]  this.entryEOF  =  createNextCpioArchiveEntryEOF();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  createNextCpioArchiveEntryEOF();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  createNextCpioArchiveEntryEOF();	  this.entryEOF    =    createNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
421	[BUG]  [BUGGY]  this.entryEOF  =  createNextCpioEntryEOF();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  createNextCpioEntryEOF();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  createNextCpioEntryEOF();	  this.entryEOF    =    createNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
422	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  in.close();  }  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  in.close();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.entry  ==  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  in.close();  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    in.close();    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
423	[BUG]  [BUGGY]  if(this.entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  in.close();  }  [CE]  illegal  start  of  type  [FE]                                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  in.close();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  in.close();  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    in.close();    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
424	[BUG]  [BUGGY]  if(this.entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  this.length);  }  else  {  in.close();  }  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  this.length);  }  else  {  in.close();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.entry!=  null)  {  this.entry  =  readFully(TWO_BYTES_BUF,  0,  this.length);  }  else  {  in.close();  }	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    else    {    in.close();    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
425	[BUG]  [BUGGY]  if(this.key!=  null  ||  this.blockSize  ==  0)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.key!=  null  ||  this.blockSize  ==  0)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.key!=  null  ||  this.blockSize  ==  0)  {  ensureOpen();  }	  if(this.key!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
426	[BUG]  [BUGGY]  if(this.key!=  null  ||  this.blockSize  <  =  0)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.key!=  null  ||  this.blockSize  <  =  0)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.key!=  null  ||  this.blockSize  <  =  0)  {  ensureOpen();  }	  if(this.key!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
427	[BUG]  [BUGGY]  if(this.key!=  null  ||  this.blockSize  >=  0)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.key!=  null  ||  this.blockSize  >=  0)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.key!=  null  ||  this.blockSize  >=  0)  {  ensureOpen();  }	  if(this.key!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
428	[BUG]  [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  this.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  this.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(TWO_BYTES_BUF,  0,  this.length);	  this.entry    =    readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
429	[BUG]  [BUGGY]  this.entryEOF  =  readFully(THIS_BYTES_BUF,  0,  getNextCPIOEntryEOF());  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  readFully(THIS_BYTES_BUF,  0,  getNextCPIOEntryEOF());  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  readFully(THIS_BYTES_BUF,  0,  getNextCPIOEntryEOF());	  this.entryEOF    =    readFully(FOUR_BYTES_BUF,    0,    getNextCPIOEntryEOF());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
430	[BUG]  [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  getNextCPIOEntryEOF(),  this.blockSize);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  getNextCPIOEntryEOF(),  this.blockSize);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  getNextCPIOEntryEOF(),  this.blockSize);	  this.entryEOF    =    readFully(FOUR_BYTES_BUF,    0,    getNextCPIOEntryEOF());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
431	[BUG]  [BUGGY]  this.entryEOF  =  readFully(TWO_BYTES_BUF,  0,  MISSING_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  readFully(TWO_BYTES_BUF,  0,  MISSING_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  readFully(TWO_BYTES_BUF,  0,  MISSING_BYTES_BUF.length);	  this.entryEOF    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
432	[BUG]  [BUGGY]  this.entryEOF  =  readFully(TWO_BYTES_BUF,  0,  BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  readFully(TWO_BYTES_BUF,  0,  BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  readFully(TWO_BYTES_BUF,  0,  BYTES_BUF.length);	  this.entryEOF    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
433	[BUG]  [BUGGY]  this.entry  =  readFully(true);  [CE]  illegal  start  of  type  [FE]                                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readFully(true);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(true);	  this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
434	[BUG]  [BUGGY]  this.entry  =  readOldArchiveEntry();  [CE]  illegal  start  of  type  [FE]                                      IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entry  =  readOldArchiveEntry();  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readOldArchiveEntry();	  this.entry    =    readOldBinaryEntry(false);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
435	[BUG]  [BUGGY]  readFully(this.entryEOF,  0,  this.entryEOF.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(this.entryEOF,  0,  this.entryEOF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.entryEOF,  0,  this.entryEOF.length);	  readFully(TWO_BYTES_BUF,    0,    this.entryEOF.length);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
436	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.entryEOF.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.entryEOF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BYTES_BUF,  0,  this.entryEOF.length);	  readFully(TWO_BYTES_BUF,    0,    this.entryEOF.length);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
437	[BUG]  [BUGGY]  if(this.blockSize  <  0)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.blockSize  <  0)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.blockSize  <  0)  {  ensureOpen();  }	  if(this.blockSize    <    =    0)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
438	[BUG]  [BUGGY]  This.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  This.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	This.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);	  if(this.entry!=    null)    {    this.entry    =    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
439	[BUG]  [BUGGY]  if(this.blockSize  >  0)  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  }  else  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.blockSize  >  0)  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  }  else  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.blockSize  >  0)  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  }  else  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  }	  readFully(TWO_BYTES_BUF,    0,    this.blockSize);    readFully(TWO_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
440	[BUG]  [BUGGY]  if(this.blockSize  >  0)  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  }  else  {  writeFully(TWO_BYTES_BUF,  0,  this.blockSize);  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.blockSize  >  0)  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  }  else  {  writeFully(TWO_BYTES_BUF,  0,  this.blockSize);  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.blockSize  >  0)  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  }  else  {  writeFully(TWO_BYTES_BUF,  0,  this.blockSize);  }	  readFully(TWO_BYTES_BUF,    0,    this.blockSize);    readFully(TWO_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
441	[BUG]  [BUGGY]  if(this.blockSize  >  0)  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.blockSize  >  0)  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.blockSize  >  0)  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.blockSize);  }	  readFully(TWO_BYTES_BUF,    0,    this.blockSize);    readFully(TWO_BYTES_BUF,    0,    this.blockSize);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
442	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(this.blockSize);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  InputStream  in  =  getInputStream(this.blockSize);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	InputStream  in  =  getInputStream(this.blockSize);	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
443	[BUG]  [BUGGY]  InputStream  in  =  getInputStream(),  this.blockSize);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  InputStream  in  =  getInputStream(),  this.blockSize);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	InputStream  in  =  getInputStream(),  this.blockSize);	  InputStream    in    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
444	[BUG]  [BUGGY]  readFully(THIS_BUF,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BUF,  0,  this.tmpbuf.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BUF,  0,  this.tmpbuf.length);	  readFully(THIS_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
445	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.tmpbuf.length);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BYTES_BUF,  0,  this.tmpbuf.length);	  readFully(THIS_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
446	[BUG]  [BUGGY]  if(this.enabled  ||  getNextCPIOEntry()  ==  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.enabled  ||  getNextCPIOEntry()  ==  null)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.enabled  ||  getNextCPIOEntry()  ==  null)  {  ensureOpen();  }	  if(this.enabled)    {    if(getNextCPIOEntry()    ==    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
447	[BUG]  [BUGGY]  if(this.enabled)  {  if(getNextCPIOEntry()  ==  null  ||  getNextCPIOEntry()!=  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.enabled)  {  if(getNextCPIOEntry()  ==  null  ||  getNextCPIOEntry()!=  null)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.enabled)  {  if(getNextCPIOEntry()  ==  null  ||  getNextCPIOEntry()!=  null)  {  ensureOpen();  }	  if(this.enabled)    {    if(getNextCPIOEntry()    ==    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
448	[BUG]  [BUGGY]  this.entryEOF  =  readOldArchiveEntry(false);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  readOldArchiveEntry(false);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  readOldArchiveEntry(false);	  this.entryEOF    =    getNextCPIOEntry(false);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
449	[BUG]  [BUGGY]  this.entryEOF  =  getNextCpioArchiveEntry(true);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.entryEOF  =  getNextCpioArchiveEntry(true);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCpioArchiveEntry(true);	  this.entryEOF    =    getNextCPIOEntry(false);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
450	[BUG]  [BUGGY]  if(this.entryEOF)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  if(this.entryEOF)  {  ensureOpen();  }  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.entryEOF)  {  ensureOpen();  }	  if(this.entry    ==    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
451	[BUG]  [BUGGY]  this.nextCPIOEntry  =  new  CpioArchiveEntry(this);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {      [BUGGY]  this.nextCPIOEntry  =  new  CpioArchiveEntry(this);  [BUGGY]      if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.nextCPIOEntry  =  new  CpioArchiveEntry(this);	  if(this.nextCPIOEntry    ==    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
