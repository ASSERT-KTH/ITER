bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.entryEOF  =  getNextCPIOEntry();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  this.entryEOF  =  getNextCPIOEntry();  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCPIOEntry();	  this.entryEOF    =    getNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
2	[BUG]  [BUGGY]  this.entryEOF  =  getNextCpioEntryEOF();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  this.entryEOF  =  getNextCpioEntryEOF();  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCpioEntryEOF();	  this.entryEOF    =    getNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
3	[BUG]  [BUGGY]  this.entryEOF  =  getNextCIOEntryEOF();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  this.entryEOF  =  getNextCIOEntryEOF();  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCIOEntryEOF();	  this.entryEOF    =    getNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
4	[BUG]  [BUGGY]  this.entryEOF  =  getNextECIOEntryEOF();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  this.entryEOF  =  getNextECIOEntryEOF();  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextECIOEntryEOF();	  this.entryEOF    =    getNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
5	[BUG]  [BUGGY]  this.entryEOF  =  getNextCPIOEntryEOF(true);  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  this.entryEOF  =  getNextCPIOEntryEOF(true);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCPIOEntryEOF(true);	  this.entryEOF    =    getNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
6	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryEOF.length);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryEOF.length);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entryEOF.length);	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
7	[BUG]  [BUGGY]  ReadFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  ReadFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
8	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  1,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(TWO_BYTES_BUF,  1,  TWO_BYTES_BUF.length);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  1,  TWO_BYTES_BUF.length);	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
9	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TYPE_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TYPE_BYTES_BUF.length);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  TYPE_BYTES_BUF.length);	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
10	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
11	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  1);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  1);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  1);	  readFully(FOUR_BYTES_BUF,    0,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
12	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  2);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  2);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  2);	  readFully(FOUR_BYTES_BUF,    0,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
13	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  +  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  +  1);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  +  1);	  readFully(FOUR_BYTES_BUF,    0,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
14	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  4);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  4);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  4);	  readFully(FOUR_BYTES_BUF,    0,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
15	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);	  readFully(FOUR_BYTES_BUF,    0,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
16	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  getNextCPIOEntry().length);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  getNextCPIOEntry().length);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  getNextCPIOEntry().length);	  if(getNextCPIOEntry()    ==    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
17	[BUG]  [BUGGY]  if(this.getNextCPIOEntry()  ==  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(this.getNextCPIOEntry()  ==  null)  {  ensureOpen();  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.getNextCPIOEntry()  ==  null)  {  ensureOpen();  }	  if(getNextCPIOEntry()    ==    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
18	[BUG]  [BUGGY]  if(this.nextCPIOEntry  ==  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(this.nextCPIOEntry  ==  null)  {  ensureOpen();  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.nextCPIOEntry  ==  null)  {  ensureOpen();  }	  if(getNextCPIOEntry()    ==    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
19	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  return  null;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  return  null;  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  return  null;	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
20	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  return  null;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  return  null;  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.blockSize);  return  null;	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
21	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.blockSize);	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
22	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.blockSize);  return  null;  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.blockSize);  return  null;  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BYTES_BUF,  0,  this.blockSize);  return  null;	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
23	[BUG]  [BUGGY]  ReadFully(FOUR_BYTES_BUF,  0,  this.blockSize);  return  null;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  ReadFully(FOUR_BYTES_BUF,  0,  this.blockSize);  return  null;  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(FOUR_BYTES_BUF,  0,  this.blockSize);  return  null;	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
24	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  1,  this.blockSize);  return  null;  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  1,  this.blockSize);  return  null;  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  1,  this.blockSize);  return  null;	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
25	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
26	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  2);	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
27	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entry.length);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entry.length);	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
28	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  +  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  +  1);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length  +  1);	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
29	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.blockSize);	  if(this.blockSize    ==    0)    {    ensureOpen();    }    else    {    readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
30	[BUG]  [BUGGY]  readFully(this.blockSize,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(this.blockSize,  0,  this.blockSize);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.blockSize,  0,  this.blockSize);	  if(this.blockSize    ==    0)    {    ensureOpen();    }    else    {    readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
31	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(THIS_BYTES_BUF,  0,  this.blockSize);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BYTES_BUF,  0,  this.blockSize);	  if(this.blockSize    ==    0)    {    ensureOpen();    }    else    {    readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
32	[BUG]  [BUGGY]  this.entry  =  readFully(TOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  this.entry  =  readFully(TOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(TOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
33	[BUG]  [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
34	[BUG]  [BUGGY]  this.entry  =  getNextCPIOEntry();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  this.entry  =  getNextCPIOEntry();  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  getNextCPIOEntry();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
35	[BUG]  [BUGGY]  InputStream  in  =  getInputStream();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  InputStream  in  =  getInputStream();  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	InputStream  in  =  getInputStream();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
36	[BUG]  [BUGGY]  this.entry  =  readFully(TOUR_BYTES_BUF,  0,  BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  this.entry  =  readFully(TOUR_BYTES_BUF,  0,  BYTES_BUF.length);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readFully(TOUR_BYTES_BUF,  0,  BYTES_BUF.length);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
37	[BUG]  [BUGGY]  this.entry  =(CpioArchiveEntry)getNextCPIOEntry();  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  this.entry  =(CpioArchiveEntry)getNextCPIOEntry();  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =(CpioArchiveEntry)getNextCPIOEntry();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
38	[BUG]  [BUGGY]  this.entry  =  readOldBinaryEntry(false);  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  this.entry  =  readOldBinaryEntry(false);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entry  =  readOldBinaryEntry(false);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
39	[BUG]  [BUGGY]  readFully(SIX_BYTES_BUF,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(SIX_BYTES_BUF,  0,  this.blockSize);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(SIX_BYTES_BUF,  0,  this.blockSize);	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
40	[BUG]  [BUGGY]  readFully(this.blockSize,  0,  this.entryEOF);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(this.blockSize,  0,  this.entryEOF);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.blockSize,  0,  this.entryEOF);	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
41	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  1,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  1,  this.blockSize);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  1,  this.blockSize);	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
42	[BUG]  [BUGGY]  readFully();  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully();  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully();	  if(!closed)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
43	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  BYTES_BUF.length);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  BYTES_BUF.length);	  if(!closed)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
44	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length));  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length));  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length));	  if(!closed)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
45	[BUG]  [BUGGY]  if(this.entry  ==  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(this.entry  ==  null)  {  ensureOpen();  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.entry  ==  null)  {  ensureOpen();  }	  if(this.entry!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
46	[BUG]  [BUGGY]  if(this.blockSize!=  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(this.blockSize!=  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.blockSize!=  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  }	  if(this.blockSize    ==    0)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
47	[BUG]  [BUGGY]  ReadFully(TWO_BYTES_BUF,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  ReadFully(TWO_BYTES_BUF,  0,  this.blockSize);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(TWO_BYTES_BUF,  0,  this.blockSize);	  if(this.blockSize    ==    0)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
48	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.blockSize);  readFully(TWO_BYTES_BUF,  0,  this.blockSize);	  if(this.blockSize    ==    0)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
49	[BUG]  [BUGGY]  if(this.blockSize  ==  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  1,  this.blockSize);  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(this.blockSize  ==  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  1,  this.blockSize);  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.blockSize  ==  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  1,  this.blockSize);  }	  if(this.blockSize    ==    0)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
50	[BUG]  [BUGGY]  ReadFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  ReadFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	ReadFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);	  if(this.blockSize    ==    0)    {    ensureOpen();    }    else    {    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
51	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize)  {  ensureOpen();  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.blockSize)  {  ensureOpen();  }	  if(this.blockSize    ==    0)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
52	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  blockSize);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  blockSize);	  if(this.blockSize    ==    0)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
53	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize  -  1)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.blockSize  -  1)  {  ensureOpen();  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.blockSize  -  1)  {  ensureOpen();  }	  if(this.blockSize    ==    0)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
54	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryEOF.length);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryEOF.length);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.entryEOF.length);	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
55	[BUG]  [BUGGY]  readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BYTES_BUF,  0,  TWO_BYTES_BUF.length);	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
56	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length  -  1);	  readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
57	[BUG]  [BUGGY]  if(this.getNextCPIOEntry()!=  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(this.getNextCPIOEntry()!=  null)  {  ensureOpen();  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.getNextCPIOEntry()!=  null)  {  ensureOpen();  }	  if(getNextCPIOEntry()!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
58	[BUG]  [BUGGY]  if(this.nextCPIOEntry!=  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(this.nextCPIOEntry!=  null)  {  ensureOpen();  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.nextCPIOEntry!=  null)  {  ensureOpen();  }	  if(getNextCPIOEntry()!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
59	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  BYTES_BUF.length  -  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  BYTES_BUF.length  -  1);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  BYTES_BUF.length  -  1);	  readFully(FOUR_BYTES_BUF,    0,    BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
60	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  BYTES_BUF.length  -  2);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  BYTES_BUF.length  -  2);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  BYTES_BUF.length  -  2);	  readFully(FOUR_BYTES_BUF,    0,    BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
61	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.length);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.length);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
62	[BUG]  [BUGGY]  if(this.blockSize!=  0)  {  ensureOpen();  }  else  {  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(this.blockSize!=  0)  {  ensureOpen();  }  else  {  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.blockSize!=  0)  {  ensureOpen();  }  else  {  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  }	  if(this.blockSize    ==    0)    {    ensureOpen();    }    else    {    readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
63	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  3);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  3);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length  -  3);	  readFully(FOUR_BYTES_BUF,    0,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
64	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.length);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.length);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.length);	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
65	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryEOF);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryEOF);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entryEOF);	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
66	[BUG]  [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  getNextCPIOEntryEOF());  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  getNextCPIOEntryEOF());  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  getNextCPIOEntryEOF());	  this.entryEOF    =    getNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
67	[BUG]  [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);	  this.entryEOF    =    getNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
68	[BUG]  [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);	  this.entryEOF    =    getNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
69	[BUG]  [BUGGY]  this.entryEOF  =  getNextCPIOEntry(false);  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  this.entryEOF  =  getNextCPIOEntry(false);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextCPIOEntry(false);	  this.entryEOF    =    getNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
70	[BUG]  [BUGGY]  if(this.closed)  {  if(getNextCPIOEntry()!=  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(this.closed)  {  if(getNextCPIOEntry()!=  null)  {  ensureOpen();  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.closed)  {  if(getNextCPIOEntry()!=  null)  {  ensureOpen();  }	  if(getNextCPIOEntry()!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
71	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length);	  readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
72	[BUG]  [BUGGY]  readFully(THIS_BUF,  0,  this.blockSize);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(THIS_BUF,  0,  this.blockSize);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BUF,  0,  this.blockSize);	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
73	[BUG]  [BUGGY]  if(this.key!=  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(this.key!=  null)  {  ensureOpen();  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.key!=  null)  {  ensureOpen();  }	  if(this.entry!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
74	[BUG]  [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(TWO_BYTES_BUF,  0,  this.entryBytesRead.length);	  readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
75	[BUG]  [BUGGY]  null  {  if(this.blockSize  ==  0)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  null  {  if(this.blockSize  ==  0)  {  ensureOpen();  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	null  {  if(this.blockSize  ==  0)  {  ensureOpen();  }	  if(this.blockSize    ==    0)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
76	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.blockSize)  {  ensureOpen();  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.blockSize)  {  ensureOpen();  }	  if(this.blockSize    ==    0)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
77	[BUG]  [BUGGY]  if(this.blockSize!=  0)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(this.blockSize!=  0)  {  ensureOpen();  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.blockSize!=  0)  {  ensureOpen();  }	  if(this.blockSize    ==    0)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
78	[BUG]  [BUGGY]  if(this.closed)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(this.closed)  {  ensureOpen();  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.closed)  {  ensureOpen();  }	  if(!closed)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
79	[BUG]  [BUGGY]  if(!this.closed)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(!this.closed)  {  ensureOpen();  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(!this.closed)  {  ensureOpen();  }	  if(!closed)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
80	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length));  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length));  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length));	  if(!closed)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
81	[BUG]  [BUGGY]  if(this.entryEOF)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  0,  this.length);  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(this.entryEOF)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  0,  this.length);  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.entryEOF)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  0,  this.length);  }	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
82	[BUG]  [BUGGY]  if(this.blockSize  <  =  0)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(this.blockSize  <  =  0)  {  ensureOpen();  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.blockSize  <  =  0)  {  ensureOpen();  }	  if(this.blockSize    ==    0)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
83	[BUG]  [BUGGY]  if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
84	[BUG]  [BUGGY]  if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
85	[BUG]  [BUGGY]  if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getCpioArchiveEntry();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getCpioArchiveEntry();  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getCpioArchiveEntry();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
86	[BUG]  [BUGGY]  if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCPIOEntry();  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCPIOEntry();  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCPIOEntry();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
87	[BUG]  [BUGGY]  if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  in.close();  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  in.close();  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  in.close();  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
88	[BUG]  [BUGGY]  if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  getNextCPIOEntry();  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  getNextCPIOEntry();  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  getNextCPIOEntry();  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
89	[BUG]  [BUGGY]  if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCpioEntry();  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCpioEntry();  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.entry!=  null)  {  this.entry  =  readFully(FOUR_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  }  else  {  CpioArchiveEntry  entry  =  getNextCpioEntry();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
90	[BUG]  [BUGGY]  this.entryEOF  =  getNextArchiveEntryEOF();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  this.entryEOF  =  getNextArchiveEntryEOF();  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextArchiveEntryEOF();	  this.entryEOF    =    getNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
91	[BUG]  [BUGGY]  this.entryEOF  =  super.getNextCPIOEntryEOF();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  this.entryEOF  =  super.getNextCPIOEntryEOF();  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  super.getNextCPIOEntryEOF();	  this.entryEOF    =    getNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
92	[BUG]  [BUGGY]  this.entryEOF  =  createNextCPIOEntryEOF();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  this.entryEOF  =  createNextCPIOEntryEOF();  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  createNextCPIOEntryEOF();	  this.entryEOF    =    getNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
93	[BUG]  [BUGGY]  this.entryEOF  =  getNextPIOEntryEOF();  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  this.entryEOF  =  getNextPIOEntryEOF();  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	this.entryEOF  =  getNextPIOEntryEOF();	  this.entryEOF    =    getNextCPIOEntryEOF();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
94	[BUG]  [BUGGY]  if(this.blockSize  >  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(this.blockSize  >  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.blockSize  >  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  }	  if(this.blockSize    ==    0)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
95	[BUG]  [BUGGY]  if(this.blockSize  <  =  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(this.blockSize  <  =  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.blockSize  <  =  0)  {  ensureOpen();  }  else  {  readFully(TWO_BYTES_BUF,  0,  this.blockSize);  }	  if(this.blockSize    ==    0)    {    ensureOpen();    }    else    {    readFully(TWO_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
96	[BUG]  [BUGGY]  if(this.blockSize  >  0)  {  ensureOpen();  }  else  {  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(this.blockSize  >  0)  {  ensureOpen();  }  else  {  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.blockSize  >  0)  {  ensureOpen();  }  else  {  readFully(FOUR_BYTES_BUF,  0,  this.blockSize);  }	  if(this.blockSize    ==    0)    {    ensureOpen();    }    else    {    readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
97	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryEOF);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.entryEOF);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.entryEOF);	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
98	[BUG]  [BUGGY]  if(closed)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(closed)  {  ensureOpen();  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(closed)  {  ensureOpen();  }	  if(!closed)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
99	[BUG]  [BUGGY]  readFully(this.blockSize,  0,  blockSize);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(this.blockSize,  0,  blockSize);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.blockSize,  0,  blockSize);	  if(!closed)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
100	[BUG]  [BUGGY]  readFully(this.blockSize);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(this.blockSize);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(this.blockSize);	  if(!closed)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
101	[BUG]  [BUGGY]  if(this.enabled)  {  if(getNextCPIOEntry()!=  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(this.enabled)  {  if(getNextCPIOEntry()!=  null)  {  ensureOpen();  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.enabled)  {  if(getNextCPIOEntry()!=  null)  {  ensureOpen();  }	  if(getNextCPIOEntry()!=    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
102	[BUG]  [BUGGY]  readFully(THIS_BUF,  0,  TWO_BYTES_BUF.length);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(THIS_BUF,  0,  TWO_BYTES_BUF.length);  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(THIS_BUF,  0,  TWO_BYTES_BUF.length);	  readFully(FOUR_BYTES_BUF,    0,    TWO_BYTES_BUF.length);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
103	[BUG]  [BUGGY]  readFully(SIX_BYTES_BUF,  0,  this.blockSize);  return  null;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  readFully(SIX_BYTES_BUF,  0,  this.blockSize);  return  null;  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	readFully(SIX_BYTES_BUF,  0,  this.blockSize);  return  null;	  if(this.entryEOF)    {    ensureOpen();    }    else    {    readFully(FOUR_BYTES_BUF,    0,    this.blockSize);    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
104	[BUG]  [BUGGY]  if(this.enabled)  {  if(getNextCPIOEntry()  ==  null)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  CpioArchiveEntry  getNextCPIOEntry()  throws  IOException  {    [BUGGY]  if(this.enabled)  {  if(getNextCPIOEntry()  ==  null)  {  ensureOpen();  }  [BUGGY]    if  (this.entry  !=  null)  {  closeEntry();  }  readFully(TWO_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  false)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(false);  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	187	187	1	replace	if(this.enabled)  {  if(getNextCPIOEntry()  ==  null)  {  ensureOpen();  }	  if(getNextCPIOEntry()    ==    null)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
