projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.close();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){thrownewIOException("Streamclosed");}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){this.in.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){thrownewIOException("Streamclosed");}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){thrownewIOException("Streamclosed");}else{this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen()");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175in.close();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:Streamclosed");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){this.in.close();}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){this.in.close();}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{System.err.println("CpioArchiveEntry:closed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():closed");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175in.skipChildren();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175in.write(this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(in.read());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.flush();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{System.err.println("InputStreamclosed:"+this.in.getMessage());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{System.err.println("InputStreamclosed:"+this.in.getClass().getName());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{System.err.println("InputStreamclosed:"+this.in.toString());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:closed");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){System.err.println("CpioArchiveEntry:closed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){System.err.println("CpioArchiveEntry:closed");}else{System.err.println("CpioArchiveEntry:closed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.entryEOF){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.entryEOF){this.in.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null||this.entryEOF){this.in.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(!this.entryEOF){this.in.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(!this.entryEOF){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().reset();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeGet(){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().interrupt();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().setContextClassLoader(this);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().throwInternal();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().reportError("CpioArchiveEntrynotclosed:"+this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().reportError("CpioArchiveEntry'"+this.closed+"'closed");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=getInputStream();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.in.read();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175in.defaultInput();this.in.close();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175in.defaultInputStream();this.in.close();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeGet(){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().setCurrentName(this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().setCurrentName(this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.closed){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){thrownewIOException("Streamclosed.");}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.closed){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.open){thrownewIOException("Streamclosed");}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){if(this.closed){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){if(this.closed){thrownewIOException("Streamclosed");}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){if(this.closed){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){thrownewIOException("Streamclosed.");}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){this.in.close();}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.in,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{thrownewIOException("Streamclosed:");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{thrownewIOException(""));}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen()=");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():"+this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():"+this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen()+",");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:Streamclosed.");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:Streamclosed",this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:Streamclosed"+this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:Streamclosed:"+this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){if(this.in!=null){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){if(this.in!=null){this.in.close();}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.entryEOF){this.in.close();}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(!this.entryEOF){this.in.close();}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.entryEOF){this.in.close();}else{for(inti=0;i<this.blockSize;++i){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():open");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():closed.");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():closed",this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():closed,");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():open.");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.entryEOF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.blockSize,this.entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.closed){thrownewIOException("Streamclosed");}else{this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){if(this.closed){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){if(this.closed){thrownewIOException("Streamclosed");}else{this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){thrownewIOException("Streamclosed");}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){thrownewIOException("Streamclosed:"+this.closed);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.in);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("Streamclosed:Streamclosed");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:Streamclosed!");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.closed){thrownewIOException("Streamclosed",this.in);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen()-closed");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){in.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){in.close();}else{System.err.println("Streamclosed:"+this.blockSize);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){in.close();}else{System.err.println("CpioArchiveEntryclosed:"+this.blockSize);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){in.close();}else{System.err.println("InputStreamclosed:"+this.in.getClass());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():closed",this.in);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.entryEOF.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.entryEOF){this.in.close();}else{thrownewIOException(",");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.write(this.entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.shutdown();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.close(false);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.ensureOpen();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.write(this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){thrownewIOException("Streamclosed");}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175((CpioArchiveEntry)in).ensureOpen();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){this.in.close();}else{System.err.println("CpioArchiveEntry:closed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.in.close();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.entryEOF.getInputStream();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{thrownewIOException("n");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{thrownewIOException(",");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeThan<=this.closed){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.entryEOF.close();}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.entryEOF.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen()-open");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){thrownewIOException("Streamclosed:"+this.in.getMessage());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){thrownewIOException("Streamclosed.");}else{this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{System.err.println("CpioArchiveEntry:closed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){thrownewIOException("Streamclosed.");}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){thrownewIOException("Streamclosed:");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newCpioArchiveEntry(this.in,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(entryEOF){thrownewIOException("Streamclosed:"+this.closed);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(entryEOF){thrownewIOException("Streamclosed:"+this.closed);}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(entryEOF){thrownewIOException("Streamclosed");}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(entryEOF){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(entryEOF){thrownewIOException("Streamclosed",this.closed);}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(entryEOF){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(entryEOF){thrownewIOException("Streamclosed.");}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{for(inti=0;i<this.in.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.clone();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{for(inti=0;i<this.in.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.clone();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{for(inti=0;i<this.in.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.get
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{for(inti=0;i<this.in.length;++i){in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newCpioInputStream(this.in,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.in,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175((CpioArchiveEntry)this.in).close();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read();if(entryEOF}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){for(inti=0;i<this.in.read();++i){in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read();in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){for(inti=0;i<this.in.read();++i){ensureOpen(in.read());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read();ensureOpen(entry);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(!this.closed){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.closed){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.enabled){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(!this.closed){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.open){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){in.close();}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in.close()){in.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in.close()){in.close();}else{this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){in.close();}else{this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in.close()){in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():open",this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().close();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().start();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().set(this);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().enable(this);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().set(this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():"+this.open);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():"+this.entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():"+this.cloned);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():"+this.open;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175ensureOpen(entryEOF){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(this.in){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(entryEOF){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():open,");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():open",this.open);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():open;n");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(!this.closed){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){if(!this.entryEOF){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){if(!this.closed){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(!this.closed){this.in.close();}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){if(!this.entryEOF){this.in.close();}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("InputStreamclosed:"+this.in.toString());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){System.err.println("InputStreamclosed:"+this.in.toString());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){this.in.close();}else{System.err.println("InputStreamclosed:"+this.in.toString());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen()/",");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen()/"+",");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():"+this.closed+",");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen()="+this.closed+",");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen(),"+this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(!this.closed){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.closed){thrownewIllegalStateException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:Streamclosed:"+this.open);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:Streamclosed:"+this.toString());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:Streamclosed:"+this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:Streamclosed:"+this.closed,entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("Streamclosed:"+this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.in.read(this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.in.readInput();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.in.read(false);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.in.read(this.blockSize,this.in.read());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.in.readFully();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.in.readLine();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeOpen(){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeAccess(){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeGet(){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeGet(){thrownewIOException("Streamclosed:"+this.closed);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){if(in!=null){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){if(in!=null){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():open,",this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():open.",this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():open"+this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.in);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeEntryEOF){thrownewIOException("Streamclosed:");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){thrownewIOException("Streamclosed:"+this.blockSize);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF||this.blockSize>0){thrownewIOException("Streamclosed:");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().setContextClassLoader(this.entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeEntryEOF){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.entryEOF){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeAccess(){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeGet(){thrownewIOException("Streamclosed:");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen()-this.closed");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen()-closed.");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen()-closed",this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){if(this.in!=null){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.closed){this.in.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){if(this.in!=null){this.in.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.entryEOF,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.entryEOF+1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.tmpbuf);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.write(this.blockSize,this.entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.write(entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175in.write(this.entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.write(this.entryBytesRead,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.write(this.entryBytesRead,blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.write(this.entryBytesRead,tmpbuf);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.open){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175for(inti=0;i<this.in.read();++i){in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175for(inti=0;i<this.in.read();++i){out.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read();in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF){if(this.in!=null){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read();in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF){if(this.in!=null){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read();in.
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF){if(this.in!=null){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read();in.close();}}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF){if(this.in!=null){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF){if(this.in!=null){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF){if(this.in!=null){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read()
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(!this.enabled){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(!this.open){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(!this.entryEOF){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.open){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newCpioArchiveEntry(this.in,this.blockSize,entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newCpioArchiveEntry(this.in,this.blockSize,this.entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newCpioArchiveEntry(this.in,this.blockSize,entry);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newCpioArchiveEntry(this.in,this.blockSize,this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newCpioArchiveEntry(this.in,entry);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newCpioArchiveEntry(this.in,this.blockSize,this.bytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newCpioArchiveEntry(this.in,this.blockSize,this.entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){thrownewIOException("Streamclosed.");}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read();ensureOpen(entry);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF){if(this.in!=null){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read();ensureOpen
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF){if(this.in!=null){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read();ensureOpen(entry);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read();ensureOpen
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(this.closed){thrownewIOException("Streamclosed:"+this.closed);}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(this.in){thrownewIOException("Streamclosed:"+this.closed);}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(this.entryEOF){thrownewIOException("Streamclosed:"+this.closed);}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():"+this.blockSize,this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():"+this.blockSize,blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():"+this.blockSize-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():"+this.blockSize,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175in.write(this.blockSize+1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175in.write(this.blockSize-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175in.write(this.blockSize,this.entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175in.write(this.blockSize,tmpbuf);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175in.write(this.blockSize,0,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175in.defaultWrite(this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():open",this.in);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():closed"+this.in);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():closed,",this.in);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():closed.",this.in);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(in!=null){in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(in!=null){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(in!=null){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.entryEOF.close();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF!=null){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF!=null){this.entryEOF.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.entryEOF.flush();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){if(this.closed){thrownewIOException("Streamclosed.");}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175for(inti=0;i<this.in.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.get
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entry!=null){if(this.in!=null){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entry==null){if(this.in!=null){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entry!=null){if(this.in!=null){this.in.close();}else{for(inti=0;i<this.in.length;++i){CpioArchiveEntryentry=(CpioArch
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entry!=null){if(this.in!=null){this.in.close();}else{for(inti=0;i<this.in.length;++i){CpioArchiveEntryentry=(Cpi
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.closed){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.in!=null){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.enabled){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.openEOF){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){if(this.entryEOF){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newCpioInputStream(this.in,this.blockSize,this.entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newCpioInputStream(this.in,this.blockSize+1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newCpioInputStream(this.in,this.blockSize,this.entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newCpioInputStream(this.in,this.blockSize-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newCpioInputStream(this.in,this.blockSize,this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newCpioInputStream(this.in,this.blockSize,this.bytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("Streamclosed:Streamclosed.");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntryclosed:Streamclosed");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("Streamclosed:Streamclosed",this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("Streamclosed:Streamclosed"+this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.shutdown();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.shutdown();}else{System.err.println("InputStreamclosed:"+this.in.getMessage());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.shutdown();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.shutdown();}else{System.err.println("InputStreamclosed:"+this.in.toString());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.shutdown();}else{System.err.println("InputStreamclosed:"+this.in.getClass().getName());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.write(this.blockSize+1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.write(this.blockSize-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.write(this.blockSize,0,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.write(this.blockSize,tmpbuf);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175in!=null){this.in.close();}else{for(inti=0;i<this.in.length;++i){in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){for(inti=0;i<this.in.length;++i){in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{for(inti=0;i<this.in.length;++i){in.close();}}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{for(inti=0;i<this.in.length;++i){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.in.getInputStream();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.in.open();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.in.openStream();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.in.readIn();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.in.next();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().reportError("CpioArchiveEntry'"+this.closed+"'closed.");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().reportError("CpioArchiveEntry'"+this.closed+",'closed");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().reportError("CpioArchiveEntry'"+this.closed+"'closed,");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().reportError("CpioArchiveEntry'"+this.closed+"'closed:"+this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().reportError("CpioArchiveEntry'"+this.closed+",closed");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().reportError("CpioArchiveEntry'"+this.closed+"'closed:"+this.blockSize+"'");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.open){thrownewIOException("Streamclosed.");}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.entryEOF){this.in.close();}else{for(inti=0;i<this.blockSize;++i){thrownewIOException("
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.entryEOF){this.in.close();}else{for(inti=0;i<this.blockSize;++i){thrownewIOException(
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.entryEOF){this.in.close();}else{for(inti=0;i<this.blockSize;++i){thrownewIOException("]");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){if(this.in!=null){this.in.close();}else{for(inti=0;i<this.blockSize;++i){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.closed){thrownewIOException("Streamclosed.n");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.in.close()){in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamInputStream(this.in,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){if(this.in!=null){this.in.close();}else{thrownewIOException(",");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.closed){this.in.close();}else{thrownewIOException(",");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.entryEOF){this.in.close();}else{thrownewIOException("
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:Streamclosed,");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:Streamclosed."+this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen()+"=");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen()="+this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen()="+this.open);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.in.read());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(in.read(),this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.entryBytesRead.read());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.read());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(in.read(),this.entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(in.read(),this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175((CpioArchiveEntry)this.in).shutdown();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175((CpioArchiveEntry)this.in).closeInput();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175((CpioArchiveEntry)this.in).flush();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175((CpioArchiveEntry)this.in).ensureOpen();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175((CpioArchiveEntry)this.in).reset();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175((CpioArchiveEntry)this.in).closeStream();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(!this.enabled){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(!this.open){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){if(!this.entryEOF){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(!this.openEOF){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.in!=null){this.in.close();}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){if(this.in==null){this.in.close();}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175in!=null||this.entryEOF){this.in.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null||this.entryEOF){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.in!=null){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().setContextClassLoader(this.in);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.entryEOF){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.in!=null){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.in.closed){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.close(true);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close(false);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close(false);}else{System.err.println("InputStreamclosed:"+this.in.getClass().getName());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close(false);}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close(false);}else{System.err.println("InputStreamclosed:"+this.in.getMessage());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close(false);}else{System.err.println("InputStreamclosed:"+this.in.toString());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.closed){this.in.close();}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){in.defaultInputStream();this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){in.defaultInputStream();this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){in.defaultInputStream();this.in.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175in.defaultInputStream();this.in.flush();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){in.defaultInputStream();this.in.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF!=null){this.in.close();}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.entryEOF.open();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:Streamclosed.",this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.flush();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.flush();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.flush();}else{System.err.println("InputStreamclosed:"+this.in.toString());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.flush();}else{System.err.println("Streamclosed:"+this.in.toString());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.flush();}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175for(inti=0;i<this.in.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.clone();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){for(inti=0;i<this.in.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.clone();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{for(inti=0;i<this.in.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.clone
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{for(inti=0;i<this.in.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.clon
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeEntryEOF){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(!this.open){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(!this.enabled){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(!this.entryEOF){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(!this.shutdown){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in.close()){in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=null;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.getInputStream();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=getInputStream(this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=getInputStream("UTF-8");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=getInputStream(),this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=getInputStream(),this.blockSize;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=getInputStream(this.in);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.entryBytesRead,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.blockSize,this.entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.in,entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.entryBytesRead,tmpbuf);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.entryBytesRead,blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntryclosed:"+this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){thrownewIOException("Streamclosed.");}else{this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(this.closed){thrownewIOException("Streamclosed");}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(this.in){thrownewIOException("Streamclosed");}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175enableInvalidArchiveEntry(this.in){thrownewIOException("Streamclosed");}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(this.in){thrownewIOException("Streamclosed.");}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen()-open",this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen()-open.");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen()-open"+this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen()-open,");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen()-open"+this.open);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175((CpioArchiveEntry)entry).ensureOpen();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175((CpioArchiveEntry)this.closed).ensureOpen();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175((CpioArchiveEntry)this.entry).ensureOpen();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175((CpioArchiveEntry)this.open).ensureOpen();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175((CpioArchiveEntry)this.opener).ensureOpen();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.in,this.blockSize+1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.in,this.blockSize-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.in,this.blockSize,this.entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.in,this.blockSize,this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.in,this.blockSize,this.bytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.in,this.blockSize,this.entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(!this.closed){this.in.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){if(!this.entryEOF){this.in.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().reportError("CpioArchiveEntrynotclosed:"+this.closed,tmpbuf);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().reportError("CpioArchiveEntrynotclosed:"+this.open);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().report(JSError.make("CpioArchiveEntrynotclosed:"+this.closed));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().reportWarning("CpioArchiveEntrynotclosed:"+this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().report("CpioArchiveEntrynotclosed:"+this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{thrownewIOException("'");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():closed;n");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{thrownewIOException("Streamclosed.n");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{thrownewIOException("Streamclosed..");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("InputStreamclosed:"+this.in.getClass());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175(this.in!=null?null:this.in.close());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.in!=null){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.in,this.blockSize,this.entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.in,this.blockSize,entry);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.in,this.blockSize,entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.in,this.blockSize,entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.in,this.blockSize+1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.in,this.blockSize-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.in,this.blockSize,this.entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:closed.");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){System.err.println("CpioArchiveEntry:closed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().setCurrentName(this.entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().setCurrentName(this.open);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().setCurrentName(this.in);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().setCurrentName(this.file,this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().setCurrentName(this.closed,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().setCurrentName(this.file);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.blockSize+1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.blockSize,this.entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.blockSize-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.blockSize,this.bytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.open);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Log.err.println("CpioArchiveEntry:closed");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Logger.err.println("CpioArchiveEntry:closed");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.ensureOpen();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.ensureOpen();}else{System.err.println("InputStreamclosed:"+this.in.getMessage());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.ensureOpen();}else{System.err.println("InputStreamclosed:"+this.in.getClass().getName());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.ensureOpen();}else{System.err.println("InputStreamclosed:"+this.in.toString());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().internal();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().startInternal();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().reset();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().join();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().sleepInternal();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=entryEOF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.entryEOF,0,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=(this.entryEOF<0)?this.blockSize:this.entryEOF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.blockSize,this.entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175for(inti=0;i<this.in.read();++i){ensureOpen(in.read());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){for(inti=0;i<in.read();++i){ensureOpen(in.read());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175for(inti=0;i<in.read();++i){ensureOpen(in.read());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){for(inti=0;i<this.in.available();++i){ensureOpen(in.read());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175for(inti=0;i<this.in.available();++i){ensureOpen(in.read());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:Streamclosed"+this.open);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.in==null){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("Streamclosed:"+this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.in!=null){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175for(inti=0;i<this.in.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.clone();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.in,this.entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.in,this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.in,this.out);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.in,this.stream);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.in,this.encoding);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.in,this.cpio);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.enabled){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.enabled){thrownewIOException("Streamclosed:"+this.blockSize);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.enabled){thrownewIOException("Streamclosed",this.blockSize);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(this.closed){thrownewIOException("Streamclosed",this.closed);}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(this.in){thrownewIOException("Streamclosed",this.closed);}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175enableInvalidArchiveEntry(this.closed){thrownewIOException("Streamclosed",this.closed);}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175ensureOpen(entryEOF){thrownewIOException("Streamclosed",this.closed);}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read();if(entryEOF}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF!=null){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read();if(entryEOF}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF==null){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read();if(entryEOF}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF!=null){if(this.in!=null){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF!=null){if(this.in!=null){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read()
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF!=null){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)entryEOF.read();if(entryEOF}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:Streamclosed!n");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:Streamclosed!"+this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.in!=null&&this.closed){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){System.err.println("CpioArchiveEntry:closed.");}else{System.err.println("CpioArchiveEntry:closed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeEntryEOF){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175(this.entryEOF){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{thrownewIOException("",");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().interrupt(this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().interrupt(this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().interrupt(this);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().interrupt(this.entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().interrupt(this.blockSize,this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){if(!this.closed){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){System.err.println("InputStreamclosed:"+this.in.getBytes());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in=newInputStreamReader(this.in,this.blockSize);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){if(this.closed){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeThan<this.closed){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeThan<=this.closed){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeThan<this.closed){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeThan(this.closed){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){if(this.closed){thrownewIOException("Streamclosed",this.in);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():closed,",this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():closed"+this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():closed.",this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():closed,this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():"+this.in);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){in.defaultInput();this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){in.defaultInput();this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){in.defaultInput();this.in.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){in.defaultInput();this.in.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){in.defaultInput();this.in.close();}else{System.err.println("Streamclosed:"+this.blockSize);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(this.closed){thrownewIOException("Streamclosed.");}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175enableInvalidArchiveEntry(this.in){thrownewIOException("Streamclosed.");}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175ensureOpen(entryEOF){thrownewIOException("Streamclosed.");}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){thrownewIOException("Streamclosed:"+this.in.getMessage());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){thrownewIOException("Streamclosed:"+this.in.toString());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().reportError("Streamclosed:"+this.in.getMessage());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.skipChildren();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175in.skipChild(this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175in.skipChild(this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=entryEOF.getInputStream();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.entryEOF.openStream();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.entryEOF.getInputStream(tmpbuf);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.entryEOF.getInputStream(),this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.entryEOF.getInputStream(),blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.entryEOF.getInputStream(this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF!=null){this.in.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF!=null){this.entryEOF.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("InputStreamclosed:"+this.in.getClass().getName());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){System.err.println("InputStreamclosed:"+this.in.getClass().getName());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("InputStreamclosed:"+this.in.getMessage());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){System.err.println("InputStreamclosed:"+this.in.getMessage());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.closed){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.in.close){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().setContextClassLoader(this,tmpbuf);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().setContextClassLoader(this,this);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().setContextClassLoader(this,open);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().setContextClassLoader(this,null);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().setContextClassLoader(this,entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().setContextClassLoader(this,true);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().setCurrentName(this.open);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().setCurrentName(this.entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().setCurrentName(this.in);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().setCurrentName(this.url);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().setCurrentName(this.file,this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().setCurrentName(this.file);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:closed"+this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:closed",this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:closed"+this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:closed"+this.entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(this.closed){thrownewIOException("Streamclosed:"+this.closed);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175ensureOpen(entryEOF){thrownewIOException("Streamclosed:"+this.closed);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(this.in){thrownewIOException("Streamclosed:"+this.closed);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(this.entryEOF){thrownewIOException("Streamclosed:"+this.closed);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.entryEOF,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.closed,this.blockSize,this.entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.open,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.blockSize,this.bytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeEntryEOF){thrownewIOException("Streamclosed:"+this.closed);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){thrownewIOException("Streamclosed:"+this.closed);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){thrownewIOException("Streamclosed:"+this.open);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{thrownewIOException("Streamclosed!");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){if(this.closed){in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){if(this.closed){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.closed;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){thrownewIOException("Streamclosed:");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(this.in){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175ensureOpen(entryEOF){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(this.closed){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175enableInvalidArchiveEntry(this.in){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){if(this.in!=null){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.open){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){in.close();}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.entryBytesRead;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.in;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.entryIOF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=(this.entryEOF!=null?this.entryBytesRead):this.entryEOF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=(this.entryEOF!=null)?this.entryBytesRead:this.entryEOF;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=(this.entryEOF!=null)?this.closed:newFileInputStream(this.entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newCpioArchiveEntry(this.in,this.blockSize-1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newCpioArchiveEntry(this.in,this.blockSize+1);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){for(inti=0;i<this.in.read();++i){in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){for(inti=0;i<in.read();++i){in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){for(inti=0;i<this.in.read();++i){out.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen(),");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeOpen(){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeToOpen(){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeOpen();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeAccess();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF){if(this.closed){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.in,this.blockSize-2);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.in,this.blockSize+2);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.write(this.blockSize,false);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.shutdown(false);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed!=false){if(in!=null){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed!=false){if(in!=null){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(in.read());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.write(this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175((CpioArchiveEntry)this.closed).close();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175((CpioArchiveEntry)this.in).closeOpen();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175((CpioArchiveEntry)this.in).closed=true;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.in!=null){if(this.closed){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed!=null){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175(this.in!=null)?null:this.in.close();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.out.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.shutdown(blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.shutdown(this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.ensureOpen(this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.ensureOpen(this.entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.ensureOpen(this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.ensureOpen(this.entry);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("Streamclosed:Streamclosed!");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeOpen(){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeOpen(){thrownewIOException("Streamclosed:"+this.closed);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175((CpioArchiveEntry)this.ensureOpen());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getInternal();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().intermediate();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newCpioInputStream(this.in,this.blockSize,this.open);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeThan<=this.entryEOF){thrownewIOException("Streamclosed:"+this.closed);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.enabled){thrownewIOException("Streamclosed:"+this.closed);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().report("CpioArchiveEntry'"+this.closed+"'closed");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().reportError("CpioArchiveEntry'"+this.closed+"'closed:");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().reportError("CpioArchiveEntry'"+this.closed+"'closed",entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().reportError("CpioArchiveEntry'"+this.closed+"'closed:n");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){if(this.closed){thrownewIOException("Streamclosed");}else{this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){if(this.in!=null){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF){if(this.closed){thrownewIOException("Streamclosed");}else{this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.in,this.blockSize,this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.closed){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.entryEOF){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF!=null){this.entryEOF.close();}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.entryEOF.getInputStream(false);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.in.read(FOUR_BYTES_BUF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.in.read(this.blockSize,this.in);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.in.read(blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){in.close();}else{this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF){if(this.closed){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.in.closeInput();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.in.writeInt(this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.in.encode(this.blockSize,this.in);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=getInputStream(this.entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=getInputStream().openStream();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=getInputStream(this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{thrownewIOException("null");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{thrownewIOException("noopensource");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in.close()){in.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){if(this.in!=null){if(this.entryEOF){this.in.close();}else{thrownewIOException(",");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){if(this.in!=null){this.in.close();}else{thrownewIOException(",");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){if(this.in!=null){if(this.entryEOF){this.in.close();}else{thrownewIOException("
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){if(this.in!=null){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read();ensureOpen
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read();ensureOpen(entry);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.read();ensureOpen(entry);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){if(this.in!=null){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read()
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){if(this.in!=null){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entry!=null){this.in.close();}else{for(inti=0;i<this.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.get
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entry!=null){this.in.close();}else{for(inti=0;i<this.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF){if(this.in!=null){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF){if(this.in!=null){this.in.close();}else{for(inti=0;i<this.in.length;++i){CpioArchiveEntryentry=(CpioArch
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entry!=null){this.in.close();}else{for(inti=0;i<this.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.get
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entry!=null){this.in.close();}else{for(inti=0;i<this.length;++i){CpioArchiveEntryentry=(CpioArchiveEnt
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():"+this.entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){if(!this.closed){this.in.close();}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){System.err.println("CpioArchiveEntryclosed:"+this.blockSize);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){if(this.in!=null){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.in==null){this.in.close();}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.in==null){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){this.in.close();}else{thrownewIOException(""));}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){this.in.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){if(this.in!=null){if(this.entryEOF){this.in.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175enableInvalidArchiveEntry(this.closed){thrownewIOException("Streamclosed:"+this.closed);}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175enableInvalidArchiveEntry(this.in){thrownewIOException("Streamclosed:"+this.closed);}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175ensureOpen(entryEOF){thrownewIOException("Streamclosed:"+this.closed);}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175enableInvalidArchiveEntry(this.closed){thrownewIOException("Streamclosed.");}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){System.err.println("CpioArchiveEntry:closed");}else{System.err.println();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():closed",this.open);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():"+this.clone);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null||this.entryEOF){this.in.close();}else{thrownewIOException(",");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.in,this.entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.open);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.flush();}else{thrownewIOException("Streamclosed:");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{thrownewIOException("Streamclosed:[");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.enabled){thrownewIOException("Streamclosed",in);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){for(inti=0;i<this.out.read();++i){ensureOpen(in.read());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){for(inti=0;i<this.in.length();++i){ensureOpen(in.read());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){thrownewIOException("Streamclosed.n");}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175enableInvalidArchiveEntry(this.closed){thrownewIOException("Streamclosed:"+this.closed);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(this.open){thrownewIOException("Streamclosed:"+this.closed);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175enableInvalidArchiveEntry(this.in){thrownewIOException("Streamclosed:"+this.closed);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){if(this.in!=null){thrownewIOException("Streamclosed");}else{this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:closed"+entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println(this.blockSize+"CpioArchiveEntry.ensureOpen():"+this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():"+this.blockSize,entry);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():"+this.blockSize,entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){in.skipChildren();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){in.skipChildren();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){in.skipChildren();}else{System.arraycopy(this.entryBytesRead,0,this.blockSize,this.blockSize);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){in.skipChildren();}else{System.arraycopy(this.entryBytesRead,0,this.blockSize,this.readFully());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){in.skipChildren();}else{System.arraycopy(this.entryBytesRead,0,this.blockSize,this.blockSize);return;}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){System.err.println("Streamclosed:"+this.blockSize);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175enableInvalidArchiveEntry(this.closed){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175for(inti=0;i<this.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.clone();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{for(inti=0;i<this.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.clon
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{for(inti=0;i<this.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.clone
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(!this.out.close()){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){System.err.println("CpioArchiveEntry:closed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeThan<=this.entryEOF){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF||entryBytesRead!=null){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():open,",this.in);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){this.in.close();}else{System.err.println("InputStreamclosed:"+this.in.getMessage());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().init(this);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().release();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().setCurrentDirectory(this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){if(!this.closed){this.in.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){if(this.in!=null){if(!this.entryEOF){this.in.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(!this.open){this.in.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175enableInvalidArchiveEntry(this.in){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(this.closed){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){thrownewIOException("Streamclosed:["+this.in.getMessage());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){this.in.close();}else{System.err.println("CpioArchiveEntry:closed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeThan<=this.entryEOF){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF||this.closed){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF){if(this.closed){thrownewIOException("Streamclosed",this.in);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){if(this.closed){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entry!=null){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read();if(entryEOF}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){if(this.in!=null){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF!=null){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.read();if(entryEOF}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){this.entryEOF.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){this.in.close();}else{System.err.println("InputStreamclosed:"+this.in.getClass().getName());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){System.err.println("InputStreamclosed:"+this.in.getClass());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){in.defaultInputStream();this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){in.defaultInputStream();this.in.close();}else{System.exit(0);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.write(this.open);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().reportError("CpioArchiveEntrynotclosed:"+this.closed,entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175enableInvalidArchiveEntry(this.closed){thrownewIOException("Streamclosed");}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.tmpbuf,this.blockSize,this.entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){thrownewIOException("Streamclosed:");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeThan<=this.entryEOF){thrownewIOException("Streamclosed:");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF||entryBytesRead!=null){thrownewIOException("Streamclosed:");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF||entryBytesRead==null){thrownewIOException("Streamclosed:");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){if(this.entryEOF){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){if(this.entryEOF){this.in.close();}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){if(this.closed){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read();in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.read();in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF){for(inti=0;i<this.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read();in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)getInputStream();in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().interrupt(this,tmpbuf);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().interrupt(this.open);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().interrupt(throw);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed!=false){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entry!=null){this.in.close();}else{for(inti=0;i<this.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.clone();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entry!=null){this.in.close();}else{for(inti=0;i<this.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.clone();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entry!=null){this.in.close();}else{for(inti=0;i<this.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.clone
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entry!=null){this.in.close();}else{for(inti=0;i<this.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.clone()
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entry==null){if(this.in!=null){this.in.close();}else{for(inti=0;i<this.in.length;++i){CpioArchiveEntryentry=(CpioArch
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entry!=null){this.in.close();}else{for(inti=0;i<this.in.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.clone
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().setCurrentName(this.entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){if(this.in!=null){this.in.close();}else{for(inti=0;i<this.in.length;++i){in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){in.close();}else{for(inti=0;i<this.in.length;++i){in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){if(this.in!=null){this.in.close();}else{for(inti=0;i<this.in.length;++i){in.close();}}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){in.defaultInput();this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){in.defaultInput();this.in.close();}else{System.exit(0);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeThan<=this.entryEOF){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175(this.entryEOF||this.closed){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175(this.entryEOF||entryBytesRead){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:Streamclosed:"+this.entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("OpeningCpioArchiveEntry:Streamclosed:"+this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().setContext(this);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().enable(this);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen()-closed"+this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){if(this.in!=null){if(this.entryEOF){this.in.close();}else{for(inti=0;i<this.blockSize;++i){thrownewIOException
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){if(this.in!=null){if(this.entryEOF){this.in.close();}else{for(inti=0;i<this.blockSize;++i){thrownewIOException(
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){if(this.in!=null){if(this.entryEOF){this.in.close();}else{for(inti=0;i<this.blockSize;++i){thrownewIO
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){if(this.in!=null){if(this.entryEOF){this.in.close();}else{for(inti=0;i<this.blockSize;++i){thrownewIOException("
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().setCurrentName(this.entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in==null){if(this.closed){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.in,this.entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.in,this.tmpbuf);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.in,this.crc);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.in!=null&&this.entryEOF){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175(this.in!=null?this.in.close():entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.in!=null&&this.entryEOF){this.in.close();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.in!=null){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.open!=null){if(this.closed){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){in.defaultInput();this.in.close();}else{for(inti=0;i<this.blockSize;++i){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){in.defaultInput();this.in.close();}else{for(inti=0;i<this.blockSize;++i){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){in.close();this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{for(inti=0;i<this.in.length;++i){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{for(inti=0;i<this.in.size();++i){in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.flush();}else{System.err.println("CpioArchiveEntryclosed:"+this.in);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.flush();}else{System.arraycopy(this.in,0,this.blockSize,this.in,this.in.length);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:Streamclosed".);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){if(this.closed){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen()-open",this.open);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{for(inti=0;i<this.in.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.clo
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(entryEOF){thrownewIOException("Streamclosed:");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(!this.closed){this.in.close();}else{thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.entryEOF){this.in.close();}else{for(inti=0;i<this.blockSize;++i){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.shutdownAllArchiveEntry();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){for(inti=0;i<this.in.read();++i){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen()+",entryEOF,");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():open,this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.inputBuffer);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null&&in.isEnabled()){in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null&&in.close()){in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():open,this.in);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.in.getBytes());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(this.in.readLine());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){System.err.println("InputStreamclosed:"+this.in.getClass());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){in.close();}else{System.err.println("InputStreamclosed:"+this.in.getClass());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.in!=null){for(inti=0;i<this.in.read();++i){ensureOpen(in.read());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.in!=null){for(inti=0;i<in.read();++i){ensureOpen(in.read());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){in.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){in.close();}else{System.err.println("Streamclosed:"+this.blockSize);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read();if(entryEOF}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.entryEOF){this.in.close();}else{thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().process(in,this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(entryEOF){ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().reportError("CpioArchiveEntry'"+this.closed+"'closed:"+this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){if(this.closed){thrownewIOException("Streamclosed");}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF){if(this.closed){thrownewIOException("Streamclosed");}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null||this.entryEOF!=null){this.entryEOF.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{thrownewIOException("Streamclosed:",entryEOF);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(in.close());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in.close()){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){System.err.println("CpioArchiveEntry:closed");}else{System.err.println("CpioArchiveEntry:closed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){System.err.println("CpioArchiveEntry:closed");}else{System.err.println();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){System.err.println("CpioArchiveEntry:closed.");}else{System.err.println("CpioArchiveEntry:closed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(in.readLine());
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){if(this.closed){thrownewIOException("Streamclosed.");}else{this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.open!=null){if(this.closed){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeGet(){thrownewIOException("Streamclosed",this.closed);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeGet(){thrownewIOException("CpioArchiveEntryclosed:"+this.closed);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeGet(){thrownewIOException("CpioArchiveEntryclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().interrupt();this.in=newBufferedReader(newInputStreamReader(this.in,this.closed));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().interrupt();this.in=newBufferedReader(newInputStreamReader(this.in));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().interrupt();this.in=newBufferedReader(newInputStreamReader(this.closed));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().interrupt();this.in=newBufferedReader(newInputStreamReader(this.in,this.blockSize));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.entryEOF){thrownewIOException("Streamclosed:");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.entryEOF){if(this.closed){thrownewIOException("Streamclosed:");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.select(entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.ensureOpen(entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF!=null){if(!this.closed){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.closed,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){if(this.in!=null){this.in.close();}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in=newBufferedInputStream(this.in.getBytes());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in=newInputStreamReader(this.entryBytesRead);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.in!=null){thrownewIOException("Streamclosed:"+this.in.getMessage());}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.closed){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.read();ensureOpen(entry);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.in.read(FOUR_BYTES_BUF,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():"+this.closed,entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():",this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry.ensureOpen():"+this.closed;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175thrownewIOException("");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().intermediateThread().setContextClassLoader(this);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().setContextClassLoader(null);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newCpioInputStream(this.in,this.blockSize,entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newCpioInputStream(this.in,this.entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{thrownewIOException("Streamclosed,");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){in.defaultInputStream();this.in.close();}else{for(inti=0;i<this.blockSize;++i){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){in.defaultInputStream();this.in.close();}else{for(inti=0;i<this.blockSize;++i){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().intermediateThread();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.entryEOF){if(this.closed){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175thrownewIOException("Streamclosed.");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){this.in.close();}else{thrownewIOException(",");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:opened");
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:Streamclosed:"+this.in);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175System.err.println("CpioArchiveEntry:Streamclosed:"+this.clone);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.in==null){thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175in.defaultRead(this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF){this.in.close();}else{for(inti=0;i<this.in.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)entry.get
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{for(inti=0;i<this.in.length;++i){CpioArchiveEntryentry=(CpioArchiveEntry)this.in.
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in==null){this.entryEOF.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeThan<=this.closed){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeThan<=this.closed){thrownewIOException("Streamclosed:");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){in.close();}else{System.err.println("CpioArchiveEntryclosed:"+this.blockSize);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{System.err.println("CpioArchiveEntryclosed:"+this.blockSize);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.entryEOF){if(this.closed){thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175thread.getContextClassLoader().reportError("CpioArchiveEntrynotclosed:"+this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().reportError("CpioArchiveEntrynotclose:"+this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in.close()){in.close();}else{thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.in==null){thrownewIOException("Streamclosed.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().getContextClassLoader().setCurrentName(this.close);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newBufferedInputStream(in.read(),this.crc);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newFileInputStream(this.entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=(this.entryEOF!=null?this.entryEOF:entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=(this.entryEOF==null?this.entryEOF:entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=(this.entryEOF==null)?this.in:newFileInputStream(this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){thrownewIOException("Streamclosed:");}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175while(this.entryEOF){this.closed=true;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.entryEOF.getInputStream(this.blockSize,this.entryEOF);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=this.entryEOF.readLine();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){this.in.close();}else{for(inti=0;i<this.in.length;++i){in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null){this.in.close();}else{for(inti=0;i<this.in.length;++i){out.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175enableInvalidArchiveEntry(entryEOF){thrownewIOException("Streamclosed:"+this.closed);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null&&this.entryEOF){this.in.close();}else{thrownewIOException("");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.in!=null||this.entryEOF){this.in.close();}else{thrownewIOException("Streamclosed");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(entryEOF){for(inti=0;i<this.in.read();++i){CpioArchiveEntryentry=(CpioArchiveEntry)entries.read();in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().setCurrentPath(this.closed);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Thread.currentThread().setCurrentName(this.close);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(entryEOF){thrownewIOException("Streamclosed.Couldnotinstantiateopenaccessors.");}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in=newCpioArchiveEntry(entryEOF,entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(this.closed){thrownewIOException("Streamclosed.",this.closed);}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175allowInvalidArchiveEntry(this.closed){thrownewIOException("Streamclosed","This.closed);}else{ensureOpen();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175((CpioArchiveEntry)this.in).closed();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){in.skipChildren();}else{this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(in!=null){in.skipChildren();}else{getInputStream().close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){if(!this.closed){this.in.close();}else{in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF){if(!this.closed){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.inputBuffer,this.entryBytesRead);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175InputStreamin=newInputStreamReader(this.inputStream);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175safeGet();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Iterator<CpioArchiveEntry>in=this.in.entrySet().iterator();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175||this.in!=null){this.in.close();}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Iterator<CpioArchiveEntry>it=this.in.entrySet().iterator();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Iterator<CpioArchiveEntry>in=this.in.entrySet().iterator().next();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175Iterator<CpioArchiveEntry>this=entryBytesRead.entrySet().iterator();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175if(this.entryEOF||this.closed){thrownewIOException("Streamclosed:"+this.closed);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java175this.in.write(this.entryBytesRead,0,this.blockSize);
