projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java72
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java72CpioArchiveInputStreamcpio=(CpioArchiveInputStream)this.entryBytesRead;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java72CpioArchiveInputStreamin=(CpioArchiveInputStream)in.read();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java72CpioArchiveInputStreamcpio=(CpioArchiveInputStream)getObject();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java72CpioArchiveInputStreamcpio=newCpioArchiveInputStream();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java72CpioArchiveInputStreamcpio=(CpioArchiveInputStream)inputStream.read();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java72CpioArchiveInputStreamcpio=(CpioArchiveInputStream)super.getInputStream();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java72CpioArchiveInputStreamin=newCpioArchiveInputStream();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java72CpioArchiveInputStreaminputStream=newCpioArchiveInputStream();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java72CpioArchiveInputStreaminputStream=(CpioArchiveInputStream)this.entryBytesRead;
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java72CpioArchiveInputStreaminputStream=(CpioArchiveInputStream)inputStream.read();
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java72CpioArchiveInputStreaminputStream=newCpioArchiveInputStream(newStringReader("UTF-8"));
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java72if(entryBytesRead<=0){thrownewIllegalArgumentException("CpioArchiveInputStreamisnull.");}else{CpioArchiveInputStreamentryBytesRead=newCpioArchiveInputStream(entryBytesRead);entryBytesRead=entryBy
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java72if(entryBytesRead<=0){thrownewIllegalArgumentException("CpioArchiveInputStreamisnull.");}else{CpioArchiveInputStreamentryBytesRead=newCpioArchiveInputStream(entryBytesRead);entryBytesRead=entry
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java72if(entryBytesRead<=0){thrownewIllegalArgumentException("CpioArchiveInputStreamisnull.");}else{CpioArchiveInputStreamentryBytesRead=newCpioArchiveInputStream(entryBytesRead);entryBytesRead=entryBytesRead;}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java72if(entryBytesRead<=0){thrownewIllegalArgumentException("CpioArchiveInputStreamisnull.");}else{CpioArchiveInputStreamentryBytesRead=newCpioArchiveInputStream(entryBytesRead);entryBytesRead+=entryBy
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java72if(entryBytesRead<=0){thrownewIllegalArgumentException("CpioArchiveInputStreamisnull.");}else{CpioArchiveInputStreamentryBytesRead=newCpioArchiveInputStream(entryBytesRead);entryBytesRead=entryBytesRead
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java72if(entryBytesRead<=0){thrownewIllegalArgumentException("CpioArchiveInputStreamisnull.");}else{CpioArchiveInputStreamentryBytesRead=newCpioArchiveInputStream();entryBytesRead=entryBytesRead;}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java72if(entryBytesRead<=0){thrownewIllegalArgumentException("CpioArchiveInputStreamisnull.");}else{CpioArchiveInputStreaminputStream=newCpioArchiveInputStream(inputStream);entryBytesRead=inputStream;}
