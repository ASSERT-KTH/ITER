bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
2	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
3	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
4	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
5	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbu  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbu  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbu	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
6	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmp  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmp  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmp	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
7	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
8	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
9	[BUG]  [BUGGY]  if(entry  ==  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry  ==  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry  ==  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
12	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
15	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
16	[BUG]  [BUGGY]  if(entry  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
18	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
19	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clon  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clon  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clon	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
20	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
22	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
23	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmp  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmp  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmp	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
24	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
25	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbu  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbu  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbu	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
26	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
27	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
28	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  ensureOpen();  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
29	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  in.close();  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  in.close();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  in.close();  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
30	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  blockSize;  i++)  {  this.tmpbuf[i]  =  entryEOF;  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  blockSize;  i++)  {  this.tmpbuf[i]  =  entryEOF;  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  blockSize;  i++)  {  this.tmpbuf[i]  =  entryEOF;  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
31	[BUG]  [BUGGY]  in.close();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  in.close();  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	in.close();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
33	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
34	[BUG]  [BUGGY]  if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    length    =    this.tmpbuf.length;    i    <    length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    length    =    this.tmpbuf.length;    i    <    length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
36	[BUG]  [BUGGY]  if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    length    =    this.tmpbuf.length;    i    <    length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
37	[BUG]  [BUGGY]  if(this.tmpbuf  ==  null)  {  for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf  ==  null)  {  for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf  ==  null)  {  for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    length    =    this.tmpbuf.length;    i    <    length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
38	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  length  =  this.tmpBuf.length;  i  <  length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  length  =  this.tmpBuf.length;  i  <  length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0,  length  =  this.tmpBuf.length;  i  <  length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    length    =    this.tmpbuf.length;    i    <    length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
39	[BUG]  [BUGGY]  if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  length  =  this.tmpBuf.length;  i  <  length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  length  =  this.tmpBuf.length;  i  <  length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  length  =  this.tmpBuf.length;  i  <  length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    length    =    this.tmpbuf.length;    i    <    length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
40	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(ent  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(ent  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(ent	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
41	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
42	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
43	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
44	[BUG]  [BUGGY]  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  1,  this.tmpbuf.length  -  1);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  1,  this.tmpbuf.length  -  1);  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  1,  this.tmpbuf.length  -  1);	  System.arraycopy(this.tmpbuf,    0,    this.tmpbuf,    1,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
45	[BUG]  [BUGGY]  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  1,  this.tmpbuf.length  +  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  1,  this.tmpbuf.length  +  1);  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  1,  this.tmpbuf.length  +  1);	  System.arraycopy(this.tmpbuf,    0,    this.tmpbuf,    1,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
46	[BUG]  [BUGGY]  System.arraycopy(this.tmpBuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  System.arraycopy(this.tmpBuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	System.arraycopy(this.tmpBuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length);	  System.arraycopy(this.tmpbuf,    0,    this.tmpbuf,    1,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
47	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  1,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  1,  this.tmpbuf.length);  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  1,  this.tmpbuf.length);	  System.arraycopy(this.tmpbuf,    0,    this.tmpbuf,    1,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
48	[BUG]  [BUGGY]  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  1,  this.tmpbuf.length  -  2);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  1,  this.tmpbuf.length  -  2);  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  1,  this.tmpbuf.length  -  2);	  System.arraycopy(this.tmpbuf,    0,    this.tmpbuf,    1,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
49	[BUG]  [BUGGY]  if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
51	[BUG]  [BUGGY]  if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
52	[BUG]  [BUGGY]  if(this.tmpbuf  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
53	[BUG]  [BUGGY]  if(this.entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
54	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpBuf.length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpBuf.length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpBuf.length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
55	[BUG]  [BUGGY]  &&  entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entryEOF  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  &&  entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entryEOF  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	&&  entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entryEOF	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
56	[BUG]  [BUGGY]  ||  entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entryEOF  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  ||  entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entryEOF  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	||  entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entryEOF	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
57	[BUG]  [BUGGY]  ||  entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getValue  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  ||  entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getValue  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	||  entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getValue	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
58	[BUG]  [BUGGY]  ||  entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  ||  entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	||  entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
59	[BUG]  [BUGGY]  ||  entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArch  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  ||  entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArch  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	||  entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArch	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
60	[BUG]  [BUGGY]  ||  entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  ||  entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	||  entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
61	[BUG]  [BUGGY]  &&  entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  &&  entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	&&  entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
62	[BUG]  [BUGGY]  for(int  i  =  0,  blockSize;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  for(int  i  =  0,  blockSize;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	for(int  i  =  0,  blockSize;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    blockSize;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
63	[BUG]  [BUGGY]  while(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  blockSize;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  while(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  blockSize;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	while(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  blockSize;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    blockSize;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
64	[BUG]  [BUGGY]  while(this.tmpbuf!=  null  &&  this.tmpbuf.length  >  0)  {  for(int  i  =  0,  blockSize;  i  <  blockSize;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  while(this.tmpbuf!=  null  &&  this.tmpbuf.length  >  0)  {  for(int  i  =  0,  blockSize;  i  <  blockSize;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	while(this.tmpbuf!=  null  &&  this.tmpbuf.length  >  0)  {  for(int  i  =  0,  blockSize;  i  <  blockSize;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    blockSize;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
65	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.tmpBuf.length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.tmpBuf.length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.tmpBuf.length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    blockSize;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
66	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.blockSize;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.blockSize;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.blockSize;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    blockSize;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
67	[BUG]  [BUGGY]  if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    this.tmpbuf.length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
68	[BUG]  [BUGGY]  if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    this.tmpbuf.length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
69	[BUG]  [BUGGY]  if(this.entryEOF)  {  for(int  i  =  0,  blockSize;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF)  {  for(int  i  =  0,  blockSize;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF)  {  for(int  i  =  0,  blockSize;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    this.tmpbuf.length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
70	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  length;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  length;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0,  length;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    this.tmpbuf.length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
71	[BUG]  [BUGGY]  if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.tmpBuf.length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.tmpBuf.length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.tmpBuf.length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    this.tmpbuf.length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
72	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  size;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  size;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  size;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    size    =    this.tmpbuf.length;    i    <    size;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
73	[BUG]  [BUGGY]  if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  size;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  size;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  size;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    size    =    this.tmpbuf.length;    i    <    size;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
74	[BUG]  [BUGGY]  if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  size;  ++i)  {  ensureOpen();  }  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  size;  ++i)  {  ensureOpen();  }  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  size;  ++i)  {  ensureOpen();  }  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    size    =    this.tmpbuf.length;    i    <    size;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
75	[BUG]  [BUGGY]  if(this.tmpbuf  ==  null)  {  for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  size;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf  ==  null)  {  for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  size;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf  ==  null)  {  for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  size;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    size    =    this.tmpbuf.length;    i    <    size;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
76	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  blockSize;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  blockSize;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  blockSize;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    size    =    this.tmpbuf.length;    i    <    size;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
77	[BUG]  [BUGGY]  if(this.entryEOF)  {  for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  size;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF)  {  for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  size;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF)  {  for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  size;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    size    =    this.tmpbuf.length;    i    <    size;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
78	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  ==  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  ==  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  ==	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
79	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(ent  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(ent  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(ent	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
80	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getData  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getData  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getData	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
81	[BUG]  [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	&&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
82	[BUG]  [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbu  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbu  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	&&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbu	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
83	[BUG]  [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	&&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
84	[BUG]  [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	&&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
85	[BUG]  [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getData  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getData  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	&&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getData	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
86	[BUG]  [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmp  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmp  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	&&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmp	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
87	[BUG]  [BUGGY]  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length  -  1);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length  -  1);  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length  -  1);	  System.arraycopy(this.tmpbuf,    0,    this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
88	[BUG]  [BUGGY]  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length  +  1);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length  +  1);  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length  +  1);	  System.arraycopy(this.tmpbuf,    0,    this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
89	[BUG]  [BUGGY]  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length  -  2);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length  -  2);  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length  -  2);	  System.arraycopy(this.tmpbuf,    0,    this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
90	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  0,  this.tmpbuf.length);	  System.arraycopy(this.tmpbuf,    0,    this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
91	[BUG]  [BUGGY]  System.arraycopy(this.tmpBuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length  -  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  System.arraycopy(this.tmpBuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length  -  1);  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	System.arraycopy(this.tmpBuf,  0,  this.tmpbuf,  0,  this.tmpbuf.length  -  1);	  System.arraycopy(this.tmpbuf,    0,    this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
92	[BUG]  [BUGGY]  if(entryEOF!=  null)  {  for(int  i  =  0,  blockSize;  i  <  blockSize;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF!=  null)  {  for(int  i  =  0,  blockSize;  i  <  blockSize;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF!=  null)  {  for(int  i  =  0,  blockSize;  i  <  blockSize;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    blockSize;    ++i)    {    this.tmpbuf[i]    =    entryEOF;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
93	[BUG]  [BUGGY]  for(int  i  =  0,  blockSize;  i  <  this.tmpbuf.length;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  for(int  i  =  0,  blockSize;  i  <  this.tmpbuf.length;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	for(int  i  =  0,  blockSize;  i  <  this.tmpbuf.length;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    blockSize;    ++i)    {    this.tmpbuf[i]    =    entryEOF;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
94	[BUG]  [BUGGY]  this.tmpbuf[i]  =  entryEOF;  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  this.tmpbuf[i]  =  entryEOF;  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	this.tmpbuf[i]  =  entryEOF;	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    blockSize;    ++i)    {    this.tmpbuf[i]    =    entryEOF;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
95	[BUG]  [BUGGY]  if(entryEOF!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.tmpbuf.length;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.tmpbuf.length;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.tmpbuf.length;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    blockSize;    ++i)    {    this.tmpbuf[i]    =    entryEOF;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
96	[BUG]  [BUGGY]  if(entryEOF!=  null)  {  int  blockSize  =  this.tmpbuf.length;  for(int  i  =  0,  blockSize;  i  <  blockSize;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF!=  null)  {  int  blockSize  =  this.tmpbuf.length;  for(int  i  =  0,  blockSize;  i  <  blockSize;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF!=  null)  {  int  blockSize  =  this.tmpbuf.length;  for(int  i  =  0,  blockSize;  i  <  blockSize;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    blockSize;    ++i)    {    this.tmpbuf[i]    =    entryEOF;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
97	[BUG]  [BUGGY]  for(int  i  =  0,  blockSize;  i  <  this.tmpBuf.length;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  for(int  i  =  0,  blockSize;  i  <  this.tmpBuf.length;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	for(int  i  =  0,  blockSize;  i  <  this.tmpBuf.length;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    blockSize;    ++i)    {    this.tmpbuf[i]    =    entryEOF;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
98	[BUG]  [BUGGY]  this.tmpbuf[0]  =  entryEOF;  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  this.tmpbuf[0]  =  entryEOF;  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	this.tmpbuf[0]  =  entryEOF;	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    blockSize;    ++i)    {    this.tmpbuf[i]    =    entryEOF;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
99	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
100	[BUG]  [BUGGY]  if(entry  ==  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry  ==  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry  ==  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
101	[BUG]  [BUGGY]  if(entry!=  null)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry!=  null)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry!=  null)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
102	[BUG]  [BUGGY]  if(entry!=  null)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArch  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry!=  null)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArch  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry!=  null)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArch	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
103	[BUG]  [BUGGY]  if(entry!=  null)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(Cpi  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry!=  null)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(Cpi  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry!=  null)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(Cpi	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
104	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
105	[BUG]  [BUGGY]  if(entry  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
106	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
107	[BUG]  [BUGGY]  if(entry  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
108	[BUG]  [BUGGY]  byte[]  FOUR_BYTES_BUF,  this.tmpbuf.length)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  byte[]  FOUR_BYTES_BUF,  this.tmpbuf.length)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	byte[]  FOUR_BYTES_BUF,  this.tmpbuf.length)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
109	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
110	[BUG]  [BUGGY]  if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
111	[BUG]  [BUGGY]  if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
112	[BUG]  [BUGGY]  if(this.tmpbuf  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf  ==  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
113	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpBuf.length;  i++)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpBuf.length;  i++)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpBuf.length;  i++)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
114	[BUG]  [BUGGY]  if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpBuf.length;  i++)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpBuf.length;  i++)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpBuf.length;  i++)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
115	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
116	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
117	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
118	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
119	[BUG]  [BUGGY]  if(this.entryEOF)  {  for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF)  {  for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF)  {  for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    length    =    this.tmpbuf.length;    i    <    length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
120	[BUG]  [BUGGY]  while(this.tmpbuf!=  null)  {  for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  while(this.tmpbuf!=  null)  {  for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	while(this.tmpbuf!=  null)  {  for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    length    =    this.tmpbuf.length;    i    <    length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
121	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF!=  null)  {  for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF!=  null)  {  for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    length    =    this.tmpbuf.length;    i    <    length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
122	[BUG]  [BUGGY]  while(this.tmpbuf!=  null  &&  this.tmpbuf.length  >  0)  {  for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  while(this.tmpbuf!=  null  &&  this.tmpbuf.length  >  0)  {  for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	while(this.tmpbuf!=  null  &&  this.tmpbuf.length  >  0)  {  for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    length    =    this.tmpbuf.length;    i    <    length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
123	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
124	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
125	[BUG]  [BUGGY]  &&  entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  &&  entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	&&  entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
126	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
127	[BUG]  [BUGGY]  &&  entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArch  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  &&  entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArch  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	&&  entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArch	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
128	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  blockSize;  i  <  blockSize;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  blockSize;  i  <  blockSize;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  for(int  i  =  0,  blockSize;  i  <  blockSize;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    blockSize;    ++i)    {    this.tmpbuf[i]    =    entryEOF;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
129	[BUG]  [BUGGY]  for(int  i  =  0,  blockSize;  i  <  blockSize;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  for(int  i  =  0,  blockSize;  i  <  blockSize;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	for(int  i  =  0,  blockSize;  i  <  blockSize;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    blockSize;    ++i)    {    this.tmpbuf[i]    =    entryEOF;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
130	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.tmpbuf.length;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.tmpbuf.length;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.tmpbuf.length;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    blockSize;    ++i)    {    this.tmpbuf[i]    =    entryEOF;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
131	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  blockSize;  ++i)  {  this.tmpbuf[i]  =  FOUR_BYTES_BUF;  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  blockSize;  ++i)  {  this.tmpbuf[i]  =  FOUR_BYTES_BUF;  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  blockSize;  ++i)  {  this.tmpbuf[i]  =  FOUR_BYTES_BUF;  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    blockSize;    ++i)    {    this.tmpbuf[i]    =    entryEOF;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
132	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getVal  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getVal  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getVal	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
133	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
134	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
135	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
136	[BUG]  [BUGGY]  while(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  while(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	while(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
137	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
138	[BUG]  [BUGGY]  while(this.tmpbuf!=  null  &&  this.tmpbuf.length  >  0)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  while(this.tmpbuf!=  null  &&  this.tmpbuf.length  >  0)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	while(this.tmpbuf!=  null  &&  this.tmpbuf.length  >  0)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
139	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
140	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  }  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
141	[BUG]  [BUGGY]  &&  entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getData  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  &&  entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getData  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	&&  entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getData	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
142	[BUG]  [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	&&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
143	[BUG]  [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArch  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArch  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	&&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArch	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
144	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
145	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getVal  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getVal  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getVal	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
146	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValu	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
147	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
148	[BUG]  [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
149	[BUG]  [BUGGY]  if(this.entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
150	[BUG]  [BUGGY]  while(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  while(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	while(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
151	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
152	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  this.tmpbuf.length;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  this.tmpbuf.length;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0,  this.tmpbuf.length;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
153	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    this.tmpbuf.length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
154	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  this.tmpbufSize;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  this.tmpbufSize;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0,  this.tmpbufSize;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    this.tmpbuf.length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
155	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
156	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
157	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
158	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
159	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
160	[BUG]  [BUGGY]  if(this.entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
161	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clo  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clo  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clo	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
162	[BUG]  [BUGGY]  &&  entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  &&  entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	&&  entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
163	[BUG]  [BUGGY]  while(this.tmpbuf!=  null)  {  for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  size;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  while(this.tmpbuf!=  null)  {  for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  size;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	while(this.tmpbuf!=  null)  {  for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  size;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    size    =    this.tmpbuf.length;    i    <    size;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
164	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  size;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF!=  null)  {  for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  size;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF!=  null)  {  for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  size;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    size    =    this.tmpbuf.length;    i    <    size;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
165	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  size;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  size;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0,  length  =  this.tmpbuf.length;  i  <  size;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    size    =    this.tmpbuf.length;    i    <    size;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
166	[BUG]  [BUGGY]  &&  entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getValue  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  &&  entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getValue  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	&&  entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getValue	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
167	[BUG]  [BUGGY]  &&  entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getValu  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  &&  entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getValu  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	&&  entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.getValu	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
168	[BUG]  [BUGGY]  &&  entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  &&  entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	&&  entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
169	[BUG]  [BUGGY]  &&  entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArch  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  &&  entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArch  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	&&  entry!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArch	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
170	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  blocksize;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  blocksize;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  blocksize;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    blockSize;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
171	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  this.tmpbuf.length;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  this.tmpbuf.length;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0,  this.tmpbuf.length;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    this.tmpbuf.length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
172	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  size;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  size;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0,  size;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    this.tmpbuf.length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
173	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
174	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
175	[BUG]  [BUGGY]  if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
176	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(ent  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(ent  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(ent	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
177	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.blockSize;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.blockSize;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0,  blockSize;  i  <  this.blockSize;  ++i)  {  this.tmpbuf[i]  =  entryEOF;  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    blockSize;    i    <    blockSize;    ++i)    {    this.tmpbuf[i]    =    entryEOF;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
178	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.clone();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
179	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone()  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone()  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone()	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
180	[BUG]  [BUGGY]  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  2,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  2,  this.tmpbuf.length);  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	System.arraycopy(this.tmpbuf,  0,  this.tmpbuf,  2,  this.tmpbuf.length);	  System.arraycopy(this.tmpbuf,    0,    this.tmpbuf,    1,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
181	[BUG]  [BUGGY]  System.arraycopy(this.entry,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  System.arraycopy(this.entry,  0,  this.tmpbuf,  0,  this.tmpbuf.length);  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	System.arraycopy(this.entry,  0,  this.tmpbuf,  0,  this.tmpbuf.length);	  System.arraycopy(this.tmpbuf,    0,    this.tmpbuf,    0,    this.tmpbuf.length);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
182	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  1;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  1;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  1;  i  <  this.tmpbuf.length;  i++)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
183	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
184	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
185	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  }  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
186	[BUG]  [BUGGY]  if(this.entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
187	[BUG]  [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	&&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getData    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
188	[BUG]  [BUGGY]  if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEnt	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
189	[BUG]  [BUGGY]  if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArch  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArch  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF!=  illegal  start  of  type)  {  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArch	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
190	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0,  size  =  this.tmpbuf.length;  i  <  length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    size    =    this.tmpbuf.length;    i    <    size;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
191	[BUG]  [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getVal  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  &&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getVal  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	&&  this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getVal	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
192	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
193	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
194	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
195	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
196	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if(entryEOF  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
197	[BUG]  [BUGGY]  if(this.entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getValue();  if	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
198	[BUG]  [BUGGY]  if(this.entryEOF!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getVal  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.entryEOF!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getVal  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.entryEOF!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.getVal	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.getValue();    if(entryEOF    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
199	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
200	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)entry.get	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
201	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
202	[BUG]  [BUGGY]  if(this.tmpbuf!=  null  ||  this.tmpbuf.length  <  0)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null  ||  this.tmpbuf.length  <  0)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null  ||  this.tmpbuf.length  <  0)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
203	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  1;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  1;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  1;  i  <  this.tmpbuf.length;  ++i)  {  ensureOpen();  }	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
204	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clo  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clo  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clo	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
205	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clon  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clon  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clon	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
206	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clone	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
207	[BUG]  [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clo  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clo  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entry!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.clo	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
208	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0,  len  =  this.tmpbuf.length;  i  <  len;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.	  if(this.tmpbuf!=    null)    {    for(int    i    =    0,    len    =    this.tmpbuf.length;    i    <    len;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.clone();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
209	[BUG]  [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(this.tmpbuf!=  null)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
210	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
211	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(ent  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(ent  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(ent	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
212	[BUG]  [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException    [CONTEXT]    private  void  closeEntry()  throws  IOException  {  ensureOpen();  while  (read(this.tmpbuf,  0,  this.tmpbuf.length)  !=  -1)  {  //  NOPMD  }  this.entryEOF  =  true;    [BUGGY]  if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF  [BUGGY]      [CLASS]  CpioArchiveInputStream  [METHOD]  closeEntry  [RETURN_TYPE]  void  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	0.7071067811865475	163	163	1	replace	if(entryEOF)  {  for(int  i  =  0;  i  <  this.tmpbuf.length;  ++i)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.tmpbuf.get(i);  if(entryEOF	  if(this.tmpbuf!=    null)    {    for(int    i    =    0;    i    <    this.tmpbuf.length;    ++i)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.tmpbuf.get(i);    if(entryEOF    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
