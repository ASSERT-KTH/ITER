bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	69	None	replace
2	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  magicString,  FOUR_BYTES_BUF.length);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  magicString,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  magicString,  FOUR_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	69	None	replace
3	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	69	None	replace
4	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	69	None	replace
5	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                  NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.in,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	69	None	replace
6	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.mappingString,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);  [CE]  cannot  find  symbol  mappingString  [FE]                    NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.mappingString,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.mappingString,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  cannot  find  symbol  mappingString	69	None	replace
7	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.siZE,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);  [CE]  cannot  find  symbol  siZE  [FE]                      NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.siZE,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.siZE,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  cannot  find  symbol  siZE	69	None	replace
8	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	add	this.entry        =        readNewEntry(true);        System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FOUR_BYTES_BUF.length);    this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);	  	compilable	  [FE]  ArrayStoreException  	62	1	add
9	[BUG]  [BUGGY]  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry        =        readNewEntry(true);        System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FOUR_BYTES_BUF.length);    this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);	  	compilable	  [FE]  ArrayStoreException  	62	1	add
10	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	add	this.entry        =        readNewEntry(true);        System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FOUR_BYTES_BUF.length);    this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);	  	compilable	  [FE]  ArrayStoreException  	62	1	add
11	[BUG]  [BUGGY]  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry        =        readNewEntry(true);        System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FOUR_BYTES_BUF.length);    this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);	  	compilable	  [FE]  ArrayStoreException  	62	1	add
12	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	add	this.entry        =        readNewEntry(true);        System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FOUR_BYTES_BUF.length);    System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);	  	compilable	  [FE]  ArrayStoreException  	62	1	add
13	[BUG]  [BUGGY]  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry        =        readNewEntry(true);        System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FOUR_BYTES_BUF.length);    System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);	  	compilable	  [FE]  ArrayStoreException  	62	1	add
14	[BUG]  [BUGGY]  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  This.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [CE]  cannot  find  symbol  This  [FE]          ArrayStoreException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  This.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry        =        readNewEntry(true);        System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FOUR_BYTES_BUF.length);    This.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);	  	non-compiled	[CE]  cannot  find  symbol  This	62	None	add
15	[BUG]  [BUGGY]  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [CE]  illegal  start  of  expression  [FE]            ArrayStoreException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry        =        readNewEntry(true);        System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FOUR_BYTES_BUF.length);    =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
16	[BUG]  [BUGGY]  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYtes_BUF.length);  [CE]  cannot  find  symbol  FOUR_BYtes_BUF  [FE]              ArrayStoreException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYtes_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry        =        readNewEntry(true);        System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FOUR_BYTES_BUF.length);    this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYtes_BUF.length);	  	non-compiled	[CE]  cannot  find  symbol  FOUR_BYtes_BUF	62	None	add
17	[BUG]  [BUGGY]  [FE]  NumberFormatException  [FE]    NumberFormatException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	add	this.entry        =        readNewEntry(true);        this.entry    =    readNewEntry(false);    this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);	  	compilable	  [FE]  NumberFormatException  	13	1	add
18	[BUG]  [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);  [FE]  NumberFormatException  [FE]    NumberFormatException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry        =        readNewEntry(true);        this.entry    =    readNewEntry(false);    this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);	  	compilable	  [FE]  NumberFormatException  	13	1	add
19	[BUG]  [BUGGY]  [FE]  NumberFormatException  [FE]      NumberFormatException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	add	this.entry        =        readNewEntry(true);        this.entry    =    readNewEntry(false);    this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(false);	  	compilable	  [FE]  NumberFormatException  	13	1	add
20	[BUG]  [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(false);  [FE]  NumberFormatException  [FE]      NumberFormatException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry        =        readNewEntry(true);        this.entry    =    readNewEntry(false);    this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(false);	  	compilable	  [FE]  NumberFormatException  	13	1	add
21	[BUG]  [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  This.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);  [CE]  cannot  find  symbol  This  [FE]        NumberFormatException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  This.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry        =        readNewEntry(true);        this.entry    =    readNewEntry(false);    This.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);	  	non-compiled	[CE]  cannot  find  symbol  This	13	None	add
22	[BUG]  [BUGGY]  [FE]  NumberFormatException  [FE]          NumberFormatException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	add	this.entry        =        readNewEntry(true);        this.entry    =    readNewEntry(false);    this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(true);	  	compilable	  [FE]  NumberFormatException  	13	1	add
23	[BUG]  [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(true);  [FE]  NumberFormatException  [FE]          NumberFormatException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry        =        readNewEntry(true);        this.entry    =    readNewEntry(false);    this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(true);	  	compilable	  [FE]  NumberFormatException  	13	1	add
24	[BUG]  [BUGGY]  if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(true);  }  [CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()  [FE]                  NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(true);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(true);  }	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()	10	None	replace
25	[BUG]  [BUGGY]  if(magicString!=  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(true);  }  [CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()  [FE]                    NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString!=  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(true);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString!=  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(true);  }	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()	10	None	replace
26	[BUG]  [BUGGY]  this.entry  =  readNEW(false,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC));  [CE]  no  suitable  method  found  for  toAsciiString(String)  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(false,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC));  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(false,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC));	  this.entry    =    readNEW(false,    magicString);    	non-compiled	[CE]  no  suitable  method  found  for  toAsciiString(String)	24	None	replace
27	[BUG]  [BUGGY]  this.entry  =  readNEW(false,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_ASCII));  [CE]  cannot  find  symbol  MAGIC_NEW_ASCII  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(false,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_ASCII));  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(false,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_ASCII));	  this.entry    =    readNEW(false,    magicString);    	non-compiled	[CE]  cannot  find  symbol  MAGIC_NEW_ASCII	24	None	replace
28	[BUG]  [BUGGY]  this.entry  =  readNEW(false,  magicString,  ArchiveUtils.toAsciiString(SIX_BYTES_BUF));  [CE]  cannot  find  symbol  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(false,  magicString,  ArchiveUtils.toAsciiString(SIX_BYTES_BUF));  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(false,  magicString,  ArchiveUtils.toAsciiString(SIX_BYTES_BUF));	  this.entry    =    readNEW(false,    magicString);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
29	[BUG]  [BUGGY]  this.entry  =  readNEW(false,  magicString,  ArchiveUtils.toAsciiString(SIX_BYTES_BUF.length));  [CE]  no  suitable  method  found  for  toAsciiString(int)  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(false,  magicString,  ArchiveUtils.toAsciiString(SIX_BYTES_BUF.length));  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(false,  magicString,  ArchiveUtils.toAsciiString(SIX_BYTES_BUF.length));	  this.entry    =    readNEW(false,    magicString);    	non-compiled	[CE]  no  suitable  method  found  for  toAsciiString(int)	24	None	replace
30	[BUG]  [BUGGY]  this.entry  =  readNEW(false,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CLC));  [CE]  cannot  find  symbol  MAGIC_NEW_CLC  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(false,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CLC));  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(false,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CLC));	  this.entry    =    readNEW(false,    magicString);    	non-compiled	[CE]  cannot  find  symbol  MAGIC_NEW_CLC	24	None	replace
31	[BUG]  [BUGGY]  this.entry  =  readNEW(false,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_KEY));  [CE]  cannot  find  symbol  MAGIC_NEW_KEY  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(false,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_KEY));  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(false,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_KEY));	  this.entry    =    readNEW(false,    magicString);    	non-compiled	[CE]  cannot  find  symbol  MAGIC_NEW_KEY	24	None	replace
32	[BUG]  [BUGGY]  this.entry  =  readNEW(true,  MAGIC_NEW_CRC);  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(true,  MAGIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(true,  MAGIC_NEW_CRC);	  this.entry    =    readNEW(true);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
33	[BUG]  [BUGGY]  this.entry  =  readNEW(true,  MAX_NEW_CRC);  [CE]  cannot  find  symbol  MAX_NEW_CRC  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(true,  MAX_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(true,  MAX_NEW_CRC);	  this.entry    =    readNEW(true);    	non-compiled	[CE]  cannot  find  symbol  MAX_NEW_CRC	18	None	replace
34	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  SIX_BYTES_BUF);  [CE]  cannot  find  symbol  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  SIX_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  SIX_BYTES_BUF);	  this.entry    =    readNEwEntry(true,    MAX_NEW);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
35	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  BYTES_BUF);  [CE]  cannot  find  symbol  BYTES_BUF  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  BYTES_BUF);	  this.entry    =    readNEwEntry(true,    MAX_NEW);    	non-compiled	[CE]  cannot  find  symbol  BYTES_BUF	60	None	replace
36	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  MISSING_CRC);  [CE]  cannot  find  symbol  MISSING_CRC  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  MISSING_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  MISSING_CRC);	  this.entry    =    readNEwEntry(true,    MAX_NEW);    	non-compiled	[CE]  cannot  find  symbol  MISSING_CRC	60	None	replace
37	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  MAX_BYTES_BUF);  [CE]  cannot  find  symbol  MAX_BYTES_BUF  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  MAX_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  MAX_BYTES_BUF);	  this.entry    =    readNEwEntry(true,    MAX_NEW);    	non-compiled	[CE]  cannot  find  symbol  MAX_BYTES_BUF	60	None	replace
38	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  MAX_NEW_CRC,  magicString);  [CE]  cannot  find  symbol  MAX_NEW_CRC  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  MAX_NEW_CRC,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  MAX_NEW_CRC,  magicString);	  this.entry    =    readNewEntry(false,    MAX_NEW_CRC,    magicString);    	non-compiled	[CE]  cannot  find  symbol  MAX_NEW_CRC	36	None	replace
39	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  FOUR_BYTES_BUF,  magicString);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  FOUR_BYTES_BUF,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  FOUR_BYTES_BUF,  magicString);	  this.entry    =    readNewEntry(false,    MAX_NEW_CRC,    magicString);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	36	None	replace
40	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  FOUR_BYTES_BUF,  magicString);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  FOUR_BYTES_BUF,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  FOUR_BYTES_BUF,  magicString);	  this.entry    =    readNewEntry(false,    MAX_NEW_CRC,    magicString);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	36	None	replace
41	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  MISSING_NEW_CRC,  magicString);  [CE]  cannot  find  symbol  MISSING_NEW_CRC  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  MISSING_NEW_CRC,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  MISSING_NEW_CRC,  magicString);	  this.entry    =    readNewEntry(false,    MAX_NEW_CRC,    magicString);    	non-compiled	[CE]  cannot  find  symbol  MISSING_NEW_CRC	36	None	replace
42	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  SIX_NEW_CRC,  magicString);  [CE]  cannot  find  symbol  SIX_NEW_CRC  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  SIX_NEW_CRC,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  SIX_NEW_CRC,  magicString);	  this.entry    =    readNewEntry(false,    MAX_NEW_CRC,    magicString);    	non-compiled	[CE]  cannot  find  symbol  SIX_NEW_CRC	36	None	replace
43	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  false,  magicString);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  false,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  false,  magicString);	  this.entry    =    readNewEntry(false,    MAX_NEW_CRC,    magicString);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	36	None	replace
44	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  MISSING_NEW_CRC,  magicString);  [CE]  cannot  find  symbol  MISSING_NEW_CRC  [FE]                                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  MISSING_NEW_CRC,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  MISSING_NEW_CRC,  magicString);	  this.entry    =    readNewEntry(false,    MAX_NEW_CRC,    magicString);    	non-compiled	[CE]  cannot  find  symbol  MISSING_NEW_CRC	36	None	replace
45	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(false,  magicString);  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(false,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(false,  magicString);	  this.entry    =    readNEwEntry(false);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
46	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(false,  MAX_NEW_CRC);  [CE]  cannot  find  symbol  MAX_NEW_CRC  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(false,  MAX_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(false,  MAX_NEW_CRC);	  this.entry    =    readNEwEntry(false);    	non-compiled	[CE]  cannot  find  symbol  MAX_NEW_CRC	40	None	replace
47	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(false,  MAGIC_NEW_CRC);  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(false,  MAGIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(false,  MAGIC_NEW_CRC);	  this.entry    =    readNEwEntry(false);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
48	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(false,  MISSING_NEW_CRC);  [CE]  cannot  find  symbol  MISSING_NEW_CRC  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(false,  MISSING_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(false,  MISSING_NEW_CRC);	  this.entry    =    readNEwEntry(false);    	non-compiled	[CE]  cannot  find  symbol  MISSING_NEW_CRC	40	None	replace
49	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC));  [CE]  no  suitable  method  found  for  toAsciiString(String)  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC));  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC));	  this.entry    =    readNEwEntry(true,    magicString);    	non-compiled	[CE]  no  suitable  method  found  for  toAsciiString(String)	41	None	replace
50	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  magicString,  ArchiveUtils.toAsciiString(SIX_BYTES_BUF));  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  magicString,  ArchiveUtils.toAsciiString(SIX_BYTES_BUF));  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  magicString,  ArchiveUtils.toAsciiString(SIX_BYTES_BUF));	  this.entry    =    readNEwEntry(true,    magicString);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
51	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_ASCII));  [CE]  cannot  find  symbol  MAGIC_NEW_ASCII  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_ASCII));  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_ASCII));	  this.entry    =    readNEwEntry(true,    magicString);    	non-compiled	[CE]  cannot  find  symbol  MAGIC_NEW_ASCII	41	None	replace
52	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  magicString,  ArchiveUtils.toAsciiString(SIX_BYTES_BUF.length));  [CE]  no  suitable  method  found  for  toAsciiString(int)  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  magicString,  ArchiveUtils.toAsciiString(SIX_BYTES_BUF.length));  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  magicString,  ArchiveUtils.toAsciiString(SIX_BYTES_BUF.length));	  this.entry    =    readNEwEntry(true,    magicString);    	non-compiled	[CE]  no  suitable  method  found  for  toAsciiString(int)	41	None	replace
53	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW));  [CE]  no  suitable  method  found  for  toAsciiString(String)  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW));  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW));	  this.entry    =    readNEwEntry(true,    magicString);    	non-compiled	[CE]  no  suitable  method  found  for  toAsciiString(String)	41	None	replace
54	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CLC));  [CE]  cannot  find  symbol  MAGIC_NEW_CLC  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CLC));  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CLC));	  this.entry    =    readNEwEntry(true,    magicString);    	non-compiled	[CE]  cannot  find  symbol  MAGIC_NEW_CLC	41	None	replace
55	[BUG]  [BUGGY]  This.entry  =  readNewEntry(false);  [CE]  cannot  find  symbol  This  [FE]                IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  This.entry  =  readNewEntry(false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	This.entry  =  readNewEntry(false);	  this.entry    =    readNewEntry(true);    This.entry    =    readNewEntry(false);    	non-compiled	[CE]  cannot  find  symbol  This	17	None	replace
56	[BUG]  [BUGGY]  This.entry  =  readNewEntry(true);  [CE]  cannot  find  symbol  This  [FE]                  IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  This.entry  =  readNewEntry(true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	This.entry  =  readNewEntry(true);	  this.entry    =    readNewEntry(true);    This.entry    =    readNewEntry(false);    	non-compiled	[CE]  cannot  find  symbol  This	17	None	replace
57	[BUG]  [BUGGY]  this.entry  =  readNewEntry(null,  magicString);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(null,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(null,  magicString);	  this.entry    =    readNewEntry(null);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	21	None	replace
58	[BUG]  [BUGGY]  this.entry  =  readNewEntry(NEW_CRC,  null);  [CE]  cannot  find  symbol  NEW_CRC  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(NEW_CRC,  null);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(NEW_CRC,  null);	  this.entry    =    readNewEntry(null);    	non-compiled	[CE]  cannot  find  symbol  NEW_CRC	21	None	replace
59	[BUG]  [BUGGY]  this.entry  =  readNewEntry(new  String[]  {  magicString  }  );  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(new  String[]  {  magicString  }  );  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(new  String[]  {  magicString  }  );	  this.entry    =    readNewEntry(null);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	21	None	replace
60	[BUG]  [BUGGY]  this.entry  =  readNewEntry(crc,  null);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(crc,  null);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(crc,  null);	  this.entry    =    readNewEntry(null);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	21	None	replace
61	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  null);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  null);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  null);	  this.entry    =    readNewEntry(null);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	21	None	replace
62	[BUG]  [BUGGY]  this.entry  =  readNewEntry(in,  null);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(in,  null);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(in,  null);	  this.entry    =    readNewEntry(null);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	21	None	replace
63	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  MISSING_NEW_ASCII);  [CE]  cannot  find  symbol  MISSING_NEW_ASCII  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  MISSING_NEW_ASCII);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  MISSING_NEW_ASCII);	  this.entry    =    readNewEntry(false,    MISSING_NEW_ASCII);    	non-compiled	[CE]  cannot  find  symbol  MISSING_NEW_ASCII	49	None	replace
64	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  true);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  magicString,  true);	  this.entry    =    readNewEntry(false,    magicString,    true);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	92	None	replace
65	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  FOUR_BYTES_BUF,  magicString,  true);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  FOUR_BYTES_BUF,  magicString,  true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  FOUR_BYTES_BUF,  magicString,  true);	  this.entry    =    readNewEntry(false,    magicString,    true);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	92	None	replace
66	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  true,  tmpbuf);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  true,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  true,  tmpbuf);	  this.entry    =    readNewEntry(false,    magicString,    true);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	92	None	replace
67	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  false);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  magicString,  false);	  this.entry    =    readNewEntry(false,    magicString,    true);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	92	None	replace
68	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  MAX_NEW_CRC,  magicString,  true);  [CE]  cannot  find  symbol  MAX_NEW_CRC  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  MAX_NEW_CRC,  magicString,  true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  MAX_NEW_CRC,  magicString,  true);	  this.entry    =    readNewEntry(false,    magicString,    true);    	non-compiled	[CE]  cannot  find  symbol  MAX_NEW_CRC	92	None	replace
69	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  true,  FOUR_BYTES_BUF);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  true,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  true,  FOUR_BYTES_BUF);	  this.entry    =    readNewEntry(false,    magicString,    true);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	92	None	replace
70	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  false);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  false);	  this.entry    =    readNewEntry(false,    magicString,    true);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	92	None	replace
71	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	add	this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FOUR_BYTES_BUF.length);    	compilable	  [FE]  ArrayStoreException  	63	1	replace
72	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FOUR_BYTES_BUF.length);    	compilable	  [FE]  ArrayStoreException  	63	1	replace
73	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      ArrayStoreException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	add	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FOUR_BYTES_BUF.length);    	compilable	  [FE]  NullPointerException  	63	1	replace
74	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [FE]  NullPointerException  [FE]      ArrayStoreException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FOUR_BYTES_BUF.length);    	compilable	  [FE]  NullPointerException  	63	1	replace
75	[BUG]  [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_B  [CE]  ')'  expected  [FE]        ArrayStoreException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_B  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_B	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  ')'  expected	63	None	replace
76	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]          ArrayStoreException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  SIX_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	add	this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  SIX_BYTES_BUF.length,  FOUR_BYTES_BUF.length);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FOUR_BYTES_BUF.length);    	compilable	  [FE]  ArrayStoreException  	63	1	replace
77	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  SIX_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [FE]  ArrayStoreException  [FE]          ArrayStoreException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  SIX_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  SIX_BYTES_BUF.length,  FOUR_BYTES_BUF.length);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FOUR_BYTES_BUF.length);    	compilable	  [FE]  ArrayStoreException  	63	1	replace
78	[BUG]  [BUGGY]  this.entry  =  readNEWEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [CE]  cannot  find  symbol  [FE]            ArrayStoreException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEWEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEWEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
79	[BUG]  [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR  [CE]  ')'  expected  [FE]              ArrayStoreException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  ')'  expected	63	None	replace
80	[BUG]  [BUGGY]  this.entry  =  readNewEntry(FOUR_BYTES_BUF,  MAX_NEW_CRC);  [CE]  cannot  find  symbol  MAX_NEW_CRC  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(FOUR_BYTES_BUF,  MAX_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(FOUR_BYTES_BUF,  MAX_NEW_CRC);	  this.entry    =    readNewEntry(NEW_CRC,    MAX_NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol  MAX_NEW_CRC	22	None	replace
81	[BUG]  [BUGGY]  this.entry  =  readNewEntry(MAX_NEW_CRC,  MAX_NEW_CRC);  [CE]  cannot  find  symbol  MAX_NEW_CRC  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(MAX_NEW_CRC,  MAX_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(MAX_NEW_CRC,  MAX_NEW_CRC);	  this.entry    =    readNewEntry(NEW_CRC,    MAX_NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol  MAX_NEW_CRC	22	None	replace
82	[BUG]  [BUGGY]  this.entry  =  readNewEntry(SIX_NEW_CRC,  MAX_NEW_CRC);  [CE]  cannot  find  symbol  SIX_NEW_CRC  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(SIX_NEW_CRC,  MAX_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(SIX_NEW_CRC,  MAX_NEW_CRC);	  this.entry    =    readNewEntry(NEW_CRC,    MAX_NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol  SIX_NEW_CRC	22	None	replace
83	[BUG]  [BUGGY]  this.entry  =  readNewEntry(FOUR_BYTES_BUF,  MAX_NEW_CREATOR);  [CE]  cannot  find  symbol  MAX_NEW_CREATOR  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(FOUR_BYTES_BUF,  MAX_NEW_CREATOR);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(FOUR_BYTES_BUF,  MAX_NEW_CREATOR);	  this.entry    =    readNewEntry(NEW_CRC,    MAX_NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol  MAX_NEW_CREATOR	22	None	replace
84	[BUG]  [BUGGY]  this.entry  =  readNewEntry(FIELD_NEW,  MAX_NEW_CRC);  [CE]  cannot  find  symbol  FIELD_NEW  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(FIELD_NEW,  MAX_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(FIELD_NEW,  MAX_NEW_CRC);	  this.entry    =    readNewEntry(NEW_CRC,    MAX_NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol  FIELD_NEW	22	None	replace
85	[BUG]  [BUGGY]  this.entry  =  readNewEntry(SIX_BYTES_BUF,  MAX_NEW_CRC);  [CE]  cannot  find  symbol  MAX_NEW_CRC  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(SIX_BYTES_BUF,  MAX_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(SIX_BYTES_BUF,  MAX_NEW_CRC);	  this.entry    =    readNewEntry(NEW_CRC,    MAX_NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol  MAX_NEW_CRC	22	None	replace
86	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  false,  magicString,  tmpbuf);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  false,  magicString,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  false,  magicString,  tmpbuf);	  this.entry    =    readNewEntry(false,    false,    magicString);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	29	None	replace
87	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  magicString);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  magicString);	  this.entry    =    readNewEntry(false,    false,    magicString);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	29	None	replace
88	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  false,  MAX_NEW_CRC,  magicString);  [CE]  cannot  find  symbol  MAX_NEW_CRC  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  false,  MAX_NEW_CRC,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  false,  MAX_NEW_CRC,  magicString);	  this.entry    =    readNewEntry(false,    false,    magicString);    	non-compiled	[CE]  cannot  find  symbol  MAX_NEW_CRC	29	None	replace
89	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  false,  magicString,  JSON_NEW_CRC);  [CE]  cannot  find  symbol  JSON_NEW_CRC  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  false,  magicString,  JSON_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  false,  magicString,  JSON_NEW_CRC);	  this.entry    =    readNewEntry(false,    false,    magicString);    	non-compiled	[CE]  cannot  find  symbol  JSON_NEW_CRC	29	None	replace
90	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  null,  magicString);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  null,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  null,  magicString);	  this.entry    =    readNewEntry(false,    false,    magicString);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	29	None	replace
91	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  BYTES_BUF);  [CE]  cannot  find  symbol  BYTES_BUF  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  magicString,  BYTES_BUF);	  this.entry    =    readNewEntry(false,    magicString,    BYTES_BUF);    	non-compiled	[CE]  cannot  find  symbol  BYTES_BUF	75	None	replace
92	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  SIX_BYTES_BUF);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  SIX_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  SIX_BYTES_BUF);	  this.entry    =    readNewEntry(false,    magicString,    BYTES_BUF);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	75	None	replace
93	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  SYNTHETIC_NEW);  [CE]  cannot  find  symbol  SYNTHETIC_NEW  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  SYNTHETIC_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  SYNTHETIC_NEW);	  this.entry    =    readNewEntry(false,    magicString,    BYTES_BUF);    	non-compiled	[CE]  cannot  find  symbol  SYNTHETIC_NEW	75	None	replace
94	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  0);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  0);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  0);	  this.entry    =    readNewEntry(true,    0);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	77	None	replace
95	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  0,  magicString);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  0,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  0,  magicString);	  this.entry    =    readNewEntry(true,    0);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	77	None	replace
96	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  0,  magicString);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  0,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  0,  magicString);	  this.entry    =    readNewEntry(true,    0);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	77	None	replace
97	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  1);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  1);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  1);	  this.entry    =    readNewEntry(true,    0);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	77	None	replace
98	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  1);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  1);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  1);	  this.entry    =    readNewEntry(true,    0);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	77	None	replace
99	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	70	None	replace
100	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.mappingString,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  [CE]  cannot  find  symbol  mappingString  [FE]              NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.mappingString,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.mappingString,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  cannot  find  symbol  mappingString	70	None	replace
101	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.in,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	70	None	replace
102	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                  NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	70	None	replace
103	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.siZE,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  [CE]  cannot  find  symbol  siZE  [FE]                    NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.siZE,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.siZE,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  cannot  find  symbol  siZE	70	None	replace
104	[BUG]  [BUGGY]  this.entry  =  readNewEntry(FOUR_BYTES_BUF);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(FOUR_BYTES_BUF);	  this.entry    =    readNewEntry(NEW);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	72	None	replace
105	[BUG]  [BUGGY]  this.entry  =  readNewEntry(FOUR_BYTES_BUF,  FOUR_BYTES_BUF.length);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(FOUR_BYTES_BUF,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(FOUR_BYTES_BUF,  FOUR_BYTES_BUF.length);	  this.entry    =    readNewEntry(NEW);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	72	None	replace
106	[BUG]  [BUGGY]  this.entry  =  readNewEntry(FOUR_BYTES_BUF,  BYTES_BUF.length);  [CE]  cannot  find  symbol  BYTES_BUF  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(FOUR_BYTES_BUF,  BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(FOUR_BYTES_BUF,  BYTES_BUF.length);	  this.entry    =    readNewEntry(NEW);    	non-compiled	[CE]  cannot  find  symbol  BYTES_BUF	72	None	replace
107	[BUG]  [BUGGY]  this.entry  =  readNewEntry(FOUR_BYTES_BUF,  MOVE_BYTES_BUF.length);  [CE]  cannot  find  symbol  MOVE_BYTES_BUF  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(FOUR_BYTES_BUF,  MOVE_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(FOUR_BYTES_BUF,  MOVE_BYTES_BUF.length);	  this.entry    =    readNewEntry(NEW);    	non-compiled	[CE]  cannot  find  symbol  MOVE_BYTES_BUF	72	None	replace
108	[BUG]  [BUGGY]  this.entry  =  readNewEntry(FOUR_BYTES_BUF,  MAX_BYTES_BUF.length);  [CE]  cannot  find  symbol  MAX_BYTES_BUF  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(FOUR_BYTES_BUF,  MAX_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(FOUR_BYTES_BUF,  MAX_BYTES_BUF.length);	  this.entry    =    readNewEntry(NEW);    	non-compiled	[CE]  cannot  find  symbol  MAX_BYTES_BUF	72	None	replace
109	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  FOUR_BYTES_BUF);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  FOUR_BYTES_BUF);	  this.entry    =    readNewEntry(false,    true,    MAX_NEW);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	55	None	replace
110	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  FOUR_BYTES_BUF.length);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  FOUR_BYTES_BUF.length);	  this.entry    =    readNewEntry(false,    true,    MAX_NEW);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	55	None	replace
111	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  FOUR_BYTES_BUF);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  FOUR_BYTES_BUF);	  this.entry    =    readNewEntry(false,    true,    MAX_NEW);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	55	None	replace
112	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  MISSING_CRC);  [CE]  cannot  find  symbol  MISSING_CRC  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  MISSING_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  MISSING_CRC);	  this.entry    =    readNewEntry(false,    true,    MAX_NEW);    	non-compiled	[CE]  cannot  find  symbol  MISSING_CRC	55	None	replace
113	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  MAX_NEW);  [CE]  cannot  find  symbol  MAX_NEW  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  MAX_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  MAX_NEW);	  this.entry    =    readNewEntry(false,    true,    MAX_NEW);    	non-compiled	[CE]  cannot  find  symbol  MAX_NEW	55	None	replace
114	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  MAGIC_NEW_CRC);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  MAGIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  MAGIC_NEW_CRC);	  this.entry    =    readNewEntry(true,    MISSING_NEW_CREATOR);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	46	None	replace
115	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  SYNTHETIC_NEW_CRC);  [CE]  cannot  find  symbol  SYNTHETIC_NEW_CRC  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  SYNTHETIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  SYNTHETIC_NEW_CRC);	  this.entry    =    readNewEntry(true,    MISSING_NEW_CREATOR);    	non-compiled	[CE]  cannot  find  symbol  SYNTHETIC_NEW_CRC	46	None	replace
116	[BUG]  [BUGGY]  this.entry  =  readNEW(),  magicString;  [CE]  ';'  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(),  magicString;  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(),  magicString;	  this.entry    =    readNEW();    	non-compiled	[CE]  ';'  expected	1	None	replace
117	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(false,  FOUR_BYTES_BUF);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(false,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(false,  FOUR_BYTES_BUF);	  this.entry    =    readNEwEntry(true,    FOUR_BYTES_BUF);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
118	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  magicString);  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  magicString);	  this.entry    =    readNEwEntry(true,    FOUR_BYTES_BUF);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
119	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  SIX_BYTES_BUF,  FOUR_BYTES_BUF);  [CE]  cannot  find  symbol  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  SIX_BYTES_BUF,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  SIX_BYTES_BUF,  FOUR_BYTES_BUF);	  this.entry    =    readNEwEntry(true,    FOUR_BYTES_BUF);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
120	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  tmpbuf);  [CE]  cannot  find  symbol  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  tmpbuf);	  this.entry    =    readNEwEntry(true,    FOUR_BYTES_BUF);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
121	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  MAX_BYTES_BUF);  [CE]  cannot  find  symbol  MAX_BYTES_BUF  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  MAX_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  MAX_BYTES_BUF);	  this.entry    =    readNEwEntry(true,    FOUR_BYTES_BUF);    	non-compiled	[CE]  cannot  find  symbol  MAX_BYTES_BUF	58	None	replace
122	[BUG]  [BUGGY]  this.entry  =  readNEWEnaryEntry(false);  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEWEnaryEntry(false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEWEnaryEntry(false);	  this.entry    =    readNEWEnaryEntry(true);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
123	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  MAGIC_NEW_CRC,  magicString);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  MAGIC_NEW_CRC,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  MAGIC_NEW_CRC,  magicString);	  this.entry    =    readNewEntry(false,    true,    MAGIC_NEW_CRC);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	31	None	replace
124	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  false,  MAGIC_NEW_CRC,  magicString);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  false,  MAGIC_NEW_CRC,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  false,  MAGIC_NEW_CRC,  magicString);	  this.entry    =    readNewEntry(false,    true,    MAGIC_NEW_CRC);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	31	None	replace
125	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  MAGIC_NEW_CRC,  magicString);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  MAGIC_NEW_CRC,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  MAGIC_NEW_CRC,  magicString);	  this.entry    =    readNewEntry(false,    true,    MAGIC_NEW_CRC);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	31	None	replace
126	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  magicString,  MAGIC_NEW_CRC);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  magicString,  MAGIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  magicString,  MAGIC_NEW_CRC);	  this.entry    =    readNewEntry(false,    true,    MAGIC_NEW_CRC);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	31	None	replace
127	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  MIC_NEW_CRC,  magicString);  [CE]  cannot  find  symbol  MIC_NEW_CRC  [FE]                                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  MIC_NEW_CRC,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  MIC_NEW_CRC,  magicString);	  this.entry    =    readNewEntry(false,    true,    MAGIC_NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol  MIC_NEW_CRC	31	None	replace
128	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  MAX_NEW_CRC);  [CE]  cannot  find  symbol  MAX_NEW_CRC  [FE]                                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  MAX_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  MAX_NEW_CRC);	  this.entry    =    readNewEntry(false,    true,    MAGIC_NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol  MAX_NEW_CRC	31	None	replace
129	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  MIC_NEW_CRC,  magicString);  [CE]  cannot  find  symbol  MIC_NEW_CRC  [FE]                                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  MIC_NEW_CRC,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  MIC_NEW_CRC,  magicString);	  this.entry    =    readNewEntry(false,    true,    MAGIC_NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol  MIC_NEW_CRC	31	None	replace
130	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  null);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  null);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  magicString,  null);	  this.entry    =    readNewEntry(false,    magicString,    null);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	39	None	replace
131	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  null,  tmpbuf);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  null,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  null,  tmpbuf);	  this.entry    =    readNewEntry(false,    magicString,    null);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	39	None	replace
132	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  null,  FOUR_BYTES_BUF);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  null,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  null,  FOUR_BYTES_BUF);	  this.entry    =    readNewEntry(false,    magicString,    null);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	39	None	replace
133	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  null,  MAX_NEW_CRC);  [CE]  cannot  find  symbol  MAX_NEW_CRC  [FE]                                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  null,  MAX_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  null,  MAX_NEW_CRC);	  this.entry    =    readNewEntry(false,    magicString,    null);    	non-compiled	[CE]  cannot  find  symbol  MAX_NEW_CRC	39	None	replace
134	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  null,  MISSING_NEW);  [CE]  cannot  find  symbol  MISSING_NEW  [FE]                                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  null,  MISSING_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  null,  MISSING_NEW);	  this.entry    =    readNewEntry(false,    magicString,    null);    	non-compiled	[CE]  cannot  find  symbol  MISSING_NEW	39	None	replace
135	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  null,  MISSING_NEW_CRC);  [CE]  cannot  find  symbol  MISSING_NEW_CRC  [FE]                                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  null,  MISSING_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  null,  MISSING_NEW_CRC);	  this.entry    =    readNewEntry(false,    magicString,    null);    	non-compiled	[CE]  cannot  find  symbol  MISSING_NEW_CRC	39	None	replace
136	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  MAX_NEW);  [CE]  cannot  find  symbol  MAX_NEW  [FE]        IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  MAX_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  MAX_NEW);	  this.entry    =    readNewEntry(true,    cpioString);    	non-compiled	[CE]  cannot  find  symbol  MAX_NEW	83	None	replace
137	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  MIR_NEW_CRC);  [CE]  cannot  find  symbol  MIR_NEW_CRC  [FE]          IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  MIR_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  MIR_NEW_CRC);	  this.entry    =    readNewEntry(true,    cpioString);    	non-compiled	[CE]  cannot  find  symbol  MIR_NEW_CRC	83	None	replace
138	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  BYTES_NEW_CRC);  [CE]  cannot  find  symbol  BYTES_NEW_CRC  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  BYTES_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  BYTES_NEW_CRC);	  this.entry    =    readNewEntry(true,    MAX_NEW_ASCII);    	non-compiled	[CE]  cannot  find  symbol  BYTES_NEW_CRC	84	None	replace
139	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  SIX_BYTES_BUF,  FOUR_BYTES_BUF.length);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]            IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  SIX_BYTES_BUF,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  SIX_BYTES_BUF,  FOUR_BYTES_BUF.length);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	64	None	replace
140	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  FOUR_BYTES_BUF.length);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]              IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  FOUR_BYTES_BUF.length);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	64	None	replace
141	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  FOUR_BYTES_BUF.length);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  FOUR_BYTES_BUF.length);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	64	None	replace
142	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  SIX_BYTES_BUF,  FOUR_BYTES_BUF.length);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                  IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  SIX_BYTES_BUF,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  SIX_BYTES_BUF,  FOUR_BYTES_BUF.length);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	64	None	replace
143	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  SIX_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                    IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  SIX_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  SIX_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	64	None	replace
144	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  MISSING_NEW);  [CE]  cannot  find  symbol  MISSING_NEW  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  MISSING_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  magicString,  MISSING_NEW);	  this.entry    =    readNewEntry(false,    magicString,    MISSING_NEW);    	non-compiled	[CE]  cannot  find  symbol  MISSING_NEW	93	None	replace
145	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  MISSING_CRC);  [CE]  cannot  find  symbol  MISSING_CRC  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  MISSING_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  MISSING_CRC);	  this.entry    =    readNewEntry(false,    magicString,    MISSING_NEW);    	non-compiled	[CE]  cannot  find  symbol  MISSING_CRC	93	None	replace
146	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  MAGIC_NEW_CRC);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  MAGIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  MAGIC_NEW_CRC);	  this.entry    =    readNewEntry(false,    magicString,    MISSING_NEW);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	93	None	replace
147	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  MISSING_ASCII);  [CE]  cannot  find  symbol  MISSING_ASCII  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  MISSING_ASCII);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  MISSING_ASCII);	  this.entry    =    readNewEntry(false,    magicString,    MISSING_NEW);    	non-compiled	[CE]  cannot  find  symbol  MISSING_ASCII	93	None	replace
148	[BUG]  [BUGGY]  this.entry  =  readNEW(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC));  [CE]  no  suitable  method  found  for  toAsciiString(String)  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC));  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC));	  this.entry    =    readNEW(true,    magicString);    	non-compiled	[CE]  no  suitable  method  found  for  toAsciiString(String)	19	None	replace
149	[BUG]  [BUGGY]  this.entry  =  readNEW(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_ASCII));  [CE]  cannot  find  symbol  MAGIC_NEW_ASCII  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_ASCII));  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_ASCII));	  this.entry    =    readNEW(true,    magicString);    	non-compiled	[CE]  cannot  find  symbol  MAGIC_NEW_ASCII	19	None	replace
150	[BUG]  [BUGGY]  this.entry  =  readNEW(true,  magicString,  ArchiveUtils.toAsciiString(SIX_BYTES_BUF));  [CE]  cannot  find  symbol  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(true,  magicString,  ArchiveUtils.toAsciiString(SIX_BYTES_BUF));  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(true,  magicString,  ArchiveUtils.toAsciiString(SIX_BYTES_BUF));	  this.entry    =    readNEW(true,    magicString);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
151	[BUG]  [BUGGY]  this.entry  =  readNEW(true,  magicString,  ArchiveUtils.toAsciiString(SIX_BYTES_BUF.length));  [CE]  no  suitable  method  found  for  toAsciiString(int)  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(true,  magicString,  ArchiveUtils.toAsciiString(SIX_BYTES_BUF.length));  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(true,  magicString,  ArchiveUtils.toAsciiString(SIX_BYTES_BUF.length));	  this.entry    =    readNEW(true,    magicString);    	non-compiled	[CE]  no  suitable  method  found  for  toAsciiString(int)	19	None	replace
152	[BUG]  [BUGGY]  this.entry  =  readNEW(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CLC));  [CE]  cannot  find  symbol  MAGIC_NEW_CLC  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CLC));  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CLC));	  this.entry    =    readNEW(true,    magicString);    	non-compiled	[CE]  cannot  find  symbol  MAGIC_NEW_CLC	19	None	replace
153	[BUG]  [BUGGY]  this.entry  =  readNEW(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_KEY));  [CE]  cannot  find  symbol  MAGIC_NEW_KEY  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_KEY));  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_KEY));	  this.entry    =    readNEW(true,    magicString);    	non-compiled	[CE]  cannot  find  symbol  MAGIC_NEW_KEY	19	None	replace
154	[BUG]  [BUGGY]  [FE]  NumberFormatException  [FE]    NumberFormatException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	add	this.entry        =        readNewEntry(true);        this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(true);	  	compilable	  [FE]  NumberFormatException  	11	1	add
155	[BUG]  [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(true);  [FE]  NumberFormatException  [FE]    NumberFormatException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry        =        readNewEntry(true);        this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(true);	  	compilable	  [FE]  NumberFormatException  	11	1	add
156	[BUG]  [BUGGY]  [FE]  NumberFormatException  [FE]      NumberFormatException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	add	this.entry        =        readNewEntry(true);        this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(true);	  	compilable	  [FE]  NumberFormatException  	11	1	add
157	[BUG]  [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(true);  [FE]  NumberFormatException  [FE]      NumberFormatException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry        =        readNewEntry(true);        this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(true);	  	compilable	  [FE]  NumberFormatException  	11	1	add
158	[BUG]  [BUGGY]  [FE]  NumberFormatException  [FE]        NumberFormatException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	add	this.entry        =        readNewEntry(true);        this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(false);	  	compilable	  [FE]  NumberFormatException  	11	1	add
159	[BUG]  [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(false);  [FE]  NumberFormatException  [FE]        NumberFormatException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry        =        readNewEntry(true);        this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(false);	  	compilable	  [FE]  NumberFormatException  	11	1	add
160	[BUG]  [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(true);  This.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(true);  [CE]  cannot  find  symbol  This  [FE]          NumberFormatException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(true);  This.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry        =        readNewEntry(true);        this.entry    =    readNewEntry(true);    This.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(true);	  	non-compiled	[CE]  cannot  find  symbol  This	11	None	add
161	[BUG]  [BUGGY]  [FE]  NumberFormatException  [FE]            NumberFormatException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	add	this.entry        =        readNewEntry(true);        this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);	  	compilable	  [FE]  NumberFormatException  	11	1	add
162	[BUG]  [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);  [FE]  NumberFormatException  [FE]            NumberFormatException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry        =        readNewEntry(true);        this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);	  	compilable	  [FE]  NumberFormatException  	11	1	add
163	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  MAX_NEW_ASCII);  [CE]  cannot  find  symbol  MAX_NEW_ASCII  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  MAX_NEW_ASCII);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  MAX_NEW_ASCII);	  this.entry    =    readNEwEntry(true,    MIC_NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol  MAX_NEW_ASCII	97	None	replace
164	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  MAGIC_NEW_ASCII);  [CE]  cannot  find  symbol  MAGIC_NEW_ASCII  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  MAGIC_NEW_ASCII);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  MAGIC_NEW_ASCII);	  this.entry    =    readNEwEntry(true,    MIC_NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol  MAGIC_NEW_ASCII	97	None	replace
165	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  MIR_NEW_ASCII);  [CE]  cannot  find  symbol  MIR_NEW_ASCII  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  MIR_NEW_ASCII);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  MIR_NEW_ASCII);	  this.entry    =    readNEwEntry(true,    MIC_NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol  MIR_NEW_ASCII	97	None	replace
166	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  MAGIC_NEW);  [CE]  cannot  find  symbol  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  MAGIC_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  MAGIC_NEW);	  this.entry    =    readNEwEntry(true,    MIC_NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
167	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  MISSING_ASCII);  [CE]  cannot  find  symbol  MISSING_ASCII  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  MISSING_ASCII);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  MISSING_ASCII);	  this.entry    =    readNEwEntry(true,    MIC_NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol  MISSING_ASCII	97	None	replace
168	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(0);  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(0);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(0);	  this.entry    =    readNEwEntry();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
169	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  SIX_BYTES_BUF.length,  FIELD_NEW);  [CE]  cannot  find  symbol  FIELD_NEW  [FE]                  IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  SIX_BYTES_BUF.length,  FIELD_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  SIX_BYTES_BUF.length,  FIELD_NEW);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FIELD_NEW);    	non-compiled	[CE]  cannot  find  symbol  FIELD_NEW	67	None	replace
170	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  SIX_BYTES_BUF.length,  FIELD_NEW);  [CE]  cannot  find  symbol  FIELD_NEW  [FE]                    IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  SIX_BYTES_BUF.length,  FIELD_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  SIX_BYTES_BUF.length,  FIELD_NEW);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FIELD_NEW);    	non-compiled	[CE]  cannot  find  symbol  FIELD_NEW	67	None	replace
171	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                      IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  SIX_BYTES_BUF.length,  SIX_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	add	this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  SIX_BYTES_BUF.length,  SIX_BYTES_BUF.length);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FIELD_NEW);    	compilable	  [FE]  ArrayStoreException  	67	1	replace
172	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  SIX_BYTES_BUF.length,  SIX_BYTES_BUF.length);  [FE]  ArrayStoreException  [FE]                      IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  SIX_BYTES_BUF.length,  SIX_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  SIX_BYTES_BUF.length,  SIX_BYTES_BUF.length);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FIELD_NEW);    	compilable	  [FE]  ArrayStoreException  	67	1	replace
173	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                        IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  SIX_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	add	this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  SIX_BYTES_BUF.length);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FIELD_NEW);    	compilable	  [FE]  ArrayStoreException  	67	1	replace
174	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  SIX_BYTES_BUF.length);  [FE]  ArrayStoreException  [FE]                        IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  SIX_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  SIX_BYTES_BUF.length);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FIELD_NEW);    	compilable	  [FE]  ArrayStoreException  	67	1	replace
175	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FIELD_NEW);  [CE]  cannot  find  symbol  FIELD_NEW  [FE]                          IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FIELD_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FIELD_NEW);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FIELD_NEW);    	non-compiled	[CE]  cannot  find  symbol  FIELD_NEW	67	None	replace
176	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  MAGIC_NEW);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                            IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  MAGIC_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  MAGIC_NEW);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FIELD_NEW);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	67	None	replace
177	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  SIX_BYTES_BUF,  FOUR_BYTES_BUF);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  SIX_BYTES_BUF,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  SIX_BYTES_BUF,  FOUR_BYTES_BUF);	  this.entry    =    readNewEntry(true,    FOUR_BYTES_BUF);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	47	None	replace
178	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  SIX_BYTES_BUF,  FOUR_BYTES_BUF);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  SIX_BYTES_BUF,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  SIX_BYTES_BUF,  FOUR_BYTES_BUF);	  this.entry    =    readNewEntry(true,    FOUR_BYTES_BUF);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	47	None	replace
179	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  FOUR_BYTES_BUF,  tmpbuf);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  FOUR_BYTES_BUF,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  FOUR_BYTES_BUF,  tmpbuf);	  this.entry    =    readNewEntry(true,    FOUR_BYTES_BUF);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	47	None	replace
180	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  FOUR_BYTES_BUF,  tmpbuf);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  FOUR_BYTES_BUF,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  FOUR_BYTES_BUF,  tmpbuf);	  this.entry    =    readNewEntry(true,    FOUR_BYTES_BUF);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	47	None	replace
181	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  MISSING_NEW_ASCII);  [CE]  cannot  find  symbol  MISSING_NEW_ASCII  [FE]              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  MISSING_NEW_ASCII);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  MISSING_NEW_ASCII);	  this.entry    =    readNEwEntry(true,    MISSING_NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol  MISSING_NEW_ASCII	96	None	replace
182	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(false,  MISSING_NEW_ASCII);  [CE]  cannot  find  symbol  MISSING_NEW_ASCII  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(false,  MISSING_NEW_ASCII);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(false,  MISSING_NEW_ASCII);	  this.entry    =    readNEwEntry(true,    MISSING_NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol  MISSING_NEW_ASCII	96	None	replace
183	[BUG]  [BUGGY]  ||  magicString.equals(MAGIC_NEW_CRC))  {  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  ||  magicString.equals(MAGIC_NEW_CRC))  {  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	||  magicString.equals(MAGIC_NEW_CRC))  {	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    SIX_BYTES_BUF    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
184	[BUG]  [BUGGY]  ||  magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  ||  magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	||  magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    SIX_BYTES_BUF    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
185	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]                      NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  SIX_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	add	readFully(FOUR_BYTES_BUF,  SIX_BYTES_BUF.length,  FOUR_BYTES_BUF.length);	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    SIX_BYTES_BUF    	compilable	  [FE]  IndexOutOfBoundsException  	91	1	replace
186	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  SIX_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [FE]  IndexOutOfBoundsException  [FE]                      NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  SIX_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	readFully(FOUR_BYTES_BUF,  SIX_BYTES_BUF.length,  FOUR_BYTES_BUF.length);	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    SIX_BYTES_BUF    	compilable	  [FE]  IndexOutOfBoundsException  	91	1	replace
187	[BUG]  [BUGGY]  ||  magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  ||  magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	||  magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    SIX_BYTES_BUF    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
188	[BUG]  [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  [CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()  [FE]                          NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    SIX_BYTES_BUF    	non-compiled	[CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()	91	None	replace
189	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                            NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF);	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    SIX_BYTES_BUF    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	91	None	replace
190	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  SIX_BYTES_BUF);  [CE]  method  readFully  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                              NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  SIX_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	readFully(FOUR_BYTES_BUF,  SIX_BYTES_BUF);	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    SIX_BYTES_BUF    	non-compiled	[CE]  method  readFully  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	91	None	replace
191	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  false);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  false);	  this.entry    =    readNewEntry(true,    true);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	28	None	replace
192	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  MAGIC_NEW_CRC);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  MAGIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  MAGIC_NEW_CRC);	  this.entry    =    readNewEntry(true,    true);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	28	None	replace
193	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  null,  true);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  null,  true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  null,  true);	  this.entry    =    readNewEntry(true,    true);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	28	None	replace
194	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  MISSING_ASCII);  [CE]  cannot  find  symbol  MISSING_ASCII  [FE]              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  MISSING_ASCII);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  MISSING_ASCII);	  this.entry    =    readNewEntry(true,    MISSING_NEW_RCC);    	non-compiled	[CE]  cannot  find  symbol  MISSING_ASCII	80	None	replace
195	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  MISSING_NEW_READ);  [CE]  cannot  find  symbol  MISSING_NEW_READ  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  MISSING_NEW_READ);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  MISSING_NEW_READ);	  this.entry    =    readNewEntry(true,    MISSING_NEW_RCC);    	non-compiled	[CE]  cannot  find  symbol  MISSING_NEW_READ	80	None	replace
196	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  FOUR_BYTES_BUF.length);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  magicString,  FOUR_BYTES_BUF.length);	  this.entry    =    readNewEntry(false,    magicString,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	37	None	replace
197	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  FOUR_BYTES_BUF,  magicString,  FOUR_BYTES_BUF.length);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  FOUR_BYTES_BUF,  magicString,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  FOUR_BYTES_BUF,  magicString,  FOUR_BYTES_BUF.length);	  this.entry    =    readNewEntry(false,    magicString,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	37	None	replace
198	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  SIX_BYTES_BUF,  magicString,  FOUR_BYTES_BUF.length);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  SIX_BYTES_BUF,  magicString,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  SIX_BYTES_BUF,  magicString,  FOUR_BYTES_BUF.length);	  this.entry    =    readNewEntry(false,    magicString,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	37	None	replace
199	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);	  this.entry    =    readNewEntry(false,    magicString,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	37	None	replace
200	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  SIX_BYTES_BUF.length);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  SIX_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  SIX_BYTES_BUF.length);	  this.entry    =    readNewEntry(false,    magicString,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	37	None	replace
201	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  MAX_NEW_CRC,  magicString,  FOUR_BYTES_BUF.length);  [CE]  cannot  find  symbol  MAX_NEW_CRC  [FE]                                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  MAX_NEW_CRC,  magicString,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  MAX_NEW_CRC,  magicString,  FOUR_BYTES_BUF.length);	  this.entry    =    readNewEntry(false,    magicString,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  cannot  find  symbol  MAX_NEW_CRC	37	None	replace
202	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  MISSING_CRC);  [CE]  cannot  find  symbol  MISSING_CRC  [FE]              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  MISSING_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  MISSING_CRC);	  this.entry    =    readNewEntry(true,    MISSING_NEW);    	non-compiled	[CE]  cannot  find  symbol  MISSING_CRC	45	None	replace
203	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  MISSING_CRC);  [CE]  cannot  find  symbol  MISSING_CRC  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  MISSING_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  MISSING_CRC);	  this.entry    =    readNewEntry(true,    MISSING_NEW);    	non-compiled	[CE]  cannot  find  symbol  MISSING_CRC	45	None	replace
204	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  MISSING_CLOSE);  [CE]  cannot  find  symbol  MISSING_CLOSE  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  MISSING_CLOSE);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  MISSING_CLOSE);	  this.entry    =    readNewEntry(true,    MISSING_NEW);    	non-compiled	[CE]  cannot  find  symbol  MISSING_CLOSE	45	None	replace
205	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  MAGIC_NEW_CRC,  magicString);  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  MAGIC_NEW_CRC,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  MAGIC_NEW_CRC,  magicString);	  this.entry    =    readNEwEntry(true,    MAGIC_NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
206	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(false,  MIC_NEW_CRC);  [CE]  cannot  find  symbol  MIC_NEW_CRC  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(false,  MIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(false,  MIC_NEW_CRC);	  this.entry    =    readNEwEntry(true,    MAGIC_NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol  MIC_NEW_CRC	42	None	replace
207	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(false);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.    	non-compiled	[CE]  <identifier>  expected	88	None	replace
208	[BUG]  [BUGGY]  ||  magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  ||  magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	||  magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  }	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(false);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
209	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  magicString,  tmpbuf);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  magicString,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  magicString,  tmpbuf);	  this.entry    =    readNewEntry(false,    true,    magicString);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	27	None	replace
210	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  magicString,  tmpbuf);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  magicString,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  magicString,  tmpbuf);	  this.entry    =    readNewEntry(false,    true,    magicString);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	27	None	replace
211	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  magicString,  MAGIC_NEW_CRC);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  magicString,  MAGIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  magicString,  MAGIC_NEW_CRC);	  this.entry    =    readNewEntry(false,    true,    magicString);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	27	None	replace
212	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  false,  magicString,  tmpbuf);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  false,  magicString,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  false,  magicString,  tmpbuf);	  this.entry    =    readNewEntry(false,    true,    magicString);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	27	None	replace
213	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  magicString,  MAX_NEW_CRC);  [CE]  cannot  find  symbol  MAX_NEW_CRC  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  magicString,  MAX_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  magicString,  MAX_NEW_CRC);	  this.entry    =    readNewEntry(false,    true,    magicString);    	non-compiled	[CE]  cannot  find  symbol  MAX_NEW_CRC	27	None	replace
214	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  false,  magicString,  MAGIC_NEW_CRC);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  false,  magicString,  MAGIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  false,  magicString,  MAGIC_NEW_CRC);	  this.entry    =    readNewEntry(false,    true,    magicString);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	27	None	replace
215	[BUG]  [BUGGY]  if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(false);  }  [CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()  [FE]          NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(false);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(false);  }	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()	6	None	replace
216	[BUG]  [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_ASCII);  this.entry  =  readNewEntry(false);  [CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()  [FE]            NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_ASCII);  this.entry  =  readNewEntry(false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_ASCII);  this.entry  =  readNewEntry(false);	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()	6	None	replace
217	[BUG]  [BUGGY]  if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(SIX_BYTES_BUF,  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(SIX_BYTES_BUF,  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(SIX_BYTES_BUF,	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
218	[BUG]  [BUGGY]  if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
219	[BUG]  [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_BINARY);  this.entry  =  readNewEntry(false);  [CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()  [FE]                  NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_BINARY);  this.entry  =  readNewEntry(false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_BINARY);  this.entry  =  readNewEntry(false);	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()	6	None	replace
220	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  0,  magicString.length);  [CE]  cannot  find  symbol  length  [FE]        NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  0,  magicString.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  0,  magicString.length);	          System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead,    0);    	non-compiled	[CE]  cannot  find  symbol  length	76	None	replace
221	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]          NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	add	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  0,  FOUR_BYTES_BUF.length);	          System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead,    0);    	compilable	  [FE]  ArrayStoreException  	76	1	replace
222	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  0,  FOUR_BYTES_BUF.length);  [FE]  ArrayStoreException  [FE]          NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  0,  FOUR_BYTES_BUF.length);	          System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead,    0);    	compilable	  [FE]  ArrayStoreException  	76	1	replace
223	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  0,  MAX_BYTES_BUF.length);  [CE]  cannot  find  symbol  MAX_BYTES_BUF  [FE]            NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  0,  MAX_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  0,  MAX_BYTES_BUF.length);	          System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead,    0);    	non-compiled	[CE]  cannot  find  symbol  MAX_BYTES_BUF	76	None	replace
224	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  magicString,  0);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  magicString,  0);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  magicString,  0);	          System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead,    0);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	76	None	replace
225	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  0,  this.blockSize);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	add	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  0,  this.blockSize);	          System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead,    0);    	compilable	  [FE]  ArrayStoreException  	76	1	replace
226	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  0,  this.blockSize);  [FE]  ArrayStoreException  [FE]                NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  0,  this.blockSize);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  0,  this.blockSize);	          System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead,    0);    	compilable	  [FE]  ArrayStoreException  	76	1	replace
227	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  0,  magicString);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                  NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  0,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  0,  magicString);	          System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead,    0);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	76	None	replace
228	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  0,  MAGIC_NEW_CRC);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                    NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  0,  MAGIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  0,  MAGIC_NEW_CRC);	          System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead,    0);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	76	None	replace
229	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  tmpbuf);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  magicString,  tmpbuf);	  this.entry    =    readNewEntry(true,    magicString);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	33	None	replace
230	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  MIC_NEW_CRC);  [CE]  cannot  find  symbol  MIC_NEW_CRC  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  MIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  MIC_NEW_CRC);	  this.entry    =    readNewEntry(true,    magicString);    	non-compiled	[CE]  cannot  find  symbol  MIC_NEW_CRC	33	None	replace
231	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  MIGIC_NEW_CRC);  [CE]  cannot  find  symbol  MIGIC_NEW_CRC  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  MIGIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  MIGIC_NEW_CRC);	  this.entry    =    readNewEntry(true,    magicString);    	non-compiled	[CE]  cannot  find  symbol  MIGIC_NEW_CRC	33	None	replace
232	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF,  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF,  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF,	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    SIX_BYTES_BUF,    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
233	[BUG]  [BUGGY]  ||  magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  ||  magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	||  magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    SIX_BYTES_BUF,    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
234	[BUG]  [BUGGY]  ||  magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  ||  magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	||  magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    SIX_BYTES_BUF,    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
235	[BUG]  [BUGGY]  ||  magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  ||  magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	||  magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    SIX_BYTES_BUF,    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
236	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  magicString);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  magicString);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	61	None	replace
237	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  magicString);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  magicString);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	61	None	replace
238	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  MAGIC_NEW_CRC);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  MAGIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  MAGIC_NEW_CRC);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	61	None	replace
239	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  MAX_BYTES_BUF.length);  [CE]  cannot  find  symbol  MAX_BYTES_BUF  [FE]              IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  MAX_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  MAX_BYTES_BUF.length);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  cannot  find  symbol  MAX_BYTES_BUF	61	None	replace
240	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  SIX_NEW_ASCII);  [CE]  cannot  find  symbol  SIX_NEW_ASCII  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  SIX_NEW_ASCII);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  SIX_NEW_ASCII);	  this.entry    =    readNewEntry(true,    MAX_NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol  SIX_NEW_ASCII	51	None	replace
241	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  SYNTHETIC_NEW);  [CE]  cannot  find  symbol  SYNTHETIC_NEW  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  SYNTHETIC_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  SYNTHETIC_NEW);	  this.entry    =    readNewEntry(true,    MAX_NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol  SYNTHETIC_NEW	51	None	replace
242	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  FOUR_BYTES_BUF.length);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  FOUR_BYTES_BUF.length);	          System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	85	None	replace
243	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesLength,  FOUR_BYTES_BUF.length);  [CE]  cannot  find  symbol  entryBytesLength  [FE]          NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesLength,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesLength,  FOUR_BYTES_BUF.length);	          System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  cannot  find  symbol  entryBytesLength	85	None	replace
244	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF,  this.entryBytesRead.length);  [CE]  long  cannot  be  dereferenced  [FE]            NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF,  this.entryBytesRead.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF,  this.entryBytesRead.length);	          System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  long  cannot  be  dereferenced	85	None	replace
245	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length,  MISSING_BYTES_BUF.length);  [CE]  long  cannot  be  dereferenced  [FE]              NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length,  MISSING_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length,  MISSING_BYTES_BUF.length);	          System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  long  cannot  be  dereferenced	85	None	replace
246	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length,  FOUR_BYTES_BUF.length  -  1);  [CE]  long  cannot  be  dereferenced  [FE]                NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length,  FOUR_BYTES_BUF.length  -  1);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead.length,  FOUR_BYTES_BUF.length  -  1);	          System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  long  cannot  be  dereferenced	85	None	replace
247	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  tmpbuf,  magicString);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  tmpbuf,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  tmpbuf,  magicString);	  this.entry    =    readNewEntry(false,    true,    tmpbuf);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	54	None	replace
248	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  FOUR_BYTES_BUF,  tmpbuf);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  FOUR_BYTES_BUF,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  FOUR_BYTES_BUF,  tmpbuf);	  this.entry    =    readNewEntry(false,    true,    tmpbuf);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	54	None	replace
249	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  false,  tmpbuf,  magicString);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  false,  tmpbuf,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  false,  tmpbuf,  magicString);	  this.entry    =    readNewEntry(false,    true,    tmpbuf);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	54	None	replace
250	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  FOUR_BYTES_BUF,  tmpbuf);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  FOUR_BYTES_BUF,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  FOUR_BYTES_BUF,  tmpbuf);	  this.entry    =    readNewEntry(false,    true,    tmpbuf);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	54	None	replace
251	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  MAGIC_NEW_CRC,  tmpbuf);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  MAGIC_NEW_CRC,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  MAGIC_NEW_CRC,  tmpbuf);	  this.entry    =    readNewEntry(false,    true,    tmpbuf);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	54	None	replace
252	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  tmpbuf,  magicString);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  tmpbuf,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  tmpbuf,  magicString);	  this.entry    =    readNewEntry(false,    true,    tmpbuf);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	54	None	replace
253	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  MAGIC_NEW_CRC,  tmpbuf);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  MAGIC_NEW_CRC,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  MAGIC_NEW_CRC,  tmpbuf);	  this.entry    =    readNewEntry(false,    true,    tmpbuf);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	54	None	replace
254	[BUG]  [BUGGY]  this.entry  =  readNewEntry(FOUR_BYTES_BUF,  SIX_BYTES_BUF);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(FOUR_BYTES_BUF,  SIX_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(FOUR_BYTES_BUF,  SIX_BYTES_BUF);	  this.entry    =    readNewEntry(NEW_CRC,    FOUR_BYTES_BUF);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	95	None	replace
255	[BUG]  [BUGGY]  this.entry  =  readNewEntry(SIX_BYTES_BUF,  FOUR_BYTES_BUF);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(SIX_BYTES_BUF,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(SIX_BYTES_BUF,  FOUR_BYTES_BUF);	  this.entry    =    readNewEntry(NEW_CRC,    FOUR_BYTES_BUF);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	95	None	replace
256	[BUG]  [BUGGY]  this.entry  =  readNewEntry(NEW_BYTES_BUF,  FOUR_BYTES_BUF);  [CE]  cannot  find  symbol  NEW_BYTES_BUF  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(NEW_BYTES_BUF,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(NEW_BYTES_BUF,  FOUR_BYTES_BUF);	  this.entry    =    readNewEntry(NEW_CRC,    FOUR_BYTES_BUF);    	non-compiled	[CE]  cannot  find  symbol  NEW_BYTES_BUF	95	None	replace
257	[BUG]  [BUGGY]  this.entry  =  readNewEntry(NEW_BYTES_BUF,  SIX_BYTES_BUF);  [CE]  cannot  find  symbol  NEW_BYTES_BUF  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(NEW_BYTES_BUF,  SIX_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(NEW_BYTES_BUF,  SIX_BYTES_BUF);	  this.entry    =    readNewEntry(NEW_CRC,    FOUR_BYTES_BUF);    	non-compiled	[CE]  cannot  find  symbol  NEW_BYTES_BUF	95	None	replace
258	[BUG]  [BUGGY]  this.entry  =  readNewEntry(NEW_BUF,  FOUR_BYTES_BUF);  [CE]  cannot  find  symbol  NEW_BUF  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(NEW_BUF,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(NEW_BUF,  FOUR_BYTES_BUF);	  this.entry    =    readNewEntry(NEW_CRC,    FOUR_BYTES_BUF);    	non-compiled	[CE]  cannot  find  symbol  NEW_BUF	95	None	replace
259	[BUG]  [BUGGY]  this.entry  =  readNewEntry(tmpbuf,  FOUR_BYTES_BUF);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(tmpbuf,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(tmpbuf,  FOUR_BYTES_BUF);	  this.entry    =    readNewEntry(NEW_CRC,    FOUR_BYTES_BUF);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	95	None	replace
260	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  MAX_NEW_ASCII);  [CE]  cannot  find  symbol  MAX_NEW_ASCII  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  MAX_NEW_ASCII);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  MAX_NEW_ASCII);	  this.entry    =    readNewEntry(false,    true,    MAX_NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol  MAX_NEW_ASCII	30	None	replace
261	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  MAX_NEW_ASCII);  [CE]  cannot  find  symbol  MAX_NEW_ASCII  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  MAX_NEW_ASCII);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  MAX_NEW_ASCII);	  this.entry    =    readNewEntry(false,    true,    MAX_NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol  MAX_NEW_ASCII	30	None	replace
262	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  MISSING_NEW_CRC);  [CE]  cannot  find  symbol  MISSING_NEW_CRC  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  MISSING_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  MISSING_NEW_CRC);	  this.entry    =    readNewEntry(false,    true,    MAX_NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol  MISSING_NEW_CRC	30	None	replace
263	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  MAGIC_NEW_ASCII);  [CE]  cannot  find  symbol  MAGIC_NEW_ASCII  [FE]                                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  MAGIC_NEW_ASCII);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  MAGIC_NEW_ASCII);	  this.entry    =    readNewEntry(false,    true,    MAX_NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol  MAGIC_NEW_ASCII	30	None	replace
264	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  MAGIC_NEW_ASCII);  [CE]  cannot  find  symbol  MAGIC_NEW_ASCII  [FE]                                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  MAGIC_NEW_ASCII);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  MAGIC_NEW_ASCII);	  this.entry    =    readNewEntry(false,    true,    MAX_NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol  MAGIC_NEW_ASCII	30	None	replace
265	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  MISSING_NEW);  [CE]  cannot  find  symbol  MISSING_NEW  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  MISSING_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  MISSING_NEW);	  this.entry    =    readNewEntry(false,    MISSING_ASCII);    	non-compiled	[CE]  cannot  find  symbol  MISSING_NEW	53	None	replace
266	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  MAGIC_NEW_CRC);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  MAGIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  MAGIC_NEW_CRC);	  this.entry    =    readNewEntry(false,    MISSING_ASCII);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	53	None	replace
267	[BUG]  [BUGGY]  this.entry  =  readNEw(false);  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEw(false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEw(false);	  this.entry    =    readNEw();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
268	[BUG]  [BUGGY]  this.entry  =  readNEwCommonEntry();  [CE]  cannot  find  symbol  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwCommonEntry();  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwCommonEntry();	  this.entry    =    readNEw();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
269	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  MAX_NEW_CLOSE);  [CE]  cannot  find  symbol  MAX_NEW_CLOSE  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  MAX_NEW_CLOSE);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  MAX_NEW_CLOSE);	  this.entry    =    readNewEntry(true,    MISSING_NEW_CLOSE);    	non-compiled	[CE]  cannot  find  symbol  MAX_NEW_CLOSE	48	None	replace
270	[BUG]  [BUGGY]  if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(false);  }  [CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()  [FE]                NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(false);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(false);  }	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()	9	None	replace
271	[BUG]  [BUGGY]  if(magicString!=  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(false);  }  [CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()  [FE]                  NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString!=  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(false);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString!=  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(false);  }	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()	9	None	replace
272	[BUG]  [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(false);  }  [CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()  [FE]                    NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(false);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString.equals(MAGIC_NEW_CRC))  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(false);  }	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()	9	None	replace
273	[BUG]  [BUGGY]  if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
274	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  MISSING_CRC);  [CE]  cannot  find  symbol  MISSING_CRC  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  MISSING_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  MISSING_CRC);	  this.entry    =    readNewEntry(false,    true,    MISSING_NEW);    	non-compiled	[CE]  cannot  find  symbol  MISSING_CRC	32	None	replace
275	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  MISSING_NEW);  [CE]  cannot  find  symbol  MISSING_NEW  [FE]                                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  MISSING_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  MISSING_NEW);	  this.entry    =    readNewEntry(false,    true,    MISSING_NEW);    	non-compiled	[CE]  cannot  find  symbol  MISSING_NEW	32	None	replace
276	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  MAGIC_NEW);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  MAGIC_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  MAGIC_NEW);	  this.entry    =    readNewEntry(false,    true,    MISSING_NEW);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	32	None	replace
277	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  MISSING_ASCII);  [CE]  cannot  find  symbol  MISSING_ASCII  [FE]                                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  MISSING_ASCII);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  MISSING_ASCII);	  this.entry    =    readNewEntry(false,    true,    MISSING_NEW);    	non-compiled	[CE]  cannot  find  symbol  MISSING_ASCII	32	None	replace
278	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  STRICT_CRC);  [CE]  cannot  find  symbol  STRICT_CRC  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  STRICT_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  STRICT_CRC);	  this.entry    =    readNewEntry(false,    magicString,    STRICT_NEW);    	non-compiled	[CE]  cannot  find  symbol  STRICT_CRC	94	None	replace
279	[BUG]  [BUGGY]  this.entry  =  readNewEntry(NEW_ASCII);  [CE]  cannot  find  symbol  NEW_ASCII  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(NEW_ASCII);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(NEW_ASCII);	  this.entry    =    readNewEntry(NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol  NEW_ASCII	20	None	replace
280	[BUG]  [BUGGY]  this.entry  =  readNewEntry(NEW_BYTES_BUF);  [CE]  cannot  find  symbol  NEW_BYTES_BUF  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(NEW_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(NEW_BYTES_BUF);	  this.entry    =    readNewEntry(NEW_CRC);    	non-compiled	[CE]  cannot  find  symbol  NEW_BYTES_BUF	20	None	replace
281	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  STRICT_NEW_CRC);  [CE]  cannot  find  symbol  STRICT_NEW_CRC  [FE]            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  STRICT_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  STRICT_NEW_CRC);	  this.entry    =    readNewEntry(true,    MISSING_NEW_CUSTOM);    	non-compiled	[CE]  cannot  find  symbol  STRICT_NEW_CRC	79	None	replace
282	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  TWO_BYTES_BUF.length);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  TWO_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  TWO_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead,    MAX_BYTES_BUF.length);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	71	None	replace
283	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  SIX_BYTES_BUF.length);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  SIX_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  SIX_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead,    MAX_BYTES_BUF.length);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	71	None	replace
284	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  MARY_BYTES_BUF.length);  [CE]  cannot  find  symbol  MARY_BYTES_BUF  [FE]                  NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  MARY_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  MARY_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead,    MAX_BYTES_BUF.length);    	non-compiled	[CE]  cannot  find  symbol  MARY_BYTES_BUF	71	None	replace
285	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  MISSING_BYTES_BUF.length);  [CE]  cannot  find  symbol  MISSING_BYTES_BUF  [FE]                    NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  MISSING_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  MISSING_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead,    MAX_BYTES_BUF.length);    	non-compiled	[CE]  cannot  find  symbol  MISSING_BYTES_BUF	71	None	replace
286	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  BYTES_BUF.length);  [CE]  cannot  find  symbol  BYTES_BUF  [FE]                      NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead,    MAX_BYTES_BUF.length);    	non-compiled	[CE]  cannot  find  symbol  BYTES_BUF	71	None	replace
287	[BUG]  [BUGGY]  this.entry  =  readNEW_Entry(false);  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW_Entry(false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW_Entry(false);	  this.entry    =    readNEW_Entry();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
288	[BUG]  [BUGGY]  this.entry  =  readNEW_Entry(true);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW_Entry(true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW_Entry(true);	  this.entry    =    readNEW_Entry();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
289	[BUG]  [BUGGY]  this.entry  =  readNEW_Entry(),  magicString;  [CE]  ';'  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW_Entry(),  magicString;  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW_Entry(),  magicString;	  this.entry    =    readNEW_Entry();    	non-compiled	[CE]  ';'  expected	2	None	replace
290	[BUG]  [BUGGY]  this.entry  =  readNEW_EntryEOF();  [CE]  cannot  find  symbol  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW_EntryEOF();  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW_EntryEOF();	  this.entry    =    readNEW_Entry();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
291	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  FOUR_BYTES_BUF);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  magicString,  FOUR_BYTES_BUF);	  this.entry    =    readNewEntry(false,    magicString,    FOUR_BYTES_BUF);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	35	None	replace
292	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  SIX_BYTES_BUF,  magicString,  FOUR_BYTES_BUF);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  SIX_BYTES_BUF,  magicString,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  SIX_BYTES_BUF,  magicString,  FOUR_BYTES_BUF);	  this.entry    =    readNewEntry(false,    magicString,    FOUR_BYTES_BUF);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	35	None	replace
293	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  tmpbuf);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  tmpbuf);	  this.entry    =    readNewEntry(false,    magicString,    FOUR_BYTES_BUF);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	35	None	replace
294	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  MAX_NEW_CRC,  magicString,  FOUR_BYTES_BUF);  [CE]  cannot  find  symbol  MAX_NEW_CRC  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  MAX_NEW_CRC,  magicString,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  MAX_NEW_CRC,  magicString,  FOUR_BYTES_BUF);	  this.entry    =    readNewEntry(false,    magicString,    FOUR_BYTES_BUF);    	non-compiled	[CE]  cannot  find  symbol  MAX_NEW_CRC	35	None	replace
295	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  TWO_BYTES_BUF.length);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  TWO_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  TWO_BYTES_BUF.length);	  this.entry    =    readNewEntry(false,    magicString,    FOUR_BYTES_BUF);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	35	None	replace
296	[BUG]  [BUGGY]  this.entry  =  readNEWEntry(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC));  [CE]  no  suitable  method  found  for  toAsciiString(String)  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEWEntry(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC));  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEWEntry(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC));	  this.entry    =    readNEWEntry(true,    magicString);    	non-compiled	[CE]  no  suitable  method  found  for  toAsciiString(String)	82	None	replace
297	[BUG]  [BUGGY]  this.entry  =  readNEWEntry(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CLC));  [CE]  cannot  find  symbol  MAGIC_NEW_CLC  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEWEntry(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CLC));  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEWEntry(true,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CLC));	  this.entry    =    readNEWEntry(true,    magicString);    	non-compiled	[CE]  cannot  find  symbol  MAGIC_NEW_CLC	82	None	replace
298	[BUG]  [BUGGY]  this.entry  =  readNewEntry(tmpbuf,  entryBytesRead,  blockSize);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(tmpbuf,  entryBytesRead,  blockSize);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(tmpbuf,  entryBytesRead,  blockSize);	  this.entry    =    readNewEntry(tmpbuf,    blockSize);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	23	None	replace
299	[BUG]  [BUGGY]  this.entry  =  readNewEntry(tmpbuf,  blockSize,  magicString);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(tmpbuf,  blockSize,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(tmpbuf,  blockSize,  magicString);	  this.entry    =    readNewEntry(tmpbuf,    blockSize);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	23	None	replace
300	[BUG]  [BUGGY]  this.entry  =  readNewEntry(magicString,  tmpbuf,  blockSize);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(magicString,  tmpbuf,  blockSize);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(magicString,  tmpbuf,  blockSize);	  this.entry    =    readNewEntry(tmpbuf,    blockSize);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	23	None	replace
301	[BUG]  [BUGGY]  this.entry  =  readNewEntry(tmpbuf,  MAX_NEW_CRC,  blockSize);  [CE]  cannot  find  symbol  MAX_NEW_CRC  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(tmpbuf,  MAX_NEW_CRC,  blockSize);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(tmpbuf,  MAX_NEW_CRC,  blockSize);	  this.entry    =    readNewEntry(tmpbuf,    blockSize);    	non-compiled	[CE]  cannot  find  symbol  MAX_NEW_CRC	23	None	replace
302	[BUG]  [BUGGY]  this.entry  =  readNewEntry(tmpbuf,  0,  blockSize);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(tmpbuf,  0,  blockSize);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(tmpbuf,  0,  blockSize);	  this.entry    =    readNewEntry(tmpbuf,    blockSize);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	23	None	replace
303	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  tmpbuf,  blockSize);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  tmpbuf,  blockSize);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  tmpbuf,  blockSize);	  this.entry    =    readNewEntry(tmpbuf,    blockSize);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	23	None	replace
304	[BUG]  [BUGGY]  this.entry  =  readNewEntry(in,  tmpbuf,  blockSize);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(in,  tmpbuf,  blockSize);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(in,  tmpbuf,  blockSize);	  this.entry    =    readNewEntry(tmpbuf,    blockSize);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	23	None	replace
305	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  SIX_BYTES_BUF);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  SIX_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  SIX_BYTES_BUF);	  this.entry    =    readNewEntry(true,    MISSING_NEW_CRC);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	44	None	replace
306	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  FOUR_BYTES_BUF,  0,  this.entry.length);  [CE]  cannot  find  symbol  length  [FE]                IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  FOUR_BYTES_BUF,  0,  this.entry.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  FOUR_BYTES_BUF,  0,  this.entry.length);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    SIX_BYTES_BUF.length);    	non-compiled	[CE]  cannot  find  symbol  length	66	None	replace
307	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  TWO_BYTES_BUF.length);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                  IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  TWO_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  TWO_BYTES_BUF.length);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    SIX_BYTES_BUF.length);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	66	None	replace
308	[BUG]  [BUGGY]  this.entry  =  readNewEntry(null,  null,  magicString);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(null,  null,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(null,  null,  magicString);	  this.entry    =    readNewEntry(null,    null);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	73	None	replace
309	[BUG]  [BUGGY]  this.entry  =  readNewEntry(null,  magicString,  null);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(null,  magicString,  null);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(null,  magicString,  null);	  this.entry    =    readNewEntry(null,    null);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	73	None	replace
310	[BUG]  [BUGGY]  this.entry  =  readNewEntry(new  String[]  {  magicString  },  null);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(new  String[]  {  magicString  },  null);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(new  String[]  {  magicString  },  null);	  this.entry    =    readNewEntry(null,    null);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	73	None	replace
311	[BUG]  [BUGGY]  this.entry  =  readNewEntry(in,  null,  null);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(in,  null,  null);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(in,  null,  null);	  this.entry    =    readNewEntry(null,    null);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	73	None	replace
312	[BUG]  [BUGGY]  this.entry  =  readNewEntry(crc,  null,  null);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(crc,  null,  null);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(crc,  null,  null);	  this.entry    =    readNewEntry(null,    null);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	73	None	replace
313	[BUG]  [BUGGY]  this.entry  =  readNewEntry(tmpbuf,  null,  null);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(tmpbuf,  null,  null);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(tmpbuf,  null,  null);	  this.entry    =    readNewEntry(null,    null);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	73	None	replace
314	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  MIGIC_NEW);  [CE]  cannot  find  symbol  MIGIC_NEW  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  MIGIC_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  MIGIC_NEW);	  this.entry    =    readNewEntry(false,    true,    MIGIC_NEW);    	non-compiled	[CE]  cannot  find  symbol  MIGIC_NEW	56	None	replace
315	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  MIGIC_NEW_CRC);  [CE]  cannot  find  symbol  MIGIC_NEW_CRC  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  MIGIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  MIGIC_NEW_CRC);	  this.entry    =    readNewEntry(false,    true,    MIGIC_NEW);    	non-compiled	[CE]  cannot  find  symbol  MIGIC_NEW_CRC	56	None	replace
316	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  MIGIC_NEW_CRC);  [CE]  cannot  find  symbol  MIGIC_NEW_CRC  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  MIGIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  MIGIC_NEW_CRC);	  this.entry    =    readNewEntry(false,    true,    MIGIC_NEW);    	non-compiled	[CE]  cannot  find  symbol  MIGIC_NEW_CRC	56	None	replace
317	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  TWO_BYTES_BUF);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  TWO_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  magicString,  TWO_BYTES_BUF);	  this.entry    =    readNewEntry(false,    magicString,    TWO_BYTES_BUF);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	74	None	replace
318	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  SIX_BYTES_BUF,  magicString,  TWO_BYTES_BUF);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  SIX_BYTES_BUF,  magicString,  TWO_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  SIX_BYTES_BUF,  magicString,  TWO_BYTES_BUF);	  this.entry    =    readNewEntry(false,    magicString,    TWO_BYTES_BUF);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	74	None	replace
319	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  TWO_BYTES_BUF,  tmpbuf);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  TWO_BYTES_BUF,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  TWO_BYTES_BUF,  tmpbuf);	  this.entry    =    readNewEntry(false,    magicString,    TWO_BYTES_BUF);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	74	None	replace
320	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  TWO_BYTES_BUF);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  TWO_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  TWO_BYTES_BUF);	  this.entry    =    readNewEntry(false,    magicString,    TWO_BYTES_BUF);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	74	None	replace
321	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  MAX_NEW_CRC,  magicString,  TWO_BYTES_BUF);  [CE]  cannot  find  symbol  MAX_NEW_CRC  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  MAX_NEW_CRC,  magicString,  TWO_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  MAX_NEW_CRC,  magicString,  TWO_BYTES_BUF);	  this.entry    =    readNewEntry(false,    magicString,    TWO_BYTES_BUF);    	non-compiled	[CE]  cannot  find  symbol  MAX_NEW_CRC	74	None	replace
322	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  FOUR_BYTES_BUF,  magicString,  TWO_BYTES_BUF);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  FOUR_BYTES_BUF,  magicString,  TWO_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  FOUR_BYTES_BUF,  magicString,  TWO_BYTES_BUF);	  this.entry    =    readNewEntry(false,    magicString,    TWO_BYTES_BUF);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	74	None	replace
323	[BUG]  [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_ASCII);  this.entry  =  readNewEntry(true);  [CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()  [FE]            NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_ASCII);  this.entry  =  readNewEntry(true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_ASCII);  this.entry  =  readNewEntry(true);	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()	7	None	replace
324	[BUG]  [BUGGY]  if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(true);  }  [CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()  [FE]              NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(true);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(true);  }	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()	7	None	replace
325	[BUG]  [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_BINARY);  this.entry  =  readNewEntry(true);  [CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()  [FE]                NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_BINARY);  this.entry  =  readNewEntry(true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_BINARY);  this.entry  =  readNewEntry(true);	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()	7	None	replace
326	[BUG]  [BUGGY]  if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
327	[BUG]  [BUGGY]  if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(SIX_BYTES_BUF,  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(SIX_BYTES_BUF,  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(SIX_BYTES_BUF,	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
328	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.magicString,  FOUR_BYTES_BUF.length);  [CE]  cannot  find  symbol  magicString  [FE]        NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.magicString,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.magicString,  FOUR_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  cannot  find  symbol  magicString	68	None	replace
329	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF,  magicString,  FOUR_BYTES_BUF.length);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF,  magicString,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF,  magicString,  FOUR_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	68	None	replace
330	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.mappingString,  FOUR_BYTES_BUF.length);  [CE]  cannot  find  symbol  mappingString  [FE]            NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.mappingString,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.mappingString,  FOUR_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  cannot  find  symbol  mappingString	68	None	replace
331	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in,  magicString,  FOUR_BYTES_BUF.length);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in,  magicString,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.in,  magicString,  FOUR_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	68	None	replace
332	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in,  FOUR_BYTES_BUF.length);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.in,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.in,  FOUR_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	68	None	replace
333	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                  NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.tmpbuf,  FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	68	None	replace
334	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                    NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  magicString,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	add	System.arraycopy(FOUR_BYTES_BUF,  0,  magicString,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    	compilable	  [FE]  ArrayStoreException  	68	1	replace
335	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  magicString,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [FE]  ArrayStoreException  [FE]                    NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  magicString,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  magicString,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    	compilable	  [FE]  ArrayStoreException  	68	1	replace
336	[BUG]  [BUGGY]  this.entry  =  readNewEntry(null,  true,  magicString);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]              IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(null,  true,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(null,  true,  magicString);	  this.entry    =    readNewEntry(true);    this.entry    =    readNewEntry(true,    magicString);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	16	None	replace
337	[BUG]  [BUGGY]  this.entry  =  readNewEntry(NEW_CRC,  magicString);  [CE]  cannot  find  symbol  NEW_CRC  [FE]                IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(NEW_CRC,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(NEW_CRC,  magicString);	  this.entry    =    readNewEntry(true);    this.entry    =    readNewEntry(true,    magicString);    	non-compiled	[CE]  cannot  find  symbol  NEW_CRC	16	None	replace
338	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  null);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]              IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  null);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  null);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	65	None	replace
339	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  TWO_BYTES_BUF,  tmpbuf);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  TWO_BYTES_BUF,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  magicString,  TWO_BYTES_BUF,  tmpbuf);	  this.entry    =    readNewEntry(false,    magicString,    tmpbuf);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	34	None	replace
340	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  MAX_NEW_CRC,  magicString,  tmpbuf);  [CE]  cannot  find  symbol  MAX_NEW_CRC  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  MAX_NEW_CRC,  magicString,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  MAX_NEW_CRC,  magicString,  tmpbuf);	  this.entry    =    readNewEntry(false,    magicString,    tmpbuf);    	non-compiled	[CE]  cannot  find  symbol  MAX_NEW_CRC	34	None	replace
341	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  MAGIC_NEW_CRC,  tmpbuf);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  MAGIC_NEW_CRC,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  MAGIC_NEW_CRC,  tmpbuf);	  this.entry    =    readNewEntry(false,    magicString,    tmpbuf);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	34	None	replace
342	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  tmpbuf,  magicString);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  tmpbuf,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  tmpbuf,  magicString);	  this.entry    =    readNewEntry(false,    magicString,    tmpbuf);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	34	None	replace
343	[BUG]  [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF,  MAGIC_NEW);  [CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()  [FE]              NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF,  MAGIC_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF,  MAGIC_NEW);	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW);    	non-compiled	[CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()	8	None	replace
344	[BUG]  [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(FOUR_BYTES_BUF);  [CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()  [FE]                NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	String  magicString  =  ArchiveUtils.toAsciiString(FOUR_BYTES_BUF);	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW);    	non-compiled	[CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()	8	None	replace
345	[BUG]  [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_RCC);  [CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()  [FE]                  NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_RCC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_RCC);	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW);    	non-compiled	[CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()	8	None	replace
346	[BUG]  [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(FOUR_BYTES_BUF,  MAGIC_NEW);  [CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()  [FE]                    NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(FOUR_BYTES_BUF,  MAGIC_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	String  magicString  =  ArchiveUtils.toAsciiString(FOUR_BYTES_BUF,  MAGIC_NEW);	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW);    	non-compiled	[CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()	8	None	replace
347	[BUG]  [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CLOSE);  [CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()  [FE]                      NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CLOSE);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CLOSE);	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW);    	non-compiled	[CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()	8	None	replace
348	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  magicString.length);  [CE]  cannot  find  symbol  length  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  magicString.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  magicString.length);	  this.entry    =    readNEwEntry(true,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  cannot  find  symbol  length	59	None	replace
349	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  MAX_BYTES_BUF.length);  [CE]  cannot  find  symbol  MAX_BYTES_BUF  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  MAX_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  MAX_BYTES_BUF.length);	  this.entry    =    readNEwEntry(true,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  cannot  find  symbol  MAX_BYTES_BUF	59	None	replace
350	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  SIX_BYTES_BUF,  FOUR_BYTES_BUF.length);  [CE]  cannot  find  symbol  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  SIX_BYTES_BUF,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  SIX_BYTES_BUF,  FOUR_BYTES_BUF.length);	  this.entry    =    readNEwEntry(true,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
351	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [CE]  cannot  find  symbol  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);	  this.entry    =    readNEwEntry(true,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
352	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  SIX_BYTES_BUF.length);  [CE]  cannot  find  symbol  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  SIX_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  SIX_BYTES_BUF.length);	  this.entry    =    readNEwEntry(true,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
353	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  MAGIC_NEW_CRC.length);  [CE]  cannot  find  symbol  length  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  MAGIC_NEW_CRC.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  MAGIC_NEW_CRC.length);	  this.entry    =    readNEwEntry(true,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  cannot  find  symbol  length	59	None	replace
354	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  false,  FOUR_BYTES_BUF);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  false,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  false,  FOUR_BYTES_BUF);	  this.entry    =    readNewEntry(false,    FOUR_BYTES_BUF);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	50	None	replace
355	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  0,  FOUR_BYTES_BUF);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  0,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  0,  FOUR_BYTES_BUF);	  this.entry    =    readNewEntry(false,    FOUR_BYTES_BUF);    	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	50	None	replace
356	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  BYTES_CRC);  [CE]  cannot  find  symbol  BYTES_CRC  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  BYTES_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  BYTES_CRC);	  this.entry    =    readNewEntry(true,    BYTES_NEW);    	non-compiled	[CE]  cannot  find  symbol  BYTES_CRC	78	None	replace
357	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  FOUR_BYTES_NEW);  [CE]  cannot  find  symbol  FOUR_BYTES_NEW  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  FOUR_BYTES_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  FOUR_BYTES_NEW);	  this.entry    =    readNewEntry(true,    BYTES_NEW);    	non-compiled	[CE]  cannot  find  symbol  FOUR_BYTES_NEW	78	None	replace
358	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  MAX_BYTES_NEW);  [CE]  cannot  find  symbol  MAX_BYTES_NEW  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  MAX_BYTES_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  MAX_BYTES_NEW);	  this.entry    =    readNewEntry(true,    BYTES_NEW);    	non-compiled	[CE]  cannot  find  symbol  MAX_BYTES_NEW	78	None	replace
359	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]          if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	add	                if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }	  	compilable	  [FE]  IllegalArgumentException  	89	1	add
360	[BUG]  [BUGGY]          if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]          if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	                if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }	  	compilable	  [FE]  IllegalArgumentException  	89	1	add
361	[BUG]  [BUGGY]          if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  If(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]          if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  If(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	                if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    If(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }	  	non-compiled	[CE]  ';'  expected	89	None	add
362	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]          if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	add	                if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  }	  	compilable	  [FE]  IllegalArgumentException  	89	1	add
363	[BUG]  [BUGGY]          if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]          if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	                if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  }	  	compilable	  [FE]  IllegalArgumentException  	89	1	add
364	[BUG]  [BUGGY]          if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  ||  magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]          if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  ||  magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	                if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    ||  magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
365	[BUG]  [BUGGY]          if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  if(MagicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  [CE]  cannot  find  symbol  MagicString  [FE]            IllegalArgumentException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]          if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  if(MagicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	                if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    if(MagicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }	  	non-compiled	[CE]  cannot  find  symbol  MagicString	89	None	add
366	[BUG]  [BUGGY]          if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  if(magicString.equals(MAGIC_NEW_CCRC))  {  this.entry  =  readNewEntry(true);  }  [CE]  cannot  find  symbol  MAGIC_NEW_CCRC  [FE]              IllegalArgumentException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]          if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  if(magicString.equals(MAGIC_NEW_CCRC))  {  this.entry  =  readNewEntry(true);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	                if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    if(magicString.equals(MAGIC_NEW_CCRC))  {  this.entry  =  readNewEntry(true);  }	  	non-compiled	[CE]  cannot  find  symbol  MAGIC_NEW_CCRC	89	None	add
367	[BUG]  [BUGGY]  this.entry  =  readNEW(false,  MAX_NEW_CRC);  [CE]  cannot  find  symbol  MAX_NEW_CRC  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(false,  MAX_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(false,  MAX_NEW_CRC);	  this.entry    =    readNEW(false);    	non-compiled	[CE]  cannot  find  symbol  MAX_NEW_CRC	3	None	replace
368	[BUG]  [BUGGY]  this.entry  =  readNEW(false,  MAGIC_NEW_CRC);  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(false,  MAGIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(false,  MAGIC_NEW_CRC);	  this.entry    =    readNEW(false);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
369	[BUG]  [BUGGY]  this.entry  =  readNEW(false,  MIGIC_NEW_CRC);  [CE]  cannot  find  symbol  MIGIC_NEW_CRC  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(false,  MIGIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(false,  MIGIC_NEW_CRC);	  this.entry    =    readNEW(false);    	non-compiled	[CE]  cannot  find  symbol  MIGIC_NEW_CRC	3	None	replace
370	[BUG]  [BUGGY]  this.entry  =  readNEWEntry(false,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC));  [CE]  no  suitable  method  found  for  toAsciiString(String)  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEWEntry(false,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC));  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEWEntry(false,  magicString,  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC));	  this.entry    =    readNEWEntry(false,    magicString);    	non-compiled	[CE]  no  suitable  method  found  for  toAsciiString(String)	25	None	replace
371	[BUG]  [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_ASCII);  [CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()  [FE]        NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_ASCII);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_ASCII);	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);    	non-compiled	[CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()	5	None	replace
372	[BUG]  [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_BINARY);  [CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()  [FE]          NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_BINARY);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_BINARY);	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);    	non-compiled	[CE]  variable  magicString  is  already  defined  in  method  getNextCPIOEntry()	5	None	replace
373	[BUG]  [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF,  MAGIC_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]            NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF,  MAGIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF,  MAGIC_NEW_CRC);	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
374	[BUG]  [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(SIX_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]              NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(SIX_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	String  magicString  =  ArchiveUtils.toAsciiString(SIX_NEW_CRC);	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
375	[BUG]  [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(FOUR_BYTES_BUF,  MAGIC_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(FOUR_BYTES_BUF,  MAGIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	String  magicString  =  ArchiveUtils.toAsciiString(FOUR_BYTES_BUF,  MAGIC_NEW_CRC);	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
376	[BUG]  [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC,  this.blockSize);  [CE]  class,  interface,  or  enum  expected  [FE]                  NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC,  this.blockSize);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC,  this.blockSize);	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
377	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  SIX_NEW_ASCII);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  SIX_NEW_ASCII);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  SIX_NEW_ASCII);	  this.entry    =    readNEwEntry(true,    MAX_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
378	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  SIX_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  SIX_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  SIX_NEW_CRC);	  this.entry    =    readNEwEntry(true,    MAX_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
379	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  magicString,  FOUR_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  magicString,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  magicString,  FOUR_BYTES_BUF);	  this.entry    =    readNEwEntry(true,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
380	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  magicString,  tmpbuf);  [CE]  class,  interface,  or  enum  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  magicString,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  magicString,  tmpbuf);	  this.entry    =    readNEwEntry(true,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
381	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  magicString,  FOUR_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  magicString,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  magicString,  FOUR_BYTES_BUF.length);	  this.entry    =    readNEwEntry(true,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
382	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  magicString,  MAGIC_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  magicString,  MAGIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  magicString,  MAGIC_NEW_CRC);	  this.entry    =    readNEwEntry(true,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
383	[BUG]  [BUGGY]  if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  }  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayStoreException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  }	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
384	[BUG]  [BUGGY]  if(magicString.equals(MAGIC_NEW))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_B  [CE]  ')'  expected  [FE]      ArrayStoreException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString.equals(MAGIC_NEW))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_B  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString.equals(MAGIC_NEW))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_B	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  ')'  expected	63	None	replace
385	[BUG]  [BUGGY]  if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  }  [CE]  class,  interface,  or  enum  expected  [FE]                IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  }	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    SIX_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
386	[BUG]  [BUGGY]  if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  SIX_BYTES_BUF.length);  }  [CE]  class,  interface,  or  enum  expected  [FE]                  IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  SIX_BYTES_BUF.length);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  SIX_BYTES_BUF.length);  }	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    SIX_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
387	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  SIX_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  SIX_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  SIX_BYTES_BUF.length,  FOUR_BYTES_BUF.length);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    SIX_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
388	[BUG]  [BUGGY]  this.entry  =  readNewEntry(tmpbuf,  1,  blockSize);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(tmpbuf,  1,  blockSize);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(tmpbuf,  1,  blockSize);	  this.entry    =    readNewEntry(tmpbuf,    blockSize);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
389	[BUG]  [BUGGY]  this.entry  =  readNewEntry(tmpbuf,  blockSize,  MAX_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(tmpbuf,  blockSize,  MAX_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(tmpbuf,  blockSize,  MAX_NEW);	  this.entry    =    readNewEntry(tmpbuf,    blockSize);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
390	[BUG]  [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]        NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_BYTES_BUF);	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
391	[BUG]  [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]          NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_BUF);	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
392	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  SIX_BYTES_BUF,  tmpbuf);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  SIX_BYTES_BUF,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  SIX_BYTES_BUF,  tmpbuf);	  this.entry    =    readNewEntry(false,    true,    tmpbuf);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
393	[BUG]  [BUGGY]  this.entry  =  readNEW(true,  FOUR_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(true,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(true,  FOUR_BYTES_BUF);	  this.entry    =    readNEW(true,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
394	[BUG]  [BUGGY]  this.entry  =  readNEW(true,  magicString,  FOUR_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(true,  magicString,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(true,  magicString,  FOUR_BYTES_BUF);	  this.entry    =    readNEW(true,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
395	[BUG]  [BUGGY]  this.entry  =  readNEW(true,  MAX_NEW_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(true,  MAX_NEW_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(true,  MAX_NEW_NEW);	  this.entry    =    readNEW(true,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
396	[BUG]  [BUGGY]  this.entry  =  readNEW(true,  FOUR_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(true,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(true,  FOUR_BYTES_BUF.length);	  this.entry    =    readNEW(true,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
397	[BUG]  [BUGGY]  this.entry  =  readNEW(true,  magicString,  FOUR_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(true,  magicString,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(true,  magicString,  FOUR_BYTES_BUF.length);	  this.entry    =    readNEW(true,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
398	[BUG]  [BUGGY]  this.entry  =  readNEW(true,  magicString,  tmpbuf);  [CE]  class,  interface,  or  enum  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(true,  magicString,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(true,  magicString,  tmpbuf);	  this.entry    =    readNEW(true,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
399	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  MIR_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]        IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  MIR_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  MIR_NEW);	  this.entry    =    readNewEntry(true,    cpioString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
400	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  SIX_NEW_CRC,  magicString);  [CE]  class,  interface,  or  enum  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  SIX_NEW_CRC,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  SIX_NEW_CRC,  magicString);	  this.entry    =    readNewEntry(false,    MAX_NEW_CRC,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
401	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  MIR_NEW_CRC,  magicString);  [CE]  class,  interface,  or  enum  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  MIR_NEW_CRC,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  MIR_NEW_CRC,  magicString);	  this.entry    =    readNewEntry(false,    MAX_NEW_CRC,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
402	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  SYNTHETIC_NEW,  magicString);  [CE]  class,  interface,  or  enum  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  SYNTHETIC_NEW,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  SYNTHETIC_NEW,  magicString);	  this.entry    =    readNewEntry(false,    MAX_NEW_CRC,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
403	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  MISSING_NEW_CREATOR);  [CE]  class,  interface,  or  enum  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  MISSING_NEW_CREATOR);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  MISSING_NEW_CREATOR);	  this.entry    =    readNewEntry(true,    MISSING_NEW_CREATOR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
404	[BUG]  [BUGGY]  if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
405	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  false,  FOUR_BYTES_BUF,  magicString);  [CE]  class,  interface,  or  enum  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  false,  FOUR_BYTES_BUF,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  false,  FOUR_BYTES_BUF,  magicString);	  this.entry    =    readNewEntry(false,    false,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
406	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  false,  magicString,  FOUR_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  false,  magicString,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  false,  magicString,  FOUR_BYTES_BUF);	  this.entry    =    readNewEntry(false,    false,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
407	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  SYNTHETIC_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  SYNTHETIC_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  SYNTHETIC_NEW);	  this.entry    =    readNEwEntry(true,    MAX_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
408	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  SYNTHETIC);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  SYNTHETIC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  SYNTHETIC);	  this.entry    =    readNEwEntry(true,    MAX_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
409	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  SIX_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  SIX_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  SIX_NEW);	  this.entry    =    readNEwEntry(true,    MAX_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
410	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  MAX_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  MAX_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  MAX_BYTES_BUF);	  this.entry    =    readNewEntry(false,    magicString,    TWO_BYTES_BUF);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
411	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  TWO_BYTES_BUF,  FOUR_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  TWO_BYTES_BUF,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  TWO_BYTES_BUF,  FOUR_BYTES_BUF.length);	  this.entry    =    readNewEntry(false,    magicString,    TWO_BYTES_BUF);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
412	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  TWO_BYTES_BUF,  FOUR_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  TWO_BYTES_BUF,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  TWO_BYTES_BUF,  FOUR_BYTES_BUF);	  this.entry    =    readNewEntry(false,    magicString,    TWO_BYTES_BUF);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
413	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(false,  SIX_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(false,  SIX_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(false,  SIX_BYTES_BUF);	  this.entry    =    readNEwEntry(true,    FOUR_BYTES_BUF);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
414	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  MISSING_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  MISSING_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  MISSING_NEW);	  this.entry    =    readNEwEntry(true,    MISSING_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
415	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  MISSING_NEW_READ);  [CE]  class,  interface,  or  enum  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  MISSING_NEW_READ);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  MISSING_NEW_READ);	  this.entry    =    readNEwEntry(true,    MISSING_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
416	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  MISSING_NEW_KEY);  [CE]  class,  interface,  or  enum  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  MISSING_NEW_KEY);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  MISSING_NEW_KEY);	  this.entry    =    readNEwEntry(true,    MISSING_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
417	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  magicString,  FOUR_BYTES_BUF,  FOUR_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]        NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  magicString,  FOUR_BYTES_BUF,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  magicString,  FOUR_BYTES_BUF,  FOUR_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
418	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.asciiString,  FOUR_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]          NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.asciiString,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.asciiString,  FOUR_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
419	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  BYTES_BUF.length);	  this.entry    =    readNewEntry(false,    magicString,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
420	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  tmpbuf.length);  [CE]  class,  interface,  or  enum  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  tmpbuf.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  tmpbuf.length);	  this.entry    =    readNewEntry(false,    magicString,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
421	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  SIX_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  SIX_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  SIX_BYTES_BUF);	  this.entry    =    readNewEntry(false,    magicString,    FOUR_BYTES_BUF);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
422	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  SIX_BYTES_BUF,  FOUR_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  SIX_BYTES_BUF,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  SIX_BYTES_BUF,  FOUR_BYTES_BUF);	  this.entry    =    readNewEntry(false,    magicString,    FOUR_BYTES_BUF);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
423	[BUG]  [BUGGY]  this.entry  =  readNewEntry(null,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(null,  true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(null,  true);	  this.entry    =    readNewEntry(true,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
424	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  tmpbuf);  [CE]  class,  interface,  or  enum  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  tmpbuf);	  this.entry    =    readNewEntry(true,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
425	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  SIX_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]        IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  SIX_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  SIX_BYTES_BUF.length);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
426	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(null);  [CE]  class,  interface,  or  enum  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(null);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(null);	  this.entry    =    readNEwEntry();    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
427	[BUG]  [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF,  MAX_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]              NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF,  MAX_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF,  MAX_BYTES_BUF);	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
428	[BUG]  [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_STRING);  [CE]  class,  interface,  or  enum  expected  [FE]                NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_STRING);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_STRING);	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
429	[BUG]  [BUGGY]  this.entry  =  readNEWEntry(true,  MAX_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEWEntry(true,  MAX_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEWEntry(true,  MAX_NEW);	  this.entry    =    readNEWEnaryEntry(true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
430	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  BYTES_BUF);	  this.entry    =    readNewEntry(true,    BYTES_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
431	[BUG]  [BUGGY]  this.entry  =  readNEWEntry(false,  magicString,  FOUR_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEWEntry(false,  magicString,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEWEntry(false,  magicString,  FOUR_BYTES_BUF);	  this.entry    =    readNEWEntry(false,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
432	[BUG]  [BUGGY]  this.entry  =  readNEW(false,  magicString,  tmpbuf);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(false,  magicString,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(false,  magicString,  tmpbuf);	  this.entry    =    readNEWEntry(false,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
433	[BUG]  [BUGGY]  this.entry  =  readNEWEntry(false,  MAX_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEWEntry(false,  MAX_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEWEntry(false,  MAX_NEW_CRC);	  this.entry    =    readNEWEntry(false,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
434	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  MAX_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  MAX_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  magicString,  MAX_NEW);	  this.entry    =    readNewEntry(false,    magicString,    MISSING_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
435	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  SIZING_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  SIZING_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  SIZING_NEW);	  this.entry    =    readNewEntry(false,    magicString,    MISSING_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
436	[BUG]  [BUGGY]  if(magicString!=  null)  {  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [CE]  <identifier>  expected  [FE]          NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString!=  null)  {  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString!=  null)  {  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.    	non-compiled	[CE]  <identifier>  expected	86	None	replace
437	[BUG]  [BUGGY]  if(magicString  ==  null)  {  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString  ==  null)  {  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString  ==  null)  {  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.    	non-compiled	[CE]  <identifier>  expected	86	None	replace
438	[BUG]  [BUGGY]  if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.    	non-compiled	[CE]  <identifier>  expected	86	None	replace
439	[BUG]  [BUGGY]  if(magicString!=  null)  {  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString!=  null)  {  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString!=  null)  {  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.    	non-compiled	[CE]  <identifier>  expected	86	None	replace
440	[BUG]  [BUGGY]  if(magicString!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString!=  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.    	non-compiled	[CE]  <identifier>  expected	86	None	replace
441	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  FALSE);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  FALSE);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  FALSE);	  this.entry    =    readNewEntry(true,    MAX_NEW_ASCII);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
442	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  SIX_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  SIX_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  SIX_NEW_CRC);	  this.entry    =    readNewEntry(true,    MAX_NEW_ASCII);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
443	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  SYNTHETIC_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  SYNTHETIC_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  SYNTHETIC_NEW);	  this.entry    =    readNewEntry(false,    true,    MIGIC_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
444	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  SIX_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  SIX_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  SIX_BYTES_BUF);	  this.entry    =    readNewEntry(false,    true,    MIGIC_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
445	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  STRICT_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  STRICT_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  STRICT_NEW);	  this.entry    =    readNewEntry(false,    true,    MIGIC_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
446	[BUG]  [BUGGY]  this.entry  =  readNEW(false,  FOUR_BYTES_BUF,  magicString);  [CE]  class,  interface,  or  enum  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(false,  FOUR_BYTES_BUF,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(false,  FOUR_BYTES_BUF,  magicString);	  this.entry    =    readNEW(false,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
447	[BUG]  [BUGGY]  this.entry  =  readNEW(false,  magicString,  FOUR_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(false,  magicString,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(false,  magicString,  FOUR_BYTES_BUF);	  this.entry    =    readNEW(false,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
448	[BUG]  [BUGGY]  this.entry  =  readNEW(false,  FOUR_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(false,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(false,  FOUR_BYTES_BUF);	  this.entry    =    readNEW(false,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
449	[BUG]  [BUGGY]  this.entry  =  readNEW(false,  magicString,  FOUR_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(false,  magicString,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(false,  magicString,  FOUR_BYTES_BUF.length);	  this.entry    =    readNEW(false,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
450	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  SIX_BYTES_BUF  }  ')'  expected  [CE]  ')'  expected  [FE]                  NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  SIX_BYTES_BUF  }  ')'  expected  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	readFully(FOUR_BYTES_BUF,  SIX_BYTES_BUF  }  ')'  expected	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    SIX_BYTES_BUF    	non-compiled	[CE]  ')'  expected	91	None	replace
451	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    SIX_BYTES_BUF    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
452	[BUG]  [BUGGY]  readFully(SIX_BYTES_BUF,  SIX_BYTES_BUF  }  ')'  expected  [CE]  ')'  expected  [FE]                      NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  readFully(SIX_BYTES_BUF,  SIX_BYTES_BUF  }  ')'  expected  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	readFully(SIX_BYTES_BUF,  SIX_BYTES_BUF  }  ')'  expected	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    SIX_BYTES_BUF    	non-compiled	[CE]  ')'  expected	91	None	replace
453	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF,  0,  MISSING_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF,  0,  MISSING_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF,  0,  MISSING_BYTES_BUF.length);	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    SIX_BYTES_BUF    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
454	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF,  ')'  expected  [CE]  ')'  expected  [FE]                          NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF,  ')'  expected  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF,  ')'  expected	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    SIX_BYTES_BUF    	non-compiled	[CE]  ')'  expected	91	None	replace
455	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF,  ')'  expected;  [CE]  ')'  expected  [FE]                            NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF,  ')'  expected;  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF,  ')'  expected;	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    SIX_BYTES_BUF    	non-compiled	[CE]  ')'  expected	91	None	replace
456	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  0);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  0);	  this.entry    =    readNEwEntry(true,    MAX_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
457	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  SIX_NEW_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  SIX_NEW_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  SIX_NEW_BYTES_BUF);	  this.entry    =    readNEwEntry(true,    MAX_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
458	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  magString.length);  [CE]  class,  interface,  or  enum  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  magString.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  magString.length);	  this.entry    =    readNEwEntry(true,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
459	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  tmpbuf.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  tmpbuf.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  tmpbuf.length);	  this.entry    =    readNEwEntry(true,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
460	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  MOVED_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  MOVED_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  MOVED_NEW);	  this.entry    =    readNEwEntry(true,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
461	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  MISSING_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  MISSING_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  FOUR_BYTES_BUF,  MISSING_NEW_CRC);	  this.entry    =    readNEwEntry(true,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
462	[BUG]  [BUGGY]  this.entry  =  readNewEntry(NEW_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(NEW_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(NEW_BUF);	  this.entry    =    readNewEntry(NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
463	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.magicString,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  [CE]  class,  interface,  or  enum  expected  [FE]            NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.magicString,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.magicString,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
464	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.siblingString,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  [CE]  class,  interface,  or  enum  expected  [FE]              NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.siblingString,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.siblingString,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
465	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.key,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  [CE]  class,  interface,  or  enum  expected  [FE]                NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.key,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.key,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
466	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  SIX_NEW_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  SIX_NEW_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  SIX_NEW_BYTES_BUF);	  this.entry    =    readNewEntry(false,    true,    MAX_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
467	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  MIR_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  MIR_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  MIR_NEW);	  this.entry    =    readNewEntry(false,    true,    MAX_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
468	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  magicString);  [CE]  class,  interface,  or  enum  expected  [FE]        NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  magicString);	          System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead,    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
469	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  1);  [CE]  class,  interface,  or  enum  expected  [FE]          NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  1);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  1);	          System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead,    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
470	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  0,  MAGIC_NEW_BINARY);  [CE]  class,  interface,  or  enum  expected  [FE]            NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  0,  MAGIC_NEW_BINARY);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  0,  MAGIC_NEW_BINARY);	          System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead,    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
471	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  null,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  null,  true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  null,  true);	  this.entry    =    readNewEntry(false,    magicString,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
472	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  true);	  this.entry    =    readNewEntry(false,    magicString,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
473	[BUG]  [BUGGY]  this.entry  =  readNEW(false,  SIX_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(false,  SIX_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(false,  SIX_BYTES_BUF);	  this.entry    =    readNEW(false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
474	[BUG]  [BUGGY]  this.entry  =  readNEwBinaryEntry();  [CE]  class,  interface,  or  enum  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwBinaryEntry();  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwBinaryEntry();	  this.entry    =    readNEw();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
475	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  FOUR_BYTES_BUF,  tmpbuf);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  FOUR_BYTES_BUF,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  magicString,  FOUR_BYTES_BUF,  tmpbuf);	  this.entry    =    readNewEntry(false,    magicString,    tmpbuf);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
476	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  BYTES_BUF,  tmpbuf);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  BYTES_BUF,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  magicString,  BYTES_BUF,  tmpbuf);	  this.entry    =    readNewEntry(false,    magicString,    tmpbuf);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
477	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  tmpbuf,  BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  tmpbuf,  BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  tmpbuf,  BYTES_BUF);	  this.entry    =    readNewEntry(false,    magicString,    tmpbuf);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
478	[BUG]  [BUGGY]  if(magicString!=  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(false);  }  [CE]  class,  interface,  or  enum  expected  [FE]          NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString!=  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(false);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString!=  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(false);  }	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
479	[BUG]  [BUGGY]  if(magicString!=  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString!=  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString!=  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
480	[BUG]  [BUGGY]  if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  SIX  [CE]  ')'  expected  [FE]              NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  SIX  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  SIX	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  ')'  expected	6	None	replace
481	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  SIX_NEW_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  SIX_NEW_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  SIX_NEW_BYTES_BUF);	  this.entry    =    readNewEntry(true,    MAX_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
482	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(false,  MAX_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(false,  MAX_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(false,  MAX_NEW);	  this.entry    =    readNEwEntry(false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
483	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(false,  MIR_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(false,  MIR_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(false,  MIR_NEW_CRC);	  this.entry    =    readNEwEntry(false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
484	[BUG]  [BUGGY]  this.entry  =  readNewEntry(NEW_BYTES_BUF,  MAX_NEW_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(NEW_BYTES_BUF,  MAX_NEW_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(NEW_BYTES_BUF,  MAX_NEW_BYTES_BUF);	  this.entry    =    readNewEntry(NEW_CRC,    MAX_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
485	[BUG]  [BUGGY]  this.entry  =  readNewEntry(NEW_BUF,  MAX_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(NEW_BUF,  MAX_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(NEW_BUF,  MAX_NEW_CRC);	  this.entry    =    readNewEntry(NEW_CRC,    MAX_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
486	[BUG]  [BUGGY]  this.entry  =  readNewEntry(MAX_NEW,  MAX_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(MAX_NEW,  MAX_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(MAX_NEW,  MAX_NEW_CRC);	  this.entry    =    readNewEntry(NEW_CRC,    MAX_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
487	[BUG]  [BUGGY]  this.entry  =  readNewEntry(FOUR_BYTES_BUF,  MAX_NEW_FIELD);  [CE]  class,  interface,  or  enum  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(FOUR_BYTES_BUF,  MAX_NEW_FIELD);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(FOUR_BYTES_BUF,  MAX_NEW_FIELD);	  this.entry    =    readNewEntry(NEW_CRC,    MAX_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
488	[BUG]  [BUGGY]  this.entry  =  readNewEntry(NEW_BYTES_BUF,  MAX_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(NEW_BYTES_BUF,  MAX_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(NEW_BYTES_BUF,  MAX_NEW_CRC);	  this.entry    =    readNewEntry(NEW_CRC,    MAX_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
489	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  FOUR_BYTES_BUF,  magicString);  [CE]  class,  interface,  or  enum  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  FOUR_BYTES_BUF,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  FOUR_BYTES_BUF,  magicString);	  this.entry    =    readNewEntry(false,    true,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
490	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  MAX_NEW_CRC,  magicString);  [CE]  class,  interface,  or  enum  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  MAX_NEW_CRC,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  MAX_NEW_CRC,  magicString);	  this.entry    =    readNewEntry(false,    true,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
491	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  MAX_NEW_CRC,  magicString);  [CE]  class,  interface,  or  enum  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  MAX_NEW_CRC,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  MAX_NEW_CRC,  magicString);	  this.entry    =    readNewEntry(false,    true,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
492	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  MIR_NEW_CRC,  magicString);  [CE]  class,  interface,  or  enum  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  MIR_NEW_CRC,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  MIR_NEW_CRC,  magicString);	  this.entry    =    readNewEntry(false,    true,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
493	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  SYNTHETIC);  [CE]  class,  interface,  or  enum  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  SYNTHETIC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  SYNTHETIC);	  this.entry    =    readNewEntry(false,    true,    MAX_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
494	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  null,  BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  null,  BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  null,  BYTES_BUF);	  this.entry    =    readNewEntry(false,    magicString,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
495	[BUG]  [BUGGY]  if(magicString  ==  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString  ==  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString  ==  null)  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(false);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.    	non-compiled	[CE]  <identifier>  expected	88	None	replace
496	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                  IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  0);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  0);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FIELD_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
497	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  0);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  0);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FIELD_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
498	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.bytesRead.length,  FOUR_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]        NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.bytesRead.length,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.bytesRead.length,  FOUR_BYTES_BUF.length);	          System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
499	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entries.length,  FOUR_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]          NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entries.length,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entries.length,  FOUR_BYTES_BUF.length);	          System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
500	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  FOUR_BYTES_BUF,  magString);  [CE]  class,  interface,  or  enum  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  FOUR_BYTES_BUF,  magString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  FOUR_BYTES_BUF,  magString);	  this.entry    =    readNewEntry(true,    FOUR_BYTES_BUF);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
501	[BUG]  [BUGGY]  this.entry  =  readNewEntry(null,  tmpbuf);  [CE]  class,  interface,  or  enum  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(null,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(null,  tmpbuf);	  this.entry    =    readNewEntry(null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
502	[BUG]  [BUGGY]  this.entry  =  readNewEntry(cpio,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(cpio,  null);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(cpio,  null);	  this.entry    =    readNewEntry(null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
503	[BUG]  [BUGGY]  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTS_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]    ArrayStoreException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTS_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry        =        readNewEntry(true);        System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FOUR_BYTES_BUF.length);    this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTS_BUF.length);	  	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	add
504	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  MAX_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  MAX_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  MAX_NEW);	  this.entry    =    readNewEntry(true,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
505	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  STRICT_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  STRICT_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  magicString,  STRICT_NEW);	  this.entry    =    readNewEntry(false,    magicString,    STRICT_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
506	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  MIR_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  magicString,  MIR_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  magicString,  MIR_NEW);	  this.entry    =    readNewEntry(false,    magicString,    STRICT_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
507	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  0L);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  0L);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  0L);	  this.entry    =    readNewEntry(true,    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
508	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  0L);  [CE]  ';'  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  0L);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  0L);	  this.entry    =    readNewEntry(true,    0);    	non-compiled	[CE]  ';'  expected	77	None	replace
509	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  MAIN_BYTES_BUF.length);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  MAIN_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  MAIN_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead,    MAX_BYTES_BUF.length);    	non-compiled	[CE]  ';'  expected	71	None	replace
510	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  SYNTHETIC_BYTES_BUF.length);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  SYNTHETIC_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  SYNTHETIC_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead,    MAX_BYTES_BUF.length);    	non-compiled	[CE]  ';'  expected	71	None	replace
511	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  MOVED_NEW.length);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  MOVED_NEW.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  MOVED_NEW.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead,    MAX_BYTES_BUF.length);    	non-compiled	[CE]  ';'  expected	71	None	replace
512	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  MISSING_NEW_CUSTOM);  [CE]  ';'  expected  [FE]            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  MISSING_NEW_CUSTOM);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  MISSING_NEW_CUSTOM);	  this.entry    =    readNewEntry(true,    MISSING_NEW_CUSTOM);    	non-compiled	[CE]  ';'  expected	79	None	replace
513	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF,  0,  MAPPEL_BYTES_BUF.length);  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF,  0,  MAPPEL_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF,  0,  MAPPEL_BYTES_BUF.length);	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    SIX_BYTES_BUF,    	non-compiled	[CE]  ';'  expected	87	None	replace
514	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF,  0,  MAPPING_BYTES_BUF.length);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF,  0,  MAPPING_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF,  0,  MAPPING_BYTES_BUF.length);	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    SIX_BYTES_BUF,    	non-compiled	[CE]  ';'  expected	87	None	replace
515	[BUG]  [BUGGY]  this.entry  =  readNEWEntry(true,  magicString,  FOUR_BYTES_BUF);  [CE]  ';'  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEWEntry(true,  magicString,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEWEntry(true,  magicString,  FOUR_BYTES_BUF);	  this.entry    =    readNEWEntry(true,    magicString);    	non-compiled	[CE]  ';'  expected	82	None	replace
516	[BUG]  [BUGGY]  this.entry  =  readNEWEntry(true,  magicString,  tmpbuf);  [CE]  ';'  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEWEntry(true,  magicString,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEWEntry(true,  magicString,  tmpbuf);	  this.entry    =    readNEWEntry(true,    magicString);    	non-compiled	[CE]  ';'  expected	82	None	replace
517	[BUG]  [BUGGY]  this.entry  =  readNEWEntry(true,  magicString,  MAGIC_NEW_CRC);  [CE]  ';'  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEWEntry(true,  magicString,  MAGIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEWEntry(true,  magicString,  MAGIC_NEW_CRC);	  this.entry    =    readNEWEntry(true,    magicString);    	non-compiled	[CE]  ';'  expected	82	None	replace
518	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.magicString,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);  [CE]  ';'  expected  [FE]          NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.magicString,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.magicString,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  ';'  expected	69	None	replace
519	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.siblingString,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.siblingString,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.siblingString,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  ';'  expected	69	None	replace
520	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.key,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.key,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.key,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  ';'  expected	69	None	replace
521	[BUG]  [BUGGY]  if(magicString!=  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(true);  }  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString!=  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(true);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString!=  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(true);  }	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  ';'  expected	7	None	replace
522	[BUG]  [BUGGY]  if(magicString!=  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString!=  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString!=  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  ';'  expected	7	None	replace
523	[BUG]  [BUGGY]  if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  }  [CE]  ';'  expected  [FE]            IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  }	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  ';'  expected	64	None	replace
524	[BUG]  [BUGGY]  if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);  }  [CE]  ';'  expected  [FE]              IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(false);  }	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  ';'  expected	64	None	replace
525	[BUG]  [BUGGY]  if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry  [CE]  ';'  expected  [FE]                IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  ';'  expected	64	None	replace
526	[BUG]  [BUGGY]  if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true  [CE]  ')'  expected  [FE]                  IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  ')'  expected	64	None	replace
527	[BUG]  [BUGGY]  if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  }  else  {  [CE]  cannot  find  symbol  DEFAULT_ENCODING  [FE]                    IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  }  else  {  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString  ==  null)  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(true);  }  else  {	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_ENCODING	64	None	replace
528	[BUG]  [BUGGY]  this.entry  =  readNewEntry(null,  SIX_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]        IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(null,  SIX_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(null,  SIX_BYTES_BUF);	  this.entry    =    readNewEntry(true);    this.entry    =    readNewEntry(null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
529	[BUG]  [BUGGY]  this.entry  =  readNewEntry(null,  MAX_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]          IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(null,  MAX_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(null,  MAX_NEW);	  this.entry    =    readNewEntry(true);    this.entry    =    readNewEntry(null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
530	[BUG]  [BUGGY]  this.entry  =  readNewEntry(null,  null,  tmpbuf);  [CE]  class,  interface,  or  enum  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(null,  null,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(null,  null,  tmpbuf);	  this.entry    =    readNewEntry(null,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
531	[BUG]  [BUGGY]  this.entry  =  readNewEntry(null,  null,  MAX_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(null,  null,  MAX_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(null,  null,  MAX_NEW);	  this.entry    =    readNewEntry(null,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
532	[BUG]  [BUGGY]  this.entry  =  readNewEntry(null,  null,  magString);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(null,  null,  magString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(null,  null,  magString);	  this.entry    =    readNewEntry(null,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
533	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  DELETE);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  DELETE);	  this.entry    =    readNEwEntry(true,    MIC_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
534	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  TYPE_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  TYPE_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  TYPE_NEW);	  this.entry    =    readNewEntry(false,    MAX_NEW_ASCII);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
535	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  MAX_NEW_CRC,  FOUR_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  MAX_NEW_CRC,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  MAX_NEW_CRC,  FOUR_BYTES_BUF);	  this.entry    =    readNewEntry(false,    FOUR_BYTES_BUF);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
536	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  FOUR_BYTES_BUF,  MAGIC_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  FOUR_BYTES_BUF,  MAGIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  FOUR_BYTES_BUF,  MAGIC_NEW_CRC);	  this.entry    =    readNewEntry(false,    true,    MAGIC_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
537	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  FOUR_BYTES_BUF,  MAGIC_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  FOUR_BYTES_BUF,  MAGIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  FOUR_BYTES_BUF,  MAGIC_NEW_CRC);	  this.entry    =    readNewEntry(false,    true,    MAGIC_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
538	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  false,  MAGIC_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  false,  MAGIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  false,  MAGIC_NEW_CRC);	  this.entry    =    readNewEntry(false,    true,    MAGIC_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
539	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  null,  TWO_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  null,  TWO_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  null,  TWO_BYTES_BUF);	  this.entry    =    readNewEntry(false,    magicString,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
540	[BUG]  [BUGGY]  this.entry  =  readNEW(true,  MISSING_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(true,  MISSING_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(true,  MISSING_NEW_CRC);	  this.entry    =    readNEW(true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
541	[BUG]  [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR  [CE]  ')'  expected  [FE]    ArrayStoreException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  ')'  expected	63	None	replace
542	[BUG]  [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF,  this.blockSize);  [CE]  class,  interface,  or  enum  expected  [FE]              NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF,  this.blockSize);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF,  this.blockSize);	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
543	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  SYNTHETIC);  [CE]  class,  interface,  or  enum  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  SYNTHETIC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  SYNTHETIC);	  this.entry    =    readNewEntry(false,    magicString,    READ_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
544	[BUG]  [BUGGY]  this.entry  =  readNewEntry(null,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(null,  false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(null,  false);	  this.entry    =    readNewEntry(true,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
545	[BUG]  [BUGGY]  this.entry  =  readNewEntry(null,  FOUR_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(null,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(null,  FOUR_BYTES_BUF);	  this.entry    =    readNewEntry(true,    FOUR_BYTES_BUF);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
546	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  SIX_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  SIX_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  SIX_BYTES_BUF);	  this.entry    =    readNewEntry(true,    FOUR_BYTES_BUF);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
547	[BUG]  [BUGGY]  this.entry  =  readNewEntry(siblingString,  tmpbuf,  blockSize);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(siblingString,  tmpbuf,  blockSize);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(siblingString,  tmpbuf,  blockSize);	  this.entry    =    readNewEntry(tmpbuf,    blockSize);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
548	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  magicString,  FOUR_BYTES_BUF.length,  MISSING_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]        NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  magicString,  FOUR_BYTES_BUF.length,  MISSING_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  magicString,  FOUR_BYTES_BUF.length,  MISSING_NEW_CRC);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
549	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  magicString,  FOUR_BYTES_BUF.length,  FIELD_NAMES);  [CE]  class,  interface,  or  enum  expected  [FE]          NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  magicString,  FOUR_BYTES_BUF.length,  FIELD_NAMES);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  magicString,  FOUR_BYTES_BUF.length,  FIELD_NAMES);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
550	[BUG]  [BUGGY]  this.entry  =  readNEwNewEntry();  [CE]  class,  interface,  or  enum  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwNewEntry();  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwNewEntry();	  this.entry    =    readNEwEntry();    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
551	[BUG]  [BUGGY]  this.entry  =  readNEwEntryEOF();  [CE]  class,  interface,  or  enum  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntryEOF();  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntryEOF();	  this.entry    =    readNEwEntry();    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
552	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  SYNTHETIC);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  SYNTHETIC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  SYNTHETIC);	  this.entry    =    readNewEntry(true,    BYTES_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
553	[BUG]  [BUGGY]  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  F  [CE]  ')'  expected  [FE]    ArrayStoreException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  F  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry        =        readNewEntry(true);        System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FOUR_BYTES_BUF.length);    if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  F	  	non-compiled	[CE]  ')'  expected	62	None	add
554	[BUG]  [BUGGY]  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  if(magicString.equals(MAGIC_NEW))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_B  [CE]  ')'  expected  [FE]      ArrayStoreException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  if(magicString.equals(MAGIC_NEW))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_B  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry        =        readNewEntry(true);        System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FOUR_BYTES_BUF.length);    if(magicString.equals(MAGIC_NEW))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  FOUR_B	  	non-compiled	[CE]  ')'  expected	62	None	add
555	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  MAXIMIZED_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  MAXIMIZED_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  MAXIMIZED_NEW);	  this.entry    =    readNewEntry(false,    MISSING_ASCII);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
556	[BUG]  [BUGGY]  this.entry  =  readNewEntry(FOR_ASCII,  MAX_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(FOR_ASCII,  MAX_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(FOR_ASCII,  MAX_NEW_CRC);	  this.entry    =    readNewEntry(NEW_CRC,    MAX_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
557	[BUG]  [BUGGY]  this.entry  =  readNewEntry(FOR,  MAX_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(FOR,  MAX_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(FOR,  MAX_NEW_CRC);	  this.entry    =    readNewEntry(NEW_CRC,    MAX_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
558	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  MIR_NEW_CRC,  tmpbuf);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  MIR_NEW_CRC,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  MIR_NEW_CRC,  tmpbuf);	  this.entry    =    readNewEntry(false,    magicString,    tmpbuf);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
559	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  tmpbuf,  FOUR_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  tmpbuf,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  tmpbuf,  FOUR_BYTES_BUF);	  this.entry    =    readNewEntry(false,    magicString,    tmpbuf);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
560	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  tmpbuf,  MISSING_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  tmpbuf,  MISSING_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  tmpbuf,  MISSING_NEW_CRC);	  this.entry    =    readNewEntry(false,    magicString,    tmpbuf);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
561	[BUG]  [BUGGY]  this.entry  =  readNewEntry(siblingString);  [CE]  class,  interface,  or  enum  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(siblingString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(siblingString);	  this.entry    =    readNewEntry(NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
562	[BUG]  [BUGGY]  this.entry  =  readNewEntry(tmpbuf);  [CE]  class,  interface,  or  enum  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(tmpbuf);	  this.entry    =    readNewEntry(NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
563	[BUG]  [BUGGY]          if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true,  getBytesRead());  }  [CE]  class,  interface,  or  enum  expected  [FE]    IllegalArgumentException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]          if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true,  getBytesRead());  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	                if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true,  getBytesRead());  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	add
564	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(false,  MISSING_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(false,  MISSING_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(false,  MISSING_NEW);	  this.entry    =    readNEwEntry(true,    MISSING_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
565	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  MISSING_NAMES);  [CE]  class,  interface,  or  enum  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  MISSING_NAMES);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  MISSING_NAMES);	  this.entry    =    readNEwEntry(true,    MISSING_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
566	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(false,  MISSING_NEW_READ);  [CE]  class,  interface,  or  enum  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(false,  MISSING_NEW_READ);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(false,  MISSING_NEW_READ);	  this.entry    =    readNEwEntry(true,    MISSING_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
567	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(false,  MAX_NEW_ASCII);  [CE]  class,  interface,  or  enum  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(false,  MAX_NEW_ASCII);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(false,  MAX_NEW_ASCII);	  this.entry    =    readNEwEntry(true,    MIC_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
568	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  MOVED);  [CE]  class,  interface,  or  enum  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  MOVED);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  MOVED);	  this.entry    =    readNEwEntry(true,    MIC_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
569	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  MAX_NEW_CRC,  tmpbuf);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  MAX_NEW_CRC,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  MAX_NEW_CRC,  tmpbuf);	  this.entry    =    readNewEntry(false,    true,    tmpbuf);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
570	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  MIR_NEW_CRC,  tmpbuf);  [CE]  class,  interface,  or  enum  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  MIR_NEW_CRC,  tmpbuf);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  MIR_NEW_CRC,  tmpbuf);	  this.entry    =    readNewEntry(false,    true,    tmpbuf);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
571	[BUG]  [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  }  [CE]  class,  interface,  or  enum  expected  [FE]        IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  }	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
572	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]          IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length  -  1);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length  -  1);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
573	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  SIX_BYTES_BUF);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]            IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  SIX_BYTES_BUF);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  SIX_BYTES_BUF);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
574	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  magicString.length,  FOUR_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]        NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  magicString.length,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  magicString.length,  FOUR_BYTES_BUF.length);	          System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
575	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  MISSING_BYTES_BUF,  FOUR_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]          NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  MISSING_BYTES_BUF,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  MISSING_BYTES_BUF,  FOUR_BYTES_BUF.length);	          System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead.length,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
576	[BUG]  [BUGGY]  if(magicString.equals(MAGIC_NEW_ASCII))  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(false);  }  [CE]  class,  interface,  or  enum  expected  [FE]          NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString.equals(MAGIC_NEW_ASCII))  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(false);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString.equals(MAGIC_NEW_ASCII))  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(false);  }	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
577	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  magicString,  FOUR_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  magicString,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  magicString,  FOUR_BYTES_BUF);	  this.entry    =    readNewEntry(false,    true,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
578	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  magicString,  MISSING_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  magicString,  MISSING_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  magicString,  MISSING_NEW);	  this.entry    =    readNewEntry(false,    true,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
579	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  magicString,  BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  magicString,  BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  magicString,  BYTES_BUF);	  this.entry    =    readNewEntry(false,    true,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
580	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  magicString,  MISSING_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  magicString,  MISSING_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  magicString,  MISSING_NEW_CRC);	  this.entry    =    readNewEntry(false,    true,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
581	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  magicString,  MIGIC_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  magicString,  MIGIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  magicString,  MIGIC_NEW_CRC);	  this.entry    =    readNewEntry(false,    true,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
582	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]                  NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	readFully(FOUR_BYTES_BUF,  0,  FOUR_BYTES_BUF.length);	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    SIX_BYTES_BUF    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
583	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  SIX_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  SIX_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	readFully(FOUR_BYTES_BUF,  0,  SIX_BYTES_BUF.length);	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    SIX_BYTES_BUF    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
584	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  FOUR_BYTES_BUF.length,  ')'  expected  [CE]  ')'  expected  [FE]                      NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  FOUR_BYTES_BUF.length,  ')'  expected  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	readFully(FOUR_BYTES_BUF,  FOUR_BYTES_BUF.length,  ')'  expected	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    SIX_BYTES_BUF    	non-compiled	[CE]  ')'  expected	91	None	replace
585	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  SIX_BYTES_BUF.length,  FOUR_BYTES_BUF.length));  [CE]  ';'  expected  [FE]                        NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  SIX_BYTES_BUF.length,  FOUR_BYTES_BUF.length));  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	readFully(FOUR_BYTES_BUF,  SIX_BYTES_BUF.length,  FOUR_BYTES_BUF.length));	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    SIX_BYTES_BUF    	non-compiled	[CE]  ';'  expected	91	None	replace
586	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.siblingString,  FOUR_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]          NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.siblingString,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.siblingString,  FOUR_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    magicString,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
587	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  MISSING_CLIENT);  [CE]  class,  interface,  or  enum  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  MISSING_CLIENT);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  MISSING_CLIENT);	  this.entry    =    readNewEntry(true,    MISSING_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
588	[BUG]  [BUGGY]  this.entry  =  readNEW(false,  magicString,  MAGIC_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(false,  magicString,  MAGIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(false,  magicString,  MAGIC_NEW_CRC);	  this.entry    =    readNEWEntry(false,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
589	[BUG]  [BUGGY]  this.entry  =  readNEW(false,  magicString,  MISSING_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(false,  magicString,  MISSING_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(false,  magicString,  MISSING_NEW_CRC);	  this.entry    =    readNEWEntry(false,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
590	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  MISSING_NEW_CRC,  FOUR_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  MISSING_NEW_CRC,  FOUR_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  MISSING_NEW_CRC,  FOUR_BYTES_BUF);	  this.entry    =    readNewEntry(false,    FOUR_BYTES_BUF);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
591	[BUG]  [BUGGY]  this.entry  =  readNEW(false,  MISSING_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(false,  MISSING_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(false,  MISSING_NEW_CRC);	  this.entry    =    readNEW(false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
592	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  STRICT_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  STRICT_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  STRICT_NEW);	  this.entry    =    readNewEntry(false,    true,    MIGIC_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
593	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  MIGIC_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  MIGIC_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  MIGIC_CRC);	  this.entry    =    readNewEntry(false,    true,    MIGIC_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
594	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  SIX_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]                  IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  SIX_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  SIX_BYTES_BUF.length);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FIELD_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
595	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  TWO_BYTES_BUF.length,  FIELD_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  TWO_BYTES_BUF.length,  FIELD_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  TWO_BYTES_BUF.length,  FIELD_NEW);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FIELD_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
596	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  MISSING_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]                      IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  MISSING_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length,  MISSING_NEW);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length,    FIELD_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
597	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  BYTE_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  BYTE_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  BYTE_NEW_CRC);	  this.entry    =    readNewEntry(true,    MAX_NEW_ASCII);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
598	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  MOVED_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  MOVED_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  MOVED_NEW);	  this.entry    =    readNewEntry(true,    MAX_NEW_ASCII);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
599	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  0,  this.  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	readFully(FOUR_BYTES_BUF,  0,  this.	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(false);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.    	non-compiled	[CE]  <identifier>  expected	88	None	replace
600	[BUG]  [BUGGY]  AdministratorUtils.toAsciiString(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  AdministratorUtils.toAsciiString(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	AdministratorUtils.toAsciiString(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(false);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.    	non-compiled	[CE]  ';'  expected	88	None	replace
601	[BUG]  [BUGGY]  AdministratorUtils.toAsciiString(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  AdministratorUtils.toAsciiString(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	AdministratorUtils.toAsciiString(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(false);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.    	non-compiled	[CE]  ';'  expected	88	None	replace
602	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  FOUR_BYTES_BUF.length,  this.  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  FOUR_BYTES_BUF.length,  this.  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	readFully(FOUR_BYTES_BUF,  FOUR_BYTES_BUF.length,  this.	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(false);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.    	non-compiled	[CE]  <identifier>  expected	88	None	replace
603	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  false,  magicString,  TWO_BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  false,  magicString,  TWO_BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  false,  magicString,  TWO_BYTES_BUF);	  this.entry    =    readNewEntry(false,    false,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
604	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  false,  magicString,  MISSING_NEW);  [CE]  class,  interface,  or  enum  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  false,  magicString,  MISSING_NEW);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  false,  magicString,  MISSING_NEW);	  this.entry    =    readNewEntry(false,    false,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
605	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  true,  MAX_NEW_READ);  [CE]  class,  interface,  or  enum  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  true,  MAX_NEW_READ);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  true,  MAX_NEW_READ);	  this.entry    =    readNewEntry(false,    true,    MAX_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
606	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  MISSING_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  MISSING_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  MISSING_NEW_CRC);	  this.entry    =    readNewEntry(false,    magicString,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
607	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  MAX_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  MAX_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  FOUR_BYTES_BUF,  MAX_BYTES_BUF.length);	  this.entry    =    readNewEntry(false,    magicString,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
608	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  TWO_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]                              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  TWO_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  TWO_BYTES_BUF.length);	  this.entry    =    readNewEntry(false,    magicString,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
609	[BUG]  [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);  }  [CE]  class,  interface,  or  enum  expected  [FE]    NumberFormatException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry        =        readNewEntry(true);        this.entry    =    readNewEntry(false);    if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	add
610	[BUG]  [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(false);  }  [CE]  class,  interface,  or  enum  expected  [FE]      NumberFormatException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(false);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry        =        readNewEntry(true);        this.entry    =    readNewEntry(false);    if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(false);  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	add
611	[BUG]  [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  [CE]  ')'  expected  [FE]        NumberFormatException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry        =        readNewEntry(true);        this.entry    =    readNewEntry(false);    if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,	  	non-compiled	[CE]  ')'  expected	13	None	add
612	[BUG]  [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  [CE]  ')'  expected  [FE]          NumberFormatException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry        =        readNewEntry(true);        this.entry    =    readNewEntry(false);    if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,	  	non-compiled	[CE]  ')'  expected	13	None	add
613	[BUG]  [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  [CE]  ')'  expected  [FE]            NumberFormatException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry        =        readNewEntry(true);        this.entry    =    readNewEntry(false);    if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,	  	non-compiled	[CE]  ')'  expected	13	None	add
614	[BUG]  [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  [CE]  ')'  expected  [FE]              NumberFormatException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(false);  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry        =        readNewEntry(true);        this.entry    =    readNewEntry(false);    if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(false);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,	  	non-compiled	[CE]  ')'  expected	13	None	add
615	[BUG]  [BUGGY]  if(magicString.equals(MAGIC_NEW_ASCII))  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(true);  }  [CE]  class,  interface,  or  enum  expected  [FE]            NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString.equals(MAGIC_NEW_ASCII))  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(true);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString.equals(MAGIC_NEW_ASCII))  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(true);  }	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
616	[BUG]  [BUGGY]  this.entry  =  readNEW(false,  magicString,  BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(false,  magicString,  BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(false,  magicString,  BYTES_BUF);	  this.entry    =    readNEW(false,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
617	[BUG]  [BUGGY]  this.entry  =  readNewEntry(FOUR_BYTES_BUF,  NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(FOUR_BYTES_BUF,  NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(FOUR_BYTES_BUF,  NEW_CRC);	  this.entry    =    readNewEntry(NEW_CRC,    FOUR_BYTES_BUF);    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
618	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  MOVED);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  MOVED);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  MOVED);	  this.entry    =    readNewEntry(true,    MAX_NEW_CRC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
619	[BUG]  [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry  [CE]  ';'  expected  [FE]            IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  ';'  expected	64	None	replace
620	[BUG]  [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF  [CE]  ')'  expected  [FE]              IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  ')'  expected	64	None	replace
621	[BUG]  [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this  [CE]  not  a  statement  [FE]                IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  not  a  statement	64	None	replace
622	[BUG]  [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BU  [CE]  ')'  expected  [FE]                  IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BU  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BU	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  ')'  expected	64	None	replace
623	[BUG]  [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(  [CE]  illegal  start  of  expression  [FE]                    IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  this.entry  =  readNewEntry(	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
624	[BUG]  [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  [CE]  cannot  find  symbol  STRICT_BYTES_BUF  [FE]                      IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    FOUR_BYTES_BUF.length);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  cannot  find  symbol  STRICT_BYTES_BUF	64	None	replace
625	[BUG]  [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                  NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(true);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString.equals(MAGIC_NEW_CRC))  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(true);  }	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
626	[BUG]  [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                    NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(true);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString.equals(MAGIC_NEW_CRC))  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(true);  }	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW);    this.entry    =    readNewEntry(true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
627	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]                IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    SIX_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
628	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  TWO_BYTES_BUF);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]                  IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  TWO_BYTES_BUF);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  TWO_BYTES_BUF);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  FOUR_BYTES_BUF.length);	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    SIX_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
629	[BUG]  [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  SIX_BYTES_BUF.length);  }  [CE]  class,  interface,  or  enum  expected  [FE]                    IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  SIX_BYTES_BUF.length);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entry,  SIX_BYTES_BUF.length);  }	  this.entry    =    readNewEntry(true);    System.arraycopy(FOUR_BYTES_BUF,    0,    this.entry,    SIX_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
630	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(false,  FOUR_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(false,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(false,  FOUR_BYTES_BUF.length);	  this.entry    =    readNEwEntry(true,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
631	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  MISSING_NEW_CRC,  FOUR_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  MISSING_NEW_CRC,  FOUR_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  MISSING_NEW_CRC,  FOUR_BYTES_BUF.length);	  this.entry    =    readNEwEntry(true,    FOUR_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
632	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  tmpbuf,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  tmpbuf,  true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  tmpbuf,  true);	  this.entry    =    readNewEntry(false,    magicString,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
633	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  magicString,  BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  magicString,  BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  magicString,  BYTES_BUF);	  this.entry    =    readNEwEntry(true,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
634	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  magicString,  MISSING_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  magicString,  MISSING_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  magicString,  MISSING_NEW_CRC);	  this.entry    =    readNEwEntry(true,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
635	[BUG]  [BUGGY]  this.entry  =  readNEW(true,  magicString,  MAGIC_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(true,  magicString,  MAGIC_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(true,  magicString,  MAGIC_NEW_CRC);	  this.entry    =    readNEWEntry(true,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
636	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  SYNTHETIC);  [CE]  class,  interface,  or  enum  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  SYNTHETIC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  SYNTHETIC);	  this.entry    =    readNewEntry(false,    true,    MAX_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
637	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  MAX_ASCII);  [CE]  class,  interface,  or  enum  expected  [FE]                          IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  MAX_ASCII);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  MAX_ASCII);	  this.entry    =    readNewEntry(false,    true,    MAX_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
638	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  MOVED);  [CE]  class,  interface,  or  enum  expected  [FE]                            IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  MOVED);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  MOVED);	  this.entry    =    readNewEntry(false,    true,    MAX_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
639	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  magicString,  this.entryBytesRead.length);  [CE]  class,  interface,  or  enum  expected  [FE]              NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  magicString,  this.entryBytesRead.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  magicString,  this.entryBytesRead.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead,    MAX_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
640	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  BYTE_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]                NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  BYTE_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  BYTE_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead,    MAX_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
641	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  MAPPING_BYTES_BUF.length);  [CE]  class,  interface,  or  enum  expected  [FE]                  NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  MAPPING_BYTES_BUF.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  0,  this.entryBytesRead,  MAPPING_BYTES_BUF.length);	  System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead,    MAX_BYTES_BUF.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
642	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  MOVED_NEW,  magicString);  [CE]  class,  interface,  or  enum  expected  [FE]                        IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  MOVED_NEW,  magicString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  MOVED_NEW,  magicString);	  this.entry    =    readNewEntry(false,    MAX_NEW_CRC,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
643	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  MAXIMIZED_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  MAXIMIZED_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  MAXIMIZED_CRC);	  this.entry    =    readNewEntry(false,    true,    MISSING_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
644	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true,  MISSING_CLIENT);  [CE]  class,  interface,  or  enum  expected  [FE]                                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  true,  MISSING_CLIENT);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true,  MISSING_CLIENT);	  this.entry    =    readNewEntry(false,    true,    MISSING_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
645	[BUG]  [BUGGY]  this.entry  =  readNEWEntry(true,  MAX_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEWEntry(true,  MAX_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEWEntry(true,  MAX_NEW_CRC);	  this.entry    =    readNEWEnaryEntry(true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
646	[BUG]  [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(false);  }  [CE]  class,  interface,  or  enum  expected  [FE]                NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString.equals(MAGIC_NEW_CRC))  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(false);  }  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString.equals(MAGIC_NEW_CRC))  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW_CRC);  this.entry  =  readNewEntry(false);  }	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
647	[BUG]  [BUGGY]  if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  F  [CE]  ')'  expected  [FE]                  NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  F  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	if(magicString  ==  null)  {  String  magicString  =  ArchiveUtils.toAsciiString(MAGIC_NEW);  this.entry  =  readNewEntry(false);  }  else  {  System.arraycopy(FOUR_BYTES_BUF,  F	          String    magicString    =    ArchiveUtils.toAsciiString(MAGIC_NEW);    this.entry    =    readNewEntry(false);    	non-compiled	[CE]  ')'  expected	9	None	replace
648	[BUG]  [BUGGY]  this.entry  =  readNEW(true,  magicString,  MISSING_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(true,  magicString,  MISSING_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(true,  magicString,  MISSING_NEW_CRC);	  this.entry    =    readNEW(true,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
649	[BUG]  [BUGGY]  this.entry  =  readNEW(true,  magicString,  BYTES_BUF);  [CE]  class,  interface,  or  enum  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(true,  magicString,  BYTES_BUF);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(true,  magicString,  BYTES_BUF);	  this.entry    =    readNEW(true,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
650	[BUG]  [BUGGY]  this.entry  =  readNEW(true,  magicString,  STRICT_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEW(true,  magicString,  STRICT_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEW(true,  magicString,  STRICT_NEW_CRC);	  this.entry    =    readNEW(true,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
651	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  DUP);  [CE]  class,  interface,  or  enum  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  DUP);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  DUP);	  this.entry    =    readNewEntry(false,    magicString,    MISSING_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
652	[BUG]  [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead,  0);  [CE]  class,  interface,  or  enum  expected  [FE]        NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead,  0);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(TWO_BYTES_BUF,  0,  this.entryBytesRead,  0);	          System.arraycopy(FOUR_BYTES_BUF,    0,    this.entryBytesRead,    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
653	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  MAX_ASCII);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  MAX_ASCII);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  MAX_ASCII);	  this.entry    =    readNEwEntry(true,    MAX_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
654	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true,  MOVED_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNEwEntry(true,  MOVED_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true,  MOVED_CRC);	  this.entry    =    readNEwEntry(true,    MAX_NEW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
655	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF,  0,  this.length);  [CE]  class,  interface,  or  enum  expected  [FE]            NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF,  0,  this.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  SIX_BYTES_BUF,  0,  this.length);	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    SIX_BYTES_BUF,    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
656	[BUG]  [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  FOUR_BYTES_BUF,  0,  magicString.length);  [CE]  class,  interface,  or  enum  expected  [FE]              NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  System.arraycopy(FOUR_BYTES_BUF,  FOUR_BYTES_BUF,  0,  magicString.length);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	System.arraycopy(FOUR_BYTES_BUF,  FOUR_BYTES_BUF,  0,  magicString.length);	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    SIX_BYTES_BUF,    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
657	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  MISSING_NEW_RCC);  [CE]  class,  interface,  or  enum  expected  [FE]              IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  MISSING_NEW_RCC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  MISSING_NEW_RCC);	  this.entry    =    readNewEntry(true,    MISSING_NEW_RCC);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
658	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  MAX_NEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]                  IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  magicString,  MAX_NEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString,  MAX_NEW_CRC);	  this.entry    =    readNewEntry(true,    magicString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
659	[BUG]  [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(null);  this.entry  =  readNewEntry(false);  [CE]  class,  interface,  or  enum  expected  [FE]    NumberFormatException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(null);  this.entry  =  readNewEntry(false);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry        =        readNewEntry(true);        this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(null);  this.entry  =  readNewEntry(false);	  	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	add
660	[BUG]  [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(null);  this.entry  =  readNewEntry(true);  [CE]  class,  interface,  or  enum  expected  [FE]      NumberFormatException    [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(true);  this.entry  =  readNewEntry(null);  this.entry  =  readNewEntry(true);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry        =        readNewEntry(true);        this.entry    =    readNewEntry(true);    this.entry  =  readNewEntry(null);  this.entry  =  readNewEntry(true);	  	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	add
661	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  MISSING_NEW_CLOSE);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(false,  MISSING_NEW_CLOSE);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  MISSING_NEW_CLOSE);	  this.entry    =    readNewEntry(true,    MISSING_NEW_CLOSE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
662	[BUG]  [BUGGY]  readFully(FOUR_BYTES_BUF,  SIX_BYTES_BUF.length,  this.  [CE]  <identifier>  expected  [FE]          NullPointerException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  readFully(FOUR_BYTES_BUF,  SIX_BYTES_BUF.length,  this.  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	readFully(FOUR_BYTES_BUF,  SIX_BYTES_BUF.length,  this.	          if(magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    {    System.arraycopy(FOUR_BYTES_BUF,    0,    this.    	non-compiled	[CE]  <identifier>  expected	86	None	replace
663	[BUG]  [BUGGY]  this.entry  =  readNewEntry(null,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                    IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(null,  0);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(null,  0);	  this.entry    =    readNewEntry(true,    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
664	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  1,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                      IllegalArgumentException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  1,  0);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  1,  0);	  this.entry    =    readNewEntry(true,    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
665	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  magicalString);  [CE]  class,  interface,  or  enum  expected  [FE]        IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  magicalString);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  magicalString);	  this.entry    =    readNewEntry(true,    cpioString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
666	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true,  MagicNEW_CRC);  [CE]  class,  interface,  or  enum  expected  [FE]          IOException      [CONTEXT]      }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {      [BUGGY]  this.entry  =  readNewEntry(true,  MagicNEW_CRC);  [BUGGY]      }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException(     "Unknown  magic  [     "  +  magicString  +       "].  Occured  at  byte:       "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true,  MagicNEW_CRC);	  this.entry    =    readNewEntry(true,    cpioString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
