bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IllegalArgumentException  [CONTEXT]  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {  [BUGGY]  this.entry  =  readNewEntry(true);  [BUGGY]  }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException( "Unknown  magic  [ "  +  magicString  +   "].  Occured  at  byte:   "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	add	this.entry  =  readNewEntry(true);	this.entry  =  readNewEntry(false);  	compilable	  [FE]  IOException  	1	1	replace
2	[BUG]  [BUGGY]  this.entry  =  readNewEntry(true);  [FE]  IOException  [FE]    IllegalArgumentException  [CONTEXT]  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {  [BUGGY]  this.entry  =  readNewEntry(true);  [BUGGY]  }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException( "Unknown  magic  [ "  +  magicString  +   "].  Occured  at  byte:   "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(true);	this.entry  =  readNewEntry(false);  	compilable	  [FE]  IOException  	1	1	replace
3	[BUG]  [BUGGY]  this.entry  =  readNEWEntry(true);  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException  [CONTEXT]  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {  [BUGGY]  this.entry  =  readNEWEntry(true);  [BUGGY]  }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException( "Unknown  magic  [ "  +  magicString  +   "].  Occured  at  byte:   "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEWEntry(true);	this.entry  =  readNewEntry(false);  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
4	[BUG]  [BUGGY]  this.entry  =  readNewEntry();  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]        IllegalArgumentException  [CONTEXT]  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {  [BUGGY]  this.entry  =  readNewEntry();  [BUGGY]  }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException( "Unknown  magic  [ "  +  magicString  +   "].  Occured  at  byte:   "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry();	this.entry  =  readNewEntry(false);  	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	1	None	replace
5	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  magicString);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]          IllegalArgumentException  [CONTEXT]  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {  [BUGGY]  this.entry  =  readNewEntry(false,  magicString);  [BUGGY]  }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException( "Unknown  magic  [ "  +  magicString  +   "].  Occured  at  byte:   "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  magicString);	this.entry  =  readNewEntry(false);  	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	1	None	replace
6	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  MAX_NEW_CRC);  [CE]  cannot  find  symbol  MAX_NEW_CRC  [FE]            IllegalArgumentException  [CONTEXT]  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {  [BUGGY]  this.entry  =  readNewEntry(false,  MAX_NEW_CRC);  [BUGGY]  }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException( "Unknown  magic  [ "  +  magicString  +   "].  Occured  at  byte:   "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  MAX_NEW_CRC);	this.entry  =  readNewEntry(false);  	non-compiled	[CE]  cannot  find  symbol  MAX_NEW_CRC	1	None	replace
7	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  true);  [CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;  [FE]              IllegalArgumentException  [CONTEXT]  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {  [BUGGY]  this.entry  =  readNewEntry(false,  true);  [BUGGY]  }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException( "Unknown  magic  [ "  +  magicString  +   "].  Occured  at  byte:   "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  true);	this.entry  =  readNewEntry(false);  	non-compiled	[CE]  method  readNewEntry  in  class  CpioArchiveInputStream  cannot  be  applied  to  given  types;	1	None	replace
8	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                IllegalArgumentException  [CONTEXT]  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {  [BUGGY]    [BUGGY]  }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException( "Unknown  magic  [ "  +  magicString  +   "].  Occured  at  byte:   "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	add	  	this.entry  =  readNewEntry(false);  	compilable	  [FE]  NullPointerException  	1	1	replace
9	[BUG]  [BUGGY]    [FE]  NullPointerException  [FE]                IllegalArgumentException  [CONTEXT]  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {  [BUGGY]    [BUGGY]  }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException( "Unknown  magic  [ "  +  magicString  +   "].  Occured  at  byte:   "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	  	this.entry  =  readNewEntry(false);  	compilable	  [FE]  NullPointerException  	1	1	replace
10	[BUG]  [BUGGY]  this.entry  =  readNEWEntry();  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException  [CONTEXT]  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {  [BUGGY]  this.entry  =  readNEWEntry();  [BUGGY]  }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException( "Unknown  magic  [ "  +  magicString  +   "].  Occured  at  byte:   "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEWEntry();	this.entry  =  readNewEntry(false);  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
11	[BUG]  [BUGGY]  this.entry  =  readNEwEntry(true);  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException  [CONTEXT]  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {  [BUGGY]  this.entry  =  readNEwEntry(true);  [BUGGY]  }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException( "Unknown  magic  [ "  +  magicString  +   "].  Occured  at  byte:   "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEwEntry(true);	this.entry  =  readNewEntry(false);  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
12	[BUG]  [BUGGY]  this.entry  =  readNEWEntry(false);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException  [CONTEXT]  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {  [BUGGY]  this.entry  =  readNEWEntry(false);  [BUGGY]  }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException( "Unknown  magic  [ "  +  magicString  +   "].  Occured  at  byte:   "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNEWEntry(false);	this.entry  =  readNewEntry(false);  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
13	[BUG]  [BUGGY]  this.entry  =  readNewEntry(false,  MISSING_NEW_CRC);  [CE]  cannot  find  symbol  MISSING_NEW_CRC  [FE]    IllegalArgumentException  [CONTEXT]  }  else  if  (CpioUtil.byteArray2long(TWO_BYTES_BUF,  true)  ==  MAGIC_OLD_BINARY)  {  this.entry  =  readOldBinaryEntry(true);  }  else  {  System.arraycopy(TWO_BYTES_BUF,  0,  SIX_BYTES_BUF,  0,  TWO_BYTES_BUF.length);  readFully(SIX_BYTES_BUF,  TWO_BYTES_BUF.length,  FOUR_BYTES_BUF.length);  String  magicString  =  ArchiveUtils.toAsciiString(SIX_BYTES_BUF);  if  (magicString.equals(MAGIC_NEW))  {  [BUGGY]  this.entry  =  readNewEntry(false,  MISSING_NEW_CRC);  [BUGGY]  }  else  if  (magicString.equals(MAGIC_NEW_CRC))  {  this.entry  =  readNewEntry(true);  }  else  if  (magicString.equals(MAGIC_OLD_ASCII))  {  this.entry  =  readOldAsciiEntry();  }  else  {  throw  new  IOException( "Unknown  magic  [ "  +  magicString  +   "].  Occured  at  byte:   "  +  getBytesRead());  }  }  [CLASS]  CpioArchiveInputStream  [METHOD]  getNextCPIOEntry  [RETURN_TYPE]  CpioArchiveEntry  [VARIABLES]  byte[]  FOUR_BYTES_BUF  SIX_BYTES_BUF  TWO_BYTES_BUF  tmpbuf  boolean  closed  entryEOF  InputStream  in  String  magicString  CpioArchiveEntry  entry  long  crc  entryBytesRead  int  blockSize  	projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java	1.0	204	204	1	replace	this.entry  =  readNewEntry(false,  MISSING_NEW_CRC);	this.entry  =  readNewEntry(false);  	non-compiled	[CE]  cannot  find  symbol  MISSING_NEW_CRC	1	None	replace
