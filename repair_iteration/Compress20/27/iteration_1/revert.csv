projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(!CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(!CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==this.entryEOF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(!CpioUtil.byteArray2long(TWO_BYTES_BUF,true)!=MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(!CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(!CpioUtil.byteArray2long(TWO_BYTES_BUF,false)!=MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(!CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==MAGIC_OLD_BINARY||!CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==this.
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==this.entryEOF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(this.entryEOF.byteArray2long(TWO_BYTES_BUF,false)==CpioUtil.byteArray2long(TWO_BYTES_BUF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(!CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==this.entryEOF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(this.entryEOF==CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==this.entryEOF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(this.entryEOF!=CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==this.entryEOF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(cpioUtil.byteArray2long(FOUR_BYTES_BUF,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(cpioUtil.byteArray2long(TWO_BYTES_BUF,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192readFully(MAGIC_OLD_BINARY,0,TWO_BYTES_BUF.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192readFully(MAGIC_OLD_BINARY,0,TWO_BYTES_BUF.length);readFully(TWO_BYTES_BUF,0,TWO_BYTES_BUF.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192readFully(MAGIC_OLD_BINARY,TWO_BYTES_BUF.length,FOUR_BYTES_BUF.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192readFully(THIS_BYTES_BUF,0,TWO_BYTES_BUF.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192readFully(MAGIC_OLD_BINARY,0,TWO_BYTES_BUF.length);readFully(THIS_BYTES_BUF,0,TWO_BYTES_BUF.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192readFully(MAGIC_OLD_BINARY,0,TWO_BYTES_BUF.length);this.entry=readOldBinaryEntry(false);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(!CpioUtil.byteArray2long(FOUR_BYTES_BUF,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==FOUR_BYTES_BUF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(CpioUtil.byteArray2long(this.entry,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(!CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==this.entry){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(!CpioUtil.byteArray2long(this.entry,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(!CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==CpioUtil.OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(CpioUtil.byteArray2long(THIS_BYTES_BUF,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(CpioUtil.byteArray2long(this.entryBytesRead,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==this.entryEOF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(CpioUtil.byteArray2long(THIS_BYTES_BUF,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(!CpioUtil.byteArray2long(THIS_BYTES_BUF,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(!CpioUtil.byteArray2long(this.entryBytesRead,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192readFully(MAGIC_OLD_BINARY,0,FOUR_BYTES_BUF.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(MAGIC_OLD_BINARY){System.arraycopy(TWO_BYTES_BUF,0,this.blockSize);System.arraycopy(TWO_BYTES_BUF,0,this.blockSize);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192readFully(MAGIC_OLD_BINARY,TWO_BYTES_BUF.length,MAGIC_OLD_BINARY);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192System.arraycopy(FOUR_BYTES_BUF,0,this.entryBytesRead,FOUR_BYTES_BUF.length);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(MAGIC_OLD_BINARY){System.arraycopy(TWO_BYTES_BUF,0,this.blockSize);System.arraycopy(THIS_BYTES_BUF,0,this.blockSize);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(!CpioUtil.byteArray2long(THIS_BYTES_BUF,false)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==this.old_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192System.arraycopy(FOUR_BYTES_BUF,0,this.blockSize);
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(MAGIC_OLD_BINARY){System.arraycopy(TWO_BYTES_BUF,0,this.blockSize);}
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(cpioUtil.byteArray2long(TWO_BYTES_BUF,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(!CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==this.clone()){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==this.clone()){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(CpioUtil.byteArray2long(FOUR_BYTES_BUF,false)==this.keyword){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(CpioUtil.byteArray2long(this.entry,false)==this.entryEOF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==FOUR_BYTES_BUF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(CpioUtil.byteArray2long(TWO_BYTES_BUF,true)==this.entryIOF){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(CpioUtil.byteArray2long(this.blockSize,true)==MAGIC_OLD_BINARY){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(CpioUtil.byteArray2long(TWO_BYTES_BUF,false)==this.clone()){
projects/Compress20/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java192if(!CpioUtil.byteArray2long(this.blockSize,true)==MAGIC_OLD_BINARY){
