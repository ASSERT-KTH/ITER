name;suspiciousness_value
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#KMeansPlusPlusClusterer(java.util.Random):69;0.5773502691896258
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#KMeansPlusPlusClusterer(java.util.Random):70;0.5773502691896258
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):134;0.5773502691896258
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):175;0.5773502691896258
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):176;0.5773502691896258
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):177;0.5773502691896258
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):178;0.5773502691896258
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):179;0.5773502691896258
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):180;0.5773502691896258
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):181;0.5773502691896258
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):186;0.5773502691896258
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):187;0.5773502691896258
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):188;0.5773502691896258
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):189;0.5773502691896258
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):190;0.5773502691896258
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):191;0.5773502691896258
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):194;0.5773502691896258
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#KMeansPlusPlusClusterer(java.util.Random,org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy):78;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#KMeansPlusPlusClusterer(java.util.Random,org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy):79;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#KMeansPlusPlusClusterer(java.util.Random,org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy):80;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#KMeansPlusPlusClusterer(java.util.Random,org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy):81;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):95;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):96;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):99;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):100;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#assignPointsToClusters(java.util.Collection,java.util.Collection):146;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#assignPointsToClusters(java.util.Collection,java.util.Collection):147;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#assignPointsToClusters(java.util.Collection,java.util.Collection):148;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#assignPointsToClusters(java.util.Collection,java.util.Collection):149;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#assignPointsToClusters(java.util.Collection,java.util.Collection):150;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):164;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):165;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):168;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):169;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):171;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):172;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#chooseInitialCenters(java.util.Collection,int,java.util.Random):196;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):321;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):322;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):323;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):324;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):325;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):326;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):327;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):329;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getNearestCluster(java.util.Collection,org.apache.commons.math.stat.clustering.Clusterable):330;0.5
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):101;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):102;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):103;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):105;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):106;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):108;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):109;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):111;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):112;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):114;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):115;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):117;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):119;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):121;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):122;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):123;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):126;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):127;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):128;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):129;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):131;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#cluster(java.util.Collection,int,int):132;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestVarianceCluster(java.util.Collection):208;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestVarianceCluster(java.util.Collection):209;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestVarianceCluster(java.util.Collection):210;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestVarianceCluster(java.util.Collection):211;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestVarianceCluster(java.util.Collection):214;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestVarianceCluster(java.util.Collection):215;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestVarianceCluster(java.util.Collection):216;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestVarianceCluster(java.util.Collection):217;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestVarianceCluster(java.util.Collection):218;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestVarianceCluster(java.util.Collection):219;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestVarianceCluster(java.util.Collection):222;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestVarianceCluster(java.util.Collection):223;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestVarianceCluster(java.util.Collection):224;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestVarianceCluster(java.util.Collection):228;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestVarianceCluster(java.util.Collection):231;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestVarianceCluster(java.util.Collection):232;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestVarianceCluster(java.util.Collection):236;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestVarianceCluster(java.util.Collection):237;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestNumberCluster(java.util.Collection):249;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestNumberCluster(java.util.Collection):250;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestNumberCluster(java.util.Collection):251;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestNumberCluster(java.util.Collection):254;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestNumberCluster(java.util.Collection):257;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestNumberCluster(java.util.Collection):258;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestNumberCluster(java.util.Collection):259;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestNumberCluster(java.util.Collection):262;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestNumberCluster(java.util.Collection):265;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestNumberCluster(java.util.Collection):266;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestNumberCluster(java.util.Collection):270;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getPointFromLargestNumberCluster(java.util.Collection):271;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getFarthestPoint(java.util.Collection):283;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getFarthestPoint(java.util.Collection):284;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getFarthestPoint(java.util.Collection):285;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getFarthestPoint(java.util.Collection):286;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getFarthestPoint(java.util.Collection):289;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getFarthestPoint(java.util.Collection):290;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getFarthestPoint(java.util.Collection):291;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getFarthestPoint(java.util.Collection):292;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getFarthestPoint(java.util.Collection):293;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getFarthestPoint(java.util.Collection):294;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getFarthestPoint(java.util.Collection):295;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getFarthestPoint(java.util.Collection):296;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getFarthestPoint(java.util.Collection):300;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getFarthestPoint(java.util.Collection):303;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getFarthestPoint(java.util.Collection):304;0.0
org.apache.commons.math.stat.clustering$KMeansPlusPlusClusterer#getFarthestPoint(java.util.Collection):307;0.0
