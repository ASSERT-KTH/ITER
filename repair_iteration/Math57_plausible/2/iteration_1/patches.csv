bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  random);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  random);  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  random);	      KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NONE);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
2	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  null);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  null);  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  null);	      KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NONE);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
3	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE);  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE);	      this.clusters    =    new    KMeansPlusPlusClusterer(random);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE);  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE);	      this.clusters    =    new    KMeansPlusPlusClusterer(random);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE);  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE);	      this.clusters    =    new    KMeansPlusPlusClusterer(random);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  this.random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  this.random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    supported.   ");    }    	non-compiled	[CE]  not  a  statement	12	None	replace
7	[BUG]  [BUGGY]  parent!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  parent!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	parent!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    supported.   ");    }    	non-compiled	[CE]  not  a  statement	12	None	replace
8	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]      if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	add	        if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.   ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	6	3	add
9	[BUG]  [BUGGY]      if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]      if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	        if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.   ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	6	3	add
10	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]      if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	add	        if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.   ");    }    if(random  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	6	3	add
11	[BUG]  [BUGGY]      if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]      if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	        if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.   ");    }    if(random  ==  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	6	3	add
12	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEST_VARIANCE);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEST_VARIANCE);  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEST_VARIANCE);	  this.clusters    =    new    KMeansPlusPlus(random);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.NONE);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.NONE);  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.NONE);	  this.clusters    =    new    KMeansPlusPlus(random);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
14	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEEST_VARIANCE);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEEST_VARIANCE);  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.LARGEEST_VARIANCE);	  this.clusters    =    new    KMeansPlusPlus(random);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
15	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  random);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  random);  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  random);	      super(random,    EmptyClusterStrategy.NONE);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
16	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  null);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  null);  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  null);	      super(random,    EmptyClusterStrategy.NONE);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
17	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.class);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.class);  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  Random.class);	      super(random,    EmptyClusterStrategy.NONE);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
18	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(null);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(null);  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(null);	  this.clusters    =    new    KMeansPlusPlusClusterer();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
19	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]      if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	add	        if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception.   ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	4	3	add
20	[BUG]  [BUGGY]      if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]      if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	        if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception.   ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	4	3	add
21	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]      if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random  ==  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	add	        if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception.   ");    }    if(random  ==  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	4	3	add
22	[BUG]  [BUGGY]      if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random  ==  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]      if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random  ==  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	        if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception.   ");    }    if(random  ==  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	4	3	add
23	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE);  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE);	      KMeansPlusPlusClusterer(random);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
24	[BUG]  [BUGGY]  mutator  ==  null  &&(random!=  null  ||  random.equals( " ")))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  [CE]  not  a  statement  [FE]    IllegalArgumentException    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  mutator  ==  null  &&(random!=  null  ||  random.equals( " ")))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutator  ==  null  &&(random!=  null  ||  random.equals( " ")))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }	      if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception.   ");    }    	non-compiled	[CE]  not  a  statement	5	None	replace
25	[BUG]  [BUGGY]  mutator  ==  null  &&(random!=  null  ||  random.equals(Random.class)))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  [CE]  not  a  statement  [FE]      IllegalArgumentException    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  mutator  ==  null  &&(random!=  null  ||  random.equals(Random.class)))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutator  ==  null  &&(random!=  null  ||  random.equals(Random.class)))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }	      if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception.   ");    }    	non-compiled	[CE]  not  a  statement	5	None	replace
26	[BUG]  [BUGGY]  this.random  =  Random.createInstance(random,  EmptyClusterStrategy.LARGEST_VARIANCE);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  this.random  =  Random.createInstance(random,  EmptyClusterStrategy.LARGEST_VARIANCE);  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  Random.createInstance(random,  EmptyClusterStrategy.LARGEST_VARIANCE);	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
27	[BUG]  [BUGGY]  mutators.add(new  KMeansPlusPlusClusterer());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  mutators.add(new  KMeansPlusPlusClusterer());  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutators.add(new  KMeansPlusPlusClusterer());	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
28	[BUG]  [BUGGY]  this.random  =  random;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  this.random  =  random;  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  random;	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
29	[BUG]  [BUGGY]  mutators.add(new  KMeansPlusPlusClusterer(random));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  mutators.add(new  KMeansPlusPlusClusterer(random));  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutators.add(new  KMeansPlusPlusClusterer(random));	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
30	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlus();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  this.clusters  =  new  KMeansPlus();  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlus();	  this.clusters    =    new    KMeansPlusPlus();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
31	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random);  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random);	      KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
32	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class);  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class);	      KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
33	[BUG]  [BUGGY]  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized    with    random.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
34	[BUG]  [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE);  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE);	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized    with    random.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
35	[BUG]  [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random);  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  new  KMeansPlusPlusClusterer(random);	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized    with    random.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
36	[BUG]  [BUGGY]  this(random,  EmptyClusterStrategy.LARGEEST_VARIANCE);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  this(random,  EmptyClusterStrategy.LARGEEST_VARIANCE);  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this(random,  EmptyClusterStrategy.LARGEEST_VARIANCE);	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized    with    random.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
37	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  random);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  random);  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  random);	      KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NUMBER_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
38	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  null);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  null);  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  null);	      KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NUMBER_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
39	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random);  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  random);	      super(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
40	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  false);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  false);  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  false);	      super(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
41	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class);  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.class);	      super(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
42	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  0);  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  0);	      super(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
43	[BUG]  [BUGGY]  this(random,  EmptyClusterStrategy.LARGEST_SYNTHETIC);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  this(random,  EmptyClusterStrategy.LARGEST_SYNTHETIC);  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this(random,  EmptyClusterStrategy.LARGEST_SYNTHETIC);	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized    to    perfom    this    method.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
44	[BUG]  [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE);  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEEST_VARIANCE);	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized.   ");    }    else    {    random    =    random.nextDouble();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
45	[BUG]  [BUGGY]  this.random  =  random.nextDouble();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  this.random  =  random.nextDouble();  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.random  =  random.nextDouble();	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized.   ");    }    else    {    random    =    random.nextDouble();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
46	[BUG]  [BUGGY]  mutator  ==  null  &&  random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [CE]  not  a  statement  [FE]    IllegalArgumentException    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  mutator  ==  null  &&  random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutator  ==  null  &&  random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }	      if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
47	[BUG]  [BUGGY]  mutator  ==  null  &&  RandomUtils.isEmpty(random))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [CE]  not  a  statement  [FE]      IllegalArgumentException    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  mutator  ==  null  &&  RandomUtils.isEmpty(random))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutator  ==  null  &&  RandomUtils.isEmpty(random))  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }	      if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
48	[BUG]  [BUGGY]  this.clusters  =  new  KMeansplusPlus();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  this.clusters  =  new  KMeansplusPlus();  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansplusPlus();	  this.clusters    =    new    KMeansPlusPlus();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
49	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  Random.class);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  Random.class);  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NONE,  Random.class);	      KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NONE);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
50	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random));  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random));	      super(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
51	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.VALUE_SYNTHETIC);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.VALUE_SYNTHETIC);  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.VALUE_SYNTHETIC);	      this.clusters    =    new    KMeansPlusPlusClusterer(random);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
52	[BUG]  [BUGGY]  safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized. ");  }  else  {  random  =  random.nextDouble();  }  [CE]  [FE]          AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized. ");  }  else  {  random  =  random.nextDouble();  }  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized. ");  }  else  {  random  =  random.nextDouble();  }	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized.   ");    }    else    {    random    =    random.nextDouble();    }    	non-compiled	[CE]  	18	None	replace
53	[BUG]  [BUGGY]  safeGet(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized.   ");  }  else  {  random  =  random.nextDouble();  }  [CE]  [FE]            AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  safeGet(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized.   ");  }  else  {  random  =  random.nextDouble();  }  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeGet(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized.   ");  }  else  {  random  =  random.nextDouble();  }	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized.   ");    }    else    {    random    =    random.nextDouble();    }    	non-compiled	[CE]  	18	None	replace
54	[BUG]  [BUGGY]  safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  to  perfom  this  method. ");  }  [CE]  [FE]            AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  to  perfom  this  method. ");  }  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  to  perfom  this  method. ");  }	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized    to    perfom    this    method.   ");    }    	non-compiled	[CE]  	19	None	replace
55	[BUG]  [BUGGY]  safeGet(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  to  perfom  this  method. ");  }  [CE]  [FE]              AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  safeGet(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  to  perfom  this  method. ");  }  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeGet(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  to  perfom  this  method. ");  }	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized    to    perfom    this    method.   ");    }    	non-compiled	[CE]  	19	None	replace
56	[BUG]  [BUGGY]  safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [CE]  [FE]    IllegalArgumentException    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }	      if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.   ");    }    	non-compiled	[CE]  	7	None	replace
57	[BUG]  [BUGGY]  safeGet(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [CE]  [FE]      IllegalArgumentException    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  safeGet(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeGet(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception. ");  }	      if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.   ");    }    	non-compiled	[CE]  	7	None	replace
58	[BUG]  [BUGGY]  safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  [CE]  [FE]    IllegalArgumentException    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }	      if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception.   ");    }    	non-compiled	[CE]  	5	None	replace
59	[BUG]  [BUGGY]  safeGet(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  [CE]  [FE]      IllegalArgumentException    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  safeGet(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeGet(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception. ");  }	      if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception.   ");    }    	non-compiled	[CE]  	5	None	replace
60	[BUG]  [BUGGY]  safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized. ");  }  [CE]  [FE]          AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized. ");  }  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized. ");  }	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized.   ");    }    	non-compiled	[CE]  	11	None	replace
61	[BUG]  [BUGGY]  safeGet(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized. ");  }  [CE]  [FE]            AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  safeGet(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized. ");  }  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeGet(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized. ");  }	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized.   ");    }    	non-compiled	[CE]  	11	None	replace
62	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]      if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.. ");  }  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	add	        if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception.   ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.. ");  }	  	compilable	  [FE]  IllegalArgumentException  	4	3	add
63	[BUG]  [BUGGY]      if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.. ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]      if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer()  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.. ");  }  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	        if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception.   ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  an  exception.. ");  }	  	compilable	  [FE]  IllegalArgumentException  	4	3	add
64	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(null);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  KMeansPlusPlusClusterer(null);  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(null);	      KMeansPlusPlusClusterer();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
65	[BUG]  [BUGGY]  safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  with  random. ");  }  [CE]  [FE]        AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  with  random. ");  }  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  with  random. ");  }	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized    with    random.   ");    }    	non-compiled	[CE]  	17	None	replace
66	[BUG]  [BUGGY]  safeGet(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  with  random. ");  }  [CE]  [FE]          AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  safeGet(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  with  random. ");  }  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeGet(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  with  random. ");  }	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized    with    random.   ");    }    	non-compiled	[CE]  	17	None	replace
67	[BUG]  [BUGGY]  safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }  [CE]  [FE]            AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    supported.   ");    }    	non-compiled	[CE]  	12	None	replace
68	[BUG]  [BUGGY]  safeGet(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }  [CE]  [FE]              AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  safeGet(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeGet(random)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  is  not  supported. ");  }	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    supported.   ");    }    	non-compiled	[CE]  	12	None	replace
69	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.SYNTHETIC);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.SYNTHETIC);  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.SYNTHETIC);	  this.clusters    =    new    KMeansPlusPlus(random);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
70	[BUG]  [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.VALUE_SYNTHETIC);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.VALUE_SYNTHETIC);  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	this.clusters  =  new  KMeansPlusPlus(random,  EmptyClusterStrategy.VALUE_SYNTHETIC);	  this.clusters    =    new    KMeansPlusPlus(random);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
71	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  NUMBER_VARIANCE);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  NUMBER_VARIANCE);  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.NUMBER_VARIANCE,  NUMBER_VARIANCE);	      KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.NUMBER_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
72	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.GREGOR);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.GREGOR);  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.GREGOR);	      KMeansPlusPlusClusterer(random);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
73	[BUG]  [BUGGY]  MutableMeansPlusPlusClusterer()  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  with  random. ");  }  [CE]  [FE]        AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  MutableMeansPlusPlusClusterer()  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  with  random. ");  }  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	MutableMeansPlusPlusClusterer()  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer()  must  be  initialized  with  random. ");  }	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized    with    random.   ");    }    	non-compiled	[CE]  	17	None	replace
74	[BUG]  [BUGGY]  mutators.add( "MeansPlusPlusClusterer()  must  be  initialized  to  perfom  this  method. ");  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  mutators.add( "MeansPlusPlusClusterer()  must  be  initialized  to  perfom  this  method. ");  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutators.add( "MeansPlusPlusClusterer()  must  be  initialized  to  perfom  this  method. ");	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized    to    perfom    this    method.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
75	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()));  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()));	      super(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
76	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()));  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.nextDouble()));	      super(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
77	[BUG]  [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()));  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	KMeansPlusPlusClusterer(random,  EmptyClusterStrategy.LARGEST_VARIANCE,  Random.valueOf(random.getValue()));	      KMeansPlusPlusClusterer(random,    EmptyClusterStrategy.LARGEST_VARIANCE);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
78	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  [Delete]  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	[Delete]	      if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
79	[BUG]  [BUGGY]  mutators.add( "MeansPlusPlusClusterer()  is  not  an  exception. ");  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  mutators.add( "MeansPlusPlusClusterer()  is  not  an  exception. ");  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutators.add( "MeansPlusPlusClusterer()  is  not  an  exception. ");	      if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
80	[BUG]  [BUGGY]  mutators  =  new  LinkedHashMap  <  String,Object>();  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  mutators  =  new  LinkedHashMap  <  String,Object>();  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutators  =  new  LinkedHashMap  <  String,Object>();	      if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    an    exception.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
81	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.getValue()));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.getValue()));  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.getValue()));	      super(random,    EmptyClusterStrategy.NONE);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
82	[BUG]  [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.nextDouble()));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.nextDouble()));  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	super(random,  EmptyClusterStrategy.NONE,  Random.valueOf(random.nextDouble()));	      super(random,    EmptyClusterStrategy.NONE);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
83	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]      if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.. ");  }  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	add	        if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.   ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.. ");  }	  	compilable	  [FE]  IllegalArgumentException  	6	3	add
84	[BUG]  [BUGGY]      if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.. ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]      if(random!=  null)  {  throw  new  IllegalArgumentException(   "MeansPlusPlusClusterer:  random  is  not  an  exception.   ");  }  if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.. ");  }  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	        if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.   ");    }    if(random!=  null)  {  throw  new  IllegalArgumentException( "MeansPlusPlusClusterer:  random  is  not  an  exception.. ");  }	  	compilable	  [FE]  IllegalArgumentException  	6	3	add
85	[BUG]  [BUGGY]  safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansplusPlusClusterer()  is  not  supported. ");  }  [CE]  [FE]            AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansplusPlusClusterer()  is  not  supported. ");  }  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansplusPlusClusterer()  is  not  supported. ");  }	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    is    not    supported.   ");    }    	non-compiled	[CE]  	12	None	replace
86	[BUG]  [BUGGY]  safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansplusPlusClusterer()  must  be  initialized. ");  }  [CE]  [FE]          AssertionError    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansplusPlusClusterer()  must  be  initialized. ");  }  [BUGGY]          [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	safeMultiply(random)  {  throw  new  IllegalArgumentException( "MeansplusPlusClusterer()  must  be  initialized. ");  }	  if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer()    must    be    initialized.   ");    }    	non-compiled	[CE]  	11	None	replace
87	[BUG]  [BUGGY]  MutableMeansPlusPlusClusterer.this.random  =  random;  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  MutableMeansPlusPlusClusterer.this.random  =  random;  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	MutableMeansPlusPlusClusterer.this.random  =  random;	      if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
88	[BUG]  [BUGGY]  MutableClusterStrategy.notNull(random);  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  MutableClusterStrategy.notNull(random);  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	MutableClusterStrategy.notNull(random);	      if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
89	[BUG]  [BUGGY]  mutators  =  new  ArrayList  <  String>();  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]        public  KMeansPlusPlusClusterer(final  Random  random)  {  this(random,  EmptyClusterStrategy.LARGEST_VARIANCE);    [BUGGY]  mutators  =  new  ArrayList  <  String>();  [BUGGY]    }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	70	70	1	replace	mutators  =  new  ArrayList  <  String>();	      if(random!=    null)    {    throw    new    IllegalArgumentException(   "MeansPlusPlusClusterer:    random    is    not    an    exception.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
