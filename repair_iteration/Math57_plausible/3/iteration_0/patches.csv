bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  this.clusters;  [CE]  cannot  find  symbol  clusters  [FE]    AssertionError  [CONTEXT]  return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }  [BUGGY]  return  this.clusters;  [BUGGY]  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return  this.clusters;	return  clusters;  	non-compiled	[CE]  cannot  find  symbol  clusters	5	None	replace
2	[BUG]  [BUGGY]  return  newClusters;  [CE]  cannot  find  symbol  newClusters  [FE]      AssertionError  [CONTEXT]  return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }  [BUGGY]  return  newClusters;  [BUGGY]  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return  newClusters;	return  clusters;  	non-compiled	[CE]  cannot  find  symbol  newClusters	5	None	replace
3	[BUG]  [BUGGY]  return  this;  [CE]  incompatible  types  [FE]        AssertionError  [CONTEXT]  return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }  [BUGGY]  return  this;  [BUGGY]  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return  this;	return  clusters;  	non-compiled	[CE]  incompatible  types	5	None	replace
4	[BUG]  [BUGGY]  return  clusters.values();  [CE]  cannot  find  symbol  [FE]          AssertionError  [CONTEXT]  return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }  [BUGGY]  return  clusters.values();  [BUGGY]  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return  clusters.values();	return  clusters;  	non-compiled	[CE]  cannot  find  symbol	5	None	replace
5	[BUG]  [BUGGY]    [CE]  missing  return  statement  [FE]            AssertionError  [CONTEXT]  return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }  [BUGGY]    [BUGGY]  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	  	return  clusters;  	non-compiled	[CE]  missing  return  statement	5	None	replace
6	[BUG]  [BUGGY]    if(clusters!=  null)  {  clusters  =  new  HashSet  <  AssertionError>();  }  else  {  clusters  =  new  HashSet  <  AssertionError>();  }  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }  [BUGGY]    if(clusters!=  null)  {  clusters  =  new  HashSet  <  AssertionError>();  }  else  {  clusters  =  new  HashSet  <  AssertionError>();  }  [BUGGY]  return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	    if(clusters!=  null)  {  clusters  =  new  HashSet  <  AssertionError>();  }  else  {  clusters  =  new  HashSet  <  AssertionError>();  }		non-compiled	[CE]  cannot  find  symbol	6	None	add
7	[BUG]  [BUGGY]    if(clusters!=  null)  {  clusters  =  new  HashSet  <  AssertionError>();  }  else  {  clusters.addAll(clusters);  }  [CE]  cannot  find  symbol  [FE]      AssertionError  [CONTEXT]  return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }  [BUGGY]    if(clusters!=  null)  {  clusters  =  new  HashSet  <  AssertionError>();  }  else  {  clusters.addAll(clusters);  }  [BUGGY]  return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	    if(clusters!=  null)  {  clusters  =  new  HashSet  <  AssertionError>();  }  else  {  clusters.addAll(clusters);  }		non-compiled	[CE]  cannot  find  symbol	6	None	add
8	[BUG]  [BUGGY]    if(clusters!=  null)  {  clusters  =  new  HashSet  <  AssertionError>();  }  [CE]  cannot  find  symbol  [FE]        AssertionError  [CONTEXT]  return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }  [BUGGY]    if(clusters!=  null)  {  clusters  =  new  HashSet  <  AssertionError>();  }  [BUGGY]  return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	    if(clusters!=  null)  {  clusters  =  new  HashSet  <  AssertionError>();  }		non-compiled	[CE]  cannot  find  symbol	6	None	add
9	[BUG]  [BUGGY]    if(clusters!=  null)  {  clusters  =  new  HashMap  <  String,Object>();  }  else  {  clusters.putAll(clusters);  }  [CE]  cannot  find  symbol  [FE]          AssertionError  [CONTEXT]  return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }  [BUGGY]    if(clusters!=  null)  {  clusters  =  new  HashMap  <  String,Object>();  }  else  {  clusters.putAll(clusters);  }  [BUGGY]  return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	    if(clusters!=  null)  {  clusters  =  new  HashMap  <  String,Object>();  }  else  {  clusters.putAll(clusters);  }		non-compiled	[CE]  cannot  find  symbol	6	None	add
10	[BUG]  [BUGGY]    if(clusters!=  null)  {  clusters  =  newClusters;  }  [CE]  cannot  find  symbol  newClusters  [FE]            AssertionError  [CONTEXT]  return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }  [BUGGY]    if(clusters!=  null)  {  clusters  =  newClusters;  }  [BUGGY]  return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	    if(clusters!=  null)  {  clusters  =  newClusters;  }		non-compiled	[CE]  cannot  find  symbol  newClusters	6	None	add
11	[BUG]  [BUGGY]    if(clusters!=  null)  {  clusters  =  Collections.emptyList();  }  else  {  Clusters.sort(clusters);  }  [CE]  cannot  find  symbol  Collections  [FE]    AssertionError  [CONTEXT]  return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }  [BUGGY]    if(clusters!=  null)  {  clusters  =  Collections.emptyList();  }  else  {  Clusters.sort(clusters);  }  [BUGGY]  return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	    if(clusters!=  null)  {  clusters  =  Collections.emptyList();  }  else  {  Clusters.sort(clusters);  }		non-compiled	[CE]  cannot  find  symbol  Collections	6	None	add
12	[BUG]  [BUGGY]    if(clusters!=  null)  {  clusters  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  Collections  [FE]      AssertionError  [CONTEXT]  return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }  [BUGGY]    if(clusters!=  null)  {  clusters  =  Collections.emptyList();  }  [BUGGY]  return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	    if(clusters!=  null)  {  clusters  =  Collections.emptyList();  }		non-compiled	[CE]  cannot  find  symbol  Collections	6	None	add
13	[BUG]  [BUGGY]    if(clusters!=  null)  {  clusters  =  new  HashMap();  }  [CE]  cannot  find  symbol  [FE]        AssertionError  [CONTEXT]  return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }  [BUGGY]    if(clusters!=  null)  {  clusters  =  new  HashMap();  }  [BUGGY]  return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	    if(clusters!=  null)  {  clusters  =  new  HashMap();  }		non-compiled	[CE]  cannot  find  symbol	6	None	add
14	[BUG]  [BUGGY]    this.clusters  =  newClusters;  [CE]  cannot  find  symbol  clusters  [FE]          AssertionError  [CONTEXT]  return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }  [BUGGY]    this.clusters  =  newClusters;  [BUGGY]  return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	    this.clusters  =  newClusters;		non-compiled	[CE]  cannot  find  symbol  clusters	6	None	add
15	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError  [CONTEXT]  return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }  [BUGGY]  return  null;  [BUGGY]  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	add	return  null;	return  clusters;  	compilable	  [FE]  NullPointerException  	5	3	replace
16	[BUG]  [BUGGY]  return  null;  [FE]  NullPointerException  [FE]    AssertionError  [CONTEXT]  return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }  [BUGGY]  return  null;  [BUGGY]  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return  null;	return  clusters;  	compilable	  [FE]  NullPointerException  	5	3	replace
17	[BUG]  [BUGGY]    if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }  [BUGGY]    if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }  [BUGGY]  return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	    if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i);  }		non-compiled	[CE]  ')'  expected	6	None	add
18	[BUG]  [BUGGY]    if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }  [BUGGY]    if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }  [BUGGY]  return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	    if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i  +  1));  }		non-compiled	[CE]  illegal  start  of  expression	6	None	add
19	[BUG]  [BUGGY]    if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  [CE]  ')'  expected  [FE]        AssertionError  [CONTEXT]  return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }  [BUGGY]    if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters  [BUGGY]  return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	    if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters		non-compiled	[CE]  ')'  expected	6	None	add
20	[BUG]  [BUGGY]    if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  [CE]  ')'  expected  [FE]          AssertionError  [CONTEXT]  return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }  [BUGGY]    if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS  [BUGGY]  return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	    if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).asS		non-compiled	[CE]  ')'  expected	6	None	add
21	[BUG]  [BUGGY]    if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsToClusters(  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }  [BUGGY]    if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsToClusters(  [BUGGY]  return  clusters;  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	    if(clusters!=  null)  {  Cluster[]  newClusters  =  clusters.toArray(new  Cluster[clusters.size()  ]);  for(int  i  =  0;  i  <  newClusters.size();  ++i)  {  clusters.add(newClusters.get(i).assignPointsToClusters(		non-compiled	[CE]  illegal  start  of  expression	6	None	add
22	[BUG]  [BUGGY]  return  true;  [CE]  incompatible  types  [FE]    AssertionError  [CONTEXT]  return  clusters;  }  assignPointsToClusters(newClusters,  points);  clusters  =  newClusters;  }  [BUGGY]  return  true;  [BUGGY]  }      [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	134	134	1	replace	return  true;	return  clusters;  	non-compiled	[CE]  incompatible  types	5	None	replace
