bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  int  pointSet  =  dx2.length  -  1;  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  dx2.length  -  1;  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  dx2.length  -  1;	  final    int    pointSet    =    resultSet.size()    -    1;    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	4	None	replace
2	[BUG]  [BUGGY]  final  int  pointSet  =  points.size()  -  1;  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  points.size()  -  1;  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  points.size()  -  1;	  final    int    pointSet    =    resultSet.size()    -    1;    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	4	None	replace
3	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  array.get(dx2);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  Point  <  T>  pointSet  =  array.get(dx2);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  array.get(dx2);	  final    Point    <    T>    pointSet    =    array.get(k);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
4	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  array.get(resultSet);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  Point  <  T>  pointSet  =  array.get(resultSet);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  array.get(resultSet);	  final    Point    <    T>    pointSet    =    array.get(k);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
5	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(pointSet,  resultSet,  dx2);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  d  =  getNearestCluster(pointSet,  resultSet,  dx2);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(pointSet,  resultSet,  dx2);	  final    double    d    =    getNearestCluster(resultSet,    dx2);    	non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;	15	None	replace
6	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(pointSet,  resultSet);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(pointSet,  resultSet);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  getPoint(pointSet,  resultSet);	  final    Point    <    T>    pointSet    =    getPoint(resultSet,    resultSet);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
7	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  resultSet.size());  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  resultSet.size());  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  getPoint(resultSet,  resultSet.size());	  final    Point    <    T>    pointSet    =    getPoint(resultSet,    resultSet);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
8	[BUG]  [BUGGY]  final  double[]  pointSet2  =  new  double[pointSet.size()];  while(resultSet.size()  <  k)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet2  =  new  double[pointSet.size()];  while(resultSet.size()  <  k)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet2  =  new  double[pointSet.size()];  while(resultSet.size()  <  k)  {	  final    double[]    dx2    =    new    double[pointSet.size()    +    1];    while(resultSet.size()    <    k)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
9	[BUG]  [BUGGY]  final  double[]  pointSet  =(double[])dx2.get(k  -  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =(double[])dx2.get(k  -  1);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =(double[])dx2.get(k  -  1);	  final    double[]    pointSet    =(double[])resultSet.get(k    -    1);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	56	None	replace
10	[BUG]  [BUGGY]  final  double[]  pointSet  =(double[])pointSet.get(k  -  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =(double[])pointSet.get(k  -  1);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =(double[])pointSet.get(k  -  1);	  final    double[]    pointSet    =(double[])resultSet.get(k    -    1);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	56	None	replace
11	[BUG]  [BUGGY]  final  double[]  pointSet  =(double[])resultSet.get(k  -  1  +  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                        AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =(double[])resultSet.get(k  -  1  +  1);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =(double[])resultSet.get(k  -  1  +  1);	  final    double[]    pointSet    =(double[])resultSet.get(k    -    1);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	56	None	replace
12	[BUG]  [BUGGY]  final  String  sum  =  0;  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  String  sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  String  sum  =  0;	  char    sum    =    0;    final    char    sum    =    0;    	non-compiled	[CE]  incompatible  types	19	None	replace
13	[BUG]  [BUGGY]  final  char  sum  =  0;  [CE]  cannot  assign  a  value  to  final  variable  sum  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  char  sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  char  sum  =  0;	  char    sum    =    0;    final    char    sum    =    0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  sum	19	None	replace
14	[BUG]  [BUGGY]  final  int  pointSet  =  points.get(i);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  points.get(i);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  points.get(i);	  final    int    pointSet    =    resultSet.get(i);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	25	None	replace
15	[BUG]  [BUGGY]  final  int  pointSet  =  dx2.get(i);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  dx2.get(i);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  dx2.get(i);	  final    int    pointSet    =    resultSet.get(i);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	25	None	replace
16	[BUG]  [BUGGY]  final  int  pointSet  =  pointSet.get(i);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                        AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  pointSet.get(i);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  pointSet.get(i);	  final    int    pointSet    =    resultSet.get(i);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	25	None	replace
17	[BUG]  [BUGGY]  String  sum  =  0;  Char  sum  =  0;  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  String  sum  =  0;  Char  sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	String  sum  =  0;  Char  sum  =  0;	  char    sum    =    0;    Char    sum    =    0;    	non-compiled	[CE]  incompatible  types	20	None	replace
18	[BUG]  [BUGGY]  String  sum  =  0;  String  sum  =  0;  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  String  sum  =  0;  String  sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	String  sum  =  0;  String  sum  =  0;	  char    sum    =    0;    Char    sum    =    0;    	non-compiled	[CE]  incompatible  types	20	None	replace
19	[BUG]  [BUGGY]  String  sum  =  0;  Boolean  sum  =  0;  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  String  sum  =  0;  Boolean  sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	String  sum  =  0;  Boolean  sum  =  0;	  char    sum    =    0;    Char    sum    =    0;    	non-compiled	[CE]  incompatible  types	20	None	replace
20	[BUG]  [BUGGY]  final  double[]  pointSet  =(double[])resultSet.get(dx2);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =(double[])resultSet.get(dx2);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =(double[])resultSet.get(dx2);	  final    double[]    pointSet    =(double[])resultSet.get(k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	10	None	replace
21	[BUG]  [BUGGY]  final  double[]  pointSet  =(double[])dx2.get(k);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                        AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =(double[])dx2.get(k);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =(double[])dx2.get(k);	  final    double[]    pointSet    =(double[])resultSet.get(k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	10	None	replace
22	[BUG]  [BUGGY]  final  int  pointSet  =  dx2.get(k);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  dx2.get(k);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  dx2.get(k);	  final    int    pointSet    =    points.get(k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	24	None	replace
23	[BUG]  [BUGGY]  final  int  pointSet  =  this.points.get(k);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  this.points.get(k);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  this.points.get(k);	  final    int    pointSet    =    points.get(k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	24	None	replace
24	[BUG]  [BUGGY]  String  sum  =  0;  Character  sum  =  0;  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  String  sum  =  0;  Character  sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	String  sum  =  0;  Character  sum  =  0;	  char    sum    =    0;    Character    sum    =    0;    	non-compiled	[CE]  incompatible  types	22	None	replace
25	[BUG]  [BUGGY]  Character  sum  =  0;  [CE]  inconvertible  types  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  Character  sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	Character  sum  =  0;	  char    sum    =    0;    Character    sum    =    0;    	non-compiled	[CE]  inconvertible  types	22	None	replace
26	[BUG]  [BUGGY]  double  sum  =  0;  Character  sum  =  0;  [CE]  variable  sum  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  double  sum  =  0;  Character  sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	double  sum  =  0;  Character  sum  =  0;	  char    sum    =    0;    Character    sum    =    0;    	non-compiled	[CE]  variable  sum  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	22	None	replace
27	[BUG]  [BUGGY]  String  Sum  =  0;  Character  sum  =  0;  [CE]  incompatible  types  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  String  Sum  =  0;  Character  sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	String  Sum  =  0;  Character  sum  =  0;	  char    sum    =    0;    Character    sum    =    0;    	non-compiled	[CE]  incompatible  types	22	None	replace
28	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(dx2,  resultSet,  k);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  d  =  getNearestCluster(dx2,  resultSet,  k);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(dx2,  resultSet,  k);	  final    double    d    =    getNearestCluster(resultSet,    dx2,    k);    	non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;	36	None	replace
29	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dx2,  p);  [CE]  cannot  find  symbol  p  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dx2,  p);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(resultSet,  dx2,  p);	  final    double    d    =    getNearestCluster(resultSet,    dx2,    k);    	non-compiled	[CE]  cannot  find  symbol  p	36	None	replace
30	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  k,  dx2);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  k,  dx2);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(resultSet,  k,  dx2);	  final    double    d    =    getNearestCluster(resultSet,    dx2,    k);    	non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;	36	None	replace
31	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(dx2,  resultsSet,  k);  [CE]  cannot  find  symbol  resultsSet  [FE]                        AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  d  =  getNearestCluster(dx2,  resultsSet,  k);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(dx2,  resultsSet,  k);	  final    double    d    =    getNearestCluster(resultSet,    dx2,    k);    	non-compiled	[CE]  cannot  find  symbol  resultsSet	36	None	replace
32	[BUG]  [BUGGY]  final  int  pointSet  =  points.get(k  -  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  points.get(k  -  1);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  points.get(k  -  1);	  final    int    pointSet    =    resultSet.get(k    -    1);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	26	None	replace
33	[BUG]  [BUGGY]  final  int  pointSet  =  dx2.get(k  -  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                        AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  dx2.get(k  -  1);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  dx2.get(k  -  1);	  final    int    pointSet    =    resultSet.get(k    -    1);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	26	None	replace
34	[BUG]  [BUGGY]  final  int  pointSet  =  resultSet.get(k  -  1  +  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                          AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  resultSet.get(k  -  1  +  1);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  resultSet.get(k  -  1  +  1);	  final    int    pointSet    =    resultSet.get(k    -    1);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	26	None	replace
35	[BUG]  [BUGGY]  final  double  pointSet  =  dx2.length;  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  pointSet  =  dx2.length;  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  pointSet  =  dx2.length;	  final    int    pointSet    =    dx2.length;    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	1	None	replace
36	[BUG]  [BUGGY]  final  int  pointSet  =  dx2.length  -  2;  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  dx2.length  -  2;  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  dx2.length  -  2;	  final    int    pointSet    =    dx2.length;    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	1	None	replace
37	[BUG]  [BUGGY]  final  int  pointSet  =  dx2.length  +  1;  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  dx2.length  +  1;  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  dx2.length  +  1;	  final    int    pointSet    =    dx2.length;    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	1	None	replace
38	[BUG]  [BUGGY]  final  double[]  resultSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  dx2)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  resultSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  dx2)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  resultSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  dx2)  {	  final    double[]    resultSet    =    new    double[pointSet.size()    ];    while(resultSet.size()    <    k)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
39	[BUG]  [BUGGY]  final  double[]  resultSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  resultSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  0)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  resultSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  0)  {	  final    double[]    resultSet    =    new    double[pointSet.size()    ];    while(resultSet.size()    <    k)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
40	[BUG]  [BUGGY]  final  double[]  resultSet  =  new  double[pointSet.size()  +  1];  while(resultSet.size()  <  k)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  resultSet  =  new  double[pointSet.size()  +  1];  while(resultSet.size()  <  k)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  resultSet  =  new  double[pointSet.size()  +  1];  while(resultSet.size()  <  k)  {	  final    double[]    resultSet    =    new    double[pointSet.size()    ];    while(resultSet.size()    <    k)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
41	[BUG]  [BUGGY]  final  int  sum  =(resultSet.length()  <  dx2.length)?  0  :  k;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  sum  =(resultSet.length()  <  dx2.length)?  0  :  k;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  sum  =(resultSet.length()  <  dx2.length)?  0  :  k;	  final    int    sum    =(k    <    dx2.length)?    0    :    k;    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
42	[BUG]  [BUGGY]  final  int  sum  =(dx2  <  dx2.length)?  0  :  dx2.length;  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  sum  =(dx2  <  dx2.length)?  0  :  dx2.length;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  sum  =(dx2  <  dx2.length)?  0  :  dx2.length;	  final    int    sum    =(k    <    dx2.length)?    0    :    k;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	66	None	replace
43	[BUG]  [BUGGY]  final  int  sum  =(dx2.length  <  k)?  0  :  dx2.length;  [CE]  cannot  assign  a  value  to  final  variable  sum  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  sum  =(dx2.length  <  k)?  0  :  dx2.length;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  sum  =(dx2.length  <  k)?  0  :  dx2.length;	  final    int    sum    =(k    <    dx2.length)?    0    :    k;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  sum	66	None	replace
44	[BUG]  [BUGGY]  final  int  sum  =(dx2.length  <  2)?  0  :  dx2.length;  [CE]  cannot  assign  a  value  to  final  variable  sum  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  sum  =(dx2.length  <  2)?  0  :  dx2.length;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  sum  =(dx2.length  <  2)?  0  :  dx2.length;	  final    int    sum    =(k    <    dx2.length)?    0    :    k;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  sum	66	None	replace
45	[BUG]  [BUGGY]  Char  sum  =(char)resultSet.get(k);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  Char  sum  =(char)resultSet.get(k);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	Char  sum  =(char)resultSet.get(k);	  Char    sum    =    0;    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
46	[BUG]  [BUGGY]  Char  sum  =(char)resultSet.get(0);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  Char  sum  =(char)resultSet.get(0);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	Char  sum  =(char)resultSet.get(0);	  Char    sum    =    0;    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
47	[BUG]  [BUGGY]  Char  sum  =  dx2.length;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  Char  sum  =  dx2.length;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	Char  sum  =  dx2.length;	  Char    sum    =    0;    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
48	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  dx2,  k);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  dx2,  k);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  getPoint(resultSet,  dx2,  k);	  final    Point    <    T>    pointSet    =    getPoint(resultSet,    k);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
49	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  results.get(dx2);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  Point  <  T>  pointSet  =  results.get(dx2);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  results.get(dx2);	  final    Point    <    T>    pointSet    =    results.get(k);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
50	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(dx2,  resultSet,  pointSet);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  d  =  getNearestCluster(dx2,  resultSet,  pointSet);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(dx2,  resultSet,  pointSet);	  final    double    d    =    getNearestCluster(dx2,    resultSet);    	non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;	17	None	replace
51	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(dx2,  k,  resultSet);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  d  =  getNearestCluster(dx2,  k,  resultSet);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(dx2,  k,  resultSet);	  final    double    d    =    getNearestCluster(dx2,    k);    	non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;	35	None	replace
52	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(dx2,  dx2.length);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#2>  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  d  =  getNearestCluster(dx2,  dx2.length);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(dx2,  dx2.length);	  final    double    d    =    getNearestCluster(dx2,    k);    	non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#2>  cannot  be  applied  to  given  types;	35	None	replace
53	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(dx2,  p,  k);  [CE]  cannot  find  symbol  p  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  d  =  getNearestCluster(dx2,  p,  k);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(dx2,  p,  k);	  final    double    d    =    getNearestCluster(dx2,    k);    	non-compiled	[CE]  cannot  find  symbol  p	35	None	replace
54	[BUG]  [BUGGY]  final  int  pointSet  =  dx2.length  -  k;  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  dx2.length  -  k;  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  dx2.length  -  k;	  final    int    pointSet    =    dx2.length.size();    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	3	None	replace
55	[BUG]  [BUGGY]  final  int  pointSet  =  dx2.length.size()  +  1;  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  dx2.length.size()  +  1;  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  dx2.length.size()  +  1;	  final    int    pointSet    =    dx2.length.size();    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	3	None	replace
56	[BUG]  [BUGGY]  final  int  pointSet  =  dx2.length.size()  -  1;  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  dx2.length.size()  -  1;  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  dx2.length.size()  -  1;	  final    int    pointSet    =    dx2.length.size();    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	3	None	replace
57	[BUG]  [BUGGY]  final  double  sum  =  k;  [CE]  cannot  assign  a  value  to  final  variable  sum  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  sum  =  k;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  sum  =  k;	  final    int    sum    =    k;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  sum	29	None	replace
58	[BUG]  [BUGGY]  final  int  sum  =  pointSet.size();  [CE]  cannot  assign  a  value  to  final  variable  sum  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  sum  =  pointSet.size();  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  sum  =  pointSet.size();	  final    int    sum    =    k;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  sum	29	None	replace
59	[BUG]  [BUGGY]  final  int  sum  =  resultSet.size();  [CE]  cannot  assign  a  value  to  final  variable  sum  [FE]                        AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  sum  =  resultSet.size();  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  sum  =  resultSet.size();	  final    int    sum    =    k;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  sum	29	None	replace
60	[BUG]  [BUGGY]  final  int  sum  =  dx2.length;  [CE]  cannot  assign  a  value  to  final  variable  sum  [FE]                          AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  sum  =  dx2.length;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  sum  =  dx2.length;	  final    int    sum    =    k;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  sum	29	None	replace
61	[BUG]  [BUGGY]  final  int  pointSet  =  this.resultSet.size()  -  1;  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  this.resultSet.size()  -  1;  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  this.resultSet.size()  -  1;	  final    int    pointSet    =    this.resultSet.size();    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	54	None	replace
62	[BUG]  [BUGGY]  final  int  pointSet  =  this.resultSet.size()  -  2;  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  this.resultSet.size()  -  2;  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  this.resultSet.size()  -  2;	  final    int    pointSet    =    this.resultSet.size();    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	54	None	replace
63	[BUG]  [BUGGY]  String  Sum  =  0;  String  sum  =  0;  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  String  Sum  =  0;  String  sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	String  Sum  =  0;  String  sum  =  0;	  char    sum    =    0;    char    sum    =    0;    	non-compiled	[CE]  incompatible  types	18	None	replace
64	[BUG]  [BUGGY]  String  sum  =  0,  sum  =  0;  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  String  sum  =  0,  sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	String  sum  =  0,  sum  =  0;	  char    sum    =    0;    char    sum    =    0;    	non-compiled	[CE]  incompatible  types	18	None	replace
65	[BUG]  [BUGGY]  String  sum  =  0;  this.char  sum  =  0;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  String  sum  =  0;  this.char  sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	String  sum  =  0;  this.char  sum  =  0;	  char    sum    =    0;    char    sum    =    0;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
66	[BUG]  [BUGGY]  final  int  pointSet  =  points.get(k  +  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  points.get(k  +  1);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  points.get(k  +  1);	  final    int    pointSet    =    resultSet.get(k    +    1);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	63	None	replace
67	[BUG]  [BUGGY]  final  int  pointSet  =  dx2.get(k  +  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  dx2.get(k  +  1);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  dx2.get(k  +  1);	  final    int    pointSet    =    resultSet.get(k    +    1);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	63	None	replace
68	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  while(pointSet.size()  <  k)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  while(pointSet.size()  <  k)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  ];  while(pointSet.size()  <  k)  {	  final    double[]    pointSet    =    new    double[pointSet.size()    ];    while(pointSet.size()    <    k)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
69	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  +  1];  while(pointSet.size()  <  k)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  +  1];  while(pointSet.size()  <  k)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  new  double[pointSet.size()  +  1];  while(pointSet.size()  <  k)  {	  final    double[]    pointSet    =    new    double[pointSet.size()    ];    while(pointSet.size()    <    k)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
70	[BUG]  [BUGGY]  final  int  pointSet  =  dx2.get(resultSet.get(k  -  dx2));  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  dx2.get(resultSet.get(k  -  dx2));  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  dx2.get(resultSet.get(k  -  dx2));	  final    int    pointSet    =    resultSet.get(dx2    -    k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	52	None	replace
71	[BUG]  [BUGGY]  final  int  pointSet  =  points.get(dx2  -  k);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  points.get(dx2  -  k);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  points.get(dx2  -  k);	  final    int    pointSet    =    resultSet.get(dx2    -    k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	52	None	replace
72	[BUG]  [BUGGY]  final  int  pointSet  =  resultSet.get(k  -  dx2);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  resultSet.get(k  -  dx2);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  resultSet.get(k  -  dx2);	  final    int    pointSet    =    resultSet.get(dx2    -    k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	52	None	replace
73	[BUG]  [BUGGY]  final  int  pointSet  =  resultSet.get(dx2  -  k  +  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  resultSet.get(dx2  -  k  +  1);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  resultSet.get(dx2  -  k  +  1);	  final    int    pointSet    =    resultSet.get(dx2    -    k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	52	None	replace
74	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(pointSet.size());  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(pointSet.size());  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  getPoint(pointSet.size());	  final    Point    <    T>    pointSet    =    getPoint(pointSet);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
75	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(dx2);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(dx2);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  getPoint(dx2);	  final    Point    <    T>    pointSet    =    getPoint(pointSet);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
76	[BUG]  [BUGGY]  final  int  pointSet  =  dx2.get(resultSet);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  dx2.get(resultSet);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  dx2.get(resultSet);	  final    int    pointSet    =    resultSet.get(dx2);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	23	None	replace
77	[BUG]  [BUGGY]  final  int  pointSet  =  this.resultSet.get(dx2);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  this.resultSet.get(dx2);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  this.resultSet.get(dx2);	  final    int    pointSet    =    resultSet.get(dx2);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	23	None	replace
78	[BUG]  [BUGGY]  final  int  pointSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {	  final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
79	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  new  double[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {	  final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
80	[BUG]  [BUGGY]  final  double[]  pointSet2  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet2  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet2  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {	  final    double[]    pointSet2    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
81	[BUG]  [BUGGY]  final  double[]  pointSet2  =  new  double[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet2  =  new  double[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet2  =  new  double[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {	  final    double[]    pointSet2    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
82	[BUG]  [BUGGY]  final  int  pointSet2  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet2  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet2  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {	  final    double[]    pointSet2    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
83	[BUG]  [BUGGY]  final  double[]  pointSet  =(double[])dx2.get(1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =(double[])dx2.get(1);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =(double[])dx2.get(1);	  final    double[]    pointSet    =(double[])resultSet.get(1);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	57	None	replace
84	[BUG]  [BUGGY]  final  double[]  pointSet  =  dx2.get(resultSet);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  dx2.get(resultSet);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  dx2.get(resultSet);	  final    double[]    pointSet    =    resultSet.get(dx2);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	12	None	replace
85	[BUG]  [BUGGY]  final  double[]  pointSet  =  this.resultSet.get(dx2);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  this.resultSet.get(dx2);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  this.resultSet.get(dx2);	  final    double[]    pointSet    =    resultSet.get(dx2);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	12	None	replace
86	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[dx2.size()  +  1];  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  new  double[dx2.size()  +  1];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  new  double[dx2.size()  +  1];	  final    double[]    pointSet    =    new    double[dx2.size()    ];    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	41	None	replace
87	[BUG]  [BUGGY]  final  double  sum  =  1;  [CE]  cannot  assign  a  value  to  final  variable  sum  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  sum  =  1;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  sum  =  1;	  final    double    sum    =    0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  sum	27	None	replace
88	[BUG]  [BUGGY]  final  double  sum  =  dx2.length;  [CE]  cannot  assign  a  value  to  final  variable  sum  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  sum  =  dx2.length;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  sum  =  dx2.length;	  final    double    sum    =    0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  sum	27	None	replace
89	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  points.get(dx2);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  Point  <  T>  pointSet  =  points.get(dx2);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  points.get(dx2);	  final    Point    <    T>    pointSet    =    points.get(k);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
90	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  points.get(resultSet);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  Point  <  T>  pointSet  =  points.get(resultSet);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  points.get(resultSet);	  final    Point    <    T>    pointSet    =    points.get(k);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
91	[BUG]  [BUGGY]  final  double[]  resultSet  =  new  double[dx2.size()  ];  [CE]  variable  resultSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  resultSet  =  new  double[dx2.size()  ];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  resultSet  =  new  double[dx2.size()  ];	  final    double[]    resultSet    =    new    double[resultSet.size()    ];    	non-compiled	[CE]  variable  resultSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	31	None	replace
92	[BUG]  [BUGGY]  final  double[]  resultSet  =  new  double[resultSet.size()  +  1];  [CE]  variable  resultSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  resultSet  =  new  double[resultSet.size()  +  1];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  resultSet  =  new  double[resultSet.size()  +  1];	  final    double[]    resultSet    =    new    double[resultSet.size()    ];    	non-compiled	[CE]  variable  resultSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	31	None	replace
93	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dx2,  resultSet,  k);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dx2,  resultSet,  k);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(resultSet,  dx2,  resultSet,  k);	  final    double    d    =    getNearestCluster(resultSet,    dx2,    resultSet);    	non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;	16	None	replace
94	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dx2,  pointSet);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dx2,  pointSet);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(resultSet,  dx2,  pointSet);	  final    double    d    =    getNearestCluster(resultSet,    dx2,    resultSet);    	non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;	16	None	replace
95	[BUG]  [BUGGY]  final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {	  final    double[]    pointSet    =    new    double[resultSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
96	[BUG]  [BUGGY]  final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {	  final    double[]    pointSet    =    new    double[resultSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
97	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  +  k  ];  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  +  k  ];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  new  double[pointSet.size()  +  k  ];	  final    double[]    pointSet    =    new    double[resultSet.size()    +    k    ];    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	64	None	replace
98	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  +  dx2  ];  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  +  dx2  ];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  +  dx2  ];	  final    double[]    pointSet    =    new    double[resultSet.size()    +    k    ];    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	64	None	replace
99	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  +  k  -  1];  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  +  k  -  1];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  +  k  -  1];	  final    double[]    pointSet    =    new    double[resultSet.size()    +    k    ];    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	64	None	replace
100	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[dx2.size()  +  k  ];  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  new  double[dx2.size()  +  k  ];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  new  double[dx2.size()  +  k  ];	  final    double[]    pointSet    =    new    double[resultSet.size()    +    k    ];    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	64	None	replace
101	[BUG]  [BUGGY]  final  double[]  pointSet2  =  new  double[resultSet.size()  +  k  ];  [CE]  cannot  find  symbol  sum  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet2  =  new  double[resultSet.size()  +  k  ];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet2  =  new  double[resultSet.size()  +  k  ];	  final    double[]    pointSet2    =    new    double[resultSet.size()    ];    	non-compiled	[CE]  cannot  find  symbol  sum	61	None	replace
102	[BUG]  [BUGGY]  final  double[]  pointSet2  =  new  double[resultSet.size()  +  1];  [CE]  cannot  find  symbol  sum  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet2  =  new  double[resultSet.size()  +  1];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet2  =  new  double[resultSet.size()  +  1];	  final    double[]    pointSet2    =    new    double[resultSet.size()    ];    	non-compiled	[CE]  cannot  find  symbol  sum	61	None	replace
103	[BUG]  [BUGGY]  String  Sum  =  0;  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  String  Sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	String  Sum  =  0;	  char    sum    =    0;    String    sum    =    0;    	non-compiled	[CE]  incompatible  types	21	None	replace
104	[BUG]  [BUGGY]  String  sum  =  null;  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  String  sum  =  null;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	String  sum  =  null;	  char    sum    =    0;    String    sum    =    0;    	non-compiled	[CE]  incompatible  types	21	None	replace
105	[BUG]  [BUGGY]  String  sum  =  0.0;  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  String  sum  =  0.0;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	String  sum  =  0.0;	  char    sum    =    0;    String    sum    =    0;    	non-compiled	[CE]  incompatible  types	21	None	replace
106	[BUG]  [BUGGY]  final  double[]  pointSet  =  dx2.get(resultSet.size());  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  dx2.get(resultSet.size());  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  dx2.get(resultSet.size());	  final    double[]    pointSet    =    dx2.get(k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	13	None	replace
107	[BUG]  [BUGGY]  final  double[]  pointSet  =  dx2.get(resultSet,  k);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  dx2.get(resultSet,  k);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  dx2.get(resultSet,  k);	  final    double[]    pointSet    =    dx2.get(k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	13	None	replace
108	[BUG]  [BUGGY]  final  double[]  pointSet  =  dx2.get(resultSet.get(k));  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  dx2.get(resultSet.get(k));  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  dx2.get(resultSet.get(k));	  final    double[]    pointSet    =    dx2.get(k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	13	None	replace
109	[BUG]  [BUGGY]  final  double[]  points  =  new  double[pointSet.size()  ];  [CE]  variable  points  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  points  =  new  double[pointSet.size()  ];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  points  =  new  double[pointSet.size()  ];	  final    double[]    points    =    new    double[resultSet.size()    ];    	non-compiled	[CE]  variable  points  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	49	None	replace
110	[BUG]  [BUGGY]  final  double[]  points  =  new  double[dx2.size()  ];  [CE]  variable  points  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  points  =  new  double[dx2.size()  ];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  points  =  new  double[dx2.size()  ];	  final    double[]    points    =    new    double[resultSet.size()    ];    	non-compiled	[CE]  variable  points  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	49	None	replace
111	[BUG]  [BUGGY]  final  double[]  points  =  new  double[points.size()  ];  [CE]  variable  points  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  points  =  new  double[points.size()  ];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  points  =  new  double[points.size()  ];	  final    double[]    points    =    new    double[resultSet.size()    ];    	non-compiled	[CE]  variable  points  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	49	None	replace
112	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  pointSet);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  pointSet);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(resultSet,  pointSet);	  final    double    d    =    getNearestCluster(pointSet,    resultSet);    	non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;	55	None	replace
113	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  points);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  points);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(resultSet,  points);	  final    double    d    =    getNearestCluster(pointSet,    resultSet);    	non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;	55	None	replace
114	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(pointSet,  dx2);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  d  =  getNearestCluster(pointSet,  dx2);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(pointSet,  dx2);	  final    double    d    =    getNearestCluster(pointSet,    resultSet);    	non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;	55	None	replace
115	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  dx2)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  dx2)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  dx2)  {	  final    double[]    pointSet    =    new    double[pointSet.size()    ];    while(resultSet.size()    <    k)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
116	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  +  1];  while(resultSet.size()  <  k)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  +  1];  while(resultSet.size()  <  k)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  new  double[pointSet.size()  +  1];  while(resultSet.size()  <  k)  {	  final    double[]    pointSet    =    new    double[pointSet.size()    ];    while(resultSet.size()    <    k)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
117	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  0)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  0)  {	  final    double[]    pointSet    =    new    double[pointSet.size()    ];    while(resultSet.size()    <    k)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
118	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  +  1];  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  +  1];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  +  1];	  final    double[]    pointSet    =    new    double[resultSet.size()    ];    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	30	None	replace
119	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(dx2,  resultSet);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(dx2,  resultSet);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  getPoint(dx2,  resultSet);	  final    Point    <    T>    pointSet    =    getPoint(resultSet,    dx2);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
120	[BUG]  [BUGGY]  final  double[]  pointSet  =  dx2.get(k  -  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  dx2.get(k  -  1);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  dx2.get(k  -  1);	  final    double[]    pointSet    =    resultSet.get(k    -    1);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	48	None	replace
121	[BUG]  [BUGGY]  final  double[]  pointSet  =  points.get(k  -  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  points.get(k  -  1);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  points.get(k  -  1);	  final    double[]    pointSet    =    resultSet.get(k    -    1);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	48	None	replace
122	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  -  1  +  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  -  1  +  1);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  resultSet.get(k  -  1  +  1);	  final    double[]    pointSet    =    resultSet.get(k    -    1);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	48	None	replace
123	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  k,  p);  [CE]  cannot  find  symbol  p  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  k,  p);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(resultSet,  k,  p);	  final    double    d    =    getNearestCluster(pointSet,    resultSet,    k);    	non-compiled	[CE]  cannot  find  symbol  p	37	None	replace
124	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  k,  pointSet);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  k,  pointSet);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(resultSet,  k,  pointSet);	  final    double    d    =    getNearestCluster(pointSet,    resultSet,    k);    	non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;	37	None	replace
125	[BUG]  [BUGGY]  final  double[]  pointSet2  =  new  double[redx2.size()  ];  [CE]  cannot  find  symbol  redx2  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet2  =  new  double[redx2.size()  ];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet2  =  new  double[redx2.size()  ];	  final    double[]    pointSet2    =    new    double[pointSet.size()    ];    	non-compiled	[CE]  cannot  find  symbol  redx2	8	None	replace
126	[BUG]  [BUGGY]  final  double[]  pointSet2  =  new  double[pointSet.size()  +  1];  [CE]  cannot  find  symbol  sum  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet2  =  new  double[pointSet.size()  +  1];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet2  =  new  double[pointSet.size()  +  1];	  final    double[]    pointSet2    =    new    double[pointSet.size()    ];    	non-compiled	[CE]  cannot  find  symbol  sum	8	None	replace
127	[BUG]  [BUGGY]  String  sum  =  dx2.length;  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  String  sum  =  dx2.length;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	String  sum  =  dx2.length;	  String    sum    =    0;    	non-compiled	[CE]  incompatible  types	33	None	replace
128	[BUG]  [BUGGY]  final  double[]  resultSet2  =  new  double[pointSet.size()  ];  [CE]  cannot  find  symbol  sum  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  resultSet2  =  new  double[pointSet.size()  ];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  resultSet2  =  new  double[pointSet.size()  ];	  final    double[]    resultSet2    =    new    double[resultSet.size()    ];    	non-compiled	[CE]  cannot  find  symbol  sum	32	None	replace
129	[BUG]  [BUGGY]  final  double[]  resultSet2  =  new  double[resultSet.size()  +  k  ];  [CE]  cannot  find  symbol  sum  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  resultSet2  =  new  double[resultSet.size()  +  k  ];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  resultSet2  =  new  double[resultSet.size()  +  k  ];	  final    double[]    resultSet2    =    new    double[resultSet.size()    ];    	non-compiled	[CE]  cannot  find  symbol  sum	32	None	replace
130	[BUG]  [BUGGY]  final  double[]  resultSet2  =  new  double[resultSet.size()  +  1];  [CE]  cannot  find  symbol  sum  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  resultSet2  =  new  double[resultSet.size()  +  1];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  resultSet2  =  new  double[resultSet.size()  +  1];	  final    double[]    resultSet2    =    new    double[resultSet.size()    ];    	non-compiled	[CE]  cannot  find  symbol  sum	32	None	replace
131	[BUG]  [BUGGY]  final  double[]  pointSet  =  dx2.get(k  +  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  dx2.get(k  +  1);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  dx2.get(k  +  1);	  final    double[]    pointSet    =    resultSet.get(k    +    1);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	14	None	replace
132	[BUG]  [BUGGY]  final  double[]  pointSet  =  points.get(k  +  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  points.get(k  +  1);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  points.get(k  +  1);	  final    double[]    pointSet    =    resultSet.get(k    +    1);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	14	None	replace
133	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  dx2.get(resultSet.get(k);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  Point  <  T>  pointSet  =  dx2.get(resultSet.get(k);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  dx2.get(resultSet.get(k);	  final    Point    <    T>    pointSet    =    dx2.get(k);    	non-compiled	[CE]  ')'  expected	47	None	replace
134	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  dx2.get(resultSet);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  Point  <  T>  pointSet  =  dx2.get(resultSet);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  dx2.get(resultSet);	  final    Point    <    T>    pointSet    =    dx2.get(k);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
135	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  dx2.get(resultSet.size());  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  Point  <  T>  pointSet  =  dx2.get(resultSet.size());  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  dx2.get(resultSet.size());	  final    Point    <    T>    pointSet    =    dx2.get(k);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
136	[BUG]  [BUGGY]  final  int[]  dx2  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int[]  dx2  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int[]  dx2  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {	  final    double[]    dx2    =    new    double[resultSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
137	[BUG]  [BUGGY]  final  int  pointSet  =  dx2.length();  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  dx2.length();  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  dx2.length();	  final    int    pointSet    =    dx2.size();    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	2	None	replace
138	[BUG]  [BUGGY]  final  double  pointSet  =  dx2.size();  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  pointSet  =  dx2.size();  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  pointSet  =  dx2.size();	  final    int    pointSet    =    dx2.size();    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	2	None	replace
139	[BUG]  [BUGGY]  final  int  pointSet  =  dx2.size()  -  1;  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  dx2.size()  -  1;  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  dx2.size()  -  1;	  final    int    pointSet    =    dx2.size();    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	2	None	replace
140	[BUG]  [BUGGY]  final  int  pointSet  =  dx2.size()  -  2;  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  dx2.size()  -  2;  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  dx2.size()  -  2;	  final    int    pointSet    =    dx2.size();    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	2	None	replace
141	[BUG]  [BUGGY]  final  double[]  pointSet  =(double[])dx2.resultSet.get(0);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                        AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =(double[])dx2.resultSet.get(0);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =(double[])dx2.resultSet.get(0);	  final    double[]    pointSet    =(double[])this.resultSet.get(0);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	11	None	replace
142	[BUG]  [BUGGY]  final  int  pointSet  =  resultSet.length;  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  resultSet.length;  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  resultSet.length;	  final    int    pointSet    =    dx2.length;    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	1	None	replace
143	[BUG]  [BUGGY]  final  double[]  resultSet  =  new  double[pointSet.size()  -  1];  [CE]  variable  resultSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  resultSet  =  new  double[pointSet.size()  -  1];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  resultSet  =  new  double[pointSet.size()  -  1];	  final    double[]    resultSet    =    new    double[pointSet.size()    ];    	non-compiled	[CE]  variable  resultSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	60	None	replace
144	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(dx2)+  k;  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  resultSet.get(dx2)+  k;  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  resultSet.get(dx2)+  k;	  final    double[]    pointSet    =    resultSet.get(dx2);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	12	None	replace
145	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(dx2)+  1;  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  resultSet.get(dx2)+  1;  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  resultSet.get(dx2)+  1;	  final    double[]    pointSet    =    resultSet.get(dx2);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	12	None	replace
146	[BUG]  [BUGGY]  final  double[]  pointSet  =(double[])resultSet.get(2);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =(double[])resultSet.get(2);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =(double[])resultSet.get(2);	  final    double[]    pointSet    =(double[])resultSet.get(1);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	57	None	replace
147	[BUG]  [BUGGY]  final  double  sum  =  0  +  resultSet.size();  [CE]  cannot  assign  a  value  to  final  variable  sum  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  sum  =  0  +  resultSet.size();  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  sum  =  0  +  resultSet.size();	  final    double    sum    =    0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  sum	27	None	replace
148	[BUG]  [BUGGY]  final  int  pointSet  =  new  int[pointSet.size()  ];  while(pointSet.size()  <  k)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  new  int[pointSet.size()  ];  while(pointSet.size()  <  k)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  new  int[pointSet.size()  ];  while(pointSet.size()  <  k)  {	  final    double[]    resultSet    =    new    double[pointSet.size()    ];    while(resultSet.size()    <    k)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
149	[BUG]  [BUGGY]  final  int  pointSet  =  dx2.length.size()  -  2;  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  dx2.length.size()  -  2;  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  dx2.length.size()  -  2;	  final    int    pointSet    =    dx2.length.size();    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	3	None	replace
150	[BUG]  [BUGGY]  final  double[]  pointSet  =  dx2.get(resultSet.get(k);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  dx2.get(resultSet.get(k);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  dx2.get(resultSet.get(k);	  final    double[]    pointSet    =    dx2.get(k);    	non-compiled	[CE]  ')'  expected	13	None	replace
151	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  k,  resultSet);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  k,  resultSet);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(resultSet,  k,  resultSet);	  final    double    d    =    getNearestCluster(pointSet,    resultSet,    k);    	non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;	37	None	replace
152	[BUG]  [BUGGY]  final  double[]  pointSet2  =  new  double[ResultSet.size()  ];  [CE]  cannot  find  symbol  ResultSet  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet2  =  new  double[ResultSet.size()  ];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet2  =  new  double[ResultSet.size()  ];	  final    double[]    pointSet2    =    new    double[pointSet.size()    ];    	non-compiled	[CE]  cannot  find  symbol  ResultSet	8	None	replace
153	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  resultSet,  dx2);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  resultSet,  dx2);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(resultSet,  resultSet,  dx2);	  final    double    d    =    getNearestCluster(resultSet,    dx2,    resultSet);    	non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;	16	None	replace
154	[BUG]  [BUGGY]  final  int  pointSet  =  resultSet.get(k  +  1  -  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  resultSet.get(k  +  1  -  1);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  resultSet.get(k  +  1  -  1);	  final    int    pointSet    =    resultSet.get(k    +    1);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	63	None	replace
155	[BUG]  [BUGGY]  final  int  pointSet  =  resultSet.get(k  /  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  resultSet.get(k  /  1);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  resultSet.get(k  /  1);	  final    int    pointSet    =    resultSet.get(k    +    1);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	63	None	replace
156	[BUG]  [BUGGY]  final  int  pointSet  =  resultSet.get(k  -  1  -  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  resultSet.get(k  -  1  -  1);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  resultSet.get(k  -  1  -  1);	  final    int    pointSet    =    resultSet.get(k    -    1);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	26	None	replace
157	[BUG]  [BUGGY]  final  int  pointSet  =  resultsSet.get(k  -  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                        AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  resultsSet.get(k  -  1);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  resultsSet.get(k  -  1);	  final    int    pointSet    =    resultSet.get(k    -    1);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	26	None	replace
158	[BUG]  [BUGGY]  final  int  pointSet  =  resultsSet.size();  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  resultsSet.size();  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  resultsSet.size();	  final    int    pointSet    =    resultSet.size()    -    1;    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	4	None	replace
159	[BUG]  [BUGGY]  final  int  sum  =  resultSet.length;  [CE]  cannot  find  symbol  length  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  sum  =  resultSet.length;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  sum  =  resultSet.length;	  final    int    sum    =    k;    	non-compiled	[CE]  cannot  find  symbol  length	29	None	replace
160	[BUG]  [BUGGY]  String  sum  =  0;  final  String  sum  =  0;  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  String  sum  =  0;  final  String  sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	String  sum  =  0;  final  String  sum  =  0;	  char    sum    =    0;    final    char    sum    =    0;    	non-compiled	[CE]  incompatible  types	19	None	replace
161	[BUG]  [BUGGY]  final  String  sum  =  0,  char  sum  =  0;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  String  sum  =  0,  char  sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  String  sum  =  0,  char  sum  =  0;	  char    sum    =    0;    final    char    sum    =    0;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
162	[BUG]  [BUGGY]  final  static  double  d  =  getNearestCluster(resultSet,  pointSet);  [CE]  modifier  static  not  allowed  here  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  static  double  d  =  getNearestCluster(resultSet,  pointSet);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  static  double  d  =  getNearestCluster(resultSet,  pointSet);	  final    double    d    =    getNearestCluster(pointSet,    resultSet);    	non-compiled	[CE]  modifier  static  not  allowed  here	55	None	replace
163	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  dx2,  resultSet);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  dx2,  resultSet);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  getPoint(resultSet,  dx2,  resultSet);	  final    Point    <    T>    pointSet    =    getPoint(resultSet,    dx2);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
164	[BUG]  [BUGGY]  final  int  pointSet  =  resultSet.get(dx2)+  1;  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  resultSet.get(dx2)+  1;  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  resultSet.get(dx2)+  1;	  final    int    pointSet    =    resultSet.get(dx2);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	23	None	replace
165	[BUG]  [BUGGY]  final  int  pointSet  =  resultSet.get(dx2,  k);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  resultSet.get(dx2,  k);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  resultSet.get(dx2,  k);	  final    int    pointSet    =    resultSet.get(dx2);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	23	None	replace
166	[BUG]  [BUGGY]  final  int  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {	  final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
167	[BUG]  [BUGGY]  final  double[]  resultSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  resultSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  resultSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {	  final    double[]    dx2    =    new    double[resultSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
168	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(pointSet,  resultSet,  dx2,  k);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  d  =  getNearestCluster(pointSet,  resultSet,  dx2,  k);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(pointSet,  resultSet,  dx2,  k);	  final    double    d    =    getNearestCluster(resultSet,    dx2,    k);    	non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;	36	None	replace
169	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dx2,  k,  resultSet);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dx2,  k,  resultSet);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(resultSet,  dx2,  k,  resultSet);	  final    double    d    =    getNearestCluster(resultSet,    dx2,    k);    	non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;	36	None	replace
170	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  /  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  /  1);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  resultSet.get(k  /  1);	  final    double[]    pointSet    =    resultSet.get(k    +    1);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	14	None	replace
171	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  +  2);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  +  2);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  resultSet.get(k  +  2);	  final    double[]    pointSet    =    resultSet.get(k    +    1);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	14	None	replace
172	[BUG]  [BUGGY]  final  int  pointSet  =  new  double[pointSet.size()  ];  while(pointSet.size()  <  k)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  new  double[pointSet.size()  ];  while(pointSet.size()  <  k)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  new  double[pointSet.size()  ];  while(pointSet.size()  <  k)  {	  final    double[]    pointSet    =    new    double[pointSet.size()    ];    while(pointSet.size()    <    k)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
173	[BUG]  [BUGGY]  final  int  pointSet  =  results.get(k);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  results.get(k);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  results.get(k);	  final    int    pointSet    =    points.get(k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	24	None	replace
174	[BUG]  [BUGGY]  final  int  pointSet  =  getPoints().get(k);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  getPoints().get(k);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  getPoints().get(k);	  final    int    pointSet    =    points.get(k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	24	None	replace
175	[BUG]  [BUGGY]  final  int  pointSet  =  data.get(k);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  data.get(k);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  data.get(k);	  final    int    pointSet    =    points.get(k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	24	None	replace
176	[BUG]  [BUGGY]  Char  sum  =(k  ==  0)?  dx2  :  0;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  Char  sum  =(k  ==  0)?  dx2  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	Char  sum  =(k  ==  0)?  dx2  :  0;	  Char    sum    =    0;    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
177	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  k.get(pointSet);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  Point  <  T>  pointSet  =  k.get(pointSet);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  k.get(pointSet);	  final    Point    <    T>    pointSet    =    pointSet.get(k);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
178	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  data.get(k);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  Point  <  T>  pointSet  =  data.get(k);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  data.get(k);	  final    Point    <    T>    pointSet    =    pointSet.get(k);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
179	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  array.get(pointSet);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  Point  <  T>  pointSet  =  array.get(pointSet);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  array.get(pointSet);	  final    Point    <    T>    pointSet    =    array.get(k);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
180	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  +  k  *  k  ];  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  +  k  *  k  ];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  +  k  *  k  ];	  final    double[]    pointSet    =    new    double[resultSet.size()    +    k    ];    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	64	None	replace
181	[BUG]  [BUGGY]  final  int  sum  =(dx2  <  dx2.length)?  0  :  dx.length;  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  sum  =(dx2  <  dx2.length)?  0  :  dx.length;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  sum  =(dx2  <  dx2.length)?  0  :  dx.length;	  final    int    sum    =(k    <    dx2.length)?    0    :    k;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	66	None	replace
182	[BUG]  [BUGGY]  final  int  sum  =(dx2  <  dx2.length)?  0  :  dx1.length;  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  sum  =(dx2  <  dx2.length)?  0  :  dx1.length;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  sum  =(dx2  <  dx2.length)?  0  :  dx1.length;	  final    int    sum    =(k    <    dx2.length)?    0    :    k;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	66	None	replace
183	[BUG]  [BUGGY]  final  int  sum  =(resultSet.length  <  k2)?  0  :  k;  [CE]  cannot  find  symbol  length  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  sum  =(resultSet.length  <  k2)?  0  :  k;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  sum  =(resultSet.length  <  k2)?  0  :  k;	  final    int    sum    =(k    <    dx2.length)?    0    :    k;    	non-compiled	[CE]  cannot  find  symbol  length	66	None	replace
184	[BUG]  [BUGGY]  Char  sum  =  0;  Character  sum  =  0;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  Char  sum  =  0;  Character  sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	Char  sum  =  0;  Character  sum  =  0;	  char    sum    =    0;    Character    sum    =    0;    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
185	[BUG]  [BUGGY]  final  int  pointSet  =  this.resultSet.get(i);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  this.resultSet.get(i);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  this.resultSet.get(i);	  final    int    pointSet    =    resultSet.get(i);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	25	None	replace
186	[BUG]  [BUGGY]  final  double[]  points  =  new  double[dx2.length.size()  ];  [CE]  variable  points  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  points  =  new  double[dx2.length.size()  ];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  points  =  new  double[dx2.length.size()  ];	  final    double[]    points    =    new    double[resultSet.size()    ];    	non-compiled	[CE]  variable  points  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	49	None	replace
187	[BUG]  [BUGGY]  String  sum  =  0,  char  sum  =  0;  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  String  sum  =  0,  char  sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	String  sum  =  0,  char  sum  =  0;	  char    sum    =    0;    char    sum    =    0;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
188	[BUG]  [BUGGY]  String  sum  =  0;  short  sum  =  0;  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  String  sum  =  0;  short  sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	String  sum  =  0;  short  sum  =  0;	  char    sum    =    0;    char    sum    =    0;    	non-compiled	[CE]  incompatible  types	18	None	replace
189	[BUG]  [BUGGY]  final  int  pointSet  =  resultSet.get(dx2  -  dx2.length);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  resultSet.get(dx2  -  dx2.length);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  resultSet.get(dx2  -  dx2.length);	  final    int    pointSet    =    resultSet.get(dx2    -    k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	52	None	replace
190	[BUG]  [BUGGY]  final  double[]  resultSet  =  new  double[dx2.length.size()  ];  [CE]  variable  resultSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  resultSet  =  new  double[dx2.length.size()  ];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  resultSet  =  new  double[dx2.length.size()  ];	  final    double[]    resultSet    =    new    double[resultSet.size()    ];    	non-compiled	[CE]  variable  resultSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	31	None	replace
191	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultsSet.get(k  -  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  resultsSet.get(k  -  1);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  resultsSet.get(k  -  1);	  final    double[]    pointSet    =    resultSet.get(k    -    1);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	48	None	replace
192	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  -  2);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  -  2);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  resultSet.get(k  -  2);	  final    double[]    pointSet    =    resultSet.get(k    -    1);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	48	None	replace
193	[BUG]  [BUGGY]  final  int  pointSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  k)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  k)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  k)  {	  final    double[]    pointSet    =    new    double[pointSet.size()    ];    while(resultSet.size()    <    k)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
194	[BUG]  [BUGGY]  final  double[]  pointSet  =(double[])pointSet.get(k);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =(double[])pointSet.get(k);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =(double[])pointSet.get(k);	  final    double[]    pointSet    =(double[])resultSet.get(k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	10	None	replace
195	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  kx2);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  kx2);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  getPoint(resultSet,  kx2);	  final    Point    <    T>    pointSet    =    getPoint(resultSet,    k);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
196	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(dx2)-  1;  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  resultSet.get(dx2)-  1;  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  resultSet.get(dx2)-  1;	  final    double[]    pointSet    =    resultSet.get(dx2);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	12	None	replace
197	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(dx2  -  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  resultSet.get(dx2  -  1);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  resultSet.get(dx2  -  1);	  final    double[]    pointSet    =    resultSet.get(dx2);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	12	None	replace
198	[BUG]  [BUGGY]  final  String  sum  =  0,  k  =  0;  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  String  sum  =  0,  k  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  String  sum  =  0,  k  =  0;	  char    sum    =    0;    final    char    sum    =    0;    	non-compiled	[CE]  incompatible  types	19	None	replace
199	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  +  dx2.size()  ];  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  +  dx2.size()  ];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  +  dx2.size()  ];	  final    double[]    pointSet    =    new    double[dx2.size()    ];    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	41	None	replace
200	[BUG]  [BUGGY]  final  double[]  pointSet2  =  new  double[resultSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet2  =  new  double[resultSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet2  =  new  double[resultSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {	  final    double[]    pointSet2    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
201	[BUG]  [BUGGY]  final  double  sum  =(dx2  <  dx2.length)?  0  :  k;  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  sum  =(dx2  <  dx2.length)?  0  :  k;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  sum  =(dx2  <  dx2.length)?  0  :  k;	  final    int    sum    =(k    <    dx2.length)?    0    :    k;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	66	None	replace
202	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dx2,  dx2.length);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dx2,  dx2.length);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(resultSet,  dx2,  dx2.length);	  final    double    d    =    getNearestCluster(resultSet,    dx2,    k);    	non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;	36	None	replace
203	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  index);  [CE]  cannot  find  symbol  index  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  index);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(resultSet,  index);	  final    double    d    =    getNearestCluster(pointSet,    resultSet);    	non-compiled	[CE]  cannot  find  symbol  index	55	None	replace
204	[BUG]  [BUGGY]  String  sum  =  0;  character  sum  =  0;  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  String  sum  =  0;  character  sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	String  sum  =  0;  character  sum  =  0;	  char    sum    =    0;    Character    sum    =    0;    	non-compiled	[CE]  incompatible  types	22	None	replace
205	[BUG]  [BUGGY]  Char  sum  =  0x3f;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  Char  sum  =  0x3f;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	Char  sum  =  0x3f;	  Char    sum    =    0;    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
206	[BUG]  [BUGGY]  Char  sum  =  0L;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  Char  sum  =  0L;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	Char  sum  =  0L;	  Char    sum    =    0;    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
207	[BUG]  [BUGGY]  final  Char  sum  =  0;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  Char  sum  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Char  sum  =  0;	  Char    sum    =    0;    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
208	[BUG]  [BUGGY]  final  double[]  pointSet  =(double[])resultSet.get(k  +  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =(double[])resultSet.get(k  +  1);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =(double[])resultSet.get(k  +  1);	  final    double[]    pointSet    =(double[])resultSet.get(k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	10	None	replace
209	[BUG]  [BUGGY]  final  int  pointSet  =  resultSet.get(i  -  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  resultSet.get(i  -  1);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  resultSet.get(i  -  1);	  final    int    pointSet    =    resultSet.get(k    -    1);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	26	None	replace
210	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(dx2,  resultSet,  resultSet);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  d  =  getNearestCluster(dx2,  resultSet,  resultSet);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(dx2,  resultSet,  resultSet);	  final    double    d    =    getNearestCluster(dx2,    resultSet);    	non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;	17	None	replace
211	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  2)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  2)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  2)  {	  final    double[]    pointSet    =    new    double[pointSet.size()    ];    while(resultSet.size()    <    k)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
212	[BUG]  [BUGGY]  final  int  pointSet  =  resultSet.get(k  +  2);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  resultSet.get(k  +  2);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  resultSet.get(k  +  2);	  final    int    pointSet    =    resultSet.get(k    +    1);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	63	None	replace
213	[BUG]  [BUGGY]  final  double[]  pointSet  =(double[])this.resultSet.get(k);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                        AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =(double[])this.resultSet.get(k);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =(double[])this.resultSet.get(k);	  final    double[]    pointSet    =(double[])this.resultSet.get(0);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	11	None	replace
214	[BUG]  [BUGGY]  final  double[]  points  =  new  double[resultSet.size()  +  1];  [CE]  variable  points  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  points  =  new  double[resultSet.size()  +  1];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  points  =  new  double[resultSet.size()  +  1];	  final    double[]    points    =    new    double[resultSet.size()    ];    	non-compiled	[CE]  variable  points  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	49	None	replace
215	[BUG]  [BUGGY]  final  double[]  points  =  new  double[resultSet.size()  +  k  ];  [CE]  variable  points  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  points  =  new  double[resultSet.size()  +  k  ];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  points  =  new  double[resultSet.size()  +  k  ];	  final    double[]    points    =    new    double[resultSet.size()    ];    	non-compiled	[CE]  variable  points  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	49	None	replace
216	[BUG]  [BUGGY]  final  int  pointSet  =  resultSet.get(resultSet.size()  -  k);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  resultSet.get(resultSet.size()  -  k);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  resultSet.get(resultSet.size()  -  k);	  final    int    pointSet    =    resultSet.get(dx2    -    k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	52	None	replace
217	[BUG]  [BUGGY]  String  sum  =  0,  0;  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  String  sum  =  0,  0;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	String  sum  =  0,  0;	  char    sum    =    0;    char    sum    =    0;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
218	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {	  final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
219	[BUG]  [BUGGY]  final  double[]  resultSet  =  new  double[dx2.length  ];  while(resultSet.size()  <  k)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  resultSet  =  new  double[dx2.length  ];  while(resultSet.size()  <  k)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  resultSet  =  new  double[dx2.length  ];  while(resultSet.size()  <  k)  {	  final    double[]    resultSet    =    new    double[pointSet.size()    ];    while(resultSet.size()    <    k)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
220	[BUG]  [BUGGY]  final  double[]  resultSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  2)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  resultSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  2)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  resultSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  2)  {	  final    double[]    resultSet    =    new    double[pointSet.size()    ];    while(resultSet.size()    <    k)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
221	[BUG]  [BUGGY]  final  double[]  points2  =  new  double[resultSet.size()  ];  [CE]  cannot  find  symbol  sum  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  points2  =  new  double[resultSet.size()  ];  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  points2  =  new  double[resultSet.size()  ];	  final    double[]    pointSet2    =    new    double[pointSet.size()    ];    	non-compiled	[CE]  cannot  find  symbol  sum	8	None	replace
222	[BUG]  [BUGGY]  final  int  pointSet  =  resultSet.get(dx2)-  1;  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  int  pointSet  =  resultSet.get(dx2)-  1;  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  resultSet.get(dx2)-  1;	  final    int    pointSet    =    resultSet.get(dx2);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	23	None	replace
223	[BUG]  [BUGGY]  final  double  sum  =(k  >  0)?  1  :  0;  [CE]  cannot  assign  a  value  to  final  variable  sum  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double  sum  =(k  >  0)?  1  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  sum  =(k  >  0)?  1  :  0;	  final    double    sum    =    0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  sum	27	None	replace
224	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  *  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  *  1);  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  resultSet.get(k  *  1);	  final    double[]    pointSet    =    resultSet.get(k    -    1);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	48	None	replace
225	[BUG]  [BUGGY]  final  double[]  resultSet2  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {        [BUGGY]  final  double[]  resultSet2  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  resultSet2  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {	  final    double[]    dx2    =    new    double[resultSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
