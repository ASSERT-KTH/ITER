projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[pointSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]dx2=newdouble[pointSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]dx2=newdouble[pointSet.size()];while(resultSet.size()<k){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]dx2=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=(double[])resultSet.get(0);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175intsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175doublesum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175floatsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.size();
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=resultSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=getPoint(resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175charsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]dx2=newdouble[resultSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(resultSet,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(resultSet,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=resultSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=dx2.length;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=dx2.size();
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=dx2.length.size();
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.size()-1;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet2=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]dx2=newdouble[resultSet.size()];for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet2=newdouble[pointSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=(double[])dx2.get(0);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=(double[])resultSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=(double[])this.resultSet.get(0);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=resultSet.get(dx2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=dx2.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=resultSet.get(k+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(resultSet,dx2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(resultSet,dx2,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(dx2,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175charsum=0;charsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175charsum=0;finalcharsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175charsum=0;Charsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175charsum=0;Stringsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175charsum=0;Charactersum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.get(dx2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=points.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.get(k-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoublesum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintsum=1;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintsum=k;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[resultSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]resultSet=newdouble[resultSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]resultSet2=newdouble[resultSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175Stringsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175Charsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(dx2,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(resultSet,dx2,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(pointSet,resultSet,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[pointSet.size()];while(resultSet.size()<k){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[pointSet.size()];while(pointSet.size()<k){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]dx2=newdouble[pointSet.size()+1];while(resultSet.size()<k){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[dx2.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=getPoint(resultSet,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=getPoint(resultSet,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=getPoint(pointSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=points.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=pointSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=dx2.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=resultSet.get(k-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]points=newdouble[resultSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[ResultSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]resultSet=newdouble[pointSet.size()];while(resultSet.size()<k){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.get(dx2-k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.size()-2;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=this.resultSet.size();
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(pointSet,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=(double[])resultSet.get(k-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=(double[])resultSet.get(1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=array.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=results.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]resultSet=newdouble[pointSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet2=newdouble[resultSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[resultSet.size()];for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.get(k+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[resultSet.size()+k];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=getPoint(resultSet,dx2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintsum=(k<dx2.length)?0:k;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=dx2.length-1;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=points.size()-1;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=array.get(dx2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=array.get(resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(pointSet,resultSet,dx2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=getPoint(pointSet,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=getPoint(resultSet,resultSet.size());
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet2=newdouble[pointSet.size()];while(resultSet.size()<k){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=(double[])dx2.get(k-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=(double[])pointSet.get(k-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=(double[])resultSet.get(k-1+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalStringsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalcharsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=points.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=dx2.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=pointSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175Stringsum=0;Charsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175Stringsum=0;Stringsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175Stringsum=0;Booleansum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=(double[])resultSet.get(dx2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=(double[])dx2.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=dx2.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=this.points.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175Stringsum=0;Charactersum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175Charactersum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175doublesum=0;Charactersum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175StringSum=0;Charactersum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(dx2,resultSet,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(resultSet,dx2,p);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(resultSet,k,dx2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(dx2,resultsSet,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=points.get(k-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=dx2.get(k-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.get(k-1+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoublepointSet=dx2.length;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=dx2.length-2;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=dx2.length+1;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]resultSet=newdouble[pointSet.size()];while(resultSet.size()<dx2){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]resultSet=newdouble[pointSet.size()];while(resultSet.size()<0){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]resultSet=newdouble[pointSet.size()+1];while(resultSet.size()<k){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintsum=(resultSet.length()<dx2.length)?0:k;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintsum=(dx2<dx2.length)?0:dx2.length;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintsum=(dx2.length<k)?0:dx2.length;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintsum=(dx2.length<2)?0:dx2.length;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175Charsum=(char)resultSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175Charsum=(char)resultSet.get(0);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175Charsum=dx2.length;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=getPoint(resultSet,dx2,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=results.get(dx2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(dx2,resultSet,pointSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(dx2,k,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(dx2,dx2.length);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(dx2,p,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=dx2.length-k;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=dx2.length.size()+1;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=dx2.length.size()-1;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoublesum=k;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintsum=pointSet.size();
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintsum=resultSet.size();
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintsum=dx2.length;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=this.resultSet.size()-1;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=this.resultSet.size()-2;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175StringSum=0;Stringsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175Stringsum=0,sum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175Stringsum=0;this.charsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=points.get(k+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=dx2.get(k+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[resultSet.size()];while(pointSet.size()<k){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[pointSet.size()+1];while(pointSet.size()<k){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=dx2.get(resultSet.get(k-dx2));
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=points.get(dx2-k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.get(k-dx2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.get(dx2-k+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=getPoint(pointSet.size());
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=getPoint(dx2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=dx2.get(resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=this.resultSet.get(dx2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[pointSet.size()+1];for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet2=newdouble[resultSet.size()];for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet2=newdouble[pointSet.size()+1];for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet2=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=(double[])dx2.get(1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=dx2.get(resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=this.resultSet.get(dx2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[dx2.size()+1];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoublesum=1;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoublesum=dx2.length;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=points.get(dx2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=points.get(resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]resultSet=newdouble[dx2.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]resultSet=newdouble[resultSet.size()+1];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(resultSet,dx2,resultSet,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(resultSet,dx2,pointSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalint[]pointSet=newint[pointSet.size()];for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalint[]pointSet=newint[resultSet.size()];for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[pointSet.size()+k];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[resultSet.size()+dx2];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[resultSet.size()+k-1];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[dx2.size()+k];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet2=newdouble[resultSet.size()+k];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet2=newdouble[resultSet.size()+1];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175StringSum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175Stringsum=null;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175Stringsum=0.0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=dx2.get(resultSet.size());
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=dx2.get(resultSet,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=dx2.get(resultSet.get(k));
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]points=newdouble[pointSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]points=newdouble[dx2.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]points=newdouble[points.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(resultSet,pointSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(resultSet,points);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(pointSet,dx2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[pointSet.size()];while(resultSet.size()<dx2){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[pointSet.size()+1];while(resultSet.size()<k){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[pointSet.size()];while(resultSet.size()<0){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[resultSet.size()+1];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=getPoint(dx2,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=dx2.get(k-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=points.get(k-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=resultSet.get(k-1+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(resultSet,k,p);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(resultSet,k,pointSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet2=newdouble[redx2.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet2=newdouble[pointSet.size()+1];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175Stringsum=dx2.length;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]resultSet2=newdouble[pointSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]resultSet2=newdouble[resultSet.size()+k];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]resultSet2=newdouble[resultSet.size()+1];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=dx2.get(k+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=points.get(k+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=dx2.get(resultSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=dx2.get(resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=dx2.get(resultSet.size());
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalint[]dx2=newint[pointSet.size()];for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=dx2.length();
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoublepointSet=dx2.size();
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=dx2.size()-1;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=dx2.size()-2;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=(double[])dx2.resultSet.get(0);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.length;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]resultSet=newdouble[pointSet.size()-1];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=resultSet.get(dx2)+k;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=resultSet.get(dx2)+1;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=(double[])resultSet.get(2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoublesum=0+resultSet.size();
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=newint[pointSet.size()];while(pointSet.size()<k){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=dx2.length.size()-2;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=dx2.get(resultSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(resultSet,k,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet2=newdouble[ResultSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(resultSet,resultSet,dx2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.get(k+1-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.get(k/1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.get(k-1-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultsSet.get(k-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultsSet.size();
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintsum=resultSet.length;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175Stringsum=0;finalStringsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalStringsum=0,charsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalstaticdoubled=getNearestCluster(resultSet,pointSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=getPoint(resultSet,dx2,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.get(dx2)+1;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.get(dx2,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=newdouble[resultSet.size()];for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]resultSet=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(pointSet,resultSet,dx2,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(resultSet,dx2,k,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=resultSet.get(k/1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=resultSet.get(k+2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=newdouble[pointSet.size()];while(pointSet.size()<k){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=results.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=getPoints().get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=data.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175Charsum=(k==0)?dx2:0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=k.get(pointSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=data.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=array.get(pointSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[resultSet.size()+k*k];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintsum=(dx2<dx2.length)?0:dx.length;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintsum=(dx2<dx2.length)?0:dx1.length;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintsum=(resultSet.length<k2)?0:k;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175Charsum=0;Charactersum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=this.resultSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]points=newdouble[dx2.length.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175Stringsum=0,charsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175Stringsum=0;shortsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.get(dx2-dx2.length);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]resultSet=newdouble[dx2.length.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=resultsSet.get(k-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=resultSet.get(k-2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=newdouble[pointSet.size()];while(resultSet.size()<k){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=(double[])pointSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalPoint<T>pointSet=getPoint(resultSet,kx2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=resultSet.get(dx2)-1;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=resultSet.get(dx2-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalStringsum=0,k=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[resultSet.size()+dx2.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet2=newdouble[resultSet.size()+1];for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoublesum=(dx2<dx2.length)?0:k;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(resultSet,dx2,dx2.length);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(resultSet,index);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175Stringsum=0;charactersum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175Charsum=0x3f;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175Charsum=0L;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalCharsum=0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=(double[])resultSet.get(k+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.get(i-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoubled=getNearestCluster(dx2,resultSet,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[pointSet.size()];while(resultSet.size()<2){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.get(k+2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=(double[])this.resultSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]points=newdouble[resultSet.size()+1];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]points=newdouble[resultSet.size()+k];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.get(resultSet.size()-k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175Stringsum=0,0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=newdouble[resultSet.size()+1];for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]resultSet=newdouble[dx2.length];while(resultSet.size()<k){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]resultSet=newdouble[pointSet.size()];while(resultSet.size()<2){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]points2=newdouble[resultSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finalintpointSet=resultSet.get(dx2)-1;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldoublesum=(k>0)?1:0;
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]pointSet=resultSet.get(k*1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java175finaldouble[]resultSet2=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){
