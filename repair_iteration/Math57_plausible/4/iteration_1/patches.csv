bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  int  pointSet  =  dx2.length;  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]        AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  int  pointSet  =  dx2.length;  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  dx2.length;	      final    int    pointSet    =    resultSet.size();    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	7	None	replace
2	[BUG]  [BUGGY]  final  int  pointSet  =  dx2.size();  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]          AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  int  pointSet  =  dx2.size();  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  dx2.size();	      final    int    pointSet    =    resultSet.size();    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	7	None	replace
3	[BUG]  [BUGGY]  final  int  pointSet  =  dx2.length.size();  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]            AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  int  pointSet  =  dx2.length.size();  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  dx2.length.size();	      final    int    pointSet    =    resultSet.size();    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	7	None	replace
4	[BUG]  [BUGGY]  final  int  pointSet  =  resultSet.size()  -  1;  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]              AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  int  pointSet  =  resultSet.size()  -  1;  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  resultSet.size()  -  1;	      final    int    pointSet    =    resultSet.size();    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	7	None	replace
5	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {	      final    double[]    dx2    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
6	[BUG]  [BUGGY]  final  double[]  pointSet2  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  pointSet2  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet2  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {	      final    double[]    dx2    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
7	[BUG]  [BUGGY]  final  double[]  dx2  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  dx2  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  dx2  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {	      final    double[]    dx2    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
8	[BUG]  [BUGGY]  final  double[]  pointSet2  =  new  double[pointSet.size()  ];  [CE]  cannot  find  symbol  sum  [FE]          AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  pointSet2  =  new  double[pointSet.size()  ];  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet2  =  new  double[pointSet.size()  ];	      final    double[]    dx2    =    new    double[pointSet.size()    ];    	non-compiled	[CE]  cannot  find  symbol  sum	2	None	replace
9	[BUG]  [BUGGY]  final  double[]  pointSet  =(double[])dx2.get(0);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  pointSet  =(double[])dx2.get(0);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =(double[])dx2.get(0);	      final    double[]    pointSet    =(double[])resultSet.get(0);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	5	None	replace
10	[BUG]  [BUGGY]  final  double[]  pointSet  =(double[])resultSet.get(k);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                  AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  pointSet  =(double[])resultSet.get(k);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =(double[])resultSet.get(k);	      final    double[]    pointSet    =(double[])resultSet.get(0);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	5	None	replace
11	[BUG]  [BUGGY]  final  double[]  pointSet  =(double[])this.resultSet.get(0);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                    AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  pointSet  =(double[])this.resultSet.get(0);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =(double[])this.resultSet.get(0);	      final    double[]    pointSet    =(double[])resultSet.get(0);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	5	None	replace
12	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(dx2);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]          AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  pointSet  =  resultSet.get(dx2);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  resultSet.get(dx2);	      final    double[]    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	8	None	replace
13	[BUG]  [BUGGY]  final  double[]  pointSet  =  dx2.get(k);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]            AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  pointSet  =  dx2.get(k);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  dx2.get(k);	      final    double[]    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	8	None	replace
14	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  +  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]              AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  +  1);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  resultSet.get(k  +  1);	      final    double[]    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	8	None	replace
15	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dx2);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dx2);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(resultSet,  dx2);	      final    double    d    =    getNearestCluster(resultSet,    resultSet);    	non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;	14	None	replace
16	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dx2,  resultSet);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dx2,  resultSet);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(resultSet,  dx2,  resultSet);	      final    double    d    =    getNearestCluster(resultSet,    resultSet);    	non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;	14	None	replace
17	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(dx2,  resultSet);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;  [FE]              AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double  d  =  getNearestCluster(dx2,  resultSet);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(dx2,  resultSet);	      final    double    d    =    getNearestCluster(resultSet,    resultSet);    	non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;	14	None	replace
18	[BUG]  [BUGGY]  char  sum  =  0;  char  sum  =  0;  [CE]  variable  sum  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]    AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  char  sum  =  0;  char  sum  =  0;  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	char    sum    =    0;    char  sum  =  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	11	None	add
19	[BUG]  [BUGGY]  char  sum  =  0;  final  char  sum  =  0;  [CE]  variable  sum  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]      AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  char  sum  =  0;  final  char  sum  =  0;  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	char    sum    =    0;    final  char  sum  =  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	11	None	add
20	[BUG]  [BUGGY]  char  sum  =  0;  Char  sum  =  0;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  char  sum  =  0;  Char  sum  =  0;  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	char    sum    =    0;    Char  sum  =  0;	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
21	[BUG]  [BUGGY]  char  sum  =  0;  String  sum  =  0;  [CE]  variable  sum  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]          AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  char  sum  =  0;  String  sum  =  0;  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	char    sum    =    0;    String  sum  =  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	11	None	add
22	[BUG]  [BUGGY]  char  sum  =  0;  Character  sum  =  0;  [CE]  variable  sum  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]            AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  char  sum  =  0;  Character  sum  =  0;  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	char    sum    =    0;    Character  sum  =  0;	  	non-compiled	[CE]  variable  sum  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	11	None	add
23	[BUG]  [BUGGY]  final  int  pointSet  =  resultSet.get(dx2);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]            AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  int  pointSet  =  resultSet.get(dx2);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  resultSet.get(dx2);	      final    int    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	9	None	replace
24	[BUG]  [BUGGY]  final  int  pointSet  =  points.get(k);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]              AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  int  pointSet  =  points.get(k);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  points.get(k);	      final    int    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	9	None	replace
25	[BUG]  [BUGGY]  final  int  pointSet  =  resultSet.get(i);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  int  pointSet  =  resultSet.get(i);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  resultSet.get(i);	      final    int    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	9	None	replace
26	[BUG]  [BUGGY]  final  int  pointSet  =  resultSet.get(k  -  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                  AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  int  pointSet  =  resultSet.get(k  -  1);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  resultSet.get(k  -  1);	      final    int    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	9	None	replace
27	[BUG]  [BUGGY]  final  double  sum  =  0;  [CE]  cannot  assign  a  value  to  final  variable  sum  [FE]            AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double  sum  =  0;  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  sum  =  0;	  final    int    sum    =    0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  sum	6	None	replace
28	[BUG]  [BUGGY]  final  int  sum  =  1;  [CE]  cannot  assign  a  value  to  final  variable  sum  [FE]              AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  int  sum  =  1;  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  sum  =  1;	  final    int    sum    =    0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  sum	6	None	replace
29	[BUG]  [BUGGY]  final  int  sum  =  k;  [CE]  cannot  assign  a  value  to  final  variable  sum  [FE]                AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  int  sum  =  k;  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  sum  =  k;	  final    int    sum    =    0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  sum	6	None	replace
30	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]        AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  ];	      final    double[]    dx2    =    new    double[resultSet.size()    ];    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	13	None	replace
31	[BUG]  [BUGGY]  final  double[]  resultSet  =  new  double[resultSet.size()  ];  [CE]  variable  resultSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]          AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  resultSet  =  new  double[resultSet.size()  ];  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  resultSet  =  new  double[resultSet.size()  ];	      final    double[]    dx2    =    new    double[resultSet.size()    ];    	non-compiled	[CE]  variable  resultSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	13	None	replace
32	[BUG]  [BUGGY]  final  double[]  resultSet2  =  new  double[resultSet.size()  ];  [CE]  cannot  find  symbol  sum  [FE]            AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  resultSet2  =  new  double[resultSet.size()  ];  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  resultSet2  =  new  double[resultSet.size()  ];	      final    double[]    dx2    =    new    double[resultSet.size()    ];    	non-compiled	[CE]  cannot  find  symbol  sum	13	None	replace
33	[BUG]  [BUGGY]  String  sum  =  0;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  String  sum  =  0;  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	String  sum  =  0;	  char    sum    =    0;    	non-compiled	[CE]  incompatible  types	12	None	replace
34	[BUG]  [BUGGY]  Char  sum  =  0;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  Char  sum  =  0;  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	Char  sum  =  0;	  char    sum    =    0;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
35	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(dx2,  k);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#2>  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double  d  =  getNearestCluster(dx2,  k);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(dx2,  k);	      final    double    d    =    getNearestCluster(resultSet,    k);    	non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#2>  cannot  be  applied  to  given  types;	15	None	replace
36	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dx2,  k);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;  [FE]              AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dx2,  k);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(resultSet,  dx2,  k);	      final    double    d    =    getNearestCluster(resultSet,    k);    	non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;	15	None	replace
37	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(pointSet,  resultSet,  k);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;  [FE]                AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double  d  =  getNearestCluster(pointSet,  resultSet,  k);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(pointSet,  resultSet,  k);	      final    double    d    =    getNearestCluster(resultSet,    k);    	non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;	15	None	replace
38	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  k)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  k)  {  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  k)  {	      final    double[]    dx2    =    new    double[pointSet.size()    ];    while(resultSet.size()    <    k)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
39	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  ];  while(pointSet.size()  <  k)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  ];  while(pointSet.size()  <  k)  {  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  new  double[pointSet.size()  ];  while(pointSet.size()  <  k)  {	      final    double[]    dx2    =    new    double[pointSet.size()    ];    while(resultSet.size()    <    k)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
40	[BUG]  [BUGGY]  final  double[]  dx2  =  new  double[pointSet.size()  +  1];  while(resultSet.size()  <  k)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  dx2  =  new  double[pointSet.size()  +  1];  while(resultSet.size()  <  k)  {  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  dx2  =  new  double[pointSet.size()  +  1];  while(resultSet.size()  <  k)  {	      final    double[]    dx2    =    new    double[pointSet.size()    ];    while(resultSet.size()    <    k)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
41	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[dx2.size()  ];  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]        AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  pointSet  =  new  double[dx2.size()  ];  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  new  double[dx2.size()  ];	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	1	None	replace
42	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  k);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  k);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  getPoint(resultSet,  k);	      final    Point    <    T>    pointSet    =    getPoint(resultSet);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
43	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  resultSet);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  resultSet);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  getPoint(resultSet,  resultSet);	      final    Point    <    T>    pointSet    =    getPoint(resultSet);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
44	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(pointSet);  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(pointSet);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  getPoint(pointSet);	      final    Point    <    T>    pointSet    =    getPoint(resultSet);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
45	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  points.get(k);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  Point  <  T>  pointSet  =  points.get(k);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  points.get(k);	      final    Point    <    T>    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
46	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  pointSet.get(k);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  Point  <  T>  pointSet  =  pointSet.get(k);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  pointSet.get(k);	      final    Point    <    T>    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
47	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  dx2.get(k);  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  Point  <  T>  pointSet  =  dx2.get(k);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  dx2.get(k);	      final    Point    <    T>    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
48	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  -  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]          AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  -  1);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  resultSet.get(k  -  1);	      final    double[]    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	8	None	replace
49	[BUG]  [BUGGY]  final  double[]  points  =  new  double[resultSet.size()  ];  [CE]  variable  points  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]        AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  points  =  new  double[resultSet.size()  ];  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  points  =  new  double[resultSet.size()  ];	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    	non-compiled	[CE]  variable  points  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	1	None	replace
50	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[ResultSet.size()  ];  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]          AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  pointSet  =  new  double[ResultSet.size()  ];  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  new  double[ResultSet.size()  ];	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	1	None	replace
51	[BUG]  [BUGGY]  final  double[]  resultSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  k)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  resultSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  k)  {  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  resultSet  =  new  double[pointSet.size()  ];  while(resultSet.size()  <  k)  {	      final    double[]    dx2    =    new    double[pointSet.size()    ];    while(resultSet.size()    <    k)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
52	[BUG]  [BUGGY]  final  int  pointSet  =  resultSet.get(dx2  -  k);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]            AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  int  pointSet  =  resultSet.get(dx2  -  k);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  resultSet.get(dx2  -  k);	      final    int    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	9	None	replace
53	[BUG]  [BUGGY]  final  int  pointSet  =  resultSet.size()  -  2;  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]        AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  int  pointSet  =  resultSet.size()  -  2;  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  resultSet.size()  -  2;	      final    int    pointSet    =    resultSet.size();    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	7	None	replace
54	[BUG]  [BUGGY]  final  int  pointSet  =  this.resultSet.size();  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]          AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  int  pointSet  =  this.resultSet.size();  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  this.resultSet.size();	      final    int    pointSet    =    resultSet.size();    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	7	None	replace
55	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(pointSet,  resultSet);  [CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double  d  =  getNearestCluster(pointSet,  resultSet);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double  d  =  getNearestCluster(pointSet,  resultSet);	      final    double    d    =    getNearestCluster(resultSet,    resultSet);    	non-compiled	[CE]  method  getNearestCluster  in  class  KMeansPlusPlusClusterer<T#3>  cannot  be  applied  to  given  types;	14	None	replace
56	[BUG]  [BUGGY]  final  double[]  pointSet  =(double[])resultSet.get(k  -  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  pointSet  =(double[])resultSet.get(k  -  1);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =(double[])resultSet.get(k  -  1);	      final    double[]    pointSet    =(double[])resultSet.get(0);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	5	None	replace
57	[BUG]  [BUGGY]  final  double[]  pointSet  =(double[])resultSet.get(1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                  AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  pointSet  =(double[])resultSet.get(1);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =(double[])resultSet.get(1);	      final    double[]    pointSet    =(double[])resultSet.get(0);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	5	None	replace
58	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  array.get(k);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  Point  <  T>  pointSet  =  array.get(k);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  array.get(k);	      final    Point    <    T>    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
59	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  results.get(k);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  Point  <  T>  pointSet  =  results.get(k);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  results.get(k);	      final    Point    <    T>    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
60	[BUG]  [BUGGY]  final  double[]  resultSet  =  new  double[pointSet.size()  ];  [CE]  variable  resultSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]          AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  resultSet  =  new  double[pointSet.size()  ];  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  resultSet  =  new  double[pointSet.size()  ];	      final    double[]    dx2    =    new    double[pointSet.size()    ];    	non-compiled	[CE]  variable  resultSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	2	None	replace
61	[BUG]  [BUGGY]  final  double[]  pointSet2  =  new  double[resultSet.size()  ];  [CE]  cannot  find  symbol  sum  [FE]            AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  pointSet2  =  new  double[resultSet.size()  ];  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet2  =  new  double[resultSet.size()  ];	      final    double[]    dx2    =    new    double[pointSet.size()    ];    	non-compiled	[CE]  cannot  find  symbol  sum	2	None	replace
62	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {	      final    double[]    dx2    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
63	[BUG]  [BUGGY]  final  int  pointSet  =  resultSet.get(k  +  1);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]            AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  int  pointSet  =  resultSet.get(k  +  1);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  pointSet  =  resultSet.get(k  +  1);	      final    int    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	9	None	replace
64	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  +  k  ];  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]        AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  +  k  ];  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  +  k  ];	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	1	None	replace
65	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  dx2);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  dx2);  [BUGGY]    int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  Point  <  T>  pointSet  =  getPoint(resultSet,  dx2);	      final    Point    <    T>    pointSet    =    getPoint(resultSet);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
66	[BUG]  [BUGGY]  final  int  sum  =(k  <  dx2.length)?  0  :  k;  [CE]  cannot  assign  a  value  to  final  variable  sum  [FE]            AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      [BUGGY]  final  int  sum  =(k  <  dx2.length)?  0  :  k;  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	175	175	1	replace	final  int  sum  =(k  <  dx2.length)?  0  :  k;	  final    int    sum    =    0;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  sum	6	None	replace
