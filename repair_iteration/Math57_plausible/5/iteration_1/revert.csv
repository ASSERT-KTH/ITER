projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[pointSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=pointSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=pointSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=getNearestCluster(pointSet,i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=getNearestCluster(pointSet,i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<points.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<this.pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<resultSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=resultSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoints(resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=resultSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(resultSet,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=points.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=pointSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=k.get(resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=1;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<numberSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=pointSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=pointSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=pointSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<list.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<points.size();i++){for(inti=0;i<points.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<points.size();i++){For(inti=0;i<points.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<points.size();i++){finalTp=points.get(i);for(inti=0;i<points.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<points.size();i++){for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<points.size();i++){finalTp=points.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resetSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[pointSet.size()+1];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(resultSet,sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(pointSet,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(resultSet,resultSet,sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(resultSet,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<resultSet.size();i++){for(inti=0;i<resultSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<resultSet.size();i++){For(inti=0;i<resultSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<resultSet.size();i++){for(inti=0;i<resultsSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<resultSet.size();i++){for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<resultSet.size();i++){finalTp=pointSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(resultSet,sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(pointSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(resultSet.size());
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoints(resultSet,sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoints(pointSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoints(resultSet,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultSet.get(k-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultSet.get(k+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=points.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=pointSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=pointSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=pointSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=getNearestCluster(pointSet,i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=getNearestCluster(pointSet,i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=getNearestCluster(pointSet,i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=pointSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=points.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=resultSet.get(k-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=resultSet.get(k+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=getNearestCluster(pointSet,i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=getNearestCluster(pointSet,i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=getNearestCluster(pointSet,i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(resultSet,dx2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=pointSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=resultSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=resultSet.get(k+sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultSet.get(k+sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=getNearestCluster(pointSet,i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=getNearestCluster(pointSet,i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(resultSet,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(resultSet,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=array.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=results.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<points.size();i++){finalTp=pointSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<points.size();i++){finalTp=pointSet.get(i);for(inti=0;i<points.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<points.size();i++){finalPoint<T>pointSet=getPoints(resultSet,i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=getNearestCluster(pointSet,i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=getNearestCluster(pointSet,i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<this.points.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=pointSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<resultSet.size();i++){finalTp=pointSet.get(i);for(inti=0;i<resultSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<resultSet.size();i++){finalTp=pointSet.get(i);resultSet=getNearestCluster(resultSet,p);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<resultSet.size();i++){finalTp=resultSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[ResultSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]points=newdouble[resultSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoints(resultSet,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=pointSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<resultSet.size();i++){finalTpointSet=pointSet.get(i);for(inti=0;i<resultSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()+1];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=getNearestCluster(pointSet,i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176For(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultSet.get(k++);
