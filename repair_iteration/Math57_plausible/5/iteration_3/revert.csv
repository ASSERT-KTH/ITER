projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[pointSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=pointSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=pointSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=getNearestCluster(pointSet,i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=getNearestCluster(pointSet,i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<points.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<this.pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<resultSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=resultSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoints(resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=resultSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(resultSet,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=points.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=pointSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=k.get(resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=1;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<numberSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=pointSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=pointSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=pointSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<list.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<points.size();i++){for(inti=0;i<points.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<points.size();i++){For(inti=0;i<points.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<points.size();i++){finalTp=points.get(i);for(inti=0;i<points.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<points.size();i++){for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<points.size();i++){finalTp=points.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resetSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[pointSet.size()+1];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(resultSet,sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(pointSet,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(resultSet,resultSet,sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(resultSet,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<resultSet.size();i++){for(inti=0;i<resultSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<resultSet.size();i++){For(inti=0;i<resultSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<resultSet.size();i++){for(inti=0;i<resultsSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<resultSet.size();i++){for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<resultSet.size();i++){finalTp=pointSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(resultSet,sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(pointSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(resultSet.size());
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoints(resultSet,sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoints(pointSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoints(resultSet,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultSet.get(k-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultSet.get(k+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=points.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=pointSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=pointSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=pointSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=getNearestCluster(pointSet,i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=getNearestCluster(pointSet,i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=getNearestCluster(pointSet,i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=pointSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=points.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=resultSet.get(k-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=resultSet.get(k+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=getNearestCluster(pointSet,i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=getNearestCluster(pointSet,i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=getNearestCluster(pointSet,i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(resultSet,dx2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=pointSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=resultSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=resultSet.get(k+sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultSet.get(k+sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=getNearestCluster(pointSet,i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=getNearestCluster(pointSet,i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(resultSet,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(resultSet,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=array.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=results.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<points.size();i++){finalTp=pointSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<points.size();i++){finalTp=pointSet.get(i);for(inti=0;i<points.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<points.size();i++){finalPoint<T>pointSet=getPoints(resultSet,i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=getNearestCluster(pointSet,i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=getNearestCluster(pointSet,i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<this.points.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=pointSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<resultSet.size();i++){finalTp=pointSet.get(i);for(inti=0;i<resultSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<resultSet.size();i++){finalTp=pointSet.get(i);resultSet=getNearestCluster(resultSet,p);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<resultSet.size();i++){finalTp=resultSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[ResultSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]points=newdouble[resultSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoints(resultSet,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=pointSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<resultSet.size();i++){finalTpointSet=pointSet.get(i);for(inti=0;i<resultSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()+1];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=getNearestCluster(pointSet,i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176For(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultSet.get(k++);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resetSet.size()+1];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultSet.get(k-1,sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultSet.get(k-1+sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=points.get(k-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=pointSet.get(k-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=pointSet.get(k+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoints(pointSet,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoints(dx2[i],k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoints(dx2[k],k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=this.resultSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=results.get(k+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(pointSet,sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(dx2,sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(dx2[k],sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<points.size();i++){finalPoint<T>pointSet=getPoints(resultSet,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoints(resultSet,i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<pointSet.size();i++){finalPoint<T>pointSet=getPoints(resultSet,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<points.size();i++){finalPoint<T>pointSet=getPoints(resultSet,k);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176For(inti=0;i<points.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176For(inti=0;i<this.pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176For(inti=0;i<resultSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<pointSet.size();i++){finalTp=pointSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTp=pointSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<pointSet.size();i++){finalTp=pointSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalfor(inti=0;i<points.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[resultSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=pointSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(resultSet.size()-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(pointSet.size());
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(dx2[resultSet.size()]);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(resultSet.size()-2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]points=newdouble[pointSet.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]points=newdouble[points.size()];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]points=newdouble[resultSet.size()+1];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[pointSet.size()+1];for(inti=0;i<pointSet.size();i++){finalTpoint=getNearestCluster(pointSet,i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(pointSet,sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[resultSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=pointSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(pointSet,resultSet,sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(resultSet,sum,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(dx2,resultSet,sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(dx2[k],resultSet,sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTp=points.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTp=points.get(i);for(inti=0;i<points.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTp=points.get(i);for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTp=points.get(0);for(inti=0;i<points.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[pointSet.size()+1];for(inti=0;i<pointSet.size();i++){finalTpoint=pointSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=1;i<this.pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<pointSet.size();i++){finalTp=pointSet.get(i);resultSet=getNearestCluster(resultSet,p);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<points.size();i++){finalTp=pointSet.get(i);resultSet=getNearestCluster(resultSet,p);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<pointSet.size();i++){finalTp=pointSet.get(i);resultSet=getNearestCluster(resultSet,p);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoints(pointSet,sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoints(resultSet,sum-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoints(resultSet,sum+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTp=pointSet.get(i);for(inti=0;i<points.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTp=pointSet.get(0);for(inti=0;i<points.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=points.get(k-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=resultSet.get(k-1,sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getNearestCluster(resultSet,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=points.get(k+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=points.get(k-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=points.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=pointSet.get(i);for(inti=0;i<resultSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=pointSet.get(0);for(inti=0;i<resultSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[resultSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=getNearestCluster(pointSet,i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[pointSet.size()+1];for(inti=0;i<pointSet.size();i++){finalTpoint=getNearestCluster(pointSet,i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=getNearestCluster(pointSet,i
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalfor(inti=0;i<points.size();i++){For(inti=0;i<points.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[resultSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=getNearestCluster(pointSet,i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoints(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoints(pointSet.size());
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=1;i<pointSet.size();i++){for(inti=1;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=1;i<pointSet.size();i++){For(inti=1;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=1;i<pointSet.size();i++){finalTp=pointSet.get(i);finalCluster<T>nearest=getNearestCluster(resultSet,nearest);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=1;i<pointSet.size();i++){for(inti=1;i<points.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=1;i<pointSet.size();i++){finalTp=pointSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=array.get(pointSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=array.get(k-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=array.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=array.get(k+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<pointSet.size();i++){finalTp=resultSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTp=resultSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<pointSet.size();i++){finalTp=resultSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<points.size();i++){finalTp=resultSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=points.get(k+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=points.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=dx2.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=points.get(k+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=this.points.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=dx2.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()+k];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<pointSet.size();i++){finalTp=points.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<pointSet.size();i++){finalTp=points.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(resultSet,sum+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(resultSet,sum-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=pointSet.get(k+sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=points.get(k+sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=resultSet.get(k+sum-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(pointSet,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=dx2[i];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[resultSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=getNearestCluster(pointSet,i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=getNearestCluster(pointSet,i
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultSet.get(k/1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultSet.get(k+1-sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[pointSet.size()+1];for(inti=0;i<pointSet.size();i++){finalTpointSet=pointSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[pointSet.size()+1];for(inti=0;i<pointSet.size();i++){finalTpoint=pointSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalfor(inti=0;i<resultSet.size();i++){for(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<pointsSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalfor(inti=0;i<resultSet.size();i++){for(inti=0;i<resultsSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[pointSet.size()+1];for(inti=0;i<pointSet.size();i++){finalTpointSet=getNearestCluster(pointSet,i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=pointSet.get(k+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=pointSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=pointSet.get(k-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(pointSet,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(dx2[i],k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(dx2,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(pointSet,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(dx2,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTp=pointSet.get(i);for(inti=0;i<resultSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTp=pointSet.get(0);for(inti=0;i<resultSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[resultSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=getNearestCluster(pointSet,i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=getNearestCluster(resultSet,i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=getNearestCluster(pointSet,sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=getNearestCluster(dx2[i],i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=getNearestCluster(dx2,i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[pointSet.size()+1];for(inti=0;i<pointSet.size();i++){finalTpointSet=getNearestCluster(pointSet,i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=getNearestCluster(pointSet,i
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(dx2,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(resultSet,dx2,sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(resultSet,dx2[k]);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalfor(inti=0;i<pointSet.size();i++){for(inti=0;i<resultSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalfor(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultSet.get(k+sum-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=pointSet.get(k+sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=points.get(k+sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultSet.get(k-sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalfor(inti=0;i<pointSet.size();i++){For(inti=0;i<resultSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalfor(inti=0;i<resultSet.size();i++){For(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[pointSet.size()+1];for(inti=0;i<pointSet.size();i++){finalTpointSet=pointSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(resultSet,pointSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(resultSet,points);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<points.size();i++){finalTp=pointSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoints(pointSet,resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoints(resultSet,dx2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultSet.get(k++-sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultSet.get(i++);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=points.get(k++);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()+1];for(inti=0;i<pointSet.size();i++){finalTpointSet=getNearestCluster(pointSet,i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultSet.get(k++-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultSet.get(k++,sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=1;i<pointSet.size();i++){finalTp=pointSet.get(i);for(inti=1;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=1;i<pointSet.size();i++){finalTpointSet=pointSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=getNearestCluster(pointSet,i
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultSet.get(k/sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultSet.get(k+sum,sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[resultSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=getNearestCluster(pointSet,i
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[resultSet.size()+1];for(inti=0;i<pointSet.size();i++){finalTpoint=pointSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=points.get(k+sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(resultSet.get(k));
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(resultSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(resultSet,k+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(resultSet,resultSet.size());
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<resultSet.size();i++){finalTp=points.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalfor(inti=0;i<pointSet.size();i++){for(inti=0;i<resultsSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalfor(inti=0;i<pointSet.size();i++){finalTp=pointSet.get(i);resultSet=getNearestCluster(resultSet,p);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(finalTi=0;i<pointSet.size();i++){finalTp=pointSet.get(i);resultSet=getNearestCluster(resultSet,p);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalfor(inti=0;i<pointSet.size();i++){finalTp=pointSet.get(i);resultSet=getNearestCluster(resultSet,p);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()-1];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalfor(inti=0;i<resultSet.size();i++){for(inti=0;i<resultSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=resultSet.get(k+1-sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=resultSet.get(k/1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()+1];for(inti=0;i<pointSet.size();i++){finalTpoint=getNearestCluster(pointSet,i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=resultSet.get(k-1+sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=resultSet.get(k-1-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=resultSet.get(k-2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(finalTi=0;i<resultSet.size();i++){finalTp=resultSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(finalTi=0;i<resultSet.size();i++){finalTp=resultSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<resultSet.size();i++){finalPoint<T>pointSet=getPoints(resultSet,i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<resultSet.size();i++){finalPoint<T>pointSet=getPoints(resultSet,i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(finalPoint<T>i=0;i<points.size();i++){finalPoint<T>pointSet=getPoints(resultSet,i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=getNearestCluster(pointSet,i
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultSet.get(k-2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultSet.get(k-1-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=this.pointSet.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=resultSet.get(k-sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=resultsSet.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=results.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=data.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=results.get(k-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(resultSet,dx2[k],sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<pointSet.size();i++){For(inti=0;i<points.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=array.get(resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=array.get(k+sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=resultSet.get(i+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]points=newdouble[resultSet.size()-1];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()+1];for(inti=0;i<pointSet.size();i++){finalTpoint=pointSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultSet.get(k*1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=points.get(resultSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=newdouble[resultSet.size()+1];for(inti=0;i<pointSet.size();i++){finalTpointSet=pointSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(resultSet,sum+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(resultSet,k+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[resultSet.size()];for(inti=0;i<pointSet.size();i++){finalTpoint=getNearestCluster(pointSet,i
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<pointSet.size();i++){For(inti=0;i<resultSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<pointSet.size();i++){For(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoints(dx2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newint[resultSet.size()+1];for(inti=0;i<pointSet.size();i++){finalTpointSet=pointSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoints(resultSet,resultSet.size());
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(resultSet,dataSet);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalint[]pointSet=newdouble[pointSet.size()];for(inti=0;i<pointSet.size();i++){finalTpointSet=pointSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=resultSet.get(resultSet.size()-1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(resultSet,dx2[0],sum);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=dx2.get(i);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=array.get(resultSet.size());
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]points=newdouble[resultSet.size()+k];
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoint(resultSet,dx2);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalfor(inti=0;i<pointSet.size();i++){For(inti=0;i<pointSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultSet.get(resultSet.size()++);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldouble[]pointSet=resultsSet.get(k++);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=this.points.get(k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<points.size();i++){finalTp=points.get(i+1);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finaldoubled=getNearestCluster(resultSet,tip);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTp=pointSet.get(i);resultSet=getNearestCluster(resultSet,p);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176for(inti=0;i<resultSet.size();i++){finalTp=pointSet.get(i);}
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalPoint<T>pointSet=getPoints(dx2,k);
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalfor(inti=0;i<resultSet.size();i++){
projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java176finalTpointSet=resultSet.get(k*1);
