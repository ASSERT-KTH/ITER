bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resetSet.size()  +  1];  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  new  double[resetSet.size()  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[resetSet.size()  +  1];	  final    double[]    pointSet    =    new    double[resetSet.size()    ];    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
2	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  -  1,  sum);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  -  1,  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  resultSet.get(k  -  1,  sum);	  final    double[]    pointSet    =    resultSet.get(k    -    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
3	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  -  1  +  sum);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  -  1  +  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  resultSet.get(k  -  1  +  sum);	  final    double[]    pointSet    =    resultSet.get(k    -    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
4	[BUG]  [BUGGY]  final  double[]  pointSet  =  points.get(k  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  points.get(k  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  points.get(k  -  1);	  final    double[]    pointSet    =    resultSet.get(k    -    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
5	[BUG]  [BUGGY]  final  T  pointSet  =  pointSet.get(k  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  pointSet.get(k  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  pointSet.get(k  -  1);	  final    T    pointSet    =    pointSet.get(k);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
6	[BUG]  [BUGGY]  final  T  pointSet  =  pointSet.get(k  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  pointSet.get(k  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  pointSet.get(k  +  1);	  final    T    pointSet    =    pointSet.get(k);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
7	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(pointSet,  k);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(pointSet,  k);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoints(pointSet,  k);	  final    Point    <    T>    pointSet    =    getPoints(resultSet,    k);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
8	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(dx2[i],  k);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(dx2[i],  k);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoints(dx2[i],  k);	  final    Point    <    T>    pointSet    =    getPoints(resultSet,    k);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
9	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(dx2[k],  k);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(dx2[k],  k);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoints(dx2[k],  k);	  final    Point    <    T>    pointSet    =    getPoints(resultSet,    k);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
10	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  this.resultSet.get(k);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  this.resultSet.get(k);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  this.resultSet.get(k);	  final    Point    <    T>    pointSet    =    results.get(k);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
11	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  results.get(k  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  results.get(k  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  results.get(k  +  1);	  final    Point    <    T>    pointSet    =    results.get(k);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
12	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(pointSet,  sum);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double  d  =  getNearestCluster(pointSet,  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double  d  =  getNearestCluster(pointSet,  sum);	  final    double    d    =    getNearestCluster(resultSet,    sum);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
13	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(dx2,  sum);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double  d  =  getNearestCluster(dx2,  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double  d  =  getNearestCluster(dx2,  sum);	  final    double    d    =    getNearestCluster(resultSet,    sum);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
14	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(dx2[k],  sum);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double  d  =  getNearestCluster(dx2[k],  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double  d  =  getNearestCluster(dx2[k],  sum);	  final    double    d    =    getNearestCluster(resultSet,    sum);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  final  Point  <  T>  pointSet  =  getPoints(resultSet,  k);  [CE]  cannot  find  symbol  [FE]            java.lang.IndexOutOfBoundsException:  Index:  26      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  final  Point  <  T>  pointSet  =  getPoints(resultSet,  k);  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  0;  i  <  points.size();  i++)  {  final  Point  <  T>  pointSet  =  getPoints(resultSet,  k);	  for(int    i    =    0;    i    <    points.size();    i++)    {    final    Point    <    T>    pointSet    =    getPoints(resultSet,    i);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
16	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(resultSet,  i);  [CE]  illegal  start  of  type  [FE]              java.lang.IndexOutOfBoundsException:  Index:  26      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(resultSet,  i);  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoints(resultSet,  i);	  for(int    i    =    0;    i    <    points.size();    i++)    {    final    Point    <    T>    pointSet    =    getPoints(resultSet,    i);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  Point  <  T>  pointSet  =  getPoints(resultSet,  k);  [CE]  cannot  find  symbol  [FE]                java.lang.IndexOutOfBoundsException:  Index:  26      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  Point  <  T>  pointSet  =  getPoints(resultSet,  k);  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  Point  <  T>  pointSet  =  getPoints(resultSet,  k);	  for(int    i    =    0;    i    <    points.size();    i++)    {    final    Point    <    T>    pointSet    =    getPoints(resultSet,    i);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  final  Point  <  T>  pointSet  =  getPoints(resultSet,  k);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.IndexOutOfBoundsException:  Index:  26      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  final  Point  <  T>  pointSet  =  getPoints(resultSet,  k);  }  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  0;  i  <  points.size();  i++)  {  final  Point  <  T>  pointSet  =  getPoints(resultSet,  k);  }	  for(int    i    =    0;    i    <    points.size();    i++)    {    final    Point    <    T>    pointSet    =    getPoints(resultSet,    i);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
19	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  points.size();  i++)  {  [CE]  '.class'  expected  [FE]        java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  For(int  i  =  0;  i  <  points.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	For(int  i  =  0;  i  <  points.size();  i++)  {	  For(int    i    =    0;    i    <    pointSet.size();    i++)    {    	non-compiled	[CE]  '.class'  expected	78	None	replace
20	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  this.pointSet.size();  i++)  {  [CE]  '.class'  expected  [FE]          java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  For(int  i  =  0;  i  <  this.pointSet.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	For(int  i  =  0;  i  <  this.pointSet.size();  i++)  {	  For(int    i    =    0;    i    <    pointSet.size();    i++)    {    	non-compiled	[CE]  '.class'  expected	78	None	replace
21	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  resultSet.size();  i++)  {  [CE]  '.class'  expected  [FE]            java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  For(int  i  =  0;  i  <  resultSet.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	For(int  i  =  0;  i  <  resultSet.size();  i++)  {	  For(int    i    =    0;    i    <    pointSet.size();    i++)    {    	non-compiled	[CE]  '.class'  expected	78	None	replace
22	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  [CE]  variable  p  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    final    T    p    =    pointSet.get(i);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	27	None	replace
23	[BUG]  [BUGGY]  final  T  p  =  pointSet.get(i);  [CE]  illegal  start  of  type  [FE]                  java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  p  =  pointSet.get(i);  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  p  =  pointSet.get(i);	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    final    T    p    =    pointSet.get(i);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
24	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  }  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  }	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    final    T    p    =    pointSet.get(i);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
25	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  points.size();  i++)  {  [CE]  illegal  start  of  type  [FE]        java.lang.IndexOutOfBoundsException:  Index:  26      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  for(int  i  =  0;  i  <  points.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  for(int  i  =  0;  i  <  points.size();  i++)  {	  for(int    i    =    0;    i    <    points.size();    i++)    {    for(int    i    =    0;    i    <    points.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
26	[BUG]  [BUGGY]  final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);  }  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);  }	  final    double[]    pointSet    =    new    double[resultSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    point    =    pointSet.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
27	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet.size()  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet.size()  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoint(resultSet.size()  -  1);	  final    Point    <    T>    pointSet    =    getPoint(resultSet.size());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
28	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(pointSet.size());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(pointSet.size());  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoint(pointSet.size());	  final    Point    <    T>    pointSet    =    getPoint(resultSet.size());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
29	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(dx2[resultSet.size()  ]);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(dx2[resultSet.size()  ]);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoint(dx2[resultSet.size()  ]);	  final    Point    <    T>    pointSet    =    getPoint(resultSet.size());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
30	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet.size()  -  2);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet.size()  -  2);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoint(resultSet.size()  -  2);	  final    Point    <    T>    pointSet    =    getPoint(resultSet.size());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
31	[BUG]  [BUGGY]  final  double[]  points  =  new  double[pointSet.size()  ];  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  points  =  new  double[pointSet.size()  ];  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  points  =  new  double[pointSet.size()  ];	  final    double[]    points    =    new    double[resultSet.size()    ];    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
32	[BUG]  [BUGGY]  final  double[]  points  =  new  double[points.size()  ];  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  points  =  new  double[points.size()  ];  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  points  =  new  double[points.size()  ];	  final    double[]    points    =    new    double[resultSet.size()    ];    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
33	[BUG]  [BUGGY]  final  double[]  points  =  new  double[resultSet.size()  +  1];  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  points  =  new  double[resultSet.size()  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  points  =  new  double[resultSet.size()  +  1];	  final    double[]    points    =    new    double[resultSet.size()    ];    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
34	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  }  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  }	  final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    point    =    getNearestCluster(pointSet,    i);    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
35	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(pointSet,  sum);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(pointSet,  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoint(pointSet,  sum);	  final    Point    <    T>    pointSet    =    getPoint(pointSet);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
36	[BUG]  [BUGGY]  final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }	  final    double[]    pointSet    =    new    double[resultSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    pointSet    =    pointSet.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
37	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(pointSet,  resultSet,  sum);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double  d  =  getNearestCluster(pointSet,  resultSet,  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double  d  =  getNearestCluster(pointSet,  resultSet,  sum);	  final    double    d    =    getNearestCluster(resultSet,    resultSet,    sum);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
38	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  sum,  k);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  sum,  k);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double  d  =  getNearestCluster(resultSet,  sum,  k);	  final    double    d    =    getNearestCluster(resultSet,    resultSet,    sum);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
39	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(dx2,  resultSet,  sum);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double  d  =  getNearestCluster(dx2,  resultSet,  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double  d  =  getNearestCluster(dx2,  resultSet,  sum);	  final    double    d    =    getNearestCluster(resultSet,    resultSet,    sum);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
40	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(dx2[k],  resultSet,  sum);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double  d  =  getNearestCluster(dx2[k],  resultSet,  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double  d  =  getNearestCluster(dx2[k],  resultSet,  sum);	  final    double    d    =    getNearestCluster(resultSet,    resultSet,    sum);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
41	[BUG]  [BUGGY]  final  T  p  =  points.get(i);  [CE]  illegal  start  of  type  [FE]            java.lang.IndexOutOfBoundsException:  Index:  26      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  p  =  points.get(i);  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  p  =  points.get(i);	  for(int    i    =    0;    i    <    points.size();    i++)    {    final    T    p    =    points.get(i);    for(int    i    =    0;    i    <    points.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
42	[BUG]  [BUGGY]  final  T  p  =  points.get(i);  for(int  i  =  0;  i  <  points.size();  i++)  {  [CE]  cannot  find  symbol  i  [FE]              java.lang.IndexOutOfBoundsException:  Index:  26      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  p  =  points.get(i);  for(int  i  =  0;  i  <  points.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  p  =  points.get(i);  for(int  i  =  0;  i  <  points.size();  i++)  {	  for(int    i    =    0;    i    <    points.size();    i++)    {    final    T    p    =    points.get(i);    for(int    i    =    0;    i    <    points.size();    i++)    {    	non-compiled	[CE]  cannot  find  symbol  i	13	None	replace
43	[BUG]  [BUGGY]  final  T  p  =  points.get(i);  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  cannot  find  symbol  i  [FE]                java.lang.IndexOutOfBoundsException:  Index:  26      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  p  =  points.get(i);  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  p  =  points.get(i);  for(int  i  =  0;  i  <  pointSet.size();  i++)  {	  for(int    i    =    0;    i    <    points.size();    i++)    {    final    T    p    =    points.get(i);    for(int    i    =    0;    i    <    points.size();    i++)    {    	non-compiled	[CE]  cannot  find  symbol  i	13	None	replace
44	[BUG]  [BUGGY]  final  T  p  =  points.get(0);  for(int  i  =  0;  i  <  points.size();  i++)  {  [CE]  cannot  find  symbol  [FE]                  java.lang.IndexOutOfBoundsException:  Index:  26      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  p  =  points.get(0);  for(int  i  =  0;  i  <  points.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  p  =  points.get(0);  for(int  i  =  0;  i  <  points.size();  i++)  {	  for(int    i    =    0;    i    <    points.size();    i++)    {    final    T    p    =    points.get(i);    for(int    i    =    0;    i    <    points.size();    i++)    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
45	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);  }  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);  }	  final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    point    =    pointSet.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  this.pointSet.size();  i++)  {  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]    AssertionError    [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  1;  i  <  this.pointSet.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  1;  i  <  this.pointSet.size();  i++)  {	  for(int    i    =    1;    i    <    pointSet.size();    i++)    {    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	5	None	replace
47	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  resultSet  =  getNearestCluster(resultSet,  p);  }  [CE]  illegal  start  of  type  [FE]          java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  resultSet  =  getNearestCluster(resultSet,  p);  }  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  resultSet  =  getNearestCluster(resultSet,  p);  }	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    final    T    p    =    pointSet.get(i);    resultSet    =    getNearestCluster(resultSet,    p);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
48	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  final  T  p  =  pointSet.get(i);  resultSet  =  getNearestCluster(resultSet,  p);  }  [CE]  illegal  start  of  type  [FE]            java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  final  T  p  =  pointSet.get(i);  resultSet  =  getNearestCluster(resultSet,  p);  }  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  0;  i  <  points.size();  i++)  {  final  T  p  =  pointSet.get(i);  resultSet  =  getNearestCluster(resultSet,  p);  }	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    final    T    p    =    pointSet.get(i);    resultSet    =    getNearestCluster(resultSet,    p);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
49	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  resultSet  =  getNearestCluster(resultSet,  p);  [CE]  cannot  assign  a  value  to  final  variable  resultSet  [FE]              java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  resultSet  =  getNearestCluster(resultSet,  p);  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  resultSet  =  getNearestCluster(resultSet,  p);	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    final    T    p    =    pointSet.get(i);    resultSet    =    getNearestCluster(resultSet,    p);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  resultSet	69	None	replace
50	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(pointSet,  sum);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(pointSet,  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoints(pointSet,  sum);	  final    Point    <    T>    pointSet    =    getPoints(resultSet,    sum);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
51	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(resultSet,  sum  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(resultSet,  sum  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoints(resultSet,  sum  -  1);	  final    Point    <    T>    pointSet    =    getPoints(resultSet,    sum);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
52	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(resultSet,  sum  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(resultSet,  sum  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoints(resultSet,  sum  +  1);	  final    Point    <    T>    pointSet    =    getPoints(resultSet,    sum);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
53	[BUG]  [BUGGY]  final  T  p  =  pointSet.get(i);  for(int  i  =  0;  i  <  points.size();  i++)  {  [CE]  cannot  find  symbol  i  [FE]          java.lang.IndexOutOfBoundsException:  Index:  26      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  p  =  pointSet.get(i);  for(int  i  =  0;  i  <  points.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  p  =  pointSet.get(i);  for(int  i  =  0;  i  <  points.size();  i++)  {	  for(int    i    =    0;    i    <    points.size();    i++)    {    final    T    p    =    pointSet.get(i);    for(int    i    =    0;    i    <    points.size();    i++)    {    	non-compiled	[CE]  cannot  find  symbol  i	62	None	replace
54	[BUG]  [BUGGY]  final  T  p  =  pointSet.get(0);  for(int  i  =  0;  i  <  points.size();  i++)  {  [CE]  variable  p  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]            java.lang.IndexOutOfBoundsException:  Index:  26      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  p  =  pointSet.get(0);  for(int  i  =  0;  i  <  points.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  p  =  pointSet.get(0);  for(int  i  =  0;  i  <  points.size();  i++)  {	  for(int    i    =    0;    i    <    points.size();    i++)    {    final    T    p    =    pointSet.get(i);    for(int    i    =    0;    i    <    points.size();    i++)    {    	non-compiled	[CE]  variable  p  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	62	None	replace
55	[BUG]  [BUGGY]  final  T  pointSet  =  points.get(k  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  points.get(k  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  points.get(k  -  1);	  final    T    pointSet    =    resultSet.get(k    -    1);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
56	[BUG]  [BUGGY]  final  T  pointSet  =  resultSet.get(k  -  1,  sum);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  resultSet.get(k  -  1,  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  resultSet.get(k  -  1,  sum);	  final    T    pointSet    =    resultSet.get(k    -    1);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
57	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getNearestCluster(resultSet,  k);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getNearestCluster(resultSet,  k);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getNearestCluster(resultSet,  k);	  final    Point    <    T>    pointSet    =    k.get(resultSet);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
58	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  points.get(k  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  points.get(k  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  points.get(k  +  1);	  final    Point    <    T>    pointSet    =    points.get(k);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
59	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  points.get(k  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  points.get(k  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  points.get(k  -  1);	  final    Point    <    T>    pointSet    =    points.get(k);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
60	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  points.get(i);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  points.get(i);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  points.get(i);	  final    Point    <    T>    pointSet    =    points.get(k);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
61	[BUG]  [BUGGY]  final  T  pointSet  =  pointSet.get(i);  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]        java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  pointSet.get(i);  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  pointSet.get(i);  for(int  i  =  0;  i  <  resultSet.size();  i++)  {	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    final    T    pointSet    =    pointSet.get(i);    for(int    i    =    0;    i    <    resultSet.size();    i++)    {    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	75	None	replace
62	[BUG]  [BUGGY]  final  T  pointSet  =  pointSet.get(0);  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]          java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  pointSet.get(0);  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  pointSet.get(0);  for(int  i  =  0;  i  <  resultSet.size();  i++)  {	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    final    T    pointSet    =    pointSet.get(i);    for(int    i    =    0;    i    <    resultSet.size();    i++)    {    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	75	None	replace
63	[BUG]  [BUGGY]  final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  }  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  }	  final    double[]    pointSet    =    new    double[resultSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    point    =    getNearestCluster(pointSet,    i);    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
64	[BUG]  [BUGGY]  final  int[]  pointSet  =  new  int[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  int[]  pointSet  =  new  int[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  }  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  int[]  pointSet  =  new  int[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  }	  final    int[]    pointSet    =    new    int[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    point    =    getNearestCluster(pointSet,    i);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
65	[BUG]  [BUGGY]  final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i	  final    int[]    pointSet    =    new    int[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    point    =    getNearestCluster(pointSet,    i);    }    	non-compiled	[CE]  ')'  expected	41	None	replace
66	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  points.size();  i++)  {  For(int  i  =  0;  i  <  points.size();  i++)  {  [CE]  illegal  start  of  type  [FE]          java.lang.IndexOutOfBoundsException:  Index:  26      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  for(int  i  =  0;  i  <  points.size();  i++)  {  For(int  i  =  0;  i  <  points.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  for(int  i  =  0;  i  <  points.size();  i++)  {  For(int  i  =  0;  i  <  points.size();  i++)  {	  for(int    i    =    0;    i    <    points.size();    i++)    {    For(int    i    =    0;    i    <    points.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
67	[BUG]  [BUGGY]  final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                        AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);	  final    int[]    pointSet    =    new    int[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    point    =    getNearestCluster(pointSet,    i);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	42	None	replace
68	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(k);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(k);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoints(k);	  final    Point    <    T>    pointSet    =    getPoints(pointSet);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
69	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(pointSet.size());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(pointSet.size());  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoints(pointSet.size());	  final    Point    <    T>    pointSet    =    getPoints(pointSet);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  pointSet.size();  i++)  {  for(int  i  =  1;  i  <  pointSet.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  1;  i  <  pointSet.size();  i++)  {  for(int  i  =  1;  i  <  pointSet.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int    i    =    1;    i    <    pointSet.size();    i++)    {    for(int  i  =  1;  i  <  pointSet.size();  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
71	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  pointSet.size();  i++)  {  For(int  i  =  1;  i  <  pointSet.size();  i++)  {  [CE]  '.class'  expected  [FE]      AssertionError    [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  1;  i  <  pointSet.size();  i++)  {  For(int  i  =  1;  i  <  pointSet.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int    i    =    1;    i    <    pointSet.size();    i++)    {    For(int  i  =  1;  i  <  pointSet.size();  i++)  {	  	non-compiled	[CE]  '.class'  expected	4	None	add
72	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster  <  T>  nearest  =  getNearestCluster(resultSet,  nearest);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  1;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster  <  T>  nearest  =  getNearestCluster(resultSet,  nearest);  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int    i    =    1;    i    <    pointSet.size();    i++)    {    final  T  p  =  pointSet.get(i);  final  Cluster  <  T>  nearest  =  getNearestCluster(resultSet,  nearest);	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
73	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  pointSet.size();  i++)  {  for(int  i  =  1;  i  <  points.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  1;  i  <  pointSet.size();  i++)  {  for(int  i  =  1;  i  <  points.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int    i    =    1;    i    <    pointSet.size();    i++)    {    for(int  i  =  1;  i  <  points.size();  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
74	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  1;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int    i    =    1;    i    <    pointSet.size();    i++)    {    final  T  p  =  pointSet.get(i);	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
75	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  array.get(pointSet);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  array.get(pointSet);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  array.get(pointSet);	  final    Point    <    T>    pointSet    =    array.get(k);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
76	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  array.get(k  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  array.get(k  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  array.get(k  -  1);	  final    Point    <    T>    pointSet    =    array.get(k);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
77	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  array.get(i);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  array.get(i);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  array.get(i);	  final    Point    <    T>    pointSet    =    array.get(k);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
78	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  array.get(k  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  array.get(k  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  array.get(k  +  1);	  final    Point    <    T>    pointSet    =    array.get(k);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
79	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  resultSet.get(i);  [CE]  incompatible  types  [FE]            java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  resultSet.get(i);  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  resultSet.get(i);	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    final    T    p    =    resultSet.get(i);    	non-compiled	[CE]  incompatible  types	70	None	replace
80	[BUG]  [BUGGY]  final  T  p  =  resultSet.get(i);  [CE]  illegal  start  of  type  [FE]              java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  p  =  resultSet.get(i);  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  p  =  resultSet.get(i);	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    final    T    p    =    resultSet.get(i);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
81	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  resultSet.get(i);  }  [CE]  illegal  start  of  type  [FE]                java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  resultSet.get(i);  }  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  resultSet.get(i);  }	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    final    T    p    =    resultSet.get(i);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
82	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  final  T  p  =  resultSet.get(i);  [CE]  incompatible  types  [FE]                  java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  final  T  p  =  resultSet.get(i);  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  0;  i  <  points.size();  i++)  {  final  T  p  =  resultSet.get(i);	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    final    T    p    =    resultSet.get(i);    	non-compiled	[CE]  incompatible  types	70	None	replace
83	[BUG]  [BUGGY]  final  T  pointSet  =  points.get(k  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  points.get(k  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  points.get(k  +  1);	  final    T    pointSet    =    resultSet.get(k    +    1);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
84	[BUG]  [BUGGY]  final  T  pointSet  =  points.get(i);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  points.get(i);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  points.get(i);	  final    T    pointSet    =    points.get(k);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
85	[BUG]  [BUGGY]  final  T  pointSet  =  dx2.get(k);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  dx2.get(k);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  dx2.get(k);	  final    T    pointSet    =    points.get(k);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
86	[BUG]  [BUGGY]  final  double[]  pointSet  =  points.get(k  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  points.get(k  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  points.get(k  +  1);	  final    double[]    pointSet    =    points.get(k);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
87	[BUG]  [BUGGY]  final  double[]  pointSet  =  this.points.get(k);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  this.points.get(k);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  this.points.get(k);	  final    double[]    pointSet    =    points.get(k);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
88	[BUG]  [BUGGY]  final  double[]  pointSet  =  dx2.get(k);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  dx2.get(k);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  dx2.get(k);	  final    double[]    pointSet    =    points.get(k);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
89	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  +  k  ];  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  +  k  ];  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  +  k  ];	  final    double[]    pointSet    =    new    double[resultSet.size()    ];    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
90	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  points.get(i);  [CE]  cannot  find  symbol  [FE]                java.lang.IndexOutOfBoundsException:  Index:  26      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  points.get(i);  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  points.get(i);	  for(int    i    =    0;    i    <    points.size();    i++)    {    final    T    p    =    points.get(i);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
91	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  points.get(i);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.IndexOutOfBoundsException:  Index:  26      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  points.get(i);  }  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  points.get(i);  }	  for(int    i    =    0;    i    <    points.size();    i++)    {    final    T    p    =    points.get(i);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
92	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  sum  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  sum  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoint(resultSet,  sum  +  1);	  final    Point    <    T>    pointSet    =    getPoint(resultSet,    sum);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
93	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  sum  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  sum  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoint(resultSet,  sum  -  1);	  final    Point    <    T>    pointSet    =    getPoint(resultSet,    sum);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
94	[BUG]  [BUGGY]  final  T  pointSet  =  pointSet.get(k  +  sum);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  pointSet.get(k  +  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  pointSet.get(k  +  sum);	  final    T    pointSet    =    resultSet.get(k    +    sum);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
95	[BUG]  [BUGGY]  final  T  pointSet  =  points.get(k  +  sum);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  points.get(k  +  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  points.get(k  +  sum);	  final    T    pointSet    =    resultSet.get(k    +    sum);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
96	[BUG]  [BUGGY]  final  T  pointSet  =  resultSet.get(k  +  sum  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  resultSet.get(k  +  sum  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  resultSet.get(k  +  sum  -  1);	  final    T    pointSet    =    resultSet.get(k    +    sum);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
97	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(pointSet,  resultSet);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(pointSet,  resultSet);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoint(pointSet,  resultSet);	  final    Point    <    T>    pointSet    =    getPoint(resultSet,    resultSet);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
98	[BUG]  [BUGGY]  final  T  pointSet  =  dx2[i];  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  dx2[i];  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  dx2[i];	  final    T    pointSet    =    pointSet.get(i);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
99	[BUG]  [BUGGY]  final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  }  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  }	  final    double[]    pointSet    =    new    double[resultSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    pointSet    =    getNearestCluster(pointSet,    i);    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
100	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i	  final    double[]    pointSet    =    new    double[resultSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    pointSet    =    getNearestCluster(pointSet,    i);    }    	non-compiled	[CE]  ')'  expected	56	None	replace
101	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  /  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  /  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  resultSet.get(k  /  1);	  final    double[]    pointSet    =    resultSet.get(k    +    1);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
102	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  +  1  -  sum);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  +  1  -  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  resultSet.get(k  +  1  -  sum);	  final    double[]    pointSet    =    resultSet.get(k    +    1);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
103	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }	  final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    pointSet    =    pointSet.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
104	[BUG]  [BUGGY]  final  int[]  pointSet  =  new  int[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  int[]  pointSet  =  new  int[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);  }  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  int[]  pointSet  =  new  int[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);  }	  final    int[]    pointSet    =    new    int[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    point    =    pointSet.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
105	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  illegal  start  of  type  [FE]            java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  for(int  i  =  0;  i  <  pointSet.size();  i++)  {	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    for(int    i    =    0;    i    <    resultsSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
106	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  pointsSet.size();  i++)  {  [CE]  cannot  find  symbol  pointsSet  [FE]              java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  pointsSet.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  0;  i  <  pointsSet.size();  i++)  {	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    for(int    i    =    0;    i    <    resultsSet.size();    i++)    {    	non-compiled	[CE]  cannot  find  symbol  pointsSet	25	None	replace
107	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  for(int  i  =  0;  i  <  resultsSet.size();  i++)  {  [CE]  illegal  start  of  type  [FE]                java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  for(int  i  =  0;  i  <  resultsSet.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  for(int  i  =  0;  i  <  resultsSet.size();  i++)  {	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    for(int    i    =    0;    i    <    resultsSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
108	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  }  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  }	  final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    pointSet    =    getNearestCluster(pointSet,    i);    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
109	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  pointSet.get(k  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  pointSet.get(k  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  pointSet.get(k  +  1);	  final    Point    <    T>    pointSet    =    pointSet.get(k);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
110	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  pointSet.get(i);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  pointSet.get(i);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  pointSet.get(i);	  final    Point    <    T>    pointSet    =    pointSet.get(k);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
111	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  pointSet.get(k  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  pointSet.get(k  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  pointSet.get(k  -  1);	  final    Point    <    T>    pointSet    =    pointSet.get(k);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
112	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(pointSet,  k);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(pointSet,  k);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoint(pointSet,  k);	  final    Point    <    T>    pointSet    =    getPoint(resultSet,    k);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
113	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(dx2[i],  k);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(dx2[i],  k);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoint(dx2[i],  k);	  final    Point    <    T>    pointSet    =    getPoint(resultSet,    k);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
114	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(dx2,  k);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(dx2,  k);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoint(dx2,  k);	  final    Point    <    T>    pointSet    =    getPoint(resultSet,    k);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
115	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(pointSet,  k);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double  d  =  getNearestCluster(pointSet,  k);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double  d  =  getNearestCluster(pointSet,  k);	  final    double    d    =    getNearestCluster(resultSet,    k);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
116	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(dx2,  k);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double  d  =  getNearestCluster(dx2,  k);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double  d  =  getNearestCluster(dx2,  k);	  final    double    d    =    getNearestCluster(resultSet,    k);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
117	[BUG]  [BUGGY]  final  T  p  =  pointSet.get(i);  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  [CE]  cannot  find  symbol  i  [FE]        java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  p  =  pointSet.get(i);  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  p  =  pointSet.get(i);  for(int  i  =  0;  i  <  resultSet.size();  i++)  {	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    final    T    p    =    pointSet.get(i);    for(int    i    =    0;    i    <    resultSet.size();    i++)    {    	non-compiled	[CE]  cannot  find  symbol  i	68	None	replace
118	[BUG]  [BUGGY]  final  T  p  =  pointSet.get(0);  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  [CE]  variable  p  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]          java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  p  =  pointSet.get(0);  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  p  =  pointSet.get(0);  for(int  i  =  0;  i  <  resultSet.size();  i++)  {	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    final    T    p    =    pointSet.get(i);    for(int    i    =    0;    i    <    resultSet.size();    i++)    {    	non-compiled	[CE]  variable  p  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	68	None	replace
119	[BUG]  [BUGGY]  final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);	  final    int[]    pointSet    =    new    int[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    pointSet    =    getNearestCluster(pointSet,    i);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	49	None	replace
120	[BUG]  [BUGGY]  final  T  pointSet  =  getNearestCluster(resultSet,  i);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  getNearestCluster(resultSet,  i);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  getNearestCluster(resultSet,  i);	  final    T    pointSet    =    getNearestCluster(pointSet,    i);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
121	[BUG]  [BUGGY]  final  T  pointSet  =  getNearestCluster(pointSet,  sum);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  getNearestCluster(pointSet,  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  getNearestCluster(pointSet,  sum);	  final    T    pointSet    =    getNearestCluster(pointSet,    i);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
122	[BUG]  [BUGGY]  final  T  pointSet  =  getNearestCluster(dx2[i],  i);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  getNearestCluster(dx2[i],  i);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  getNearestCluster(dx2[i],  i);	  final    T    pointSet    =    getNearestCluster(pointSet,    i);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
123	[BUG]  [BUGGY]  final  T  pointSet  =  getNearestCluster(dx2,  i);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  getNearestCluster(dx2,  i);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  getNearestCluster(dx2,  i);	  final    T    pointSet    =    getNearestCluster(pointSet,    i);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
124	[BUG]  [BUGGY]  final  int[]  pointSet  =  new  int[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  int[]  pointSet  =  new  int[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  }  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  int[]  pointSet  =  new  int[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  }	  final    int[]    pointSet    =    new    int[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    pointSet    =    getNearestCluster(pointSet,    i);    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
125	[BUG]  [BUGGY]  final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i	  final    int[]    pointSet    =    new    int[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    pointSet    =    getNearestCluster(pointSet,    i);    }    	non-compiled	[CE]  ')'  expected	48	None	replace
126	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(dx2,  resultSet);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double  d  =  getNearestCluster(dx2,  resultSet);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double  d  =  getNearestCluster(dx2,  resultSet);	  final    double    d    =    getNearestCluster(resultSet,    dx2);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
127	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dx2,  sum);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dx2,  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double  d  =  getNearestCluster(resultSet,  dx2,  sum);	  final    double    d    =    getNearestCluster(resultSet,    dx2);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
128	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dx2[k]);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dx2[k]);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double  d  =  getNearestCluster(resultSet,  dx2[k]);	  final    double    d    =    getNearestCluster(resultSet,    dx2);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
129	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  [CE]  illegal  start  of  type  [FE]        java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  for(int  i  =  0;  i  <  resultSet.size();  i++)  {	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    for(int    i    =    0;    i    <    resultSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
130	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  illegal  start  of  type  [FE]              java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  for(int  i  =  0;  i  <  pointSet.size();  i++)  {	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
131	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  +  sum  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  +  sum  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  resultSet.get(k  +  sum  -  1);	  final    double[]    pointSet    =    resultSet.get(k    +    sum);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
132	[BUG]  [BUGGY]  final  double[]  pointSet  =  pointSet.get(k  +  sum);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  pointSet.get(k  +  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  pointSet.get(k  +  sum);	  final    double[]    pointSet    =    resultSet.get(k    +    sum);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
133	[BUG]  [BUGGY]  final  double[]  pointSet  =  points.get(k  +  sum);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  points.get(k  +  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  points.get(k  +  sum);	  final    double[]    pointSet    =    resultSet.get(k    +    sum);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
134	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  -  sum);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  -  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  resultSet.get(k  -  sum);	  final    double[]    pointSet    =    resultSet.get(k    +    sum);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
135	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  For(int  i  =  0;  i  <  resultSet.size();  i++)  {  [CE]  illegal  start  of  type  [FE]          java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  For(int  i  =  0;  i  <  resultSet.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  For(int  i  =  0;  i  <  resultSet.size();  i++)  {	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    For(int    i    =    0;    i    <    resultSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
136	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  For(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  illegal  start  of  type  [FE]            java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  For(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  For(int  i  =  0;  i  <  pointSet.size();  i++)  {	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    For(int    i    =    0;    i    <    resultSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
137	[BUG]  [BUGGY]  final  int[]  pointSet  =  new  int[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  int[]  pointSet  =  new  int[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  int[]  pointSet  =  new  int[pointSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }	  final    int[]    pointSet    =    new    int[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    pointSet    =    pointSet.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
138	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  pointSet);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  pointSet);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double  d  =  getNearestCluster(resultSet,  pointSet);	  final    double    d    =    getNearestCluster(pointSet,    resultSet);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
139	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  points);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  points);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double  d  =  getNearestCluster(resultSet,  points);	  final    double    d    =    getNearestCluster(pointSet,    resultSet);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
140	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  final  T  p  =  pointSet.get(i);  }  [CE]  illegal  start  of  type  [FE]        java.lang.IndexOutOfBoundsException:  Index:  26      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  final  T  p  =  pointSet.get(i);  }  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  0;  i  <  points.size();  i++)  {  final  T  p  =  pointSet.get(i);  }	  for(int    i    =    0;    i    <    points.size();    i++)    {    final    T    p    =    pointSet.get(i);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
141	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(pointSet,  resultSet);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(pointSet,  resultSet);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoints(pointSet,  resultSet);	  final    Point    <    T>    pointSet    =    getPoints(resultSet,    resultSet);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
142	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(resultSet,  dx2);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(resultSet,  dx2);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoints(resultSet,  dx2);	  final    Point    <    T>    pointSet    =    getPoints(resultSet,    resultSet);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
143	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(k++  -  sum);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  resultSet.get(k++  -  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  resultSet.get(k++  -  sum);	  final    double[]    pointSet    =    resultSet.get(k++);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
144	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(i++);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  resultSet.get(i++);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  resultSet.get(i++);	  final    double[]    pointSet    =    resultSet.get(k++);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
145	[BUG]  [BUGGY]  final  double[]  pointSet  =  points.get(k++);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  points.get(k++);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  points.get(k++);	  final    double[]    pointSet    =    resultSet.get(k++);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
146	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  }  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  }	  final    double[]    pointSet    =    new    double[resultSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    pointSet    =    getNearestCluster(pointSet,    i);    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
147	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(k++  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  resultSet.get(k++  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  resultSet.get(k++  -  1);	  final    double[]    pointSet    =    resultSet.get(k++);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
148	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(k++,  sum);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  resultSet.get(k++,  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  resultSet.get(k++,  sum);	  final    double[]    pointSet    =    resultSet.get(k++);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
149	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  for(int  i  =  1;  i  <  pointSet.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  1;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  for(int  i  =  1;  i  <  pointSet.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int    i    =    1;    i    <    pointSet.size();    i++)    {    final  T  p  =  pointSet.get(i);  for(int  i  =  1;  i  <  pointSet.size();  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
150	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  1;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int    i    =    1;    i    <    pointSet.size();    i++)    {    final  T  pointSet  =  pointSet.get(i);	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
151	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i	  final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    pointSet    =    getNearestCluster(pointSet,    i);    }    	non-compiled	[CE]  ')'  expected	47	None	replace
152	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  /  sum);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  /  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  resultSet.get(k  /  sum);	  final    double[]    pointSet    =    resultSet.get(k    +    sum);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
153	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  +  sum,  sum);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  +  sum,  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  resultSet.get(k  +  sum,  sum);	  final    double[]    pointSet    =    resultSet.get(k    +    sum);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
154	[BUG]  [BUGGY]  final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i	  final    int[]    pointSet    =    new    int[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    pointSet    =    getNearestCluster(pointSet,    i);    }    	non-compiled	[CE]  ')'  expected	48	None	replace
155	[BUG]  [BUGGY]  final  int[]  pointSet  =  new  int[resultSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  int[]  pointSet  =  new  int[resultSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);  }  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  int[]  pointSet  =  new  int[resultSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);  }	  final    int[]    pointSet    =    new    int[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    point    =    pointSet.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
156	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  points.get(k  +  sum);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  points.get(k  +  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  points.get(k  +  sum);	  final    Point    <    T>    pointSet    =    points.get(k);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
157	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet.get(k));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet.get(k));  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoint(resultSet.get(k));	  final    Point    <    T>    pointSet    =    getPoint(resultSet.size());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
158	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet.get(k);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet.get(k);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoint(resultSet.get(k);	  final    Point    <    T>    pointSet    =    getPoint(resultSet.size());    	non-compiled	[CE]  ')'  expected	30	None	replace
159	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  k  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  k  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoint(resultSet,  k  +  1);	  final    Point    <    T>    pointSet    =    getPoint(resultSet,    k);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
160	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  resultSet.size());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  resultSet.size());  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoint(resultSet,  resultSet.size());	  final    Point    <    T>    pointSet    =    getPoint(resultSet,    k);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
161	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  final  T  p  =  points.get(i);  [CE]  cannot  find  symbol  [FE]                java.lang.IndexOutOfBoundsException:  Index:  26      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  final  T  p  =  points.get(i);  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  0;  i  <  resultSet.size();  i++)  {  final  T  p  =  points.get(i);	  for(int    i    =    0;    i    <    points.size();    i++)    {    final    T    p    =    points.get(i);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
162	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  for(int  i  =  0;  i  <  resultsSet.size();  i++)  {  [CE]  illegal  start  of  type  [FE]            java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  for(int  i  =  0;  i  <  resultsSet.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  for(int  i  =  0;  i  <  resultsSet.size();  i++)  {	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    for(int    i    =    0;    i    <    resultsSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
163	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  resultSet  =  getNearestCluster(resultSet,  p);  }  [CE]  illegal  start  of  type  [FE]          java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  resultSet  =  getNearestCluster(resultSet,  p);  }  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  resultSet  =  getNearestCluster(resultSet,  p);  }	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    final    T    p    =    pointSet.get(i);    resultSet    =    getNearestCluster(resultSet,    p);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
164	[BUG]  [BUGGY]  for(final  T  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  resultSet  =  getNearestCluster(resultSet,  p);  }  [CE]  illegal  start  of  type  [FE]            java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(final  T  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  resultSet  =  getNearestCluster(resultSet,  p);  }  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(final  T  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  resultSet  =  getNearestCluster(resultSet,  p);  }	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    final    T    p    =    pointSet.get(i);    resultSet    =    getNearestCluster(resultSet,    p);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
165	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  resultSet  =  getNearestCluster(resultSet,  p);  [CE]  illegal  start  of  type  [FE]              java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  resultSet  =  getNearestCluster(resultSet,  p);  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  resultSet  =  getNearestCluster(resultSet,  p);	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    final    T    p    =    pointSet.get(i);    resultSet    =    getNearestCluster(resultSet,    p);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
166	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  -  1];  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  -  1];	  final    double[]    pointSet    =    new    double[resultSet.size()    ];    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
167	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  [CE]  illegal  start  of  type  [FE]        java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  for(int  i  =  0;  i  <  resultSet.size();  i++)  {	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    for(int    i    =    0;    i    <    resultSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
168	[BUG]  [BUGGY]  final  T  pointSet  =  resultSet.get(k  +  1  -  sum);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  resultSet.get(k  +  1  -  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  resultSet.get(k  +  1  -  sum);	  final    T    pointSet    =    resultSet.get(k    +    1);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
169	[BUG]  [BUGGY]  final  T  pointSet  =  resultSet.get(k  /  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  resultSet.get(k  /  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  resultSet.get(k  /  1);	  final    T    pointSet    =    resultSet.get(k    +    1);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
170	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  }  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  }	  final    double[]    pointSet    =    new    double[resultSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    point    =    getNearestCluster(pointSet,    i);    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
171	[BUG]  [BUGGY]  final  T  pointSet  =  resultSet.get(k  -  1  +  sum);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  resultSet.get(k  -  1  +  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  resultSet.get(k  -  1  +  sum);	  final    T    pointSet    =    resultSet.get(k    -    1);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
172	[BUG]  [BUGGY]  final  T  pointSet  =  resultSet.get(k  -  1  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  resultSet.get(k  -  1  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  resultSet.get(k  -  1  -  1);	  final    T    pointSet    =    resultSet.get(k    -    1);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
173	[BUG]  [BUGGY]  final  T  pointSet  =  resultSet.get(k  -  2);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  resultSet.get(k  -  2);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  resultSet.get(k  -  2);	  final    T    pointSet    =    resultSet.get(k    -    1);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
174	[BUG]  [BUGGY]  for(final  T  i  =  0;  i  <  resultSet.size();  i++)  {  final  T  p  =  resultSet.get(i);  [CE]  incompatible  types  [FE]            java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(final  T  i  =  0;  i  <  resultSet.size();  i++)  {  final  T  p  =  resultSet.get(i);  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(final  T  i  =  0;  i  <  resultSet.size();  i++)  {  final  T  p  =  resultSet.get(i);	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    final    T    p    =    resultSet.get(i);    	non-compiled	[CE]  incompatible  types	70	None	replace
175	[BUG]  [BUGGY]  for(final  T  i  =  0;  i  <  resultSet.size();  i++)  {  final  T  p  =  resultSet.get(i);  }  [CE]  illegal  start  of  type  [FE]              java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(final  T  i  =  0;  i  <  resultSet.size();  i++)  {  final  T  p  =  resultSet.get(i);  }  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(final  T  i  =  0;  i  <  resultSet.size();  i++)  {  final  T  p  =  resultSet.get(i);  }	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    final    T    p    =    resultSet.get(i);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
176	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  final  Point  <  T>  pointSet  =  getPoints(resultSet,  i);  }  [CE]  illegal  start  of  type  [FE]            java.lang.IndexOutOfBoundsException:  Index:  26      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  final  Point  <  T>  pointSet  =  getPoints(resultSet,  i);  }  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  0;  i  <  resultSet.size();  i++)  {  final  Point  <  T>  pointSet  =  getPoints(resultSet,  i);  }	  for(int    i    =    0;    i    <    points.size();    i++)    {    final    Point    <    T>    pointSet    =    getPoints(resultSet,    i);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
177	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  final  Point  <  T>  pointSet  =  getPoints(resultSet,  i);  [CE]  cannot  find  symbol  [FE]              java.lang.IndexOutOfBoundsException:  Index:  26      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  final  Point  <  T>  pointSet  =  getPoints(resultSet,  i);  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  0;  i  <  resultSet.size();  i++)  {  final  Point  <  T>  pointSet  =  getPoints(resultSet,  i);	  for(int    i    =    0;    i    <    points.size();    i++)    {    final    Point    <    T>    pointSet    =    getPoints(resultSet,    i);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
178	[BUG]  [BUGGY]  for(final  Point  <  T>  i  =  0;  i  <  points.size();  i++)  {  final  Point  <  T>  pointSet  =  getPoints(resultSet,  i);  }  [CE]  illegal  start  of  type  [FE]                java.lang.IndexOutOfBoundsException:  Index:  26      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(final  Point  <  T>  i  =  0;  i  <  points.size();  i++)  {  final  Point  <  T>  pointSet  =  getPoints(resultSet,  i);  }  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(final  Point  <  T>  i  =  0;  i  <  points.size();  i++)  {  final  Point  <  T>  pointSet  =  getPoints(resultSet,  i);  }	  for(int    i    =    0;    i    <    points.size();    i++)    {    final    Point    <    T>    pointSet    =    getPoints(resultSet,    i);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
179	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i	  final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    point    =    getNearestCluster(pointSet,    i);    }    	non-compiled	[CE]  ')'  expected	40	None	replace
180	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  -  2);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  -  2);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  resultSet.get(k  -  2);	  final    double[]    pointSet    =    resultSet.get(k    -    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
181	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  -  1  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  -  1  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  resultSet.get(k  -  1  -  1);	  final    double[]    pointSet    =    resultSet.get(k    -    1);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
182	[BUG]  [BUGGY]  final  T  pointSet  =  this.pointSet.get(i);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  this.pointSet.get(i);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  this.pointSet.get(i);	  final    T    pointSet    =    pointSet.get(i);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
183	[BUG]  [BUGGY]  final  T  pointSet  =  resultSet.get(k  -  sum);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  resultSet.get(k  -  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  resultSet.get(k  -  sum);	  final    T    pointSet    =    resultSet.get(k    +    sum);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
184	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  resultsSet.get(k);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  resultsSet.get(k);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  resultsSet.get(k);	  final    Point    <    T>    pointSet    =    k.get(resultSet);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
185	[BUG]  [BUGGY]  final  double[]  pointSet  =  results.get(k);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  results.get(k);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  results.get(k);	  final    double[]    pointSet    =    points.get(k);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
186	[BUG]  [BUGGY]  final  double[]  pointSet  =  data.get(k);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  data.get(k);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  data.get(k);	  final    double[]    pointSet    =    points.get(k);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
187	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  results.get(k  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  results.get(k  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  results.get(k  -  1);	  final    Point    <    T>    pointSet    =    results.get(k);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
188	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dx2[k],  sum);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dx2[k],  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double  d  =  getNearestCluster(resultSet,  dx2[k],  sum);	  final    double    d    =    getNearestCluster(resultSet,    resultSet,    sum);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
189	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  For(int  i  =  0;  i  <  points.size();  i++)  {  [CE]  '.class'  expected  [FE]          java.lang.IndexOutOfBoundsException:  Index:  26      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  For(int  i  =  0;  i  <  points.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  0;  i  <  pointSet.size();  i++)  {  For(int  i  =  0;  i  <  points.size();  i++)  {	  for(int    i    =    0;    i    <    points.size();    i++)    {    For(int    i    =    0;    i    <    points.size();    i++)    {    	non-compiled	[CE]  '.class'  expected	12	None	replace
190	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  array.get(resultSet);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  array.get(resultSet);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  array.get(resultSet);	  final    Point    <    T>    pointSet    =    array.get(k);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
191	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  array.get(k  +  sum);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  array.get(k  +  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  array.get(k  +  sum);	  final    Point    <    T>    pointSet    =    array.get(k);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
192	[BUG]  [BUGGY]  final  T  pointSet  =  resultSet.get(i  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  resultSet.get(i  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  resultSet.get(i  +  1);	  final    T    pointSet    =    resultSet.get(i);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
193	[BUG]  [BUGGY]  final  double[]  points  =  new  double[resultSet.size()  -  1];  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  points  =  new  double[resultSet.size()  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  points  =  new  double[resultSet.size()  -  1];	  final    double[]    points    =    new    double[resultSet.size()    ];    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
194	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);  }  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);  }	  final    double[]    pointSet    =    new    double[resultSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    point    =    pointSet.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
195	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  *  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  *  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  resultSet.get(k  *  1);	  final    double[]    pointSet    =    resultSet.get(k    +    1);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
196	[BUG]  [BUGGY]  final  T  pointSet  =  points.get(resultSet);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  points.get(resultSet);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  points.get(resultSet);	  final    T    pointSet    =    points.get(k);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
197	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }	  final    double[]    pointSet    =    new    double[resultSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    pointSet    =    pointSet.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
198	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  sum  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  sum  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double  d  =  getNearestCluster(resultSet,  sum  +  1);	  final    double    d    =    getNearestCluster(resultSet,    sum);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
199	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  k  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  k  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double  d  =  getNearestCluster(resultSet,  k  +  1);	  final    double    d    =    getNearestCluster(resultSet,    k);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
200	[BUG]  [BUGGY]  final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  int[]  pointSet  =  new  int[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i	  final    int[]    pointSet    =    new    int[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    point    =    getNearestCluster(pointSet,    i);    }    	non-compiled	[CE]  ')'  expected	41	None	replace
201	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  For(int  i  =  0;  i  <  resultSet.size();  i++)  {  [CE]  '.class'  expected  [FE]          java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  For(int  i  =  0;  i  <  resultSet.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  0;  i  <  pointSet.size();  i++)  {  For(int  i  =  0;  i  <  resultSet.size();  i++)  {	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    For(int    i    =    0;    i    <    resultSet.size();    i++)    {    	non-compiled	[CE]  '.class'  expected	24	None	replace
202	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  For(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  '.class'  expected  [FE]            java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  For(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  0;  i  <  pointSet.size();  i++)  {  For(int  i  =  0;  i  <  pointSet.size();  i++)  {	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    For(int    i    =    0;    i    <    resultSet.size();    i++)    {    	non-compiled	[CE]  '.class'  expected	24	None	replace
203	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(dx2);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(dx2);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoints(dx2);	  final    Point    <    T>    pointSet    =    getPoints(pointSet);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
204	[BUG]  [BUGGY]  final  int[]  pointSet  =  new  int[resultSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  int[]  pointSet  =  new  int[resultSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  int[]  pointSet  =  new  int[resultSet.size()  +  1];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }	  final    int[]    pointSet    =    new    int[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    pointSet    =    pointSet.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
205	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(resultSet,  resultSet.size());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(resultSet,  resultSet.size());  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoints(resultSet,  resultSet.size());	  final    Point    <    T>    pointSet    =    getPoints(resultSet,    resultSet);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
206	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dataSet);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dataSet);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double  d  =  getNearestCluster(resultSet,  dataSet);	  final    double    d    =    getNearestCluster(pointSet,    resultSet);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
207	[BUG]  [BUGGY]  final  int[]  pointSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  int[]  pointSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  int[]  pointSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }	  final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    pointSet    =    pointSet.get(i);    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
208	[BUG]  [BUGGY]  final  T  pointSet  =  resultSet.get(resultSet.size()  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  resultSet.get(resultSet.size()  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  resultSet.get(resultSet.size()  -  1);	  final    T    pointSet    =    resultSet.get(k    -    1);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
209	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dx2[0],  sum);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dx2[0],  sum);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double  d  =  getNearestCluster(resultSet,  dx2[0],  sum);	  final    double    d    =    getNearestCluster(resultSet,    resultSet,    sum);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
210	[BUG]  [BUGGY]  final  T  pointSet  =  dx2.get(i);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  dx2.get(i);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  dx2.get(i);	  final    T    pointSet    =    pointSet.get(i);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
211	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  array.get(resultSet.size());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  array.get(resultSet.size());  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  array.get(resultSet.size());	  final    Point    <    T>    pointSet    =    array.get(k);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
212	[BUG]  [BUGGY]  final  double[]  points  =  new  double[resultSet.size()  +  k  ];  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  points  =  new  double[resultSet.size()  +  k  ];  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  points  =  new  double[resultSet.size()  +  k  ];	  final    double[]    points    =    new    double[resultSet.size()    ];    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
213	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  dx2);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  dx2);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoint(resultSet,  dx2);	  final    Point    <    T>    pointSet    =    getPoint(resultSet,    resultSet);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
214	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  For(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  illegal  start  of  type  [FE]          java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  For(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  For(int  i  =  0;  i  <  pointSet.size();  i++)  {	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    For(int    i    =    0;    i    <    resultSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
215	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(resultSet.size()++);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  resultSet.get(resultSet.size()++);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  resultSet.get(resultSet.size()++);	  final    double[]    pointSet    =    resultSet.get(k++);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
216	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultsSet.get(k++);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double[]  pointSet  =  resultsSet.get(k++);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  resultsSet.get(k++);	  final    double[]    pointSet    =    resultSet.get(k++);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
217	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  this.points.get(k);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  this.points.get(k);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  this.points.get(k);	  final    Point    <    T>    pointSet    =    points.get(k);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
218	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  final  T  p  =  points.get(i  +  1);  [CE]  cannot  find  symbol  [FE]                java.lang.IndexOutOfBoundsException:  Index:  26      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  final  T  p  =  points.get(i  +  1);  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  0;  i  <  points.size();  i++)  {  final  T  p  =  points.get(i  +  1);	  for(int    i    =    0;    i    <    points.size();    i++)    {    final    T    p    =    points.get(i);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
219	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  tip);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  tip);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double  d  =  getNearestCluster(resultSet,  tip);	  final    double    d    =    getNearestCluster(pointSet,    resultSet);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
220	[BUG]  [BUGGY]  final  T  p  =  pointSet.get(i);  resultSet  =  getNearestCluster(resultSet,  p);  [CE]  illegal  start  of  type  [FE]          java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  p  =  pointSet.get(i);  resultSet  =  getNearestCluster(resultSet,  p);  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  p  =  pointSet.get(i);  resultSet  =  getNearestCluster(resultSet,  p);	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    final    T    p    =    pointSet.get(i);    resultSet    =    getNearestCluster(resultSet,    p);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
221	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  }  [CE]  illegal  start  of  type  [FE]        java.lang.IndexOutOfBoundsException:  Index:  26      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  }  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  0;  i  <  resultSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  }	  for(int    i    =    0;    i    <    points.size();    i++)    {    final    T    p    =    pointSet.get(i);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
222	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(dx2,  k);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(dx2,  k);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoints(dx2,  k);	  final    Point    <    T>    pointSet    =    getPoints(resultSet,    k);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
223	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  [CE]  illegal  start  of  type  [FE]        java.lang.IndexOutOfBoundsException:  Index:  13      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  [BUGGY]      final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  for(int  i  =  0;  i  <  resultSet.size();  i++)  {	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    for(int    i    =    0;    i    <    resultSet.size();    i++)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
224	[BUG]  [BUGGY]  final  T  pointSet  =  resultSet.get(k  *  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;      [BUGGY]  final  T  pointSet  =  resultSet.get(k  *  1);  [BUGGY]      for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  resultSet.get(k  *  1);	  final    T    pointSet    =    resultSet.get(k    +    1);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
