bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  points.get(k);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  Point  <  T>  pointSet  =  points.get(k);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  points.get(k);	      final    Point    <    T>    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
2	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  pointSet.get(k);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  Point  <  T>  pointSet  =  pointSet.get(k);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  pointSet.get(k);	      final    Point    <    T>    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
3	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  k.get(resultSet);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  Point  <  T>  pointSet  =  k.get(resultSet);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  k.get(resultSet);	      final    Point    <    T>    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  13    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  for(int  i  =  1;  i  <  pointSet.size();  i++)  {  [BUGGY]    final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	add	for(int  i  =  1;  i  <  pointSet.size();  i++)  {	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    	compilable	  [FE]  AssertionError  	10	1	replace
5	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  pointSet.size();  i++)  {  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  13    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  for(int  i  =  1;  i  <  pointSet.size();  i++)  {  [BUGGY]    final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  1;  i  <  pointSet.size();  i++)  {	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    	compilable	  [FE]  AssertionError  	10	1	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberSet.size();  i++)  {  [CE]  cannot  find  symbol  numberSet  [FE]    java.lang.IndexOutOfBoundsException:  Index:  26    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  for(int  i  =  0;  i  <  numberSet.size();  i++)  {  [BUGGY]    final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  0;  i  <  numberSet.size();  i++)  {	  for(int    i    =    0;    i    <    points.size();    i++)    {    	non-compiled	[CE]  cannot  find  symbol  numberSet	7	None	replace
7	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);  }  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);  }	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    point    =    pointSet.get(i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);  }  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);  }	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    point    =    pointSet.get(i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
9	[BUG]  [BUGGY]  final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);  }  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);  }	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    point    =    pointSet.get(i);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  list.size();  i++)  {  [CE]  cannot  find  symbol  list  [FE]          AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  for(int  i  =  0;  i  <  list.size();  i++)  {  [BUGGY]    final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  0;  i  <  list.size();  i++)  {	  for(int    i    =    0;    i    <    this.pointSet.size();    i++)    {    	non-compiled	[CE]  cannot  find  symbol  list	8	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  for(int  i  =  0;  i  <  points.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IndexOutOfBoundsException:  Index:  26    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  for(int  i  =  0;  i  <  points.size();  i++)  {  [BUGGY]    final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int    i    =    0;    i    <    points.size();    i++)    {    for(int  i  =  0;  i  <  points.size();  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
12	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  For(int  i  =  0;  i  <  points.size();  i++)  {  [CE]  '.class'  expected  [FE]      java.lang.IndexOutOfBoundsException:  Index:  26    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  For(int  i  =  0;  i  <  points.size();  i++)  {  [BUGGY]    final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int    i    =    0;    i    <    points.size();    i++)    {    For(int  i  =  0;  i  <  points.size();  i++)  {	  	non-compiled	[CE]  '.class'  expected	6	None	add
13	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  final  T  p  =  points.get(i);  for(int  i  =  0;  i  <  points.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IndexOutOfBoundsException:  Index:  26    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  final  T  p  =  points.get(i);  for(int  i  =  0;  i  <  points.size();  i++)  {  [BUGGY]    final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int    i    =    0;    i    <    points.size();    i++)    {    final  T  p  =  points.get(i);  for(int  i  =  0;  i  <  points.size();  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
14	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.IndexOutOfBoundsException:  Index:  26    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]    final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int    i    =    0;    i    <    points.size();    i++)    {    for(int  i  =  0;  i  <  pointSet.size();  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  final  T  p  =  points.get(i);  [CE]  illegal  start  of  expression  [FE]            java.lang.IndexOutOfBoundsException:  Index:  26    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  final  T  p  =  points.get(i);  [BUGGY]    final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int    i    =    0;    i    <    points.size();    i++)    {    final  T  p  =  points.get(i);	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
16	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  ];	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
17	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resetSet.size()  ];  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double[]  pointSet  =  new  double[resetSet.size()  ];  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[resetSet.size()  ];	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
18	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  +  1];  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  +  1];  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[pointSet.size()  +  1];	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
19	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  sum);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  sum);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double  d  =  getNearestCluster(resultSet,  sum);	      final    double    d    =    getNearestCluster(resultSet,    resultSet);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
20	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(pointSet,  resultSet);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double  d  =  getNearestCluster(pointSet,  resultSet);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double  d  =  getNearestCluster(pointSet,  resultSet);	      final    double    d    =    getNearestCluster(resultSet,    resultSet);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
21	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  resultSet,  sum);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  resultSet,  sum);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double  d  =  getNearestCluster(resultSet,  resultSet,  sum);	      final    double    d    =    getNearestCluster(resultSet,    resultSet);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
22	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  k);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  k);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double  d  =  getNearestCluster(resultSet,  k);	      final    double    d    =    getNearestCluster(resultSet,    resultSet);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IndexOutOfBoundsException:  Index:  13    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  [BUGGY]    final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int    i    =    0;    i    <    resultSet.size();    i++)    {    for(int  i  =  0;  i  <  resultSet.size();  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
24	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  For(int  i  =  0;  i  <  resultSet.size();  i++)  {  [CE]  '.class'  expected  [FE]      java.lang.IndexOutOfBoundsException:  Index:  13    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  For(int  i  =  0;  i  <  resultSet.size();  i++)  {  [BUGGY]    final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int    i    =    0;    i    <    resultSet.size();    i++)    {    For(int  i  =  0;  i  <  resultSet.size();  i++)  {	  	non-compiled	[CE]  '.class'  expected	9	None	add
25	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  for(int  i  =  0;  i  <  resultsSet.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.IndexOutOfBoundsException:  Index:  13    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  for(int  i  =  0;  i  <  resultsSet.size();  i++)  {  [BUGGY]    final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int    i    =    0;    i    <    resultSet.size();    i++)    {    for(int  i  =  0;  i  <  resultsSet.size();  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
26	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.IndexOutOfBoundsException:  Index:  13    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]    final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int    i    =    0;    i    <    resultSet.size();    i++)    {    for(int  i  =  0;  i  <  pointSet.size();  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
27	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  [CE]  illegal  start  of  expression  [FE]            java.lang.IndexOutOfBoundsException:  Index:  13    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  [BUGGY]    final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int    i    =    0;    i    <    resultSet.size();    i++)    {    final  T  p  =  pointSet.get(i);	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
28	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  sum);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  sum);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoint(resultSet,  sum);	      final    Point    <    T>    pointSet    =    getPoint(resultSet);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
29	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(pointSet);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(pointSet);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoint(pointSet);	      final    Point    <    T>    pointSet    =    getPoint(resultSet);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
30	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet.size());  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet.size());  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoint(resultSet.size());	      final    Point    <    T>    pointSet    =    getPoint(resultSet);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
31	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(resultSet,  sum);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(resultSet,  sum);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoints(resultSet,  sum);	      final    Point    <    T>    pointSet    =    getPoints(resultSet);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
32	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(pointSet);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(pointSet);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoints(pointSet);	      final    Point    <    T>    pointSet    =    getPoints(resultSet);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
33	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(resultSet,  k);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(resultSet,  k);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoints(resultSet,  k);	      final    Point    <    T>    pointSet    =    getPoints(resultSet);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
34	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  -  1);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  -  1);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  resultSet.get(k  -  1);	      final    double[]    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
35	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  +  1);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  +  1);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  resultSet.get(k  +  1);	      final    double[]    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
36	[BUG]  [BUGGY]  final  double[]  pointSet  =  points.get(k);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double[]  pointSet  =  points.get(k);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  points.get(k);	      final    double[]    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
37	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    pointSet    =    pointSet.get(i);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
38	[BUG]  [BUGGY]  final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    pointSet    =    pointSet.get(i);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
39	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  }	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    pointSet    =    pointSet.get(i);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
40	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  }  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  }	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    point    =    getNearestCluster(pointSet,    i);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
41	[BUG]  [BUGGY]  final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  }  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  }	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    point    =    getNearestCluster(pointSet,    i);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
42	[BUG]  [BUGGY]  final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                    AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    point    =    getNearestCluster(pointSet,    i);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	5	None	replace
43	[BUG]  [BUGGY]  final  T  pointSet  =  pointSet.get(k);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  T  pointSet  =  pointSet.get(k);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  pointSet.get(k);	      final    T    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
44	[BUG]  [BUGGY]  final  T  pointSet  =  points.get(k);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  T  pointSet  =  points.get(k);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  points.get(k);	      final    T    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
45	[BUG]  [BUGGY]  final  T  pointSet  =  resultSet.get(k  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  T  pointSet  =  resultSet.get(k  -  1);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  resultSet.get(k  -  1);	      final    T    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
46	[BUG]  [BUGGY]  final  T  pointSet  =  resultSet.get(k  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  T  pointSet  =  resultSet.get(k  +  1);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  resultSet.get(k  +  1);	      final    T    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
47	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double[]  pointSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  }  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  }	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    pointSet    =    getNearestCluster(pointSet,    i);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
48	[BUG]  [BUGGY]  final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  }  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  }	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    pointSet    =    getNearestCluster(pointSet,    i);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
49	[BUG]  [BUGGY]  final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                  AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  int[]  pointSet  =  new  int[pointSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    pointSet    =    getNearestCluster(pointSet,    i);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	4	None	replace
50	[BUG]  [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dx2);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double  d  =  getNearestCluster(resultSet,  dx2);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double  d  =  getNearestCluster(resultSet,  dx2);	      final    double    d    =    getNearestCluster(resultSet,    resultSet);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
51	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]            AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  pointSet.get(i);	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    point    =    pointSet.get(i);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	3	None	replace
52	[BUG]  [BUGGY]  final  T  pointSet  =  resultSet.get(i);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  T  pointSet  =  resultSet.get(i);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  resultSet.get(i);	      final    T    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
53	[BUG]  [BUGGY]  final  T  pointSet  =  resultSet.get(k  +  sum);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  T  pointSet  =  resultSet.get(k  +  sum);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  resultSet.get(k  +  sum);	      final    T    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
54	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  +  sum);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double[]  pointSet  =  resultSet.get(k  +  sum);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  resultSet.get(k  +  sum);	      final    double[]    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
55	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]              AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    pointSet    =    getNearestCluster(pointSet,    i);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	4	None	replace
56	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  }  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  getNearestCluster(pointSet,  i);  }	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    pointSet    =    getNearestCluster(pointSet,    i);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
57	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  resultSet);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  resultSet);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoint(resultSet,  resultSet);	      final    Point    <    T>    pointSet    =    getPoint(resultSet);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
58	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  k);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  Point  <  T>  pointSet  =  getPoint(resultSet,  k);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoint(resultSet,  k);	      final    Point    <    T>    pointSet    =    getPoint(resultSet);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
59	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  array.get(k);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  Point  <  T>  pointSet  =  array.get(k);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  array.get(k);	      final    Point    <    T>    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
60	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  results.get(k);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  Point  <  T>  pointSet  =  results.get(k);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  results.get(k);	      final    Point    <    T>    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
61	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  final  T  p  =  pointSet.get(i);  [CE]  illegal  start  of  expression  [FE]    java.lang.IndexOutOfBoundsException:  Index:  26    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  final  T  p  =  pointSet.get(i);  [BUGGY]    final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int    i    =    0;    i    <    points.size();    i++)    {    final  T  p  =  pointSet.get(i);	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
62	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  final  T  p  =  pointSet.get(i);  for(int  i  =  0;  i  <  points.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.IndexOutOfBoundsException:  Index:  26    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  final  T  p  =  pointSet.get(i);  for(int  i  =  0;  i  <  points.size();  i++)  {  [BUGGY]    final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int    i    =    0;    i    <    points.size();    i++)    {    final  T  p  =  pointSet.get(i);  for(int  i  =  0;  i  <  points.size();  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  final  Point  <  T>  pointSet  =  getPoints(resultSet,  i);  [CE]  illegal  start  of  expression  [FE]        java.lang.IndexOutOfBoundsException:  Index:  26    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  for(int  i  =  0;  i  <  points.size();  i++)  {  final  Point  <  T>  pointSet  =  getPoints(resultSet,  i);  [BUGGY]    final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int    i    =    0;    i    <    points.size();    i++)    {    final  Point  <  T>  pointSet  =  getPoints(resultSet,  i);	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
64	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]                AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    point    =    getNearestCluster(pointSet,    i);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	5	None	replace
65	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  }  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  point  =  getNearestCluster(pointSet,  i);  }	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    point    =    getNearestCluster(pointSet,    i);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
66	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.points.size();  i++)  {  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]    java.lang.IndexOutOfBoundsException:  Index:  26    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  for(int  i  =  0;  i  <  this.points.size();  i++)  {  [BUGGY]    final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int  i  =  0;  i  <  this.points.size();  i++)  {	  for(int    i    =    0;    i    <    points.size();    i++)    {    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	7	None	replace
67	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  [CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)  [FE]          AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  ];  for(int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    pointSet    =    pointSet.get(i);    	non-compiled	[CE]  variable  pointSet  is  already  defined  in  method  <T>chooseInitialCenters(Collection<T>,int,Random)	2	None	replace
68	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IndexOutOfBoundsException:  Index:  13    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  [BUGGY]    final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int    i    =    0;    i    <    resultSet.size();    i++)    {    final  T  p  =  pointSet.get(i);  for(int  i  =  0;  i  <  resultSet.size();  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
69	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  resultSet  =  getNearestCluster(resultSet,  p);  [CE]  illegal  start  of  expression  [FE]      java.lang.IndexOutOfBoundsException:  Index:  13    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  resultSet  =  getNearestCluster(resultSet,  p);  [BUGGY]    final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int    i    =    0;    i    <    resultSet.size();    i++)    {    final  T  p  =  pointSet.get(i);  resultSet  =  getNearestCluster(resultSet,  p);	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
70	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  final  T  p  =  resultSet.get(i);  [CE]  illegal  start  of  expression  [FE]        java.lang.IndexOutOfBoundsException:  Index:  13    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  final  T  p  =  resultSet.get(i);  [BUGGY]    final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int    i    =    0;    i    <    resultSet.size();    i++)    {    final  T  p  =  resultSet.get(i);	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
71	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[ResultSet.size()  ];  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double[]  pointSet  =  new  double[ResultSet.size()  ];  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[ResultSet.size()  ];	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
72	[BUG]  [BUGGY]  final  double[]  points  =  new  double[resultSet.size()  ];  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double[]  points  =  new  double[resultSet.size()  ];  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  points  =  new  double[resultSet.size()  ];	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
73	[BUG]  [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(resultSet,  resultSet);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  Point  <  T>  pointSet  =  getPoints(resultSet,  resultSet);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  Point  <  T>  pointSet  =  getPoints(resultSet,  resultSet);	      final    Point    <    T>    pointSet    =    getPoints(resultSet);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
74	[BUG]  [BUGGY]  final  T  pointSet  =  pointSet.get(i);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  T  pointSet  =  pointSet.get(i);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  pointSet.get(i);	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    pointSet    =    pointSet.get(i);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
75	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.IndexOutOfBoundsException:  Index:  13    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  final  T  pointSet  =  pointSet.get(i);  for(int  i  =  0;  i  <  resultSet.size();  i++)  {  [BUGGY]    final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	for(int    i    =    0;    i    <    resultSet.size();    i++)    {    final  T  pointSet  =  pointSet.get(i);  for(int  i  =  0;  i  <  resultSet.size();  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
76	[BUG]  [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  +  1];  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double[]  pointSet  =  new  double[resultSet.size()  +  1];  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  new  double[resultSet.size()  +  1];	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
77	[BUG]  [BUGGY]  final  T  pointSet  =  getNearestCluster(pointSet,  i);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  T  pointSet  =  getNearestCluster(pointSet,  i);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  T  pointSet  =  getNearestCluster(pointSet,  i);	      final    double[]    pointSet    =    new    double[pointSet.size()    ];    for(int    i    =    0;    i    <    pointSet.size();    i++)    {    final    T    pointSet    =    getNearestCluster(pointSet,    i);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
78	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  pointSet.size();  i++)  {  [CE]  '.class'  expected  [FE]    java.lang.IndexOutOfBoundsException:  Index:  13    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  For(int  i  =  0;  i  <  pointSet.size();  i++)  {  [BUGGY]    final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	For(int  i  =  0;  i  <  pointSet.size();  i++)  {	  for(int    i    =    0;    i    <    resultSet.size();    i++)    {    	non-compiled	[CE]  '.class'  expected	10	None	replace
79	[BUG]  [BUGGY]  final  double[]  pointSet  =  resultSet.get(k++);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {    int  sum  =  0;    [BUGGY]  final  double[]  pointSet  =  resultSet.get(k++);  [BUGGY]    for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  [CLASS]  	projects/Math57/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java	0.5773502691896258	176	176	1	replace	final  double[]  pointSet  =  resultSet.get(k++);	      final    double[]    pointSet    =    resultSet.get(k);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
