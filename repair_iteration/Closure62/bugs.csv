bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] this(source, LINE); [FE] ComparisonFailure [CONTEXT] public LightweightMessageFormatter(SourceExcerptProvider source) { [BUGGY] this(source, LINE); [BUGGY] } [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] <init> [RETURN_TYPE] SourceExcerptProvider)  SourceExcerptProvider source [VARIABLES] SourceExcerpt excerpt SourceExcerptProvider source boolean ExcerptFormatter excerptFormatter  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	44	44	2	replace	
2	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public LightweightMessageFormatter(SourceExcerptProvider source) { [BUGGY] [BUGGY] this(source, LINE); } [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] <init> [RETURN_TYPE] SourceExcerptProvider)  SourceExcerptProvider source [VARIABLES] SourceExcerpt excerpt SourceExcerptProvider source boolean ExcerptFormatter excerptFormatter  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	44	44	2	add	
3	[BUG] [BUGGY] } [FE] ComparisonFailure [CONTEXT] public LightweightMessageFormatter(SourceExcerptProvider source) { this(source, LINE); [BUGGY] } [BUGGY]  [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] <init> [RETURN_TYPE] SourceExcerptProvider)  SourceExcerptProvider source [VARIABLES] SourceExcerpt excerpt SourceExcerptProvider source boolean ExcerptFormatter excerptFormatter  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	45	45	2	replace	
4	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public LightweightMessageFormatter(SourceExcerptProvider source) { this(source, LINE); [BUGGY] [BUGGY] } [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] <init> [RETURN_TYPE] SourceExcerptProvider)  SourceExcerptProvider source [VARIABLES] SourceExcerpt excerpt SourceExcerptProvider source boolean ExcerptFormatter excerptFormatter  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	45	45	2	add	
5	[BUG] [BUGGY] super(source); [FE] ComparisonFailure [CONTEXT] public LightweightMessageFormatter(SourceExcerptProvider source, SourceExcerpt excerpt) { [BUGGY] super(source); [BUGGY] Preconditions.checkNotNull(source); this.excerpt = excerpt; } [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] <init> [RETURN_TYPE] SourceExcerpt)  SourceExcerptProvider source SourceExcerpt excerpt [VARIABLES] SourceExcerpt excerpt SourceExcerptProvider source boolean ExcerptFormatter excerptFormatter  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	49	49	2	replace	
6	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public LightweightMessageFormatter(SourceExcerptProvider source, SourceExcerpt excerpt) { [BUGGY] [BUGGY] super(source); Preconditions.checkNotNull(source); this.excerpt = excerpt; } [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] <init> [RETURN_TYPE] SourceExcerpt)  SourceExcerptProvider source SourceExcerpt excerpt [VARIABLES] SourceExcerpt excerpt SourceExcerptProvider source boolean ExcerptFormatter excerptFormatter  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	49	49	2	add	
7	[BUG] [BUGGY] Preconditions.checkNotNull(source); [FE] ComparisonFailure [CONTEXT] public LightweightMessageFormatter(SourceExcerptProvider source, SourceExcerpt excerpt) { super(source); [BUGGY] Preconditions.checkNotNull(source); [BUGGY] this.excerpt = excerpt; } [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] <init> [RETURN_TYPE] SourceExcerpt)  SourceExcerptProvider source SourceExcerpt excerpt [VARIABLES] SourceExcerpt excerpt SourceExcerptProvider source boolean ExcerptFormatter excerptFormatter  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	50	50	2	replace	
8	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public LightweightMessageFormatter(SourceExcerptProvider source, SourceExcerpt excerpt) { super(source); [BUGGY] [BUGGY] Preconditions.checkNotNull(source); this.excerpt = excerpt; } [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] <init> [RETURN_TYPE] SourceExcerpt)  SourceExcerptProvider source SourceExcerpt excerpt [VARIABLES] SourceExcerpt excerpt SourceExcerptProvider source boolean ExcerptFormatter excerptFormatter  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	50	50	2	add	
9	[BUG] [BUGGY] this.excerpt = excerpt; [FE] ComparisonFailure [CONTEXT] public LightweightMessageFormatter(SourceExcerptProvider source, SourceExcerpt excerpt) { super(source); Preconditions.checkNotNull(source); [BUGGY] this.excerpt = excerpt; [BUGGY] } [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] <init> [RETURN_TYPE] SourceExcerpt)  SourceExcerptProvider source SourceExcerpt excerpt [VARIABLES] SourceExcerpt excerpt SourceExcerptProvider source boolean ExcerptFormatter excerptFormatter  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	51	51	2	replace	
10	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public LightweightMessageFormatter(SourceExcerptProvider source, SourceExcerpt excerpt) { super(source); Preconditions.checkNotNull(source); [BUGGY] [BUGGY] this.excerpt = excerpt; } [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] <init> [RETURN_TYPE] SourceExcerpt)  SourceExcerptProvider source SourceExcerpt excerpt [VARIABLES] SourceExcerpt excerpt SourceExcerptProvider source boolean ExcerptFormatter excerptFormatter  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	51	51	2	add	
11	[BUG] [BUGGY] } [FE] ComparisonFailure [CONTEXT] public LightweightMessageFormatter(SourceExcerptProvider source, SourceExcerpt excerpt) { super(source); Preconditions.checkNotNull(source); this.excerpt = excerpt; [BUGGY] } [BUGGY]  [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] <init> [RETURN_TYPE] SourceExcerpt)  SourceExcerptProvider source SourceExcerpt excerpt [VARIABLES] SourceExcerpt excerpt SourceExcerptProvider source boolean ExcerptFormatter excerptFormatter  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	52	52	2	replace	
12	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public LightweightMessageFormatter(SourceExcerptProvider source, SourceExcerpt excerpt) { super(source); Preconditions.checkNotNull(source); this.excerpt = excerpt; [BUGGY] [BUGGY] } [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] <init> [RETURN_TYPE] SourceExcerpt)  SourceExcerptProvider source SourceExcerpt excerpt [VARIABLES] SourceExcerpt excerpt SourceExcerptProvider source boolean ExcerptFormatter excerptFormatter  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	52	52	2	add	
13	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] private SourceExcerpt excerpt; [CLASS] LightweightMessageFormatter LineNumberingFormatter  [VARIABLES] 	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	32	32	2	replace	
14	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] private SourceExcerpt excerpt; [CLASS] LightweightMessageFormatter LineNumberingFormatter  [VARIABLES] 	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	32	32	2	add	
15	[BUG] [BUGGY] return format(error, false); [FE] ComparisonFailure [CONTEXT] public String formatError(JSError error) { [BUGGY] return format(error, false); [BUGGY] } [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] formatError [RETURN_TYPE] String  JSError error [VARIABLES] SourceExcerpt excerpt boolean ExcerptFormatter excerptFormatter JSError error  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	59	59	2	replace	
16	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public String formatError(JSError error) { [BUGGY] [BUGGY] return format(error, false); } [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] formatError [RETURN_TYPE] String  JSError error [VARIABLES] SourceExcerpt excerpt boolean ExcerptFormatter excerptFormatter JSError error  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	59	59	2	add	
17	[BUG] [BUGGY] SourceExcerptProvider source = getSource(); [FE] ComparisonFailure [CONTEXT] private String format(JSError error, boolean warning) {  [BUGGY] SourceExcerptProvider source = getSource(); [BUGGY] String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter);  StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	68	68	2	replace	
18	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] private String format(JSError error, boolean warning) {  [BUGGY] [BUGGY] SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter);  StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	68	68	2	add	
19	[BUG] [BUGGY] String sourceExcerpt = source == null ? null : excerpt.get(  source, error.sourceName, error.lineNumber, excerptFormatter); [FE] ComparisonFailure [CONTEXT] private String format(JSError error, boolean warning) {  SourceExcerptProvider source = getSource(); [BUGGY] String sourceExcerpt = source == null ? null :  excerpt.get(      source, error.sourceName, error.lineNumber, excerptFormatter); [BUGGY] excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter);  StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	69	71	2	replace	
20	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] private String format(JSError error, boolean warning) {  SourceExcerptProvider source = getSource(); [BUGGY] [BUGGY] String sourceExcerpt = source == null ? null :  excerpt.get(      source, error.sourceName, error.lineNumber, excerptFormatter); excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter);  StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	69	71	2	add	
21	[BUG] [BUGGY] StringBuilder b = new StringBuilder(); [FE] ComparisonFailure [CONTEXT] private String format(JSError error, boolean warning) {  SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter);  [BUGGY] StringBuilder b = new StringBuilder(); [BUGGY] if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	74	74	2	replace	
22	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] private String format(JSError error, boolean warning) {  SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter);  [BUGGY] [BUGGY] StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	74	74	2	add	
23	[BUG] [BUGGY] if (error.sourceName != null) { [FE] ComparisonFailure [CONTEXT] private String format(JSError error, boolean warning) {  SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter);  StringBuilder b = new StringBuilder(); [BUGGY] if (error.sourceName != null) { [BUGGY] b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - "); [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	75	75	2	replace	
24	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] private String format(JSError error, boolean warning) {  SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter);  StringBuilder b = new StringBuilder(); [BUGGY] [BUGGY] if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - "); [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	75	75	2	add	
25	[BUG] [BUGGY] b.append(error.sourceName); [FE] ComparisonFailure [CONTEXT] private String format(JSError error, boolean warning) {  SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter);  StringBuilder b = new StringBuilder(); if (error.sourceName != null) { [BUGGY] b.append(error.sourceName); [BUGGY] if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - ");  [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	76	76	2	replace	
26	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] private String format(JSError error, boolean warning) {  SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter);  StringBuilder b = new StringBuilder(); if (error.sourceName != null) { [BUGGY] [BUGGY] b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - ");  [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	76	76	2	add	
27	[BUG] [BUGGY] if (error.lineNumber > 0) { [FE] ComparisonFailure [CONTEXT]  SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter);  StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); [BUGGY] if (error.lineNumber > 0) { [BUGGY] b.append(':'); b.append(error.lineNumber); } b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - "); b.append(error.description); [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	77	77	2	replace	
28	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT]  SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter);  StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); [BUGGY] [BUGGY] if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - "); b.append(error.description); [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	77	77	2	add	
29	[BUG] [BUGGY] b.append(':'); [FE] ComparisonFailure [CONTEXT] SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter);  StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { [BUGGY] b.append(':'); [BUGGY] b.append(error.lineNumber); } b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - "); b.append(error.description); b.append('\n'); [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	78	78	2	replace	
30	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] SourceExcerptProvider source = getSource(); String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter);  StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { [BUGGY] [BUGGY] b.append(':'); b.append(error.lineNumber); } b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - "); b.append(error.description); b.append('\n'); [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	78	78	2	add	
31	[BUG] [BUGGY] b.append(error.lineNumber); [FE] ComparisonFailure [CONTEXT] String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter);  StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); [BUGGY] b.append(error.lineNumber); [BUGGY] } b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	79	79	2	replace	
32	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] String sourceExcerpt = source == null ? null : excerpt.get( source, error.sourceName, error.lineNumber, excerptFormatter);  StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); [BUGGY] [BUGGY] b.append(error.lineNumber); } b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	79	79	2	add	
33	[BUG] [BUGGY] b.append(": "); [FE] ComparisonFailure [CONTEXT] source, error.sourceName, error.lineNumber, excerptFormatter);  StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } [BUGGY] b.append(": "); [BUGGY] } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	81	81	2	replace	
34	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] source, error.sourceName, error.lineNumber, excerptFormatter);  StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } [BUGGY] [BUGGY] b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	81	81	2	add	
35	[BUG] [BUGGY] b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); [FE] ComparisonFailure [CONTEXT] StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } [BUGGY] b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); [BUGGY] b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno();   [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	84	84	2	replace	
36	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] StringBuilder b = new StringBuilder(); if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } [BUGGY] [BUGGY] b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno();   [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	84	84	2	add	
37	[BUG] [BUGGY] b.append(" - "); [FE] ComparisonFailure [CONTEXT] if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); [BUGGY] b.append(" - "); [BUGGY]  b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno();    [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	85	85	2	replace	
38	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] if (error.sourceName != null) { b.append(error.sourceName); if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); [BUGGY] [BUGGY] b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno();    [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	85	85	2	add	
39	[BUG] [BUGGY] b.append(error.description); [FE] ComparisonFailure [CONTEXT] if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - "); [BUGGY] b.append(error.description); [BUGGY] b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno();    if (excerpt.equals(LINE) [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	87	87	2	replace	
40	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] if (error.lineNumber > 0) { b.append(':'); b.append(error.lineNumber); } b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - "); [BUGGY] [BUGGY] b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno();    if (excerpt.equals(LINE) [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	87	87	2	add	
41	[BUG] [BUGGY] b.append('\n'); [FE] ComparisonFailure [CONTEXT] b.append(':'); b.append(error.lineNumber); } b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - "); b.append(error.description); [BUGGY] b.append('\n'); [BUGGY] if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno();    if (excerpt.equals(LINE) && 0 <= charno && charno < sourceExcerpt.length()) { [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	88	88	2	replace	
42	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] b.append(':'); b.append(error.lineNumber); } b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - "); b.append(error.description); [BUGGY] [BUGGY] b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno();    if (excerpt.equals(LINE) && 0 <= charno && charno < sourceExcerpt.length()) { [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	88	88	2	add	
43	[BUG] [BUGGY] if (sourceExcerpt != null) { [FE] ComparisonFailure [CONTEXT] b.append(error.lineNumber); } b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - "); b.append(error.description); b.append('\n'); [BUGGY] if (sourceExcerpt != null) { [BUGGY] b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno();    if (excerpt.equals(LINE) && 0 <= charno && charno < sourceExcerpt.length()) { for (int i = 0; i < charno; i++) { [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	89	89	2	replace	
44	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] b.append(error.lineNumber); } b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - "); b.append(error.description); b.append('\n'); [BUGGY] [BUGGY] if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno();    if (excerpt.equals(LINE) && 0 <= charno && charno < sourceExcerpt.length()) { for (int i = 0; i < charno; i++) { [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	89	89	2	add	
45	[BUG] [BUGGY] b.append(sourceExcerpt); [FE] ComparisonFailure [CONTEXT] } b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { [BUGGY] b.append(sourceExcerpt); [BUGGY] b.append('\n'); int charno = error.getCharno();    if (excerpt.equals(LINE) && 0 <= charno && charno < sourceExcerpt.length()) { for (int i = 0; i < charno; i++) { char c = sourceExcerpt.charAt(i); [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	90	90	2	replace	
46	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] } b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { [BUGGY] [BUGGY] b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno();    if (excerpt.equals(LINE) && 0 <= charno && charno < sourceExcerpt.length()) { for (int i = 0; i < charno; i++) { char c = sourceExcerpt.charAt(i); [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	90	90	2	add	
47	[BUG] [BUGGY] b.append('\n'); [FE] ComparisonFailure [CONTEXT] b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); [BUGGY] b.append('\n'); [BUGGY] int charno = error.getCharno();    if (excerpt.equals(LINE) && 0 <= charno && charno < sourceExcerpt.length()) { for (int i = 0; i < charno; i++) { char c = sourceExcerpt.charAt(i); if (Character.isWhitespace(c)) { [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	91	91	2	replace	
48	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] b.append(": "); } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); [BUGGY] [BUGGY] b.append('\n'); int charno = error.getCharno();    if (excerpt.equals(LINE) && 0 <= charno && charno < sourceExcerpt.length()) { for (int i = 0; i < charno; i++) { char c = sourceExcerpt.charAt(i); if (Character.isWhitespace(c)) { [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	91	91	2	add	
49	[BUG] [BUGGY] int charno = error.getCharno(); [FE] ComparisonFailure [CONTEXT] } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); [BUGGY] int charno = error.getCharno(); [BUGGY]     if (excerpt.equals(LINE) && 0 <= charno && charno < sourceExcerpt.length()) { for (int i = 0; i < charno; i++) { char c = sourceExcerpt.charAt(i); if (Character.isWhitespace(c)) { b.append(c); [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	92	92	2	replace	
50	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] } b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR)); b.append(" - "); b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); [BUGGY] [BUGGY] int charno = error.getCharno();    if (excerpt.equals(LINE) && 0 <= charno && charno < sourceExcerpt.length()) { for (int i = 0; i < charno; i++) { char c = sourceExcerpt.charAt(i); if (Character.isWhitespace(c)) { b.append(c); [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	92	92	2	add	
51	[BUG] [BUGGY] if (excerpt.equals(LINE) && 0 <= charno && charno < sourceExcerpt.length()) { [FE] ComparisonFailure [CONTEXT] b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno();    [BUGGY] if (excerpt.equals(LINE)   && 0 <= charno && charno < sourceExcerpt.length()) { [BUGGY] && 0 <= charno && charno < sourceExcerpt.length()) { for (int i = 0; i < charno; i++) { char c = sourceExcerpt.charAt(i); if (Character.isWhitespace(c)) { b.append(c); } else { b.append(' '); } } b.append("^\n"); [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	97	98	2	replace	
52	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] b.append(error.description); b.append('\n'); if (sourceExcerpt != null) { b.append(sourceExcerpt); b.append('\n'); int charno = error.getCharno();    [BUGGY] [BUGGY] if (excerpt.equals(LINE)   && 0 <= charno && charno < sourceExcerpt.length()) { && 0 <= charno && charno < sourceExcerpt.length()) { for (int i = 0; i < charno; i++) { char c = sourceExcerpt.charAt(i); if (Character.isWhitespace(c)) { b.append(c); } else { b.append(' '); } } b.append("^\n"); [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	97	98	2	add	
53	[BUG] [BUGGY] return b.toString(); [FE] ComparisonFailure [CONTEXT] char c = sourceExcerpt.charAt(i); if (Character.isWhitespace(c)) { b.append(c); } else { b.append(' '); } } b.append("^\n"); } } [BUGGY] return b.toString(); [BUGGY] } [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	110	110	2	replace	
54	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] char c = sourceExcerpt.charAt(i); if (Character.isWhitespace(c)) { b.append(c); } else { b.append(' '); } } b.append("^\n"); } } [BUGGY] [BUGGY] return b.toString(); } [CLASS] LightweightMessageFormatter LineNumberingFormatter [METHOD] format [RETURN_TYPE] String  JSError error boolean warning [VARIABLES] boolean warning StringBuilder b ExcerptFormatter excerptFormatter char c SourceExcerpt excerpt SourceExcerptProvider source String sourceExcerpt JSError error int charno i  	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	110	110	2	add	
