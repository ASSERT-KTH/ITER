4	[BUG]  [BUGGY]  if  (excerpt.equals(LINE)  &&  0  <=  charno  &&  charno  <  sourceExcerpt.length())  {  [FE]  ComparisonFailure  [CONTEXT]  b.append(error.description);  b.append('\n');  if  (sourceExcerpt  !=  null)  {  b.append(sourceExcerpt);  b.append('\n');  int  charno  =  error.getCharno();        [BUGGY]  if  (excerpt.equals(LINE)      &&  0  <=  charno  &&  charno  <  sourceExcerpt.length())  {  [BUGGY]  &&  0  <=  charno  &&  charno  <  sourceExcerpt.length())  {  for  (int  i  =  0;  i  <  charno;  i++)  {  char  c  =  sourceExcerpt.charAt(i);  if  (Character.isWhitespace(c))  {  b.append(c);  }  else  {  b.append('  ');  }  }  b.append( "^\n ");  [CLASS]  LightweightMessageFormatter  LineNumberingFormatter  [METHOD]  format  [RETURN_TYPE]  String    JSError  error  boolean  warning  [VARIABLES]  boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i    	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	97	98	2	replace	if(excerpt.equals(LINE)||  0  <=  charno  &&  charno  <  sourceExcerpt.length())  {	if  (excerpt.equals(LINE)  &&  0  <=  charno  &&  charno  <  sourceExcerpt.length())  {  	plausible		51	0
5	[BUG]  [BUGGY]  if  (excerpt.equals(LINE)  &&  0  <=  charno  &&  charno  <  sourceExcerpt.length())  {  [FE]  ComparisonFailure  [CONTEXT]  b.append(error.description);  b.append('\n');  if  (sourceExcerpt  !=  null)  {  b.append(sourceExcerpt);  b.append('\n');  int  charno  =  error.getCharno();        [BUGGY]  if  (excerpt.equals(LINE)      &&  0  <=  charno  &&  charno  <  sourceExcerpt.length())  {  [BUGGY]  &&  0  <=  charno  &&  charno  <  sourceExcerpt.length())  {  for  (int  i  =  0;  i  <  charno;  i++)  {  char  c  =  sourceExcerpt.charAt(i);  if  (Character.isWhitespace(c))  {  b.append(c);  }  else  {  b.append('  ');  }  }  b.append( "^\n ");  [CLASS]  LightweightMessageFormatter  LineNumberingFormatter  [METHOD]  format  [RETURN_TYPE]  String    JSError  error  boolean  warning  [VARIABLES]  boolean  warning  StringBuilder  b  ExcerptFormatter  excerptFormatter  char  c  SourceExcerpt  excerpt  SourceExcerptProvider  source  String  sourceExcerpt  JSError  error  int  charno  i    	projects/Closure62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java	0.7071067811865475	97	98	2	replace	if(excerpt.equals(LINE)&&  0  <=  charno  ||  charno  <  sourceExcerpt.length())  {	if  (excerpt.equals(LINE)  &&  0  <=  charno  &&  charno  <  sourceExcerpt.length())  {  	plausible		51	0
