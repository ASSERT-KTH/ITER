projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=this.trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=buffer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=buffer[end-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=buffer[length-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[end-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[end-1]:block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,start,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130result=(result<<3)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,end,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,0,result,buffer,start,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,end);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,start,length);end=0;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,0,end);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=this.trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=buffer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='[')?buffer[end-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='')?buffer[end-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer=='')?buffer[start-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start+1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer!='')?buffer[start-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[0]:buffer[0];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=this.trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=buffer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=this.trailers[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=newShort(trailer);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=this.trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130finalTrailer<K,V>trailer=buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=buffer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='[')?buffer[end-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='[')?buffer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=buffer[end-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=buffer[end-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=buffer[start-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=this.trailer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=trailer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=newbyte[trailer-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=this.trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=buffer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='[')?buffer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130finalTrailer<T>trailer=buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=this.trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=this.trailer[end-1]+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=this.trailer[end-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=this.trailer[end-1]+2;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start-1]:block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?block[start-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer=='')?buffer[start-1]:block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?block[end-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start+1]:block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?block[start-1]:block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=trailer[end-1]+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=this.trailer[length-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=buffer[length-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=buffer[offset-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=buffer[trailer-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'||trailer=='r'){trailer=buffer[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==end){trailer=buffer[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'){trailer=buffer[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==start){trailer=buffer[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='.'){trailer=buffer[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'||trailer=='r'){trailer=buffer[end-2];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'){trailer=buffer[end-2];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==end){trailer=buffer[end-2];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'||trailer=='r'){trailer=buffer[end-2];}else{thrownewIllegalStateException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==end){trailer=buffer[end-2];}else{thrownewIllegalStateException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'||trailer=='r'){trailer=buffer[end-2];}else{System.arraycopy(buffer,start,buffer,0,end);returnresult;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Container<K,V>trailer=buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?buffer[start-1]:block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?buffer[end-1]:block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=buffer[end-start];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=buffer[end-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==end){trailer=trailer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==start){trailer=trailer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer!=null){trailer=trailer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer!=end){trailer=trailer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==end){trailer=trailer[end-1];}else{System.arraycopy(buffer,start,buffer,0,end);returnresult;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?buffer[start-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Object>trailer=(trailer=='')?buffer[start-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?buffer[end-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='')?buffer[start-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,start,end);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,start,length-start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,start,end-start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,end-start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=this.trailer[end-1]*BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=(trailer=='')?buffer[end-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=this.buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start-1]:buffer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start-1]:buffer[start+1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=trailer[length-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=buffer[length-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=buffer[end-1].toByteArray();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130if(trailer==0){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130if(length>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130if(length>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer[i]);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130if(length>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,start,buffer,0,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130if(length>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer<0)?buffer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer<0)?buffer[end-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=buffer[end-1].toByteArray();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=buffer[end-1].byteValue();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer=='')?block[start-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='')?buffer[start-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,>trailer=(trailer=='')?buffer[start-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer=='')?buffer[start-1]:trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer=='')?block[start+1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer!='')?block[start-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=trailer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=this.trailer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='[')?buffer[start-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='[')?buffer[start-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,0,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(trailer,start,buffer,0,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,length-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,0,buffer,0,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,length,trailer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer=='')?buffer[start+1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer=='')?buffer[start-1]:container[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer!='')?buffer[start-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=trailer[end-start];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=this.trailer[end-start];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=buffer[start-end];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=this.trailer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=this.trailer[offset-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=this.block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=this.block[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=newbyte[length-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=newbyte[trailer+1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=newbyte[trailer.length-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=newbyte[Trailer.length-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=newbyte[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=newbyte[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=this.trailer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=(this.trailer[end-1]=='0'?this.trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=(this.trailer[end-1]!='0'?this.trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=(this.trailer[end-1]==null?this.trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=(this.trailer[end-1]==null?"":this.trailer[end-1]);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(trailer,0,buffer,start,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,0,buffer,offset,end,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,0,result,buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,0,buffer,offset,start,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,0,result,buffer,offset,start,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,0,buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,0,buffer,start,end);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==end){trailer=buffer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==end){trailer=buffer[start-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start==end){trailer=buffer[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer!=end){trailer=buffer[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer[i]);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,0,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer[i]);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(end>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer[i]);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,0,trailer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer[i]);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,trailer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer[i]);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer[i]);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,trailer[i]);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='[')?buffer[start-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='[')?buffer[0]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer!='[')?buffer[end-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='[')?buffer[start+1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='[')?buffer[end-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,trailer,0,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,end,trailer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(trailer,offset,buffer,end,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,trailer,end,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,trailer,buffer,end,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,start,buffer,0,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(end>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,start,buffer,0,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(trailer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,start,buffer,0,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130End=System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,start,buffer,0,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,start,buffer,0,length
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(end>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,start,buffer,0,length
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=buffer[offset+1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=this.block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=block[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=this.trailers[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=(this.trailers[end-1]>0)?this.trailers[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=(this.trailers[end-1]instanceofbyte[])?(byte[])this.trailers[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=(this.trailers[end-1]=='0'?this.trailers[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=(this.trailers[end-1]!='0'?this.trailers[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'||trailer=='r'){trailer=buffer[end-1];}else{thrownewIllegalStateException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'||trailer=='r'){trailer=buffer[end-1];}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'||trailer!='r'){trailer=buffer[end-2];}else{thrownewIllegalStateException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'||trailer=='r'){trailer=buffer[start-2];}else{thrownewIllegalStateException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'||trailer!='r'){trailer=buffer[end-1];}else{thrownewIllegalStateException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'||trailer=='r'){trailer=buffer[end-2];}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='')?buffer[start-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer!='')?buffer[end-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='')?buffer[0]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='')?buffer[end-1]:newBYTE_MASK();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[end-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=trailer[end-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=this.trailer[end-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='[')?buffer[end-2]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,offset,end-start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,trailer,0,end-start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,start,end-start,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,trailer,start,end-start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,start,end-start,trailer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(trailer,offset,buffer,start,end-start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,start,end-start+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?block[start-1]:trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=this.trailer[start+1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=this.trailer[start-1]+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=this.buffer[trailer-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=this.trailer[trailer-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,end-trailer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,end-start+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(trailer,start,buffer,0,end-start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,end-start,trailer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,end-start,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,end-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,0,buffer,0,end-start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='.'){trailer=buffer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='.'){trailer=buffer[start-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer!='.'){trailer=buffer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer!='.'){trailer=buffer[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer!='.'){trailer=buffer[start-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='.'){trailer=buffer[start+1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=this.block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130finalTrailer<K,V>trailer=block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='[')?block[end-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start==end){trailer=trailer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==trailer.length){trailer=trailer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==end){trailer=trailer[start-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==end){trailer=trailer[0];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,trailer,start,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(trailer,offset,buffer,start,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,start,length-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,start,length,trailer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer<0)?buffer[start-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(end<0)?buffer[end-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer==0)?buffer[end-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer>=0)?buffer[end-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(start<0)?buffer[end-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer>0)?buffer[end-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start==end){trailer=trailer[end-1];}else{System.arraycopy(buffer,start,buffer,0,end);returnresult;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,end);returnresult;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==end){trailer=buffer[end-1];}else{System.arraycopy(buffer,start,buffer,0,end);returnresult;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130result=System.arraycopy(buffer,start,buffer,0,end);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130result=System.arraycopy(buffer,start,buffer,0,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?buffer[start-1]:container[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?buffer[start+1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?buffer[start-1]:stream[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='[')?buffer[start-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='[')?buffer[end-1]:trailer.byteValue();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='[')?buffer[0]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='[')?buffer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='[')?buffer[start+1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start-1]:trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?block[start+1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=trailer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=this.trailer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='[')?buffer[start-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start==trailer){trailer=buffer[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==start){trailer=buffer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==start){trailer=buffer[start-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start==trailer){trailer=buffer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer<0)?buffer[start-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(end<0)?buffer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(start<0)?buffer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer<0)?buffer[end-1]:trailer.byteValue();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer>=0)?buffer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer==0)?buffer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=this.trailer[end-1]*FALLBACK_ENCODING;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=this.trailer[end-1]*BYTE_MASK+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=buffer[end-1]*BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=this.trailer[start-1]*BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=this.trailer[end-1]/BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=trailer[end-1]*BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130finalTrailer<T>trailer=trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130finalTrailer<T>trailer=this.trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130finalTrailer<T>trailer=newTrailer<T>(trailer.length-1]);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130finalTrailer<T>trailer=buffer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130finalTrailer<T>trailer=(trailer=='[')?buffer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130finalTrailer<T>trailer=(trailer=='')?buffer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,trailer,start,length-start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,end,length-start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,trailer,0,length-start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(trailer,offset,buffer,start,length-start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,start,length-2);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=trailer[end-1].toByteArray();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=this.trailer[end-1].toByteArray();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=buffer[start-1].toByteArray();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=trailer.toByteArray();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=buffer[end-1].toByteArray();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=buffer[end-1].toByteArray(trailer);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[end-1]:buffer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start+1]:buffer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start-1]:block[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=this.trailer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=this.trailer[end-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=trailer[end-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=this.trailer[end-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=buffer[start-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Container<K,V>trailer=trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Container<K,V>trailer=this.trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Container<K,V>trailer=buffer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Container<K,V>trailer=container[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Container<K,V>trailer=(trailer=='[')?buffer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Container<K,V>trailer=this.buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=this.buffer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=this.buffer[end+1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=this.buffer[end-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'||trailer=='r'){trailer=buffer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'||trailer!='r'){trailer=buffer[end-2];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'||trailer=='r'){trailer=buffer[start-2];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'||trailer!='r'){trailer=buffer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='0'||trailer=='9'){trailer=buffer[end-2];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=this.trailer[end+1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[end-1]:trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130finalTrailer<K,V>trailer=trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130finalTrailer<K,V>trailer=this.trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130staticfinalTrailer<K,V>trailer=buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130finalTrailer<K,V>trailer=buffer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130finalTrailer<K,V>trailer=(trailer=='')?buffer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130finalTrailer<K,V>trailer=(trailer=='')?buffer[end-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=trailer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=trailer[0];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'){trailer=buffer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='.'){trailer=buffer[end-2];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='0'){trailer=buffer[end-2];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'||trailer=='-'){trailer=buffer[end-2];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'){trailer=buffer[start-2];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=buffer[start-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130result=(result<<3)+(trailer-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130result=(length<<3)+(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130result=(result-3)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130result=(result-'0')+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130result=(result<<3)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130result=(result<<3)+(trailer.length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130result=(trailer<<3)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=trailer[end-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='[')?buffer[end-2]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='')?buffer[end-2]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=trailer[end-1].toByteArray();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=this.trailer[end-1].toByteArray();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=trailer.toByteArray();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=buffer[start-1].toByteArray();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=this.trailer[start-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=this.trailer[end-3];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer=='')?block[start-1]:block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?block[start+1]:block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?block[start-1]:block[end-1]+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start==trailer){trailer=trailer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==start){trailer=trailer[start-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==trailer){trailer=buffer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='')?buffer[start-1]:container[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='')?buffer[start+1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='')?buffer[start-1]:block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='')?buffer[start-1]:stream[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer!='')?buffer[start+1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start+1]:container[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start+2]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer!=trailer.length){trailer=trailer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=trailer[length-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=this.trailer[length-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='[')?buffer[length-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,>trailer=(trailer=='')?buffer[start+1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,>trailer=(trailer=='')?buffer[start-1]:container[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,>trailer=(trailer=='')?buffer[start-1]:block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer=='')?block[start-1]:trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer=='')?buffer[start+1]:block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='')?buffer[start-1]:container[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='')?buffer[start+1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='')?buffer[start-1]:block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=this.block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=(short)block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=block[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?buffer[end-1]:trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?buffer[0]:buffer[0];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer!='')?buffer[start-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?buffer[1]:buffer[1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=this.trailer[end-1]*2;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=this.trailer[end-1]+4;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=this.trailer[end-1]+3;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=this.trailer[start-1]+2;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=trailer[0];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'||trailer=='r'){trailer=buffer[start-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'||trailer!='r'){trailer=buffer[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='0'||trailer=='9'){trailer=buffer[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=trailer[length-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=this.trailer[length-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='[')?buffer[length-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=newShort(length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=newShort(trailer,end);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=newShort(trailer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=newShort(trailer,start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=newShort(trailer+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=newShort(result);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=newShort(trailer,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=trailer[end+1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start==end){trailer=buffer[end-2];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==end){trailer=buffer[start-2];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==end){trailer=buffer[end-1];}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Object>trailer=(trailer=='')?buffer[start-1]:container[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Object>trailer=(trailer=='')?buffer[start+1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Object>trailer=(trailer=='')?buffer[start-1]:block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130finalTrailer<Object>trailer=(trailer=='')?buffer[start-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[0]:buffer[1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[1]:buffer[0];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[0]:container[0];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[0]:block[0];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[0]:trailer[0];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[0]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=buffer[end-1]+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?block[start+1]:trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==null){trailer=trailer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==null){trailer=trailer[start-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer!=null){trailer=trailer[start-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==null){trailer=trailer[end-1];}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==null){trailer=buffer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer!=null){trailer=buffer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=trailer[end-1]+2;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=trailer[end-1]+3;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=trailer[end-1]+4;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=trailer[start-1]+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'||trailer=='r'){trailer=buffer[end-1];}else{System.arraycopy(buffer,start,buffer,0,end);returnresult;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'||trailer=='r'){System.arraycopy(buffer,start,buffer,0,end);returnresult;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'||trailer=='r'){trailer=buffer[start-2];}else{System.arraycopy(buffer,start,buffer,0,end);returnresult;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='0'||trailer=='9'){trailer=buffer[end-2];}else{System.arraycopy(buffer,start,buffer,0,end);returnresult;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Thread.currentThread().interrupt();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(start<end&&trailer==0){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(start<end&&trailer==''){if(trailer==0){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(start<end&&trailer==''){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130thrownewIllegalArgumentException("");
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(start>=0){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(start<end&&trailer!=''){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=trailer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=trailer[length-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=trailer[0];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=trailer[end-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,0,buffer,0,length);for(inti=start;i<end;++i){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(end>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,trailer,0,length);for(inti=start;i<end;++i){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){thrownewIllegalArgumentException("".);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(end>0){System.arraycopy(buffer,start,buffer,0,end);for(inti=start;i<end;++i){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==end){trailer=buffer[end-1];}else{thrownewIllegalStateException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start==end){trailer=buffer[end-2];}else{thrownewIllegalStateException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==end){trailer=buffer[start-2];}else{thrownewIllegalStateException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=trailer[end-1].byteValue();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=this.trailer[end-1].byteValue();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=buffer[start-1].byteValue();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=buffer[end-1].byteValue();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'){trailer=buffer[start-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='0'){trailer=buffer[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='[')?buffer[end-1]:trailer.byteValue();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='[')?buffer[start-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='[')?buffer[0]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(trailer,start,buffer,0,end);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(trailer,0,buffer,0,start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,0,buffer,0,start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,trailer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130if(length>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}if(length>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130if(length>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}if(length>0){System.arraycopy(buffer,start,buffer,0,end);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130if(length>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}if(length>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130if(length>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}if(length>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130if(length>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}if(length>0){System.arraycopy(buffer,start,buffer,1,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130if(length>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}intlength>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130if(length>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}while(length>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='[')?buffer[0]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer!='[')?buffer[end-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='[')?buffer[start+1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='[')?buffer[1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,0,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,0,trailer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130End=System.arraycopy(trailer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,end);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,trailer,0,end);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,trailer,start,end);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(trailer,offset,buffer,start,end);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,start,end,trailer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,start,end,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,offset,end);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?block[start-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?block[end-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?block[end-1]:trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?buffer[start+1]:block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer==0)?this.trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer=='[')?this.trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer==null)?this.trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,0,end-start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(trailer,offset,buffer,0,end);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,0,end+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start-1]:buffer[end+1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[end-1]:buffer[start+1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start+1]:buffer[start+1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer=='')?buffer[start-1]:buffer[end+1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start-1]:block[start+1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,trailer,start,length);end=0;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,trailer,0,end);end=0;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(trailer,offset,buffer,start,length);end=0;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,end,length);end=0;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,start,length,trailer.length);end=0;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,0,end);end=0;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,trailer,0,length);end=0;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?block[start-1]:trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=(trailer=='')?buffer[start-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=(trailer=='')?buffer[0]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=(trailer=='')?buffer[start+1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=(trailer=='')?buffer[end-1]:NON_SHORT;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=(trailer!='')?buffer[end-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,>trailer=(trailer=='')?buffer[start-1]:buffer[end-1]+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,>trailer=(trailer=='')?buffer[start-1]:BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start-1]:block[end-1]+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start-1]:buffer[end-1]+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start==end){trailer=buffer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?buffer[start-1]:buffer[start+1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start-start]:buffer[start+1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start+1]:buffer[end+1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer==null)?this.trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer==''||trailer=='')?this.trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer==null)?this.trailer[end-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130finalTrailer<T>trailer=this.buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130finalTrailer<T>trailer=buffer[length-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer==null)?this.trailer[end-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer=='n'||trailer=='r')?this.trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer=='')?this.trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==end){trailer=buffer[trailer-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==end){trailer=buffer[trailer-1];}else{thrownewIllegalStateException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==end){trailer=buffer[trailer-1];}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==end){trailer=buffer[trailer-1];}else{System.arraycopy(buffer,start,buffer,start,end);returnresult;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==end){trailer=buffer[trailer-1];}else{System.arraycopy(buffer,start,buffer,0,end);returnresult;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?buffer[start-1]:BYTE_MASK[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?buffer[start-1]:end[0];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?buffer[start-1]:length[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='[')?buffer[end-1]:DEFAULT_ENCODING;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='[')?buffer[end-1]:FALLBACK_ENCODING;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer!='[')?buffer[start-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer==''?trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='')?buffer[end-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start=='n'){trailer=buffer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start=='0'&&start<='9'){trailer=buffer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='0'){trailer=buffer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='')?buffer[start-1]:buffer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer==''?buffer[start-1]:buffer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='[')?buffer[end-1]:FALLBACK_ENCODING;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='[')?buffer[end-1]:BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='[')?buffer[end-1]:DEFAULT_ENCODING;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='[')?buffer[end-1]:READ_BACK_ENCODING;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer!='[')?buffer[start-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==start){trailer=trailer[end-1]+1;}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==start){trailer=buffer[end-1]+1;}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==start){trailer=trailer[end-1]+1;}else{thrownewIllegalStateException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==start){trailer=trailer[end-1]+1;}else{System.arraycopy(buffer,start,buffer,0,end);end=buffer[end-1]+1;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==start){trailer=trailer[end-1]+1;}else{System.arraycopy(buffer,start,buffer,0,end);returnresult;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==start){trailer=trailer[end-1]+1;}else{System.arraycopy(buffer,start,buffer,start,end);returnresult;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer=='')?buffer[start-1]:block[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start==start){trailer=buffer[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start==length){trailer=buffer[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start==start){trailer=buffer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130result=(result-start)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130result=(result-3)+(trailer-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130result=(result-offset)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130result=(start<<3)+(trailer-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='')?buffer[end-1]:buffer[end-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='[')?buffer[end-1]:buffer[end-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=buffer[end-1].byteValue(trailer);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=buffer[end-1].getByte();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=this.buffer[trailer-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=this.buffer[end-1]+trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=(trailer=='')?block[end-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130if(length>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}if(length>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,start+1,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130if(length>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}if(length>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer+1,start+1,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='')?buffer[start-1]:buffer[end-1]+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='')?buffer[start-1]:stream[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='')?buffer[start-1]:BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?buffer[start-1]:buffer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==end){trailer=this.trailer[end-2];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==end){trailer=this.trailer[end-2];}else{thrownewIllegalStateException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==end){trailer=this.trailer[end-2];}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,end,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='')?block[end-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start=='n'||start=='r'){trailer=buffer[end-2];}else{thrownewIllegalStateException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start=='n'||start=='r'){trailer=buffer[end-1];}else{thrownewIllegalStateException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'||trailer=='r'){trailer=buffer[start-1];}else{thrownewIllegalStateException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start=='n'||end=='r'){trailer=buffer[end-2];}else{thrownewIllegalStateException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}else{if(trailer=='n'||trailer=='r'){trailer=buffer[end-1];}else{thrownewIllegalStateException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=newShort(start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=newShort(trailer+start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=buffer[start-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=buffer[end-start];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,start,end);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,start,end+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==end){trailer=buffer[offset-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==start){trailer=buffer[offset-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='n'){trailer=buffer[offset-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer!=end){trailer=buffer[offset-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer=='.'){trailer=buffer[offset-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer!=end){trailer=trailer[start-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==end){trailer=trailer[start-1];}else{System.arraycopy(buffer,offset,buffer,start,end);returnresult;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?block[start-1]:buffer[end-1]+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start==end){trailer=buffer[end-1];}else{thrownewIllegalStateException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==end){trailer=buffer[start-1];}else{thrownewIllegalStateException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==start){trailer=buffer[end-1];}else{thrownewIllegalStateException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?buffer[start-1]:blocks[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?buffer[start-1]:buffer[end-1]+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130finalTrailer<K,V>trailer=this.buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(start>=end){if(trailer==0){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(start<end){if(trailer==0){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(start<end&&trailer>=''){if(trailer==0){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(start<end&&trailer!=''){if(trailer==0){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer=='')?block[start-1]:buffer[end-1]+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer=='')?block[start-1]:buffer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='[')?buffer[end-1]:DEFAULT_ENCODING;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='[')?buffer[end-1]:FALLBACK_ENCODING;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer!='[')?buffer[start-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=buffer[end-start+1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=buffer[end-start1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=buffer[end-start]+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,start,end);end=0;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,start,length-start);end=0;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,start,length-1);end=0;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,start,length+1);end=0;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=(trailer==null)?this.trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=(this.trailer[end-1]!='n')?this.trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=(this.trailer[end-1]=='n')?this.trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,start,end-start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,start,end-start+1,trailer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,end,buffer.length-start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=newbyte[trailer*1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=newbyte[len-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=trailers[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=_trailers[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=this.trailers[end-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=this.trailers[end+1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Object>trailer=(trailer=='')?buffer[start-1]:buffer[end-1]+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Object>trailer=(trailer=='')?buffer[start-1]:buffer[offset-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer==''||trailer=='')?buffer[length-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='')?buffer[length-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=buffer[offset-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(trailer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer[i]);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer[i]);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,end);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer[i]);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer[i]
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='')?this.trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer==null)?this.trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='')?this.trailer[end-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer==null)?this.trailer[end-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=buffer[offset-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='')?buffer[length-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=this.trailer[end-1]*BYTE_BACK_ENCODING;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(trailer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,length-start);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(start<end&&(trailer=='-'||trailer=='+')){end--;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start==end){trailer=trailer[end-1];}else{thrownewIllegalArgumentException("".);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,start,length+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer<0)?buffer[end-1]:FALLBACK_ENCODING;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer<0)?buffer[end-1]:BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer<0)?buffer[end-1]:DEFAULT_ENCODING;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}else{if(trailer=='n'||trailer=='r'){trailer=buffer[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start=='n'||start=='r'){trailer=buffer[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}else{if(trailer=='n'||trailer=='r'){trailer=buffer[start-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start=='.'){trailer=buffer[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start=='.'){trailer=buffer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(start<end&&(trailer=='['||trailer==']')){end--;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[0]:BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[0]:end;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[1]:buffer[1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[0]:block[1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?block[start-1]:block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?block[start-1]:block[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?block[start-1]:block[end-1]*BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==end){trailer=trailer[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer!=null){trailer=trailer[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer!=end){trailer=trailer[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==start){trailer=trailer[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer!=null){trailer=trailer[length-1];}else{System.arraycopy(buffer,offset,buffer,start,end);returnresult;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,end-start,trailer);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,end-start+1,trailer);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Container<K,V>trailer=buffer[end-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130finalContainer<K,V>trailer=buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Container<K,V>trailer=buffer[length-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=this.trailer[length-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='')?buffer[end-1]:DEFAULT_ENCODING;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='')?buffer[end-1]:FALLBACK_ENCODING;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer!='')?buffer[start-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130readFully(buffer,start,length);for(inti=start;i<end;++i){System.arraycopy(buffer,start,buffer,0,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(trailer,0,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,start,buffer,0,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,length-start);for(inti=start;i<end;++i){System.arraycopy(buffer,start,buffer,0,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start=='n'){trailer=buffer[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(trailer,start,buffer,0,end);returnresult;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130longstart=System.currentTimeMillis();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130result=System.arraycopy(trailer,start,buffer,0,end);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,0,start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer==start){trailer=buffer[start-2];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=trailer[end-1]+start;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start==start){trailer=buffer[end-1];}else{thrownewIllegalArgumentException("".);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer=='')?buffer[start-1]:buffer[end-1]+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer=='')?buffer[start-1]:buffer[offset-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer=='')?buffer[start-1]:buffer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='')?buffer[start-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='')?buffer[start-1]:buffer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer>='')?buffer[start-1]:buffer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='')?block[end-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='')?buffer[start-1]:buffer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer>='')?buffer[start-1]:buffer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='')?buffer[end-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start-1]:buffer[end-1]*BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='')?block[end-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=block[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=this.trailer[end-1]*1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Container<?>trailer=(trailer=='')?buffer[start-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(start=='')?buffer[end-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='')?this.trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer==null)?this.trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer==null)?this.trailer[end-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,end);for(inti=start;i<end;++i){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,0,length);for(inti=start;i<end;++i){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,trailer.length);for(inti=start;i<end;++i){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=buffer[end-1]+2;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,end+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='')?buffer[end-1]:buffer[end-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer==''||trailer=='')?buffer[end-1]:buffer[end-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer==''?buffer[end-1]:buffer[end-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='n'?buffer[end-1]:buffer[end-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Object>trailer=(trailer=='')?block[start-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start=='n'||start=='r'){trailer=buffer[end-2];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start=='n'||start=='r'){trailer=buffer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}else{if(trailer=='n'||trailer=='r'){trailer=buffer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start=='n'||end=='r'){trailer=buffer[end-2];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=buffer[end-1].getByteArray();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='[')?buffer[end-1]:BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer!='[')?buffer[start-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130finalTrailer<K,V>trailer=(trailer=='[')?buffer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,0,buffer,start,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=buffer[end-1].toByteArray(trailer);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=buffer[end-1].convertToByteArray();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=buffer[end-1].getByteArray();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=(trailer=='')?buffer[end-1]:DEFAULT_ENCODING;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=(trailer=='')?buffer[end-1]:FALLBACK_ENCODING;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=(trailer=='')?buffer[end-1]:SerialUtils.EMPTY_STRING;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=(end=='')?buffer[end-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='')?buffer[end-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='')?buffer[end-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start!=end){trailer=trailer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(start>=end){trailer=trailer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer}elseif(trailer!=end){trailer=buffer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(start>=end){trailer=trailer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,length-start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,length+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(start<end&&(trailer==0||trailer=='')){end--;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(start<end&&(trailer=='0'||trailer=='9')){end--;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(start<end&&(trailer=='0'||trailer=='7')){end--;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='')?buffer[start+1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='')?buffer[start-1]:buffer[end-1]+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='')?buffer[start-1]:buffer[offset-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,offset,length-start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,start,length-start+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,start,length-start,trailer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=trailer[offset-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='')?buffer[start-1]:trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(end=='')?buffer[start-1]:trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='')?buffer[start-start]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='')?buffer[start-1,end-1]:trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(end<end&&(trailer==0||trailer=='')){end--;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130finalbytetrailer=buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(start<end&&(trailer==''||trailer=='-')){end--;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(start<end&&(trailer==0||trailer=='.')){end--;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(this.trailer[end-1]!=null)?this.trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(this.trailer[end-1]==null?this.trailer:trailer[end-1]);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(this.trailer[end-1]=='0'?this.trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(start<length&&(trailer==0||trailer=='')){end--;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=trailer[offset-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=trailer[length-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,>trailer=(trailer=='')?buffer[start-1]:trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,>trailer=(trailer=='')?buffer[start-start]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,>trailer=(trailer=='')?buffer[start-1,end-1]:trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,>trailer=(end=='')?buffer[start-1]:trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start-1]:end[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start-1]:container[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=this.trailer[end-1]&BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=this.trailer[end-1]*BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer<T>)block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=block[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130}elseif(trailer==null){trailer=trailer[end-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(start<end&&(trailer==''||trailer=='n')){end--;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=trailer[offset-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(end<0)?buffer[start-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer<0)?trailer[start-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(this.trailer[end-1]!=null)?this.trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer==0)?this.trailer[end-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='')?buffer[start-1]:trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='')?buffer[start-start]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(end=='')?buffer[start-1]:trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130if(start>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer[i]);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Endend=System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer[i]);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer=='')?block[start-1,end-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer=='')?block[start-start]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer=='')?block[start-2]:buffer[end-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=getTrailer(start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=block[end-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start]:buffer[0];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[0]:trailer[1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130result=(result<<3)+(start-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130result=(result<<4)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(end!='')?buffer[start-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=newShort(offset);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='[')?trailer[start-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='[')?block[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='[')?buffer[end-1]:stream;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=(trailer=='')?trailer[start-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=(trailer=='')?buffer[end-1]:BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=(trailer=='')?buffer[end-start]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,start,length-trailer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start-1]:container[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start-1]:end[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='')?buffer[end-1]:BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(end=='')?buffer[end-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='')?buffer[end-start]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(this.trailer[end-1]!=null)?this.trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(this.trailer[end-1]=='0'?this.trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(this.trailer[end-1]=='')?this.trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer<T>)buffer[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer<T>)byte[start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=buffer[end-1].convertUTCToLocal(trailer);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Container<K,V>trailer=buffer[end-1].byteValue();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Container<K,V>trailer=buffer[end-1].toByteArray();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Container<K,V>trailer=block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=trailer[end-1]||trailer.charAt(start-1)!='0'){thrownewIllegalArgumentException("");
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=trailer[end-1]||trailer.charAt(start-1)!='0'){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='[')?trailer[start-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer=='[')?buffer[start-start]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130finalbytetrailer=buffer[length-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=this.buffer[end-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start-1,end:buffer[start+1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Object>trailer=(trailer=='')?buffer[start-1]:trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Object>trailer=(trailer=='')?buffer[start-start]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Object>trailer=(end=='')?buffer[start-1]:trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Object>trailer=(trailer=='')?buffer[start-1]:stream[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(start<end&&(trailer==0||trailer=='')){if(length>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arra
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(start<end&&(trailer==0||trailer=='')){if(length>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,start
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(start<end&&(trailer==0||trailer=='')){if(length>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,start,
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(start<end&&(trailer==0||trailer=='')){if(length>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,start,buffer
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(start<end&&(trailer==0||trailer=='')){if(length>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start+1]:end[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=buffer[end-1].decodeBase64Variants(trailer);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=buffer[end-1].getTrailer();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(end-1)?buffer[end-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=trailer[start-2];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=builder[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130staticfinalTrailer<T>trailer=buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130finalTrailer<T>trailer=block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=newbyte[buffer.length-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=newbyte[loader-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,end,length-start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,buffer,end-start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,end-start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,start,end-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<Short>trailer=getTrailers(start-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,end,length);end=0;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130finalTrailer<K,V>trailer=(trailer<0)?buffer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130finalTrailer<K,V>trailer=(trailer<0)?buffer[end-1]:newTrailer<K,V>(trailer);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='[')?trailer[start-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='[')?block[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(trailer=='[')?buffer[end-1]:stream;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?buffer[start-1,end-1]:trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?buffer[start-1]:trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?buffer[start-start]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(start>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130while(start>0){System.arraycopy(buffer,start,buffer,0,end);for(inti=start;i<end;++i){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=buffer[end-1].convertToByteArray();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=buffer[end-1].subtract(trailer);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=trailer[trailer-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=buffer[trailer-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(this.trailer[end-1]=='0'?this.trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(this.trailer[end-1]!=null)?this.trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=(this.trailer[end-1]=='n'?this.trailer[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130rayUnits.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Partition.System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Endend=System.arraycopy(trailer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=builder[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130if(length>0){System.arraycopy(buffer,start,buffer,0,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}if(length>0){System.arraycopy(buffer,start,buffer,10,length);for(inti=start;i<end;++i){System.arraycopy(buffer,offset,buffer,start+1,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(end<0)?buffer[end-1]:trailer.byteValue();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=trailer[end-1].byteValue();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<T>trailer=trailer[end-1].cloneTrace();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?block[start-1,end-1]:block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?block[start-1,end-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?block[start-start]:block[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,start,buffer,0,end-start+1,trailer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer=='')?buffer[start-1,end-1]:trailer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer=='')?buffer[start-1]:end[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=(trailer=='')?buffer[start-start]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='')?buffer[start-1]:end[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130trailer=trailer[start-1]+buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<?>trailer=(trailer=='/')?buffer[start-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer<0)?block[end-1]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<K,V>trailer=(trailer<0)?block[end-1]:trailer;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,end,length+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130System.arraycopy(buffer,offset,buffer,end,length-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130[Delete]
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130aught(IllegalArgumentException.DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130aught(IllegalArgumentException.DEFAULT_ENCODING,trailer,0,length));
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130aught(IllegalArgumentException.DEFAULT_ENCODING,trailer,offset,length));
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130aught(IllegalArgumentException.DEFAULT_ENCODING));
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130aught(IllegalArgumentException.DEFAULT_ENCODING,trailer,0);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailertrailer=(trailer=='')?buffer[start-start]:buffer[end-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='[')?buffer[end-1]:BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='[')?buffer[start-start]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(trailer=='[')?block[end-1]:null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java130Trailer<N,V>trailer=(end=='[')?buffer[end-1]:null;
