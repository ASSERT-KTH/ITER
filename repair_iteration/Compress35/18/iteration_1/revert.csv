projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte-'0');//convertfromASCII//CheckStyle:MagicNumberON}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-3)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<<3)+(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte>'0'?currentByte-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-start)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-1)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-3)+(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-3)/(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result/3)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-3)+(currentByte>'0'?currentByte:'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140if(result==null){for(inti=start;i<length;++i){result[i]=buffer[i];}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140if(result==null){for(inti=start;i<end;i++){result[i]=buffer[i];}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140if(result==null){for(inti=start;i<end;++i){result[i]=buffer[i];}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140if(result==null){for(inti=start;i<length;++i){result[i]=trailer[i];}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=System.currentTimeMillis();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140if(result==null){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-start)/(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-start)+(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(start-result)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?currentByte:'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?currentByte-'0':0);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result/1)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<<3)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')/(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')+(currentByte-'7');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?currentByte-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<<3)+(currentByte>'0'?currentByte-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<2)+(currentByte>'0'?currentByte-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?currentByte-1:currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte>='0'?currentByte-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140if(result==null){result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,0,result,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140if(result==null){result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,start,end);result+=length;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,length);result=BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140if(result==null){result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,start,length);result+=length;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,result,0,currentByte,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140if(result==null){result=newbyte[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte-'0')+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte>'0'?'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result*3)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-3)+(currentByte*'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-start)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte>'0'?currentByte-'0':currentByte+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)/(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?currentByte-'0':'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.toByteArray();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,result,0,currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.encode(currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.parse(currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,result,buffer,0,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,0,length);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,length);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(end-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)/(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-3)+(currentByte>'0'?'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-currentByte)/(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(end-start)+(currentByte-'0');
