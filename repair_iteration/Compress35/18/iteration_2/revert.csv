projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte-'0');//convertfromASCII//CheckStyle:MagicNumberON}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-3)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<<3)+(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte>'0'?currentByte-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-start)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-1)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-3)+(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-3)/(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result/3)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-3)+(currentByte>'0'?currentByte:'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140if(result==null){for(inti=start;i<length;++i){result[i]=buffer[i];}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140if(result==null){for(inti=start;i<end;i++){result[i]=buffer[i];}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140if(result==null){for(inti=start;i<end;++i){result[i]=buffer[i];}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140if(result==null){for(inti=start;i<length;++i){result[i]=trailer[i];}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=System.currentTimeMillis();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140if(result==null){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-start)/(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-start)+(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(start-result)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?currentByte:'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?currentByte-'0':0);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result/1)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<<3)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')/(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')+(currentByte-'7');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?currentByte-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<<3)+(currentByte>'0'?currentByte-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<2)+(currentByte>'0'?currentByte-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?currentByte-1:currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte>='0'?currentByte-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140if(result==null){result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,0,result,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140if(result==null){result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,start,end);result+=length;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,length);result=BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140if(result==null){result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,start,length);result+=length;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,result,0,currentByte,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140if(result==null){result=newbyte[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte-'0')+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte>'0'?'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result*3)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-3)+(currentByte*'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-start)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte>'0'?currentByte-'0':currentByte+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)/(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?currentByte-'0':'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.toByteArray();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,result,0,currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.encode(currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.parse(currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,result,buffer,0,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,0,length);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,length);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(end-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)/(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-3)+(currentByte>'0'?'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-currentByte)/(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(end-start)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-1)/(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-1)+(currentByte>'0'?currentByte:'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-1)+(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-1)+(currentByte*'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-1+(currentByte>'0'?currentByte:'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result*3)+(currentByte>'0'?currentByte:'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-1]+(currentByte>'0'?currentByte:'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result/3)+(currentByte>'0'?currentByte:'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-1||(currentByte>'0'?currentByte:'0'));
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte>='0'?'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<2)+(currentByte>'0'?'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<7)+(currentByte>'0'?'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte=='0'?'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte>'0'?'7':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte>'0'?'9':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,0,currentByte,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,trailer,0,currentByte,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(result,offset,buffer,0,currentByte,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(currentByte,offset,buffer,0,currentByte,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,currentByte,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(trailer,offset,buffer,0,currentByte,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(stream,offset,buffer,0,currentByte,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=System.currentTimeMillis()+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=System.currentTimeMillis()/BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=System.currentTimeMillis()/2;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=System.currentTimeMillis()/1000;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=System.currentTimeMillis()-start;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=System.currentTimeMillis()-1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>='0'?currentByte-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte=='0'?currentByte-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)/(currentByte>'0'?currentByte-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(length>'0'?currentByte-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?currentByte*'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?currentByte-'0':currentByte+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte-'0')+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte-'0')/1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<<3)+(currentByte-'0')+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<2)+(currentByte-'0')+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result/3)+(currentByte-'0')+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-start)+(currentByte-'0')+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte-'0')/2;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>='0'?currentByte:'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte=='0'?currentByte:'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(length>'0'?currentByte:'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?currentByte:'9');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<<1)+(currentByte>'0'?currentByte:'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result[i]=trailer[i];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result[i]=null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result[0]=newLong(currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result[i]=newLong(currentByte.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result[i]=newLong(currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result[0]=null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result[0]=newLong(currentByte.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-start)/(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-start)/(currentByte*'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(start-result)/(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(end-start)/(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-start)/(currentByte+'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<<3)+(currentByte>'0'?currentByte-'0':currentByte+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<2)+(currentByte>'0'?currentByte-'0':currentByte+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte>='0'?currentByte-'0':currentByte+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-3)+(currentByte>'0'?currentByte-'0':currentByte+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,0,currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,0,currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,trailer,0,currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,end,0,currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(result,offset,buffer,0,currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(trailer,offset,buffer,0,currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<6)+(currentByte>'0'?currentByte-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<8)+(currentByte>'0'?currentByte-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<7)+(currentByte>'0'?currentByte-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<2)+(currentByte>='0'?currentByte-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,start,end);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,start,end);result+=length;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,start,end);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result<N,V>result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,start,end);result+=length;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result<=newbyte[length-1];System.arraycopy(buffer,offset,buffer,start,end);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result<N,V>result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,start,end);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result<NUMBER>result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,start,end);result+=length;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=currentByte.toByteArray();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.toByteArray()+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.toByteArray()/BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.toByteArray(currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.toByteArray()-1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=this.trailer.toByteArray();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,0,result,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,0,result,start+length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(currentByte,buffer,offset,result,0,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,0,result,start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,0,result,end);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,0,result,0);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)/(currentByte*'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)/(currentByte+'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<<1)/(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)/(currentByte-'0',length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)/(currentByte>'0'?currentByte:'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-3)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-3)/(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-7)+(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-start)+(start-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(start-start)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-1)+(currentByte>'0'?'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-1+(currentByte>'0'?'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result*3)+(currentByte>'0'?'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result/3)+(currentByte>'0'?'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-start)+(currentByte>'0'?'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-2)+(currentByte>'0'?'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-1]+(currentByte>'0'?'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.parse(currentByte,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.parse(currentByte+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.parse(currentByte,offset);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.parse(currentByte,start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.parse(currentByte,0,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.parse(currentByte,buffer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte>'0'?currentByte:'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<2)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,start,length);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,start,length);result+=length;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,start,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result<N,V>result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,start,length);result+=length;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result<N,V>result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,start,length);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-3)+(end-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')+(end-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(end<<3)+(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(end-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(end<<3)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result/3)+(end-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-start)/(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(length-start)+(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(start-result)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-start)+(length-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-offset)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(end-start)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,0,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,0,length-start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,0,length-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,0,currentByte.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(result,offset,buffer,0,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,0,end);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=newbyte[length-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=newbyte[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result<null||result.length==0){result=newbyte[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140resulting=newbyte[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result<=newbyte[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result<newbyte[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<<3)+(length-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<<3)+(length-'0'+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(length<<3)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<<1)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<<3)+(length/'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<<3)+(end-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-result)/(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-currentByte)/(currentByte*'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-currentByte)/(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-currentByte)/(currentByte+'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0'+length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0'||currentByte>'7');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0'+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')/2;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result/'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result+=length-1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result+=currentByte;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result-=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result+=length/BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result+=1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result+=currentByte.length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result+=length+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(start-end)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-start)+(end-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-end)+(end-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,end);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,result,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,currentByte,length);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,length,currentByte);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,length+1);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,end,length);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,currentByte);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-1)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(length-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(length-1)+(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result+1)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result/1)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte*3)+(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result*7)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result*6)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result*3)/(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result*3)+(currentByte*'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte>'0'?currentByte:'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<'0'||currentByte>'7');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<'0'||currentByte>'7')?1:(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<'0'||currentByte>'7')?2:(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte>'0'?currentByte-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<'0'||currentByte>'7')?(currentByte+'0'):(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result/3)/(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(start-3)/(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-2)/(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(length-3)/(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result[i]=buffer[i];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result[0]=buffer[i];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result[0]=buffer[0];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result[0]=buffer[1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=buffer[i];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=newbyte[length];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result[1]=buffer[1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result/2)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte/3)+(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result/2+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result/2.0)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>='0'?currentByte-'0':0);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte=='0'?currentByte-'0':0);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(length>'0'?currentByte-'0':0);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)/(currentByte>'0'?currentByte-'0':0);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>>'0'?currentByte-'0':0);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-'0')+(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')+(currentByte+'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')+(currentByte*'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')+(currentByte-'9');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-3)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result/3)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(length-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte+'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)/(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')/(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<4)/(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)/(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<7)/(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<<1)+(currentByte>'0'?currentByte-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<<3)+(currentByte>='0'?currentByte-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<<3)+(currentByte=='0'?currentByte-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<<1)+(currentByte>'0'?currentByte-1:currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<<2)+(currentByte>'0'?currentByte-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,length,currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,length-1);result=BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,end);result=BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,length+1);result=BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,end,length);result=BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,length,currentByte);result=BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,0,result,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,0,currentByte,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result<N,V>result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,0,result,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=newbyte[length-1];System.arraycopy(buffer,offset,currentByte,0,result,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result<=newbyte[length-1];System.arraycopy(buffer,offset,buffer,0,result,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,0,result,size);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=newbyte[length-1];System.arraycopy(buffer,offset,end,0,result,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte/1)+(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result*1)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result/1)+(currentByte*'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>='0'?currentByte-'0':'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(length>'0'?currentByte-'0':'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte=='0'?currentByte-'0':'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>>'0'?currentByte-'0':'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte!='0'?currentByte-'0':'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>>'0'?currentByte-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>='0'?currentByte-1:currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>>'0'?currentByte-1:currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140thrownewIllegalArgumentException("");
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140aughtExceptionHandler.throwAsIOException("");
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140aughtExceptionHandler.throwUnsupportedOctalException("");
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140aught(newIllegalArgumentException(""));
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140aughtInvalidArgumentException("");
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140aughtExceptionHandler.throwInternal();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140aughtExceptionHandler.throwUnquotedException("");
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result/3)+(currentByte*'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-3)+(result*'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-2)+(currentByte*'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-start)+(currentByte*'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(start-3)+(currentByte*'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')/(currentByte-'7');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-'0')+(currentByte-'7');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')+(currentByte+'7');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')+(currentByte*'7');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-'0')/(currentByte-'7');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.encode(currentByte,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.encode(currentByte+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.encode(currentByte,offset);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.encode(currentByte-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.encode(currentByte,0,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.encode(currentByte,buffer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.encode(currentByte,start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-'0')/(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')/(currentByte+'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')/(currentByte*'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')/(currentByte-'9');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')/(currentByte-'0',length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?currentByte-1:0);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte=='0'?currentByte-1:currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(length>'0'?currentByte-1:currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<<1)+(currentByte>'0'?currentByte-1:'7');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)/(currentByte>'0'?currentByte-1:currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-currentByte)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-currentByte)+(end-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-'0')+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(start-currentByte)+(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-'0')+(end-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-1)+(currentByte-'0')+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-offset)+(currentByte-'0')+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-1+(currentByte-'0')+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,length);result=0;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,length-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,end);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')/(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<6)/(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=System.currentTimeMillis()+start;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140while(result!=null){for(inti=start;i<length;++i){result[i]=buffer[i];}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140while(result!=null&&result.length>0){for(inti=start;i<length;++i){result[i]=trailer[i];}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140while(result!=null){for(inti=start;i<length;++i){result[i]=trailer[i];}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140while(result!=null&&result.length>0){for(inti=start;i<length;++i){result[i]=buffer[i];}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140while(result!=null){for(inti=start;i<end;++i){result[i]=trailer[i];}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140while(result!=null){for(inti=start;i<length;++i){result[i]=currentByte[i];}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140while(result!=null){for(inti=start;i<end;++i){result[i]=buffer[i];}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,0,start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?currentByte+'0':0);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?currentByte*'0':0);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-'0')+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-6)+(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-10)+(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-offset)/(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<<3)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=newbyte[length-start];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.encode(currentByte-start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=this.twinEncoding.encode(currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.toByteArray(length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.toByteArray(offset);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-start)+(currentByte>'0'?currentByte:'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result*10)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result*currentByte)/(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-currentByte)/(end-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<4)+(currentByte>'0'?currentByte-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(currentByte,offset,buffer,0,currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,start,buffer,0,currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?currentByte+'0':'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result*'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.parse(currentByte-start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.parse(currentByte,buffer);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(end-start)+(currentByte*'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(end-start)+(currentByte>'0'?'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte>'0'?currentByte*'0':currentByte+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?currentByte:'0')+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result<N>result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,0,result,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result<N,>result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,0,result,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,0,result,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result*2+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?currentByte+'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140safeThanSubtract(result){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140safeGet(result){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140pendingTree(){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140aught(newIllegalArgumentException("").instanceMatcher(currentByte)){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140aught(newIllegalArgumentException("").instanceMillis()){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140aught(newIllegalArgumentException("").instanceMatcher()){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?currentByte+1:currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?currentByte-1:'7');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?currentByte*1.0:currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?currentByte*-1:currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result<null||result.length>0){result=newbyte[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result<N,V>result=newbyte[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result<N,E>result=newbyte[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result<N,>result=newbyte[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(trail,offset,buffer,0,currentByte,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')/(currentByte-'0'+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')/(currentByte-'0',end);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')/(currentByte-'0',currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,0,end);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,0,start);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-'0')+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<'0'||currentByte>'7')?this:currentByte-'0';
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)/(currentByte-'0')+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)/(currentByte-'0'+length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte>'0'?currentByte-'0':0);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte*'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<<3)+(currentByte>'0'?currentByte*'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result*result)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=newbyte[length+1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,length-1);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,length-start);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,count);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,start,length);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result<N>result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,start,length);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-start)/(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')+(currentByte-'0'+length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-start)+(end-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-3)+(end-'0')+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result+=start;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result+=offset;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte>'0'?'0':currentByte+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<6)+(currentByte>'0'?'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-1+(length-'0'));
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,start,end);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result<N>result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,start,end);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Resultresult=newbyte[length-1];System.arraycopy(buffer,offset,buffer,start,end);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-'0')+(result-'7');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte-3)+(currentByte*'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?trailer-'0':0);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result>3)+(currentByte>'0'?currentByte:'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result>0)+(currentByte>'0'?currentByte:'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(end-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<'0'||currentByte>'7')?(result-'0'):(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.parse(currentByte-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.encode(currentByte,buffer.length-start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-3)/(currentByte*'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(end-3)/(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result>=3)+(currentByte>'0'?currentByte-'0':currentByte+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?currentByte-1:currentByte+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?currentByte*'0':currentByte+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?trailer-'0':currentByte+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result+=length-(currentByte*BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result+=length*BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result+=length-(start+1)/BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,start,length+1);result+=length;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte>'0'?currentByte-'0':'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<7)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-1+(currentByte*'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result+3)+(currentByte*'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(trail,offset,buffer,0,currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result<N,End>result=newbyte[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result<N,H>result=newbyte[length-1];}else{thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(trole,offset,buffer,0,currentByte,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(twin,offset,buffer,0,currentByte,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(currentByte=='0'?currentByte-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result-=System.currentTimeMillis();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(currentByte<<3)+(currentByte>'0'?trailer-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<6)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result[]result=newbyte[length-1];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140resulting[i]=buffer[i];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result<N,V>result=result.result();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140resulting=newbyte[length-1];System.arraycopy(buffer,offset,buffer,0,result,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,0,result,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<4)+(currentByte-'0')+1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.toByteArray()*BYTE_MASK;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.toByteArray(),currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=trailer.toByteArray()-start;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result=newbyte[length-1];System.arraycopy(buffer,offset,buffer,start,end);result+=length;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result-=newbyte[length-1];System.arraycopy(buffer,offset,buffer,start,end);result+=length;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Resultresult=newbyte[length-1];System.arraycopy(buffer,offset,buffer,start,end);result+=length;}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(end-1)+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?trailer-'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?trailer-'0':'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)/(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)/(currentByte-'0',currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0'||result>'7');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,length);result=1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(twin,offset,buffer,0,length);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,0,length);result+=length-1;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(twin,offset,buffer,start,length);result+=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(buffer,offset,buffer,start,length+1);result-=length;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-currentByte)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140System.arraycopy(twin,offset,buffer,0,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result*'0')+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(end-'0')+(currentByte-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(end-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)+(end-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')/(end-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(length-result)+(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result[i]=newbyte[length];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result[i]=newLong(result.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result[i]=newlong(result.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result[i]=newLong(rentByte.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result*'0')+(currentByte-'7');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-'0')+(currentByte-'7',end);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<1)+(currentByte>'0'?currentByte:'0'));
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<3)/(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<4)/(result-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result>3)+(currentByte>'0'?'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-1>3)+(currentByte>'0'?'0':currentByte);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140[Delete]
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140aught(newIllegalArgumentException("");
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140aught(newIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140aught(newIllegalArgumentException("").toString()));
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140aught(Throwable.class,newIllegalArgumentException("");
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140Result[i]=buffer[i];
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-1)+(currentByte<'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-1+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result<<4)+(length-'0');
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java140result=(result-3)+(start-'0');
