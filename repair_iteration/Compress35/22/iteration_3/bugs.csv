bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  allowNonLocalFunction(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  allowNonLocalFunction(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
2	[BUG]  [BUGGY]  allowNonLocalFunction(true)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(true)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(true)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  allowNonLocalFunction(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
3	[BUG]  [BUGGY]  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parseName(buffer,  offset,  length,  DEFAULT_ENCODING);	  allowNonLocalFunction(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
4	[BUG]  [BUGGY]  enableNonLocalFunction(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNonLocalFunction(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNonLocalFunction(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  allowNonLocalFunction(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
5	[BUG]  [BUGGY]  allowNonLocalFunction(true)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(true)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(true)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNonLocalFunction(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
6	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  5,  DEFAULT_ENCODING);  [CE]  <identifier>  expected  [FE]            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  5,  DEFAULT_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  5,  DEFAULT_ENCODING);	  return    parseName(buffer,    offset,    length    -    5,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
7	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  4,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  4,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  4,  FALLBACK_ENCODING);	  return    parseName(buffer,    offset,    length    -    5,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
8	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  2,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  2,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  2,  FALLBACK_ENCODING);	  return    parseName(buffer,    offset,    length    -    5,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
9	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  5,  FALLBACK_ENCODING,  DEFAULT_ENCODING);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  5,  FALLBACK_ENCODING,  DEFAULT_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  5,  FALLBACK_ENCODING,  DEFAULT_ENCODING);	  return    parseName(buffer,    offset,    length    -    5,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
10	[BUG]  [BUGGY]  allowNegatives(true)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNegatives(true)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNegatives(true)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNegatives(false)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
11	[BUG]  [BUGGY]  enableNegatives(true)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNegatives(true)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNegatives(true)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNegatives(false)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
12	[BUG]  [BUGGY]  allowNegatives(true)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNegatives(true)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNegatives(true)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNegatives(false)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
13	[BUG]  [BUGGY]  ensureCapacity(false)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  ensureCapacity(false)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	ensureCapacity(false)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNegatives(false)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
14	[BUG]  [BUGGY]  allowNonLocalFunction(false)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(false)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(false)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNonLocalFunction(length)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
15	[BUG]  [BUGGY]  allowNonLocalFunction(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNonLocalFunction(length)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
16	[BUG]  [BUGGY]  allowNonLocalFunction(length)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(length)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(length)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonLocalFunction(length)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
17	[BUG]  [BUGGY]  allowNonLocalFunction(false)  {  if(length  <  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(false)  {  if(length  <  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(false)  {  if(length  <  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNonLocalFunction(length)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
18	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  buffer.length  -  1);  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  buffer.length  -  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  buffer.length  -  1);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    buffer.length    -    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
19	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING.length  -  1);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING.length  -  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING.length  -  1);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    buffer.length    -    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
20	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer.length  -  2);  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer.length  -  2);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer.length  -  2);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    buffer.length    -    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
21	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  BYTE_MASK  -  1);  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  BYTE_MASK  -  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  BYTE_MASK  -  1);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    buffer.length    -    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
22	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  0,  buffer.length  -  1);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  0,  buffer.length  -  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  0,  buffer.length  -  1);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    buffer.length    -    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
23	[BUG]  [BUGGY]  allowNonEmpty(length)  {  if(start  ==  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(length)  {  if(start  ==  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(length)  {  if(start  ==  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNonEmpty(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
24	[BUG]  [BUGGY]  allowNonEmpty(length)  {  if(start  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(length)  {  if(start  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(length)  {  if(start  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonEmpty(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
25	[BUG]  [BUGGY]  enableNonEmpty(length)  {  if(start  ==  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNonEmpty(length)  {  if(start  ==  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNonEmpty(length)  {  if(start  ==  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNonEmpty(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
26	[BUG]  [BUGGY]  allowNonEmpty(length)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(length)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(length)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonEmpty(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
27	[BUG]  [BUGGY]  allowNonEmpty(length)  {  if(start  >=  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(length)  {  if(start  >=  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(length)  {  if(start  >=  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNonEmpty(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
28	[BUG]  [BUGGY]  enableNonEmpty(length)  {  if(start  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNonEmpty(length)  {  if(start  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNonEmpty(length)  {  if(start  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonEmpty(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_    	non-compiled	[CE]  <identifier>  expected	33	None	replace
29	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  BYTE_MASK,  DEFAULT_ENCODING);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  BYTE_MASK,  DEFAULT_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  BYTE_MASK,  DEFAULT_ENCODING);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    BYTE_MASK,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
30	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  BYTE_MASK,  0);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  BYTE_MASK,  0);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  BYTE_MASK,  0);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    BYTE_MASK,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
31	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  BYTE_MASK,  current,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  BYTE_MASK,  current,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  BYTE_MASK,  current,  FALLBACK_ENCODING);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    BYTE_MASK,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
32	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  BYTE_MASK,  current);  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  BYTE_MASK,  current);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  BYTE_MASK,  current);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    BYTE_MASK,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
33	[BUG]  [BUGGY]  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    catch    (IOException    ex)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
34	[BUG]  [BUGGY]  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (Exception  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (Exception  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (Exception  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    catch    (IOException    ex)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
35	[BUG]  [BUGGY]  while(true)  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  catch  (IOException  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(true)  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  catch  (IOException  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(true)  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  catch  (IOException  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    catch    (IOException    ex)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
36	[BUG]  [BUGGY]  while(true)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(true)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(true)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    catch    (IOException    ex)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
37	[BUG]  [BUGGY]  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  catch  (Exception  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  catch  (Exception  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  catch  (Exception  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    catch    (IOException    ex)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
38	[BUG]  [BUGGY]  while(true)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(true)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(true)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING	  try    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    catch    (IOException    ex)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
39	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  0,  FALLBACK_ENCODING,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  0,  FALLBACK_ENCODING,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  0,  FALLBACK_ENCODING,  BYTE_MASK);	  return    parseName(buffer,    offset,    length,    0,    DEFAULT_ENCODING,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
40	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  0,  buffer.length,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  0,  buffer.length,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  0,  buffer.length,  BYTE_MASK);	  return    parseName(buffer,    offset,    length,    0,    DEFAULT_ENCODING,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
41	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  0,  DEFAULT_ENCODING,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  0,  DEFAULT_ENCODING,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  0,  DEFAULT_ENCODING,  FALLBACK_ENCODING);	  return    parseName(buffer,    offset,    length,    0,    DEFAULT_ENCODING,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
42	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  0,  BYTE_MASK,  DEFAULT_ENCODING);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  0,  BYTE_MASK,  DEFAULT_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  0,  BYTE_MASK,  DEFAULT_ENCODING);	  return    parseName(buffer,    offset,    length,    0,    DEFAULT_ENCODING,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
43	[BUG]  [BUGGY]  tries  ==  null)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  tries  ==  null)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	tries  ==  null)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
44	[BUG]  [BUGGY]  tries  ==  null)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  tries  ==  null)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	tries  ==  null)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
45	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.throwAsIOException( " ");	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
46	[BUG]  [BUGGY]  aughtExceptionHandler.handleEmptyName(buffer,  offset,  length,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleEmptyName(buffer,  offset,  length,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleEmptyName(buffer,  offset,  length,  FALLBACK_ENCODING);	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
47	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING,  BYTE_MASK,  current);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING,  BYTE_MASK,  current);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING,  BYTE_MASK,  current);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    FALLBACK_ENCODING,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
48	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  0,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  0,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  0,  BYTE_MASK);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    FALLBACK_ENCODING,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
49	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING,  0,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING,  0,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING,  0,  BYTE_MASK);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    FALLBACK_ENCODING,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
50	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer,  BYTE_MASK);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    FALLBACK_ENCODING,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
51	[BUG]  [BUGGY]  allowNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING    	non-compiled	[CE]  <identifier>  expected	30	None	replace
52	[BUG]  [BUGGY]  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parseName(buffer,  offset,  length,  FALLBACK_ENCODING);	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING    	non-compiled	[CE]  <identifier>  expected	30	None	replace
53	[BUG]  [BUGGY]  enableNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING    	non-compiled	[CE]  <identifier>  expected	30	None	replace
54	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  FALLBACK_ENCODING,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  FALLBACK_ENCODING,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  1,  FALLBACK_ENCODING,  BYTE_MASK);	  return    parseName(buffer,    offset,    length    -    1,    DEFAULT_ENCODING,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
55	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  0,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  0,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  1,  0,  BYTE_MASK);	  return    parseName(buffer,    offset,    length    -    1,    DEFAULT_ENCODING,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
56	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  BYTE_MASK,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  BYTE_MASK,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  1,  BYTE_MASK,  FALLBACK_ENCODING);	  return    parseName(buffer,    offset,    length    -    1,    DEFAULT_ENCODING,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
57	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  BYTE_MASK,  DEFAULT_ENCODING);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  BYTE_MASK,  DEFAULT_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  1,  BYTE_MASK,  DEFAULT_ENCODING);	  return    parseName(buffer,    offset,    length    -    1,    DEFAULT_ENCODING,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
58	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  buffer.length,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  buffer.length,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  1,  buffer.length,  BYTE_MASK);	  return    parseName(buffer,    offset,    length    -    1,    DEFAULT_ENCODING,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
59	[BUG]  [BUGGY]  try  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  {  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  {	  try    ==    [Delete]    catch(IOException    ioe)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
60	[BUG]  [BUGGY]  final  IOException  ioe)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  final  IOException  ioe)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	final  IOException  ioe)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    ==    [Delete]    catch(IOException    ioe)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
61	[BUG]  [BUGGY]  final  IOException  ioe  =  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  final  IOException  ioe  =  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	final  IOException  ioe  =  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);	  try    ==    [Delete]    catch(IOException    ioe)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
62	[BUG]  [BUGGY]  final  IOException  ioe)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  final  IOException  ioe)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	final  IOException  ioe)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);	  try    ==    [Delete]    catch(IOException    ioe)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
63	[BUG]  [BUGGY]  final  IOException  ioe  =  parseName(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  final  IOException  ioe  =  parseName(buffer,  offset,  length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	final  IOException  ioe  =  parseName(buffer,  offset,  length);	  try    ==    [Delete]    catch(IOException    ioe)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
64	[BUG]  [BUGGY]  final  IOException  ioe)  {  return  parseName(buffer,  off,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  final  IOException  ioe)  {  return  parseName(buffer,  off,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	final  IOException  ioe)  {  return  parseName(buffer,  off,  length,  FALLBACK_ENCODING);  }	  try    ==    [Delete]    catch(IOException    ioe)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
65	[BUG]  [BUGGY]  final  IOException  ioe)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  final  IOException  ioe)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	final  IOException  ioe)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  try    ==    [Delete]    catch(IOException    ioe)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
66	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  SHORT_NAME,  DEFAULT_ENCODING);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  SHORT_NAME,  DEFAULT_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  SHORT_NAME,  DEFAULT_ENCODING);	  return    parseName(buffer,    offset,    length,    SHORT_NAME);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
67	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  MISSING_NAME);  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  MISSING_NAME);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  MISSING_NAME);	  return    parseName(buffer,    offset,    length,    SHORT_NAME);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
68	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_NAME);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_NAME);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  DEFAULT_NAME);	  return    parseName(buffer,    offset,    length,    SHORT_NAME);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
69	[BUG]  [BUGGY]  allowNegatives(true)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNegatives(true)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNegatives(true)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNegatives(false)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_    	non-compiled	[CE]  <identifier>  expected	66	None	replace
70	[BUG]  [BUGGY]  allowNegatives(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNegatives(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNegatives(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNegatives(false)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_    	non-compiled	[CE]  <identifier>  expected	66	None	replace
71	[BUG]  [BUGGY]  enableNegatives(true)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNegatives(true)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNegatives(true)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNegatives(false)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_    	non-compiled	[CE]  <identifier>  expected	66	None	replace
72	[BUG]  [BUGGY]  allowNegatives(true)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNegatives(true)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNegatives(true)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNegatives(false)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_    	non-compiled	[CE]  <identifier>  expected	66	None	replace
73	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  BYTE_MASK  -  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  BYTE_MASK  -  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  BYTE_MASK  -  FALLBACK_ENCODING);	  return    parseName(buffer,    offset,    length    -    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
74	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length  +  1,  buffer.length);  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length  +  1,  buffer.length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleMissingName(buffer,  offset,  length  +  1,  buffer.length);	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length    +    1,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
75	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length  +  1,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length  +  1,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleMissingName(buffer,  offset,  length  +  1,  FALLBACK_ENCODING);	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length    +    1,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
76	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length  -  1,  DEFAULT_ENCODING);  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length  -  1,  DEFAULT_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleMissingName(buffer,  offset,  length  -  1,  DEFAULT_ENCODING);	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length    +    1,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
77	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length  +  1,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length  +  1,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleMissingName(buffer,  offset,  length  +  1,  BYTE_MASK);	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length    +    1,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
78	[BUG]  [BUGGY]  allowNegatives(false)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNegatives(false)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNegatives(false)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNegatives(false)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK    	non-compiled	[CE]  <identifier>  expected	65	None	replace
79	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  BYTE_MASK  -  1);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  BYTE_MASK  -  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  BYTE_MASK  -  1);	  return    parseName(buffer,    offset,    length    -    1);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
80	[BUG]  [BUGGY]  ensureCapacity(length)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  ensureCapacity(length)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	ensureCapacity(length)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNonArray(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
81	[BUG]  [BUGGY]  allowNonArray(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonArray(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonArray(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonArray(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
82	[BUG]  [BUGGY]  enableNonArray(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNonArray(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNonArray(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonArray(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
83	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  BYTE_MASK);	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
84	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  READ_MASK);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  READ_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  READ_MASK);	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
85	[BUG]  [BUGGY]  while(length  <  =  FALLBACK_ENCODING)  {  if(length  ==  FALLBACK_ENCODING)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(length  <  =  FALLBACK_ENCODING)  {  if(length  ==  FALLBACK_ENCODING)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(length  <  =  FALLBACK_ENCODING)  {  if(length  ==  FALLBACK_ENCODING)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  if(length    ==    FALLBACK_ENCODING)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
86	[BUG]  [BUGGY]  while(length  ==  FALLBACK_ENCODING)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(length  ==  FALLBACK_ENCODING)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(length  ==  FALLBACK_ENCODING)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  if(length    ==    FALLBACK_ENCODING)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
87	[BUG]  [BUGGY]  while(length  ==  FALLBACK_ENCODING)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(length  ==  FALLBACK_ENCODING)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(length  ==  FALLBACK_ENCODING)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  if(length    ==    FALLBACK_ENCODING)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
88	[BUG]  [BUGGY]  while(length  <  =  FALLBACK_ENCODING)  {  if(length  ==  DEFAULT_ENCODING)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(length  <  =  FALLBACK_ENCODING)  {  if(length  ==  DEFAULT_ENCODING)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(length  <  =  FALLBACK_ENCODING)  {  if(length  ==  DEFAULT_ENCODING)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  if(length    ==    FALLBACK_ENCODING)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
89	[BUG]  [BUGGY]  while(length  ==  FALLBACK_ENCODING)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(length  ==  FALLBACK_ENCODING)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(length  ==  FALLBACK_ENCODING)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);	  if(length    ==    FALLBACK_ENCODING)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
90	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_DEFAULT);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_DEFAULT);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  DEFAULT_DEFAULT);	  return    parseName(buffer,    offset,    length,    SHORT_DEFAULT);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
91	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  0,  SHORT_DEFAULT);  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  0,  SHORT_DEFAULT);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  0,  SHORT_DEFAULT);	  return    parseName(buffer,    offset,    length,    SHORT_DEFAULT);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
92	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_DESCENDING);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_DESCENDING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  DEFAULT_DESCENDING);	  return    parseName(buffer,    offset,    length,    SHORT_DEFAULT);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
93	[BUG]  [BUGGY]  while(buffer!=  null  &&  buffer.length  <  =  length)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(buffer!=  null  &&  buffer.length  <  =  length)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(buffer!=  null  &&  buffer.length  <  =  length)  {  throw  new  RuntimeException( " ");  }	  if(buffer    ==    null    ||    buffer.length    <    =    length)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
94	[BUG]  [BUGGY]  while(buffer  ==  null  &&  buffer.length  <  =  length)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(buffer  ==  null  &&  buffer.length  <  =  length)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(buffer  ==  null  &&  buffer.length  <  =  length)  {  throw  new  RuntimeException( " ");  }	  if(buffer    ==    null    ||    buffer.length    <    =    length)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
95	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length  <  length)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer  ==  null  ||  buffer.length  <  length)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer  ==  null  ||  buffer.length  <  length)  {  throw  new  RuntimeException( " ");  }	  if(buffer    ==    null    ||    buffer.length    <    =    length)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
96	[BUG]  [BUGGY]  while(buffer!=  null  ||  buffer.length  <  length)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(buffer!=  null  ||  buffer.length  <  length)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(buffer!=  null  ||  buffer.length  <  length)  {  throw  new  RuntimeException( " ");  }	  if(buffer    ==    null    ||    buffer.length    <    =    length)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
97	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length!=  length)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer  ==  null  ||  buffer.length!=  length)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer  ==  null  ||  buffer.length!=  length)  {  throw  new  RuntimeException( " ");  }	  if(buffer    ==    null    ||    buffer.length    <    =    length)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
98	[BUG]  [BUGGY]  allowNull(buffer,  offset,  length))  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNull(buffer,  offset,  length))  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNull(buffer,  offset,  length))  {  throw  new  RuntimeException( " ");  }	  if(buffer    ==    null    ||    buffer.length    <    =    length)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
99	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  BYTE_MASK);	  return    parseName(buffer,    offset,    length,    BYTE_MASK,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
100	[BUG]  [BUGGY]  allowNonLocalFunction(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonLocalFunction(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
101	[BUG]  [BUGGY]  allowNonLocalFunction(false)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(false)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(false)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNonLocalFunction(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
102	[BUG]  [BUGGY]  enableNonLocalFunction(false)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNonLocalFunction(false)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNonLocalFunction(false)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNonLocalFunction(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
103	[BUG]  [BUGGY]  enableNonLocalFunction(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNonLocalFunction(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNonLocalFunction(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonLocalFunction(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
104	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  DEAD_MASK);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  DEAD_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  DEAD_MASK);	  return    parseName(buffer,    offset,    length,    SHORTBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
105	[BUG]  [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  parseName(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  parseName(buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  parseName(buffer,  offset,  length);  }	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    return    parseName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
106	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  -  1);  return  parseName(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  -  1);  return  parseName(buffer,  offset,  length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length  -  1);  return  parseName(buffer,  offset,  length);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    return    parseName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
107	[BUG]  [BUGGY]  try  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  parseName(buffer,  offset,  length);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  parseName(buffer,  offset,  length);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  parseName(buffer,  offset,  length);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    return    parseName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
108	[BUG]  [BUGGY]  if(length  <  =  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  parseName(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  <  =  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  parseName(buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  <  =  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  parseName(buffer,  offset,  length);  }	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    return    parseName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
109	[BUG]  [BUGGY]  try  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  parseName(buffer,  offset,  length);  }  catch  (IOException  ioe)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  parseName(buffer,  offset,  length);  }  catch  (IOException  ioe)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  parseName(buffer,  offset,  length);  }  catch  (IOException  ioe)  {  throw  new  RuntimeException( " ");  }	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    return    parseName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
110	[BUG]  [BUGGY]  allowNegatives(true)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_EN  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNegatives(true)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_EN  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNegatives(true)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_EN	  allowNegatives(false)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_EN    	non-compiled	[CE]  <identifier>  expected	64	None	replace
111	[BUG]  [BUGGY]  allowNegatives(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_EN  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNegatives(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_EN  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNegatives(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_EN	  allowNegatives(false)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_EN    	non-compiled	[CE]  <identifier>  expected	64	None	replace
112	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  buffer.length  +  1);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  buffer.length  +  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  buffer.length  +  1);	  return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
113	[BUG]  [BUGGY]  if(length  >  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  buffer.length);  }  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  >  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  buffer.length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  >  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  buffer.length);  }	  return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
114	[BUG]  [BUGGY]  if(length  >  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  buffer.length);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  >  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  buffer.length);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  >  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  buffer.length);  }  else  {  throw  new  RuntimeException( " ");  }	  return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
115	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  buffer.length);  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  buffer.length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  buffer.length);	  return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
116	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length  -  2);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length  -  2);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length  -  2);	  String    name    =    parseName(buffer,    offset,    length    -    1);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
117	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length  -  1,  buffer.length);  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length  -  1,  buffer.length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length  -  1,  buffer.length);	  String    name    =    parseName(buffer,    offset,    length    -    1);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
118	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length);	  String    name    =    parseName(buffer,    offset,    length    -    1);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
119	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  BYTE_MASK  -  1);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  BYTE_MASK  -  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  BYTE_MASK  -  1);	  String    name    =    parseName(buffer,    offset,    length    -    1);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
120	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length  +  1);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length  +  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length  +  1);	  String    name    =    parseName(buffer,    offset,    length    -    1);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
121	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length  -  4);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length  -  4);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length  -  4);	  String    name    =    parseName(buffer,    offset,    length    -    1);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
122	[BUG]  [BUGGY]  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }	  try    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    catch    (IOException    ex)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
123	[BUG]  [BUGGY]  while(true)  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(true)  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(true)  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }	  try    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    catch    (IOException    ex)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
124	[BUG]  [BUGGY]  while(true)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(true)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(true)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }	  try    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    catch    (IOException    ex)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
125	[BUG]  [BUGGY]  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (Exception  ex)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (Exception  ex)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (Exception  ex)  {  throw  new  RuntimeException( " ");  }	  try    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    catch    (IOException    ex)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
126	[BUG]  [BUGGY]  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  catch  (Exception  ex)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  catch  (Exception  ex)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  catch  (Exception  ex)  {  throw  new  RuntimeException( " ");  }	  try    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    catch    (IOException    ex)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
127	[BUG]  [BUGGY]  allowNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
128	[BUG]  [BUGGY]  enableNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
129	[BUG]  [BUGGY]  allowNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
130	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  BYTE_MASK  +  1);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  BYTE_MASK  +  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  1,  BYTE_MASK  +  1);	  return    parseName(buffer,    offset,    length    -    1,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
131	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length  <  =  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer  ==  null  ||  buffer.length  <  =  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer  ==  null  ||  buffer.length  <  =  length)  {  throw  new  IllegalArgumentException( " ");  }	  ==    [Delete]    	non-compiled	[CE]  <identifier>  expected	93	None	replace
132	[BUG]  [BUGGY]  enableNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
133	[BUG]  [BUGGY]  allowNonEmpty(true)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(true)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(true)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
134	[BUG]  [BUGGY]  allowNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  0,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  0,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  0,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
135	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  true);  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  true);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  true);	  return    parseName(buffer,    offset,    length,    false);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
136	[BUG]  [BUGGY]  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  false);  }  else  {  throw  new  RuntimeException( " ");  }	  return    parseName(buffer,    offset,    length,    false);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
137	[BUG]  [BUGGY]  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  false);  }  else  {  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  false);  }  else  {  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  false);  }  else  {  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  }	  return    parseName(buffer,    offset,    length,    false);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
138	[BUG]  [BUGGY]  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  false);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  false);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  false);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  return    parseName(buffer,    offset,    length,    false);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
139	[BUG]  [BUGGY]  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  false);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  BYTE_MASK);  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  false);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  BYTE_MASK);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  false);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  BYTE_MASK);  }	  return    parseName(buffer,    offset,    length,    false);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
140	[BUG]  [BUGGY]  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  false);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  false);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  false);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  return    parseName(buffer,    offset,    length,    false);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
141	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  DEFAULT_ENCODING);  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  DEFAULT_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  DEFAULT_ENCODING);	  String    name    =    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
142	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING,  BYTE_MASK);	  String    name    =    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
143	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  0,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  0,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  0,  FALLBACK_ENCODING);	  String    name    =    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
144	[BUG]  [BUGGY]  while(buffer!=  null  &&  buffer.length  <  =  length)  {  return  parseName(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(buffer!=  null  &&  buffer.length  <  =  length)  {  return  parseName(buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(buffer!=  null  &&  buffer.length  <  =  length)  {  return  parseName(buffer,  offset,  length);  }	  if(buffer    ==    null    ||    buffer.length    <    =    length)    {    return    parseName(buffer,    offset,    length);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
145	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length  <  length)  {  return  parseName(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer  ==  null  ||  buffer.length  <  length)  {  return  parseName(buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer  ==  null  ||  buffer.length  <  length)  {  return  parseName(buffer,  offset,  length);  }	  if(buffer    ==    null    ||    buffer.length    <    =    length)    {    return    parseName(buffer,    offset,    length);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
146	[BUG]  [BUGGY]  while(buffer  ==  null  &&  buffer.length  <  =  length)  {  return  parseName(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(buffer  ==  null  &&  buffer.length  <  =  length)  {  return  parseName(buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(buffer  ==  null  &&  buffer.length  <  =  length)  {  return  parseName(buffer,  offset,  length);  }	  if(buffer    ==    null    ||    buffer.length    <    =    length)    {    return    parseName(buffer,    offset,    length);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
147	[BUG]  [BUGGY]  parent  ==  null  ||  buffer.length  <  =  length)  {  return  parseName(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parent  ==  null  ||  buffer.length  <  =  length)  {  return  parseName(buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parent  ==  null  ||  buffer.length  <  =  length)  {  return  parseName(buffer,  offset,  length);  }	  if(buffer    ==    null    ||    buffer.length    <    =    length)    {    return    parseName(buffer,    offset,    length);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
148	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length!=  length)  {  return  parseName(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer  ==  null  ||  buffer.length!=  length)  {  return  parseName(buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer  ==  null  ||  buffer.length!=  length)  {  return  parseName(buffer,  offset,  length);  }	  if(buffer    ==    null    ||    buffer.length    <    =    length)    {    return    parseName(buffer,    offset,    length);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
149	[BUG]  [BUGGY]  while(buffer!=  null  &&  buffer.length  <  =  length)  {  return  parseName(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(buffer!=  null  &&  buffer.length  <  =  length)  {  return  parseName(buffer,  offset,  length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(buffer!=  null  &&  buffer.length  <  =  length)  {  return  parseName(buffer,  offset,  length);	  if(buffer    ==    null    ||    buffer.length    <    =    length)    {    return    parseName(buffer,    offset,    length);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
150	[BUG]  [BUGGY]  while(buffer!=  null  &&  buffer.length  >  0)  {  return  buffer.toString();  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(buffer!=  null  &&  buffer.length  >  0)  {  return  buffer.toString();  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(buffer!=  null  &&  buffer.length  >  0)  {  return  buffer.toString();  }	  if(buffer    ==    null)    {    return    buffer.toString();    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
151	[BUG]  [BUGGY]  return  buffer.toString();  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  buffer.toString();  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  buffer.toString();	  if(buffer    ==    null)    {    return    buffer.toString();    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
152	[BUG]  [BUGGY]  while(buffer!=  null)  {  return  buffer.toString();  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(buffer!=  null)  {  return  buffer.toString();  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(buffer!=  null)  {  return  buffer.toString();  }	  if(buffer    ==    null)    {    return    buffer.toString();    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
153	[BUG]  [BUGGY]  if(buffer!=  null)  {  return  buffer.toString();  }  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer!=  null)  {  return  buffer.toString();  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer!=  null)  {  return  buffer.toString();  }	  if(buffer    ==    null)    {    return    buffer.toString();    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
154	[BUG]  [BUGGY]  while(buffer!=  null)  {  buffer  =  buffer.toString();  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(buffer!=  null)  {  buffer  =  buffer.toString();  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(buffer!=  null)  {  buffer  =  buffer.toString();	  if(buffer    ==    null)    {    return    buffer.toString();    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
155	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  TALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  TALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  1,  TALLBACK_ENCODING);	  return    parseName(buffer,    offset,    length,    TALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
156	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  TALLBACK_ENCODING,  DEFAULT_ENCODING);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  TALLBACK_ENCODING,  DEFAULT_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  TALLBACK_ENCODING,  DEFAULT_ENCODING);	  return    parseName(buffer,    offset,    length,    TALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
157	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  -  1);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  -  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length  -  1);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
158	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  +  1);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  +  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length  +  1);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
159	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length,  BYTE_MASK);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
160	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length,  0);  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length,  0);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length,  0);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
161	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length,  1);  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length,  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length,  1);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
162	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  size);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  size);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
163	[BUG]  [BUGGY]  try  ==  false)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  ==  false)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  ==  false)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    ==    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
164	[BUG]  [BUGGY]  try  ==  false)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  ==  false)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  ==  false)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  try    ==    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
165	[BUG]  [BUGGY]  try  ==  0)  {  return  parseName(buffer,  offset,  length,  0,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  ==  0)  {  return  parseName(buffer,  offset,  length,  0,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  ==  0)  {  return  parseName(buffer,  offset,  length,  0,  DEFAULT_ENCODING);  }	  try    ==    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
166	[BUG]  [BUGGY]  try  >>  false)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  >>  false)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  >>  false)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    ==    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
167	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0,  BYTE_MASK);	  return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING,    DEFAULT_MASK);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
168	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0);	  return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING,    DEFAULT_MASK);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
169	[BUG]  [BUGGY]  aughtExceptionHandler.handleException( " ");  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleException( " ");  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleException( " ");	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
170	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIgnoredException( " ");  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.throwAsIgnoredException( " ");  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.throwAsIgnoredException( " ");	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
171	[BUG]  [BUGGY]  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  BYTE_MASK);	  return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
172	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  READ_MASK);  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  READ_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  READ_MASK);	  String    name    =    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    READ_MASK);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
173	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  BYTE_MASK,  READ_MASK);  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  BYTE_MASK,  READ_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  BYTE_MASK,  READ_MASK);	  String    name    =    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    READ_MASK);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
174	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  0,  READ_MASK);  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  0,  READ_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  0,  READ_MASK);	  String    name    =    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    READ_MASK);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
175	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  READ_MASK,  DEFAULT_ENCODING);  [CE]  <identifier>  expected  [FE]                                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  READ_MASK,  DEFAULT_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  READ_MASK,  DEFAULT_ENCODING);	  String    name    =    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    READ_MASK);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
176	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  READ_MASK,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  READ_MASK,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  READ_MASK,  BYTE_MASK);	  String    name    =    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    READ_MASK);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
177	[BUG]  [BUGGY]  parseName(buffer,  offset,  length,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parseName(buffer,  offset,  length,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parseName(buffer,  offset,  length,  BYTE_MASK);	  parseName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
178	[BUG]  [BUGGY]  parseName(buffer,  offset,  length,  0);  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parseName(buffer,  offset,  length,  0);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parseName(buffer,  offset,  length,  0);	  parseName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
179	[BUG]  [BUGGY]  parseName(buffer,  offset,  length,  MISSING_ENCODING);  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parseName(buffer,  offset,  length,  MISSING_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parseName(buffer,  offset,  length,  MISSING_ENCODING);	  parseName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
180	[BUG]  [BUGGY]  parseName(buffer,  offset,  length,  READ_MASK);  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parseName(buffer,  offset,  length,  READ_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parseName(buffer,  offset,  length,  READ_MASK);	  parseName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
181	[BUG]  [BUGGY]  parseName(buffer,  offset,  length,  SHORT_NAME);  [CE]  <identifier>  expected  [FE]                                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parseName(buffer,  offset,  length,  SHORT_NAME);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parseName(buffer,  offset,  length,  SHORT_NAME);	  parseName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
182	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  0,  buffer.length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  1,  0,  buffer.length);	  return    parseName(buffer,    offset,    length    -    1,    0,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
183	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  0,  0,  DEFAULT_ENCODING);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  0,  0,  DEFAULT_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  1,  0,  0,  DEFAULT_ENCODING);	  return    parseName(buffer,    offset,    length    -    1,    0,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
184	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  0,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  0,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  1,  0,  FALLBACK_ENCODING);	  return    parseName(buffer,    offset,    length    -    1,    0,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
185	[BUG]  [BUGGY]  parent  ==  DEFAULT_ENCODING  &&  length  ==  FALLBACK_ENCODING)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parent  ==  DEFAULT_ENCODING  &&  length  ==  FALLBACK_ENCODING)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parent  ==  DEFAULT_ENCODING  &&  length  ==  FALLBACK_ENCODING)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  if(length    ==    FALLBACK_ENCODING)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
186	[BUG]  [BUGGY]  parent  ==  DEFAULT_ENCODING)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parent  ==  DEFAULT_ENCODING)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parent  ==  DEFAULT_ENCODING)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  if(length    ==    FALLBACK_ENCODING)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
187	[BUG]  [BUGGY]  parent  ==  DEFAULT_ENCODING  ||  length  ==  FALLBACK_ENCODING)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parent  ==  DEFAULT_ENCODING  ||  length  ==  FALLBACK_ENCODING)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parent  ==  DEFAULT_ENCODING  ||  length  ==  FALLBACK_ENCODING)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  if(length    ==    FALLBACK_ENCODING)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
188	[BUG]  [BUGGY]  parent  ==  null  ||  length  ==  FALLBACK_ENCODING)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parent  ==  null  ||  length  ==  FALLBACK_ENCODING)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parent  ==  null  ||  length  ==  FALLBACK_ENCODING)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  if(length    ==    FALLBACK_ENCODING)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
189	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  SHORT_DESCRIPTION);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  SHORT_DESCRIPTION);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  SHORT_DESCRIPTION);	  return    parseName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
190	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  0,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  0,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  0,  BYTE_MASK);	  String    name    =    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
191	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  BYTE_MASK,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  BYTE_MASK,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  BYTE_MASK,  FALLBACK_ENCODING);	  String    name    =    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
192	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  0,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  0,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  0,  BYTE_MASK);	  String    name    =    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
193	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  BYTE_MASK,  DEFAULT_ENCODING);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  BYTE_MASK,  DEFAULT_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  BYTE_MASK,  DEFAULT_ENCODING);	  String    name    =    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
194	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  FALLBACK_ENCODING,  DEFAULT_ENCODING);  [CE]  <identifier>  expected  [FE]            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  FALLBACK_ENCODING,  DEFAULT_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  1,  FALLBACK_ENCODING,  DEFAULT_ENCODING);	  return    parseName(buffer,    offset,    length    -    1,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
195	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  +  1,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  +  1,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  +  1,  FALLBACK_ENCODING);	  return    parseName(buffer,    offset,    length    -    1,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
196	[BUG]  [BUGGY]  allowNonWhitespace(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonWhitespace(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonWhitespace(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonWhitespace(buffer,    offset,    length))    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
197	[BUG]  [BUGGY]  enableNonWhitespace(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNonWhitespace(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNonWhitespace(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonWhitespace(buffer,    offset,    length))    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
198	[BUG]  [BUGGY]  enableNonWhitespace(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNonWhitespace(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNonWhitespace(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNonWhitespace(buffer,    offset,    length))    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
199	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  BYTE_MASK  +  1);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  BYTE_MASK  +  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  BYTE_MASK  +  1);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    BYTE_MASK    +    1);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
200	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING  +  1);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING  +  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING  +  1);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    BYTE_MASK    +    1);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
201	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING,  BYTE_MASK  +  1);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING,  BYTE_MASK  +  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING,  BYTE_MASK  +  1);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    BYTE_MASK    +    1);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
202	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  0,  BYTE_MASK  +  1);  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  0,  BYTE_MASK  +  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  0,  BYTE_MASK  +  1);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    BYTE_MASK    +    1);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
203	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  BYTE_MASK,  FALLBACK_ENCODING  +  1);  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  BYTE_MASK,  FALLBACK_ENCODING  +  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  BYTE_MASK,  FALLBACK_ENCODING  +  1);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    BYTE_MASK    +    1);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
204	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING  +  1);  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING  +  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING  +  1);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    BYTE_MASK    +    1);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
205	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  0,  FALLBACK_ENCODING,  DEFAULT_ENCODING);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  0,  FALLBACK_ENCODING,  DEFAULT_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  0,  FALLBACK_ENCODING,  DEFAULT_ENCODING);	  return    parseName(buffer,    offset,    length,    0,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
206	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length  -  1,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length  -  1,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length  -  1,  FALLBACK_ENCODING);	  String    name    =    parseName(buffer,    offset,    length    -    1,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
207	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length  -  1,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length  -  1,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length  -  1,  BYTE_MASK);	  String    name    =    parseName(buffer,    offset,    length    -    1,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
208	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length  -  1,  DEFAULT_ENCODING,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length  -  1,  DEFAULT_ENCODING,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length  -  1,  DEFAULT_ENCODING,  BYTE_MASK);	  String    name    =    parseName(buffer,    offset,    length    -    1,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
209	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length  -  1,  0,  DEFAULT_ENCODING);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length  -  1,  0,  DEFAULT_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length  -  1,  0,  DEFAULT_ENCODING);	  String    name    =    parseName(buffer,    offset,    length    -    1,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
210	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  buffer.length  -  1);  [CE]  <identifier>  expected  [FE]            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  buffer.length  -  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  1,  buffer.length  -  1);	  return    parseName(buffer,    offset,    length    -    1,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
211	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  buffer.length  +  1);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  buffer.length  +  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  1,  buffer.length  +  1);	  return    parseName(buffer,    offset,    length    -    1,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
212	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  buffer.length);  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  buffer.length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  buffer.length);	  return    parseName(buffer,    offset,    length    -    1,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
213	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  buffer.length  -  2);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  buffer.length  -  2);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  1,  buffer.length  -  2);	  return    parseName(buffer,    offset,    length    -    1,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
214	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  +  1,  buffer.length);  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  +  1,  buffer.length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  +  1,  buffer.length);	  return    parseName(buffer,    offset,    length    -    1,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
215	[BUG]  [BUGGY]  enableNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
216	[BUG]  [BUGGY]  ensureCapacity(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  ensureCapacity(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	ensureCapacity(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
217	[BUG]  [BUGGY]  while(true)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(true)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(true)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
218	[BUG]  [BUGGY]  allowNegatives(true)  {  if(length  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNegatives(true)  {  if(length  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNegatives(true)  {  if(length  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNegatives(false)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
219	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING,  DEFAULT_ENCODING);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING,  DEFAULT_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING,  DEFAULT_ENCODING);	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
220	[BUG]  [BUGGY]  if(length  ==  FALLBACK_ENCODING)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  ==  FALLBACK_ENCODING)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  ==  FALLBACK_ENCODING)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
221	[BUG]  [BUGGY]  if(length  ==  FALLBACK_ENCODING)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  ==  FALLBACK_ENCODING)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  ==  FALLBACK_ENCODING)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
222	[BUG]  [BUGGY]  if(length  ==  FALLBACK_ENCODING)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  ==  FALLBACK_ENCODING)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  ==  FALLBACK_ENCODING)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
223	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  DEFAULT_ENCODING,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  DEFAULT_ENCODING,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  DEFAULT_ENCODING,  BYTE_MASK);	  return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
224	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  0,  1);  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  0,  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  0,  1);	  return    parseName(buffer,    offset,    length,    0,    0);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
225	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  0,  2);  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  0,  2);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  0,  2);	  return    parseName(buffer,    offset,    length,    0,    0);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
226	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  0,  size);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  0,  size);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  0,  size);	  return    parseName(buffer,    offset,    length,    0,    0);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
227	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  0,  4);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  0,  4);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  0,  4);	  return    parseName(buffer,    offset,    length,    0,    0);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
228	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  0,  0);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  0,  0);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  0,  0);	  String    name    =    parseName(buffer,    offset,    length,    0,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
229	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  0,  buffer.length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  0,  buffer.length);	  String    name    =    parseName(buffer,    offset,    length,    0,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
230	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  0,  1);  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  0,  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  0,  1);	  String    name    =    parseName(buffer,    offset,    length,    0,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
231	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  0,  4);  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  0,  4);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  0,  4);	  String    name    =    parseName(buffer,    offset,    length,    0,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
232	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING).throwAsIOException( " ");  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING).throwAsIOException( " ");  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING).throwAsIOException( " ");	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING).throwAsIOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	87	None	replace
233	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING).throwAsIOException( " ".);  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING).throwAsIOException( " ".);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING).throwAsIOException( " ".);	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING).throwAsIOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	87	None	replace
234	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  3);  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  3);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  3);	  return    parseName(buffer,    offset,    length,    10);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
235	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  5);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  5);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  5);	  return    parseName(buffer,    offset,    length,    10);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
236	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  FALLBACK_ENCODING,  buffer.length);  [CE]  <identifier>  expected  [FE]            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  FALLBACK_ENCODING,  buffer.length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  1,  FALLBACK_ENCODING,  buffer.length);	  return    parseName(buffer,    offset,    length    -    1,    DEFAULT_ENCODING,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
237	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  1);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  1);	  String    name    =    parseName(buffer,    offset,    length,    0);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
238	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  2);  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  2);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  2);	  String    name    =    parseName(buffer,    offset,    length,    0);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
239	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  4);  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  4);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  4);	  String    name    =    parseName(buffer,    offset,    length,    0);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
240	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  3);  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  3);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  3);	  String    name    =    parseName(buffer,    offset,    length,    0);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
241	[BUG]  [BUGGY]  tries  ==  if(length  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  tries  ==  if(length  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	tries  ==  if(length  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    ==    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
242	[BUG]  [BUGGY]  tries  ==  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  tries  ==  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	tries  ==  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  try    ==    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
243	[BUG]  [BUGGY]  tries  ==  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  tries  ==  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	tries  ==  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    ==    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
244	[BUG]  [BUGGY]  tries  ==  if(length  <  =  1)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  tries  ==  if(length  <  =  1)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	tries  ==  if(length  <  =  1)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    ==    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
245	[BUG]  [BUGGY]  tries  ==  if(length  >=  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  tries  ==  if(length  >=  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	tries  ==  if(length  >=  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    ==    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
246	[BUG]  [BUGGY]  tries  ==  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  tries  ==  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	tries  ==  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    ==    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
247	[BUG]  [BUGGY]  allowNonEmpty(length)  {  if(start  >=  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(length)  {  if(start  >=  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(length)  {  if(start  >=  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonEmpty(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
248	[BUG]  [BUGGY]  allowNonEmpty(length)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(length)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(length)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNonEmpty(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
249	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  MISSING_ENCODING,  DEFAULT_ENCODING);  [CE]  <identifier>  expected  [FE]            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  MISSING_ENCODING,  DEFAULT_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  MISSING_ENCODING,  DEFAULT_ENCODING);	  return    parseName(buffer,    offset,    length,    MISSING_ENCODING);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
250	[BUG]  [BUGGY]  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  MISSING_ENCODING);  }  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  MISSING_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  MISSING_ENCODING);  }	  return    parseName(buffer,    offset,    length,    MISSING_ENCODING);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
251	[BUG]  [BUGGY]  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  MISSING_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  MISSING_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  MISSING_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  return    parseName(buffer,    offset,    length,    MISSING_ENCODING);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
252	[BUG]  [BUGGY]  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  MISSING_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  MISSING_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  MISSING_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  return    parseName(buffer,    offset,    length,    MISSING_ENCODING);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
253	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  0,  buffer.length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  0,  buffer.length);	  return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING,    0,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
254	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0,  0);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0,  0);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0,  0);	  return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING,    0,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
255	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0,  size);  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0,  size);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0,  size);	  return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING,    0,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
256	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0,  buffer.length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0,  buffer.length);	  return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING,    0,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
257	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0,  FIELD_NAME);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0,  FIELD_NAME);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0,  FIELD_NAME);	  return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING,    0,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
258	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer.length  -  1);  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer.length  -  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer.length  -  1);	  String    name    =    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
259	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer.length  +  1);  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer.length  +  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer.length  +  1);	  String    name    =    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
260	[BUG]  [BUGGY]  if(length  <  =  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  <  =  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  <  =  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
261	[BUG]  [BUGGY]  if(length  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
262	[BUG]  [BUGGY]  if(length  <  =  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  <  =  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  <  =  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
263	[BUG]  [BUGGY]  if(length  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
264	[BUG]  [BUGGY]  allowNonLocalFunction(true)  {  if(length  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(true)  {  if(length  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(true)  {  if(length  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonLocalFunction(false)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
265	[BUG]  [BUGGY]  allowNonLocalFunction(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonLocalFunction(false)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
266	[BUG]  [BUGGY]  allowNonLocalFunction(true)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(true)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(true)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonLocalFunction(false)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
267	[BUG]  [BUGGY]  allowNonLocalFunction(true)  {  if(length  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(true)  {  if(length  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(true)  {  if(length  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonLocalFunction(false)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
268	[BUG]  [BUGGY]  allowNonLocalFunction(true)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(true)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(true)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonLocalFunction(false)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
269	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length  -  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length  -  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length  -  FALLBACK_ENCODING);	  String    name    =    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
270	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING  +  1);  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING  +  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING  +  1);	  return    parseName(buffer,    offset,    length,    BYTE_MASK    +    1);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
271	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  BYTE_MASK  +  2);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  BYTE_MASK  +  2);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  BYTE_MASK  +  2);	  return    parseName(buffer,    offset,    length,    BYTE_MASK    +    1);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
272	[BUG]  [BUGGY]  allowNonEmpty(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  allowNonEmpty(buffer,    offset,    length))    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
273	[BUG]  [BUGGY]  allowNonEmpty(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNonEmpty(buffer,    offset,    length))    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
274	[BUG]  [BUGGY]  allowNonEmpty(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonEmpty(buffer,    offset,    length))    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
275	[BUG]  [BUGGY]  allowNonEmpty(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  0,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  0,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  0,  DEFAULT_ENCODING);  }	  allowNonEmpty(buffer,    offset,    length))    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
276	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  0,  FALLBACK_ENCODING  +  1);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  0,  FALLBACK_ENCODING  +  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  0,  FALLBACK_ENCODING  +  1);	  return    parseName(buffer,    offset,    length,    0,    DEFAULT_ENCODING    +    1);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
277	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0,  DEFAULT_ENCODING  +  1);  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0,  DEFAULT_ENCODING  +  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0,  DEFAULT_ENCODING  +  1);	  return    parseName(buffer,    offset,    length,    0,    DEFAULT_ENCODING    +    1);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
278	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  0,  buffer.length  +  1);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  0,  buffer.length  +  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  0,  buffer.length  +  1);	  return    parseName(buffer,    offset,    length,    0,    DEFAULT_ENCODING    +    1);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
279	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING);	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
280	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING,  BYTE_MASK);	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
281	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  0,  DEFAULT_ENCODING);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  0,  DEFAULT_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleMissingName(buffer,  offset,  0,  DEFAULT_ENCODING);	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
282	[BUG]  [BUGGY]  handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
283	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  SHORT_NAME);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  SHORT_NAME);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  SHORT_NAME);	  String    name    =    parseName(buffer,    offset,    length,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
284	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer.length  *  2  +  1);  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer.length  *  2  +  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer.length  *  2  +  1);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    buffer.length    +    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
285	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  0,  buffer.length  -  2);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  0,  buffer.length  -  2);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  0,  buffer.length  -  2);	  return    parseName(buffer,    offset,    length,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
286	[BUG]  [BUGGY]  if(length  >  0)  {  return  parseName(buffer,  offset,  length,  0,  buffer.length);  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  >  0)  {  return  parseName(buffer,  offset,  length,  0,  buffer.length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  >  0)  {  return  parseName(buffer,  offset,  length,  0,  buffer.length);  }	  return    parseName(buffer,    offset,    length,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
287	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  0,  buffer.length  +  2);  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  0,  buffer.length  +  2);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  0,  buffer.length  +  2);	  return    parseName(buffer,    offset,    length,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
288	[BUG]  [BUGGY]  allowNonEmpty(size)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(size)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(size)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
289	[BUG]  [BUGGY]  tries  ==  null)  {  return  parseName(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  tries  ==  null)  {  return  parseName(buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	tries  ==  null)  {  return  parseName(buffer,  offset,  length);  }	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length);    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
290	[BUG]  [BUGGY]  aughtExceptionHandler.handleEmptyName(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleEmptyName(buffer,  offset,  length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleEmptyName(buffer,  offset,  length);	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length);    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
291	[BUG]  [BUGGY]  tries  ==  null  &&  parseName(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  tries  ==  null  &&  parseName(buffer,  offset,  length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	tries  ==  null  &&  parseName(buffer,  offset,  length);	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length);    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
292	[BUG]  [BUGGY]  tries  ==  null  &&  parseName(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  tries  ==  null  &&  parseName(buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	tries  ==  null  &&  parseName(buffer,  offset,  length);  }	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length);    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
293	[BUG]  [BUGGY]  allowNonLocalFunction(length)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(length)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(length)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
294	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  0,  BYTE_MASK  -  1);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  0,  BYTE_MASK  -  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  0,  BYTE_MASK  -  1);	  return    parseName(buffer,    offset,    length,    0,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
295	[BUG]  [BUGGY]  while(true)  {  if(ioe  instanceof  IOException)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(true)  {  if(ioe  instanceof  IOException)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(true)  {  if(ioe  instanceof  IOException)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    ==    [Delete]    catch(IOException    ioe)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
296	[BUG]  [BUGGY]  while(true)  {  if(ioe  instanceof  IOException)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(true)  {  if(ioe  instanceof  IOException)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(true)  {  if(ioe  instanceof  IOException)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    ==    [Delete]    catch(IOException    ioe)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
297	[BUG]  [BUGGY]  while(true)  {  if(ioe  instanceof  IOException)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(true)  {  if(ioe  instanceof  IOException)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(true)  {  if(ioe  instanceof  IOException)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  try    ==    [Delete]    catch(IOException    ioe)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
298	[BUG]  [BUGGY]  while(true)  {  if(ioe  instanceof  IOException)  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(true)  {  if(ioe  instanceof  IOException)  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(true)  {  if(ioe  instanceof  IOException)  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  try    ==    [Delete]    catch(IOException    ioe)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
299	[BUG]  [BUGGY]  while(true)  {  if(ioe.getClass().isArray())  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(true)  {  if(ioe.getClass().isArray())  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(true)  {  if(ioe.getClass().isArray())  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    ==    [Delete]    catch(IOException    ioe)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
300	[BUG]  [BUGGY]  allowNonLocalFunction(length)  {  if(start  ==  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(length)  {  if(start  ==  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(length)  {  if(start  ==  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNonLocalFunction(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
301	[BUG]  [BUGGY]  allowNonLocalFunction(length)  {  if(start  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(length)  {  if(start  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(length)  {  if(start  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonLocalFunction(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
302	[BUG]  [BUGGY]  enableNonLocalFunction(length)  {  if(start  ==  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNonLocalFunction(length)  {  if(start  ==  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNonLocalFunction(length)  {  if(start  ==  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNonLocalFunction(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
303	[BUG]  [BUGGY]  allowNonLocalFunction(false)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(false)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(false)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNonLocalFunction(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
304	[BUG]  [BUGGY]  enableNonLocalFunction(length)  {  if(start  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNonLocalFunction(length)  {  if(start  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNonLocalFunction(length)  {  if(start  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonLocalFunction(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
305	[BUG]  [BUGGY]  tries  ==  0  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  tries  ==  0  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	tries  ==  0  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  try    ==    if(length    <    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
306	[BUG]  [BUGGY]  tries  ==  0  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  tries  ==  0  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	tries  ==  0  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    ==    if(length    <    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
307	[BUG]  [BUGGY]  tries  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  tries  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	tries  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    ==    if(length    <    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
308	[BUG]  [BUGGY]  tries  ==  if(length  <  1)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  tries  ==  if(length  <  1)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	tries  ==  if(length  <  1)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  try    ==    if(length    <    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
309	[BUG]  [BUGGY]  tries  ==  if(length  <  2)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  tries  ==  if(length  <  2)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	tries  ==  if(length  <  2)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  try    ==    if(length    <    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
310	[BUG]  [BUGGY]  tries  ==  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  tries  ==  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	tries  ==  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  try    ==    if(length    <    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
311	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  FIELD_NAME,  DEFAULT_ENCODING);  [CE]  <identifier>  expected  [FE]            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  FIELD_NAME,  DEFAULT_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  FIELD_NAME,  DEFAULT_ENCODING);	  return    parseName(buffer,    offset,    length,    FIELD_NAME);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
312	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  FIELD_NAME);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  FIELD_NAME);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  FIELD_NAME);	  return    parseName(buffer,    offset,    length,    FIELD_NAME);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
313	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  FIELD_NAME,  READ_MASK);  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  FIELD_NAME,  READ_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  FIELD_NAME,  READ_MASK);	  return    parseName(buffer,    offset,    length,    FIELD_NAME);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
314	[BUG]  [BUGGY]  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  try    ==    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
315	[BUG]  [BUGGY]  try  >=  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  >=  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  >=  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  try    ==    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
316	[BUG]  [BUGGY]  allowNegatives(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNegatives(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNegatives(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNegatives(false)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
317	[BUG]  [BUGGY]  Parchet.getInstance().parseName(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  Parchet.getInstance().parseName(buffer,  offset,  length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	Parchet.getInstance().parseName(buffer,  offset,  length);	  if(buffer    ==    null)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
318	[BUG]  [BUGGY]  ParchetUtils.checkState(buffer  ==  null);  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  ParchetUtils.checkState(buffer  ==  null);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	ParchetUtils.checkState(buffer  ==  null);	  if(buffer    ==    null)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
319	[BUG]  [BUGGY]  Parchet.getInstance().parse(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  Parchet.getInstance().parse(buffer,  offset,  length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	Parchet.getInstance().parse(buffer,  offset,  length);	  if(buffer    ==    null)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
320	[BUG]  [BUGGY]  ParchetUtils.checkState(buffer!=  null);  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  ParchetUtils.checkState(buffer!=  null);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	ParchetUtils.checkState(buffer!=  null);	  if(buffer    ==    null)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
321	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  BYTE_ENCODING);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  BYTE_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  1,  BYTE_ENCODING);	  return    parseName(buffer,    offset,    length    -    1,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
322	[BUG]  [BUGGY]  if(buffer  ==  null)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer  ==  null)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer  ==  null)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    ==    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
323	[BUG]  [BUGGY]  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    ==    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
324	[BUG]  [BUGGY]  tryReturn(ioe)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  tryReturn(ioe)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	tryReturn(ioe)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  try    ==    [Delete]    catch(IOException    ioe)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
325	[BUG]  [BUGGY]  tryReturn(ioe)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  tryReturn(ioe)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	tryReturn(ioe)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    ==    [Delete]    catch(IOException    ioe)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
326	[BUG]  [BUGGY]  tryReturn(IOException  ioe)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  tryReturn(IOException  ioe)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	tryReturn(IOException  ioe)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    ==    [Delete]    catch(IOException    ioe)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
327	[BUG]  [BUGGY]  while(true)  {  if(ioe)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(true)  {  if(ioe)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(true)  {  if(ioe)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    ==    [Delete]    catch(IOException    ioe)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
328	[BUG]  [BUGGY]  tryReturn(IOException  ioe)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  tryReturn(IOException  ioe)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	tryReturn(IOException  ioe)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  try    ==    [Delete]    catch(IOException    ioe)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
329	[BUG]  [BUGGY]  tryReturn(int)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  tryReturn(int)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	tryReturn(int)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    ==    [Delete]    catch(IOException    ioe)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
330	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  T_BACK_ENCODING);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  T_BACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  T_BACK_ENCODING);	  return    parseName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
331	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  MISSING_ENCODING);  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  MISSING_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  MISSING_ENCODING);	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
332	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  10);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  10);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  10);	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
333	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  buffer.length  -  1);  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  buffer.length  -  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  buffer.length  -  1);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    buffer.length    -    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
334	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer.length  *  1);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer.length  *  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer.length  *  1);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    buffer.length    -    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
335	[BUG]  [BUGGY]  parseName(buffer,  offset,  length,  T_BACK_ENCODING);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parseName(buffer,  offset,  length,  T_BACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parseName(buffer,  offset,  length,  T_BACK_ENCODING);	  parseName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
336	[BUG]  [BUGGY]  parseName(buffer,  offset,  length,  SHORT_DEFAULT);  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parseName(buffer,  offset,  length,  SHORT_DEFAULT);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parseName(buffer,  offset,  length,  SHORT_DEFAULT);	  parseName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
337	[BUG]  [BUGGY]  parseName(buffer,  offset,  length  -  1);  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parseName(buffer,  offset,  length  -  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parseName(buffer,  offset,  length  -  1);	  parseName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
338	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length  <  =  0)  {  return  buffer.toString();  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer  ==  null  ||  buffer.length  <  =  0)  {  return  buffer.toString();  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer  ==  null  ||  buffer.length  <  =  0)  {  return  buffer.toString();  }	  if(buffer    ==    null)    {    return    buffer.toString();    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
339	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length  <  =  0)  {  return  parseName(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer  ==  null  ||  buffer.length  <  =  0)  {  return  parseName(buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer  ==  null  ||  buffer.length  <  =  0)  {  return  parseName(buffer,  offset,  length);  }	  if(buffer    ==    null)    {    return    buffer.toString();    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
340	[BUG]  [BUGGY]  if(buffer  ==  null)  {  return  parseName(buffer,  offset,  length);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer  ==  null)  {  return  parseName(buffer,  offset,  length);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer  ==  null)  {  return  parseName(buffer,  offset,  length);  }  else  {  throw  new  RuntimeException( " ");  }	  >>    [Delete]    	non-compiled	[CE]  <identifier>  expected	92	None	replace
341	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  NUMBER_MASK);  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  NUMBER_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  NUMBER_MASK);	  String    name    =    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    READ_MASK);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
342	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  10);  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  10);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  10);	  String    name    =    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    READ_MASK);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
343	[BUG]  [BUGGY]  allowNegatives(true)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNegatives(true)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNegatives(true)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length);  }	  allowNegatives(false)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_EN    	non-compiled	[CE]  <identifier>  expected	64	None	replace
344	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  0,  DEFAULT_ENCODING  -  1);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  0,  DEFAULT_ENCODING  -  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  0,  DEFAULT_ENCODING  -  1);	  return    parseName(buffer,    offset,    length,    0,    DEFAULT_ENCODING    +    1);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
345	[BUG]  [BUGGY]  validateNonWhitespace(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  validateNonWhitespace(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	validateNonWhitespace(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNonWhitespace(buffer,    offset,    length))    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
346	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  NAME_NAME);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  NAME_NAME);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  NAME_NAME);	  return    parseName(buffer,    offset,    length,    SHORT_NAME);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
347	[BUG]  [BUGGY]  allowNonLocalFunction(true)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(true)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(true)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  allowNonLocalFunction(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
348	[BUG]  [BUGGY]  allowNonLocalFunction(false)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(false)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(false)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  allowNonLocalFunction(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
349	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length  <  =  offset)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer  ==  null  ||  buffer.length  <  =  offset)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer  ==  null  ||  buffer.length  <  =  offset)  {  throw  new  RuntimeException( " ");  }	  if(buffer    ==    null    ||    buffer.length    <    =    length)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
350	[BUG]  [BUGGY]  parent  ==  null  ||  buffer.length  <  =  length)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parent  ==  null  ||  buffer.length  <  =  length)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parent  ==  null  ||  buffer.length  <  =  length)  {  throw  new  RuntimeException( " ");  }	  if(buffer    ==    null    ||    buffer.length    <    =    length)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
351	[BUG]  [BUGGY]  allowNonEmpty(length)  {  return  parseName(buffer,  offset,  buffer.length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(length)  {  return  parseName(buffer,  offset,  buffer.length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(length)  {  return  parseName(buffer,  offset,  buffer.length,  DEFAULT_ENCODING);  }	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
352	[BUG]  [BUGGY]  allowNonEmpty(value)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(value)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(value)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
353	[BUG]  [BUGGY]  allowNonEmpty(length)  {  return  parseName(buffer,  offset,  0,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(length)  {  return  parseName(buffer,  offset,  0,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(length)  {  return  parseName(buffer,  offset,  0,  DEFAULT_ENCODING);  }	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
354	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  0,  1);  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  0,  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  1,  0,  1);	  return    parseName(buffer,    offset,    length    -    1,    0,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
355	[BUG]  [BUGGY]  if(buffer!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
356	[BUG]  [BUGGY]  if(buffer  ==  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer  ==  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer  ==  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
357	[BUG]  [BUGGY]  if(buffer.length  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer.length  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer.length  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
358	[BUG]  [BUGGY]  if(buffer!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
359	[BUG]  [BUGGY]  if(buffer  ==  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer  ==  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer  ==  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
360	[BUG]  [BUGGY]  allowNegatives(true)  {  return  parseName(buffer,  offset,  length,  0);  }  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNegatives(true)  {  return  parseName(buffer,  offset,  length,  0);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNegatives(true)  {  return  parseName(buffer,  offset,  length,  0);  }	  allowNegatives(false)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
361	[BUG]  [BUGGY]  allowNegatives(true)  {  return  parseName(buffer,  offset,  length,  0,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNegatives(true)  {  return  parseName(buffer,  offset,  length,  0,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNegatives(true)  {  return  parseName(buffer,  offset,  length,  0,  DEFAULT_ENCODING);  }	  allowNegatives(false)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
362	[BUG]  [BUGGY]  allowNonArray(length)  {  return  parseName(buffer,  offset,  buffer.length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonArray(length)  {  return  parseName(buffer,  offset,  buffer.length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonArray(length)  {  return  parseName(buffer,  offset,  buffer.length,  DEFAULT_ENCODING);  }	  allowNonArray(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
363	[BUG]  [BUGGY]  allowNegatives(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNegatives(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNegatives(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length);  }	  allowNegatives(false)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK    	non-compiled	[CE]  <identifier>  expected	65	None	replace
364	[BUG]  [BUGGY]  parent!=  null  &&  buffer.length  <  =  length)  {  return  parseName(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parent!=  null  &&  buffer.length  <  =  length)  {  return  parseName(buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parent!=  null  &&  buffer.length  <  =  length)  {  return  parseName(buffer,  offset,  length);  }	  if(buffer    ==    null    ||    buffer.length    <    =    length)    {    return    parseName(buffer,    offset,    length);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
365	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length  <  =  offset)  {  return  parseName(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer  ==  null  ||  buffer.length  <  =  offset)  {  return  parseName(buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer  ==  null  ||  buffer.length  <  =  offset)  {  return  parseName(buffer,  offset,  length);  }	  if(buffer    ==    null    ||    buffer.length    <    =    length)    {    return    parseName(buffer,    offset,    length);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
366	[BUG]  [BUGGY]  parent  ==  null  ||  buffer.length  <  length)  {  return  parseName(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parent  ==  null  ||  buffer.length  <  length)  {  return  parseName(buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parent  ==  null  ||  buffer.length  <  length)  {  return  parseName(buffer,  offset,  length);  }	  if(buffer    ==    null    ||    buffer.length    <    =    length)    {    return    parseName(buffer,    offset,    length);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
367	[BUG]  [BUGGY]  allowNonEmpty(true)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(true)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(true)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
368	[BUG]  [BUGGY]  if(buffer!=  null)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer!=  null)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer!=  null)  {  throw  new  RuntimeException( " ");  }	  >>    	non-compiled	[CE]  <identifier>  expected	96	None	replace
369	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  FIELD_ENCODING);  [CE]  <identifier>  expected  [FE]            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  FIELD_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  FIELD_ENCODING);	  return    parseName(buffer,    offset,    length,    FIELD_NAME);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
370	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  FIELD_NAME);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  FIELD_NAME);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  1,  FIELD_NAME);	  return    parseName(buffer,    offset,    length,    FIELD_NAME);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
371	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  0,  FIELD_NAME);  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  0,  FIELD_NAME);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  0,  FIELD_NAME);	  return    parseName(buffer,    offset,    length,    FIELD_NAME);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
372	[BUG]  [BUGGY]  allowNonLocalFunction(length)  {  return  parseName(buffer,  offset,  buffer.length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(length)  {  return  parseName(buffer,  offset,  buffer.length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(length)  {  return  parseName(buffer,  offset,  buffer.length,  DEFAULT_ENCODING);  }	  allowNonLocalFunction(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
373	[BUG]  [BUGGY]  tries  ==  if(length  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  tries  ==  if(length  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	tries  ==  if(length  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    ==    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
374	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer);	  return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
375	[BUG]  [BUGGY]  allowNonLocalFunction(length)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(length)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(length)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonLocalFunction(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
376	[BUG]  [BUGGY]  allowNonLocalFunction(true)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(true)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(true)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonLocalFunction(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
377	[BUG]  [BUGGY]  allowNonWhitespace(false)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonWhitespace(false)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonWhitespace(false)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
378	[BUG]  [BUGGY]  allowNegatives(false)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNegatives(false)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNegatives(false)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
379	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  start);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  start);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  start);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
380	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  bytes.length);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  bytes.length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  bytes.length);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
381	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end);  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  end);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
382	[BUG]  [BUGGY]  allowNonEmpty(true)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(true)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(true)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
383	[BUG]  [BUGGY]  allowNonEmpty(value)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(value)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(value)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
384	[BUG]  [BUGGY]  allowNonEmpty(length)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(length)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(length)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
385	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  BYTE_MASK,  DEFAULT_ENCODING  +  1);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  BYTE_MASK,  DEFAULT_ENCODING  +  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  BYTE_MASK,  DEFAULT_ENCODING  +  1);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    BYTE_MASK    +    1);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
386	[BUG]  [BUGGY]  allowNegatives(true)  {  if(length  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNegatives(true)  {  if(length  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNegatives(true)  {  if(length  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNegatives(false)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
387	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  SHORTBACK_ENCODING  +  1);  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  SHORTBACK_ENCODING  +  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  SHORTBACK_ENCODING  +  1);	  return    parseName(buffer,    offset,    length,    BYTE_MASK    +    1);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
388	[BUG]  [BUGGY]  allowNonLocalFunction(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  allowNonLocalFunction(length)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
389	[BUG]  [BUGGY]  allowNonLocalFunction(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  allowNonLocalFunction(length)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
390	[BUG]  [BUGGY]  allowNonLocalFunction(false)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(false)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(false)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  allowNonLocalFunction(length)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
391	[BUG]  [BUGGY]  allowNonLocalFunction(true)  {  if(length  <  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(true)  {  if(length  <  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(true)  {  if(length  <  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNonLocalFunction(length)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
392	[BUG]  [BUGGY]  allowNonLocalFunction(length)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(length)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(length)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  allowNonLocalFunction(length)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
393	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer,  BYTE_MASK,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer,  BYTE_MASK,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer,  BYTE_MASK,  FALLBACK_ENCODING);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    BYTE_MASK,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
394	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  0,  BYTE_MASK,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  0,  BYTE_MASK,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  0,  BYTE_MASK,  FALLBACK_ENCODING);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    BYTE_MASK,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
395	[BUG]  [BUGGY]  if(buffer  ==  null)  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  catch  (IOException  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer  ==  null)  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  catch  (IOException  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer  ==  null)  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  catch  (IOException  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    catch    (IOException    ex)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
396	[BUG]  [BUGGY]  try  {  return  parseName(buffer,  offset,  length,  10);  }  catch  (IOException  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  {  return  parseName(buffer,  offset,  length,  10);  }  catch  (IOException  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  {  return  parseName(buffer,  offset,  length,  10);  }  catch  (IOException  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    catch    (IOException    ex)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
397	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  0,  TALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  0,  TALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  0,  TALLBACK_ENCODING);	  return    parseName(buffer,    offset,    length,    TALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
398	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length  <  =  0)  {  return  parseName(buffer,  offset,  length);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer  ==  null  ||  buffer.length  <  =  0)  {  return  parseName(buffer,  offset,  length);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer  ==  null  ||  buffer.length  <  =  0)  {  return  parseName(buffer,  offset,  length);  }  else  {  throw  new  RuntimeException( " ");  }	  ==    [Delete]    	non-compiled	[CE]  <identifier>  expected	93	None	replace
399	[BUG]  [BUGGY]  if(buffer  ==  null)  {  return  parseName(buffer,  offset,  length);  }  else  {  buffer  =  new  byte[length];  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer  ==  null)  {  return  parseName(buffer,  offset,  length);  }  else  {  buffer  =  new  byte[length];  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer  ==  null)  {  return  parseName(buffer,  offset,  length);  }  else  {  buffer  =  new  byte[length];  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }	  ==    [Delete]    	non-compiled	[CE]  <identifier>  expected	93	None	replace
400	[BUG]  [BUGGY]  try  {  [Delete]  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  {  [Delete]  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  {  [Delete]	  try    ==    if(length    <    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
401	[BUG]  [BUGGY]  tries  ==  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  tries  ==  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	tries  ==  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    ==    if(length    <    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
402	[BUG]  [BUGGY]  allowNonEmpty(true)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(true)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(true)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING    	non-compiled	[CE]  <identifier>  expected	30	None	replace
403	[BUG]  [BUGGY]  allowNonEmpty(value)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(value)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(value)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING    	non-compiled	[CE]  <identifier>  expected	30	None	replace
404	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  0,  buffer.length  -  start);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  0,  buffer.length  -  start);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  0,  buffer.length  -  start);	  return    parseName(buffer,    offset,    length,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
405	[BUG]  [BUGGY]  if(length  ==  0)  {  return  parseName(buffer,  offset,  length,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  ==  0)  {  return  parseName(buffer,  offset,  length,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  ==  0)  {  return  parseName(buffer,  offset,  length,  false);  }  else  {  throw  new  RuntimeException( " ");  }	  return    parseName(buffer,    offset,    length,    false);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
406	[BUG]  [BUGGY]  if(length  ==  0)  {  return  parseName(buffer,  offset,  length,  false);  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  ==  0)  {  return  parseName(buffer,  offset,  length,  false);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  ==  0)  {  return  parseName(buffer,  offset,  length,  false);  }	  return    parseName(buffer,    offset,    length,    false);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
407	[BUG]  [BUGGY]  if(length  ==  0)  {  return  parseName(buffer,  offset,  length,  false);  }  else  {  return  buffer[offset++];  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  ==  0)  {  return  parseName(buffer,  offset,  length,  false);  }  else  {  return  buffer[offset++];  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  ==  0)  {  return  parseName(buffer,  offset,  length,  false);  }  else  {  return  buffer[offset++];  }	  return    parseName(buffer,    offset,    length,    false);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
408	[BUG]  [BUGGY]  if(length  ==  0)  {  return  parseName(buffer,  offset,  length,  false);  }  else  {  return  buffer.toString();  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  ==  0)  {  return  parseName(buffer,  offset,  length,  false);  }  else  {  return  buffer.toString();  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  ==  0)  {  return  parseName(buffer,  offset,  length,  false);  }  else  {  return  buffer.toString();  }	  return    parseName(buffer,    offset,    length,    false);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
409	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  null);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  null);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  null);	  return    parseName(buffer,    offset,    length,    false);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
410	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  start);  return  parseName(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  start);  return  parseName(buffer,  offset,  length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  start);  return  parseName(buffer,  offset,  length);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    return    parseName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
411	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end);  return  parseName(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end);  return  parseName(buffer,  offset,  length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  end);  return  parseName(buffer,  offset,  length);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    return    parseName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
412	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  10).throwAsIOException( " ");  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  10).throwAsIOException( " ");  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  10).throwAsIOException( " ");	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING).throwAsIOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	87	None	replace
413	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING).throwAsIOException( ", ");  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING).throwAsIOException( ", ");  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING).throwAsIOException( ", ");	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING).throwAsIOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	87	None	replace
414	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  SHORTBACK_ENCODING).throwAsIOException( " ");  [CE]  <identifier>  expected  [FE]                                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  SHORTBACK_ENCODING).throwAsIOException( " ");  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  SHORTBACK_ENCODING).throwAsIOException( " ");	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING).throwAsIOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	87	None	replace
415	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length  /  1,  DEFAULT_ENCODING);  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length  /  1,  DEFAULT_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleMissingName(buffer,  offset,  length  /  1,  DEFAULT_ENCODING);	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length    +    1,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
416	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length  +  1,  DEFAULT_ENCODING,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length  +  1,  DEFAULT_ENCODING,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleMissingName(buffer,  offset,  length  +  1,  DEFAULT_ENCODING,  BYTE_MASK);	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length    +    1,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
417	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length  +  1,  MISSING_ENCODING);  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length  +  1,  MISSING_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleMissingName(buffer,  offset,  length  +  1,  MISSING_ENCODING);	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length    +    1,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
418	[BUG]  [BUGGY]  enableNonLocalFunction(true)  {  if(length  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNonLocalFunction(true)  {  if(length  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNonLocalFunction(true)  {  if(length  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonLocalFunction(false)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
419	[BUG]  [BUGGY]  enableNonLocalFunction(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNonLocalFunction(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNonLocalFunction(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonLocalFunction(false)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
420	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  2);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  2);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  2);	  return    parseName(buffer,    offset,    length    -    1);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
421	[BUG]  [BUGGY]  allowNonEmpty(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length);  }	  if(length    ==    FALLBACK_ENCODING)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
422	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  buffer,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  buffer,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  1,  buffer,  BYTE_MASK);	  return    parseName(buffer,    offset,    length    -    1,    DEFAULT_ENCODING,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
423	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  SHORTBACK_ENCODING,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  SHORTBACK_ENCODING,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  1,  SHORTBACK_ENCODING,  BYTE_MASK);	  return    parseName(buffer,    offset,    length    -    1,    DEFAULT_ENCODING,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
424	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer.length  *  2);  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer.length  *  2);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer.length  *  2);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    buffer.length    +    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
425	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  0,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  0,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  0,  FALLBACK_ENCODING);	  String    name    =    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
426	[BUG]  [BUGGY]  try  ==  0)  {  return  parseName(buffer,  offset,  length,  10);  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  ==  0)  {  return  parseName(buffer,  offset,  length,  10);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  ==  0)  {  return  parseName(buffer,  offset,  length,  10);  }	  try    ==    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
427	[BUG]  [BUGGY]  try  ==  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer.length);  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  ==  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer.length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  ==  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer.length);  }	  try    ==    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
428	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  6,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  6,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  6,  FALLBACK_ENCODING);	  return    parseName(buffer,    offset,    length    -    5,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
429	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  0,  DEFAULT_ENCODING,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  0,  DEFAULT_ENCODING,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  0,  DEFAULT_ENCODING,  BYTE_MASK);	  String    name    =    parseName(buffer,    offset,    length,    0,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
430	[BUG]  [BUGGY]  safeToken(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  safeToken(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	safeToken(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
431	[BUG]  [BUGGY]  safeToken(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  safeToken(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	safeToken(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
432	[BUG]  [BUGGY]  safeToken(buffer,  offset,  length)>  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  safeToken(buffer,  offset,  length)>  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	safeToken(buffer,  offset,  length)>  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
433	[BUG]  [BUGGY]  safeToken(buffer,  offset,  length)>  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  safeToken(buffer,  offset,  length)>  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	safeToken(buffer,  offset,  length)>  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
434	[BUG]  [BUGGY]  safeToken(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( "  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  safeToken(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( "  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	safeToken(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( "	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
435	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  _parseName(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  _parseName(buffer,  offset,  length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  _parseName(buffer,  offset,  length);	  {    [Delete]    	non-compiled	[CE]  <identifier>  expected	97	None	replace
436	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  0,  BYTE_ENCODING);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  0,  BYTE_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  0,  BYTE_ENCODING);	  return    parseName(buffer,    offset,    length,    0,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
437	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  MISSING_ENCODING);  [CE]  <identifier>  expected  [FE]            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  MISSING_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  1,  MISSING_ENCODING);	  return    parseName(buffer,    offset,    length,    MISSING_ENCODING);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
438	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  MISSING_ENCODING,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  MISSING_ENCODING,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  MISSING_ENCODING,  FALLBACK_ENCODING);	  return    parseName(buffer,    offset,    length,    MISSING_ENCODING);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
439	[BUG]  [BUGGY]  if(buffer  ==  null)  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer  ==  null)  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer  ==  null)  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }	  try    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    catch    (IOException    ex)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
440	[BUG]  [BUGGY]  try  {  return  parseName(buffer,  offset,  length,  0);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  {  return  parseName(buffer,  offset,  length,  0);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  {  return  parseName(buffer,  offset,  length,  0);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }	  try    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    catch    (IOException    ex)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
441	[BUG]  [BUGGY]  try  {  return  parseName(buffer,  offset,  length,  10);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  {  return  parseName(buffer,  offset,  length,  10);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  {  return  parseName(buffer,  offset,  length,  10);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }	  try    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    catch    (IOException    ex)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
442	[BUG]  [BUGGY]  try  {  return  parseName(buffer,  offset,  length,  5);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  {  return  parseName(buffer,  offset,  length,  5);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  {  return  parseName(buffer,  offset,  length,  5);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }	  try    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    catch    (IOException    ex)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
443	[BUG]  [BUGGY]  enableNonEmpty(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNonEmpty(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNonEmpty(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  allowNonEmpty(buffer,    offset,    length))    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
444	[BUG]  [BUGGY]  allowNegatives(true)  {  if(length  ==  0)  {  return  parseName(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNegatives(true)  {  if(length  ==  0)  {  return  parseName(buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNegatives(true)  {  if(length  ==  0)  {  return  parseName(buffer,  offset,  length);  }	  allowNegatives(false)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length    	non-compiled	[CE]  <identifier>  expected	68	None	replace
445	[BUG]  [BUGGY]  ParchetUtils.parseName(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  ParchetUtils.parseName(buffer,  offset,  length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	ParchetUtils.parseName(buffer,  offset,  length);	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length);    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
446	[BUG]  [BUGGY]  ParchetUtils.checkName(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  ParchetUtils.checkName(buffer,  offset,  length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	ParchetUtils.checkName(buffer,  offset,  length);	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length);    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
447	[BUG]  [BUGGY]  ParchetState.checkNotNull(buffer);  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  ParchetState.checkNotNull(buffer);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	ParchetState.checkNotNull(buffer);	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length);    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
448	[BUG]  [BUGGY]  ParchetUtils.checkNotNull(buffer);  [CE]  <identifier>  expected  [FE]                                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  ParchetUtils.checkNotNull(buffer);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	ParchetUtils.checkNotNull(buffer);	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length);    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
449	[BUG]  [BUGGY]  allowNonLocalFunction(length)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(length)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(length)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
450	[BUG]  [BUGGY]  allowNonLocalFunction(length)  {  if(!parseName(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(length)  {  if(!parseName(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(length)  {  if(!parseName(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
451	[BUG]  [BUGGY]  allowNonLocalFunction(length)  {  if(!parseName(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(length)  {  if(!parseName(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(length)  {  if(!parseName(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
452	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  BYTE_MASK,  DEFAULT_ENCODING,  FALLBACK_ENCODING,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  BYTE_MASK,  DEFAULT_ENCODING,  FALLBACK_ENCODING,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  BYTE_MASK,  DEFAULT_ENCODING,  FALLBACK_ENCODING,  BYTE_MASK);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    FALLBACK_ENCODING,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
453	[BUG]  [BUGGY]  allowNegatives(true)  {  if(length  <  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNegatives(true)  {  if(length  <  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNegatives(true)  {  if(length  <  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNegatives(false)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
454	[BUG]  [BUGGY]  allowNonEmpty(value)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(value)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(value)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonEmpty(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
455	[BUG]  [BUGGY]  allowNonEmpty(length)  {  return  parseName(buffer,  offset,  buffer.length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(length)  {  return  parseName(buffer,  offset,  buffer.length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(length)  {  return  parseName(buffer,  offset,  buffer.length,  FALLBACK_ENCODING);  }	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
456	[BUG]  [BUGGY]  allowNonEmpty(length)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_EN  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(length)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_EN  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(length)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_EN	  allowNonEmpty(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_EN    	non-compiled	[CE]  <identifier>  expected	32	None	replace
457	[BUG]  [BUGGY]  aughtExceptionHandler.handleIdentifier(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleIdentifier(buffer,  offset,  length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleIdentifier(buffer,  offset,  length);	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
458	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  SHORT_DEFAULT);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  SHORT_DEFAULT);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  SHORT_DEFAULT);	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
459	[BUG]  [BUGGY]  enableNonEmpty(boolean)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNonEmpty(boolean)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNonEmpty(boolean)  {  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonEmpty(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_    	non-compiled	[CE]  <identifier>  expected	33	None	replace
460	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  buffer,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  buffer,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  1,  buffer,  FALLBACK_ENCODING);	  return    parseName(buffer,    offset,    length    -    1,    DEFAULT_ENCODING,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
461	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  SHORTBACK_ENCODING);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  SHORTBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  1,  SHORTBACK_ENCODING);	  return    parseName(buffer,    offset,    length,    SHORTBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
462	[BUG]  [BUGGY]  parent!=  null  &&  parent  ==  buffer.length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parent!=  null  &&  parent  ==  buffer.length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parent!=  null  &&  parent  ==  buffer.length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  if(length    ==    FALLBACK_ENCODING)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
463	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  buffer.parent)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parent  ==  null  &&  parent!=  buffer.parent)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parent  ==  null  &&  parent!=  buffer.parent)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  if(length    ==    FALLBACK_ENCODING)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
464	[BUG]  [BUGGY]  parent!=  null  &&  parent  ==  buffer.length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING;  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parent!=  null  &&  parent  ==  buffer.length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING;  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parent!=  null  &&  parent  ==  buffer.length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING;  }  else  {  throw  new  RuntimeException( " ");  }	  if(length    ==    FALLBACK_ENCODING)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
465	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  buffer.parent)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parent  ==  null  &&  parent!=  buffer.parent)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parent  ==  null  &&  parent!=  buffer.parent)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  if(length    ==    FALLBACK_ENCODING)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
466	[BUG]  [BUGGY]  parent!=  null  &&  parent  ==  buffer.length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parent!=  null  &&  parent  ==  buffer.length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parent!=  null  &&  parent  ==  buffer.length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  if(length    ==    FALLBACK_ENCODING)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
467	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
468	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
469	[BUG]  [BUGGY]  if(length  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
470	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  0,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  0,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  0,  FALLBACK_ENCODING);	  return    parseName(buffer,    offset,    length,    0,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
471	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  10);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  10);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  10);	  return    parseName(buffer,    offset,    length    -    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
472	[BUG]  [BUGGY]  safeToInt(buffer,  offset,  length)>  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  safeToInt(buffer,  offset,  length)>  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	safeToInt(buffer,  offset,  length)>  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
473	[BUG]  [BUGGY]  safeToken(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  safeToken(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	safeToken(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length);  }	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
474	[BUG]  [BUGGY]  safeToInt(buffer,  offset,  length)>  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  safeToInt(buffer,  offset,  length)>  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	safeToInt(buffer,  offset,  length)>  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
475	[BUG]  [BUGGY]  safeToInt(buffer,  offset,  length)>  0)  {  return  parseName(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  safeToInt(buffer,  offset,  length)>  0)  {  return  parseName(buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	safeToInt(buffer,  offset,  length)>  0)  {  return  parseName(buffer,  offset,  length);  }	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
476	[BUG]  [BUGGY]  safeToken(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  safeToken(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	safeToken(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
477	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  BYTE_MASK,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  BYTE_MASK,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  BYTE_MASK,  FALLBACK_ENCODING);	  String    name    =    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
478	[BUG]  [BUGGY]  while(true)  {  if(ioe)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(true)  {  if(ioe)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(true)  {  if(ioe)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  try    ==    [Delete]    catch(IOException    ioe)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
479	[BUG]  [BUGGY]  ParchetUtils.parse(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  ParchetUtils.parse(buffer,  offset,  length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	ParchetUtils.parse(buffer,  offset,  length);	  if(buffer    ==    null)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
480	[BUG]  [BUGGY]  if(buffer  ==  null)  {  try  {  return  parseName(buffer,  offset,  length);  }  catch(IOException  ex)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer  ==  null)  {  try  {  return  parseName(buffer,  offset,  length);  }  catch(IOException  ex)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer  ==  null)  {  try  {  return  parseName(buffer,  offset,  length);  }  catch(IOException  ex)  {  throw  new  RuntimeException( " ");  }	  try    ==    [Delete]    	non-compiled	[CE]  <identifier>  expected	95	None	replace
481	[BUG]  [BUGGY]  if(buffer  ==  null)  {  try  {  return  parseName(buffer,  offset,  length,  BYTE_MASK);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer  ==  null)  {  try  {  return  parseName(buffer,  offset,  length,  BYTE_MASK);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer  ==  null)  {  try  {  return  parseName(buffer,  offset,  length,  BYTE_MASK);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }	  try    ==    [Delete]    	non-compiled	[CE]  <identifier>  expected	95	None	replace
482	[BUG]  [BUGGY]  try  {  return  parseName(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  {  return  parseName(buffer,  offset,  length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  {  return  parseName(buffer,  offset,  length);	  try    ==    [Delete]    	non-compiled	[CE]  <identifier>  expected	95	None	replace
483	[BUG]  [BUGGY]  parent  ==  null  &&  parent  ==  buffer.parent)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parent  ==  null  &&  parent  ==  buffer.parent)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parent  ==  null  &&  parent  ==  buffer.parent)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  if(length    ==    FALLBACK_ENCODING)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
484	[BUG]  [BUGGY]  parent  ==  DEFAULT_ENCODING?  parseName(buffer,  offset,  length):  null;  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parent  ==  DEFAULT_ENCODING?  parseName(buffer,  offset,  length):  null;  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parent  ==  DEFAULT_ENCODING?  parseName(buffer,  offset,  length):  null;	  if(length    ==    FALLBACK_ENCODING)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
485	[BUG]  [BUGGY]  parent  ==  null  &&  parent  ==  buffer.parent)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parent  ==  null  &&  parent  ==  buffer.parent)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parent  ==  null  &&  parent  ==  buffer.parent)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  if(length    ==    FALLBACK_ENCODING)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
486	[BUG]  [BUGGY]  parent  ==  DEFAULT_ENCODING?  ParseName(buffer,  offset,  length):  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parent  ==  DEFAULT_ENCODING?  ParseName(buffer,  offset,  length):  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parent  ==  DEFAULT_ENCODING?  ParseName(buffer,  offset,  length):  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);	  if(length    ==    FALLBACK_ENCODING)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
487	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  SHORTBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  SHORTBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  SHORTBACK_ENCODING);	  String    name    =    parseName(buffer,    offset,    length,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
488	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  SHORT_NAME,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  SHORT_NAME,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  SHORT_NAME,  BYTE_MASK);	  return    parseName(buffer,    offset,    length,    SHORT_NAME);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
489	[BUG]  [BUGGY]  return  _parseName(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  _parseName(buffer,  offset,  length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  _parseName(buffer,  offset,  length);	  {    [Delete]    	non-compiled	[CE]  <identifier>  expected	97	None	replace
490	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  false,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  false,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  false,  BYTE_MASK);	  return    parseName(buffer,    offset,    length,    false);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
491	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  false,  buffer.length);  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  false,  buffer.length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  false,  buffer.length);	  return    parseName(buffer,    offset,    length,    false);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
492	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  4);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  4);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  4);	  return    parseName(buffer,    offset,    length    -    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	110	None	replace
493	[BUG]  [BUGGY]  allowNonWhitespace(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  BYTE_MASK);  }  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonWhitespace(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  BYTE_MASK);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonWhitespace(buffer,  offset,  length))  {  return  parseName(buffer,  offset,  length,  BYTE_MASK);  }	  allowNonWhitespace(buffer,    offset,    length))    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
494	[BUG]  [BUGGY]  allowNonWhitespace(buffer,  offset,  length)&&  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonWhitespace(buffer,  offset,  length)&&  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonWhitespace(buffer,  offset,  length)&&  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);	  allowNonWhitespace(buffer,    offset,    length))    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
495	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  SALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  SALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  SALLBACK_ENCODING);	  return    parseName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
496	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  NUMBER_MASK);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  NUMBER_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  NUMBER_MASK);	  return    parseName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
497	[BUG]  [BUGGY]  try  ==  null)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  ==  null)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  ==  null)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length);    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
498	[BUG]  [BUGGY]  try  ==  null)  {  return  parseName(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  ==  null)  {  return  parseName(buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  ==  null)  {  return  parseName(buffer,  offset,  length);  }	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length);    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
499	[BUG]  [BUGGY]  try  ==  null)  {  return  parseName(buffer,  offset,  length,  BYTE_MASK);  }  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  ==  null)  {  return  parseName(buffer,  offset,  length,  BYTE_MASK);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  ==  null)  {  return  parseName(buffer,  offset,  length,  BYTE_MASK);  }	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length);    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
500	[BUG]  [BUGGY]  try  ==  null)  {  return  parseName(buffer,  offset,  length  -  1);  }  [CE]  <identifier>  expected  [FE]                                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  ==  null)  {  return  parseName(buffer,  offset,  length  -  1);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  ==  null)  {  return  parseName(buffer,  offset,  length  -  1);  }	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length);    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
501	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  BYTE_MASK,  FALLBACK_ENCODING,  buffer.length);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  BYTE_MASK,  FALLBACK_ENCODING,  buffer.length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  BYTE_MASK,  FALLBACK_ENCODING,  buffer.length);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    BYTE_MASK,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
502	[BUG]  [BUGGY]  if(length  >  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  >  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  >  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length);  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
503	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length);  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
504	[BUG]  [BUGGY]  if(length  <  =  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  <  =  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  <  =  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length);  }  else  {  throw  new  RuntimeException( " ");  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
505	[BUG]  [BUGGY]  if(length  >  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  >  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  >  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length);  }  else  {  throw  new  RuntimeException( " ");  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
506	[BUG]  [BUGGY]  allowNegatives(true)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNegatives(true)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNegatives(true)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING);  }	  allowNegatives(false)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
507	[BUG]  [BUGGY]  try  ==  0)  {  return  parseName(buffer,  offset,  length,  BYTE_MASK);  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  ==  0)  {  return  parseName(buffer,  offset,  length,  BYTE_MASK);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  ==  0)  {  return  parseName(buffer,  offset,  length,  BYTE_MASK);  }	  try    ==    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
508	[BUG]  [BUGGY]  try  ==  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  BYTE_MASK);  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  ==  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  BYTE_MASK);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  ==  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  BYTE_MASK);  }	  try    ==    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
509	[BUG]  [BUGGY]  try  ==  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  ==  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  ==  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  FALLBACK_ENCODING);  }	  try    ==    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
510	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  *  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  *  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length  *  BYTE_MASK);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
511	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  -  2);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  -  2);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length  -  2);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
512	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length  <  =  length)  {  return  buffer.toString();  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer  ==  null  ||  buffer.length  <  =  length)  {  return  buffer.toString();  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer  ==  null  ||  buffer.length  <  =  length)  {  return  buffer.toString();  }	  if(buffer    ==    null)    {    return    buffer.toString();    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
513	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length  ==  0)  {  return  buffer.toString();  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer  ==  null  ||  buffer.length  ==  0)  {  return  buffer.toString();  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer  ==  null  ||  buffer.length  ==  0)  {  return  buffer.toString();  }	  if(buffer    ==    null)    {    return    buffer.toString();    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
514	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  buffer.length  *  BYTE_MASK);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  buffer.length  *  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  buffer.length  *  BYTE_MASK);	  return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
515	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  1);  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  1,  1);	  return    parseName(buffer,    offset,    length,    1);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
516	[BUG]  [BUGGY]  enableNonEmpty(length)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNonEmpty(length)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNonEmpty(length)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonEmpty(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
517	[BUG]  [BUGGY]  enableNegatives(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNegatives(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNegatives(true)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNegatives(false)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
518	[BUG]  [BUGGY]  enableNegatives(true)  {  if(length  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNegatives(true)  {  if(length  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNegatives(true)  {  if(length  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNegatives(false)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
519	[BUG]  [BUGGY]  try  {  [Delete]  catch(IOException  ioe)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  {  [Delete]  catch(IOException  ioe)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  {  [Delete]  catch(IOException  ioe)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    ==    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
520	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length  -  1,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length  -  1,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleMissingName(buffer,  offset,  length  -  1,  FALLBACK_ENCODING);	  if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
521	[BUG]  [BUGGY]  if(false!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(false!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(false!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
522	[BUG]  [BUGGY]  if(offset  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(offset  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(offset  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
523	[BUG]  [BUGGY]  if(false  ==  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(false  ==  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(false  ==  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
524	[BUG]  [BUGGY]  if(offset  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(offset  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(offset  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
525	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  DEFAULT_MASK);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  DEFAULT_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  DEFAULT_MASK);	  String    name    =    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
526	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  DEFULT_ENCODING);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  DEFULT_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  DEFULT_ENCODING);	  return    parseName(buffer,    offset,    length,    SHORT_DEFAULT);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
527	[BUG]  [BUGGY]  allowNonEmpty(length)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(length)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(length)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
528	[BUG]  [BUGGY]  allowNonEmpty(false)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(false)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(false)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
529	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  FALLBACK_ENCODING,  DEFAULT_MASK);  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  1,  FALLBACK_ENCODING,  DEFAULT_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  1,  FALLBACK_ENCODING,  DEFAULT_MASK);	  return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING,    DEFAULT_MASK);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
530	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  0,  DEFAULT_ENCODING.length  +  1);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  0,  DEFAULT_ENCODING.length  +  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  0,  DEFAULT_ENCODING.length  +  1);	  return    parseName(buffer,    offset,    length,    0,    DEFAULT_ENCODING    +    1);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
531	[BUG]  [BUGGY]  allowNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  DEFAULT_ENCODING);  }	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
532	[BUG]  [BUGGY]  while((  buffer[offset]!=  null)&&(buffer.length  >  0))  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while((  buffer[offset]!=  null)&&(buffer.length  >  0))  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while((  buffer[offset]!=  null)&&(buffer.length  >  0))  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    ==    [Delete]    catch(IOException    ioe)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
533	[BUG]  [BUGGY]  while((  buffer[offset]  ==  null)&&(buffer.length  >  0))  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while((  buffer[offset]  ==  null)&&(buffer.length  >  0))  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while((  buffer[offset]  ==  null)&&(buffer.length  >  0))  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    ==    [Delete]    catch(IOException    ioe)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
534	[BUG]  [BUGGY]  while((  offset  +  length)>  buffer.length)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while((  offset  +  length)>  buffer.length)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while((  offset  +  length)>  buffer.length)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    ==    [Delete]    catch(IOException    ioe)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
535	[BUG]  [BUGGY]  while((  buffer[offset]  ==  null)&&(length  >  0))  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while((  buffer[offset]  ==  null)&&(length  >  0))  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while((  buffer[offset]  ==  null)&&(length  >  0))  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  try    ==    [Delete]    catch(IOException    ioe)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
536	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  FIELD_NAME,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  FIELD_NAME,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  FIELD_NAME,  BYTE_MASK);	  return    parseName(buffer,    offset,    length,    FIELD_NAME);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
537	[BUG]  [BUGGY]  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_EN  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_EN  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_EN	  allowNonEmpty(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_EN    	non-compiled	[CE]  <identifier>  expected	32	None	replace
538	[BUG]  [BUGGY]  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_EN  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_EN  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_EN	  allowNonEmpty(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_EN    	non-compiled	[CE]  <identifier>  expected	32	None	replace
539	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length  -  1,  DEFAULT_ENCODING,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length  -  1,  DEFAULT_ENCODING,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length  -  1,  DEFAULT_ENCODING,  FALLBACK_ENCODING);	  String    name    =    parseName(buffer,    offset,    length    -    1,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
540	[BUG]  [BUGGY]  allowNonLocalFunction(length)  {  return  parseName(buffer,  offset,  0,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(length)  {  return  parseName(buffer,  offset,  0,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(length)  {  return  parseName(buffer,  offset,  0,  DEFAULT_ENCODING);  }	  allowNonLocalFunction(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
541	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  MISSING_ENCODING,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  MISSING_ENCODING,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  MISSING_ENCODING,  BYTE_MASK);	  return    parseName(buffer,    offset,    length,    MISSING_ENCODING);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
542	[BUG]  [BUGGY]  allowNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING    	non-compiled	[CE]  <identifier>  expected	30	None	replace
543	[BUG]  [BUGGY]  allowNonEmpty(false)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(false)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(false)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING    	non-compiled	[CE]  <identifier>  expected	30	None	replace
544	[BUG]  [BUGGY]  try  {  [Delete]  catch(IOException  ioe)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  {  [Delete]  catch(IOException  ioe)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  {  [Delete]  catch(IOException  ioe)  {  throw  new  RuntimeException( " ");  }	  if(buffer    ==    null)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
545	[BUG]  [BUGGY]  try  ==  null)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  ==  null)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  ==  null)  {  throw  new  RuntimeException( " ");  }	  if(buffer    ==    null)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
546	[BUG]  [BUGGY]  aught(RuntimeException.class,   "Unknown  exception: "  +  System.identityHashCode(buffer)+ ") ");  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aught(RuntimeException.class,   "Unknown  exception: "  +  System.identityHashCode(buffer)+ ") ");  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aught(RuntimeException.class,   "Unknown  exception: "  +  System.identityHashCode(buffer)+ ") ");	  if(buffer    ==    null)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
547	[BUG]  [BUGGY]  aught(RuntimeException.class,   "Unknown  exception: "  +  System.identityHashCode(buffer),  offset,  length));  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aught(RuntimeException.class,   "Unknown  exception: "  +  System.identityHashCode(buffer),  offset,  length));  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aught(RuntimeException.class,   "Unknown  exception: "  +  System.identityHashCode(buffer),  offset,  length));	  if(buffer    ==    null)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
548	[BUG]  [BUGGY]  aught(RuntimeException.class,   "Unknown  exception: "  +  System.identityHashCode(buffer));  [CE]  <identifier>  expected  [FE]                                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aught(RuntimeException.class,   "Unknown  exception: "  +  System.identityHashCode(buffer));  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aught(RuntimeException.class,   "Unknown  exception: "  +  System.identityHashCode(buffer));	  if(buffer    ==    null)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
549	[BUG]  [BUGGY]  aught(RuntimeException.class,   "Unknown  exception: "  +  System.identityHashCode(buffer),  offset,  length);  [CE]  <identifier>  expected  [FE]                                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aught(RuntimeException.class,   "Unknown  exception: "  +  System.identityHashCode(buffer),  offset,  length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aught(RuntimeException.class,   "Unknown  exception: "  +  System.identityHashCode(buffer),  offset,  length);	  if(buffer    ==    null)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
550	[BUG]  [BUGGY]  enableNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNonEmpty(length)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
551	[BUG]  [BUGGY]  allowNonEmpty(length)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(length)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(length)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
552	[BUG]  [BUGGY]  allowNonEmpty(length)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonEmpty(length)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonEmpty(length)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING	  allowNonEmpty(length)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
553	[BUG]  [BUGGY]  if(aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING).throwAsIOException( " ");  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING).throwAsIOException( " ");  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING).throwAsIOException( " ");	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING).throwAsIOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	87	None	replace
554	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length  +  1,  DEFAULT_ENCODING,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length  +  1,  DEFAULT_ENCODING,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleMissingName(buffer,  offset,  length  +  1,  DEFAULT_ENCODING,  FALLBACK_ENCODING);	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length    +    1,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
555	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length  /  2,  DEFAULT_ENCODING);  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length  /  2,  DEFAULT_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleMissingName(buffer,  offset,  length  /  2,  DEFAULT_ENCODING);	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length    +    1,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
556	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  BYTE_MASK,  DEFAULT_ENCODING,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  BYTE_MASK,  DEFAULT_ENCODING,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  BYTE_MASK,  DEFAULT_ENCODING,  FALLBACK_ENCODING);	  return    parseName(buffer,    offset,    length,    BYTE_MASK,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
557	[BUG]  [BUGGY]  try  {  return  parseName(buffer,  offset,  length);  }  catch(IOException  ex)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  {  return  parseName(buffer,  offset,  length);  }  catch(IOException  ex)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  {  return  parseName(buffer,  offset,  length);  }  catch(IOException  ex)  {  throw  new  RuntimeException( " ");  }	  try    ==    [Delete]    	non-compiled	[CE]  <identifier>  expected	95	None	replace
558	[BUG]  [BUGGY]  try  ==  [Delete]  catch(IOException  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  ==  [Delete]  catch(IOException  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  ==  [Delete]  catch(IOException  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
559	[BUG]  [BUGGY]  try  ==  [Delete]  catch(Throwable  t)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  ==  [Delete]  catch(Throwable  t)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  ==  [Delete]  catch(Throwable  t)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
560	[BUG]  [BUGGY]  try  {  [Delete]  catch(IOException  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  {  [Delete]  catch(IOException  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  {  [Delete]  catch(IOException  ex)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
561	[BUG]  [BUGGY]  enableNonLocalFunction(false)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNonLocalFunction(false)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNonLocalFunction(false)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  allowNonLocalFunction(length)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
562	[BUG]  [BUGGY]  enableNonLocalFunction(false)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNonLocalFunction(false)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNonLocalFunction(false)  {  if(length  <  =  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNonLocalFunction(length)    {    if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
563	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  FIELD_NAMES);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  FIELD_NAMES);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  FIELD_NAMES);	  return    parseName(buffer,    offset,    length,    SHORTBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
564	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  -  5,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  -  5,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  -  5,  BYTE_MASK);	  return    parseName(buffer,    offset,    length    -    5,    FALLBACK_ENCODING);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
565	[BUG]  [BUGGY]  while(buffer  ==  null  ||  buffer.length  <  length)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while(buffer  ==  null  ||  buffer.length  <  length)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while(buffer  ==  null  ||  buffer.length  <  length)  {  throw  new  RuntimeException( " ");  }	  if(buffer    ==    null    ||    buffer.length    <    =    length)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
566	[BUG]  [BUGGY]  try  ==  null  ||  buffer.length  <  =  length)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  ==  null  ||  buffer.length  <  =  length)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  ==  null  ||  buffer.length  <  =  length)  {  throw  new  RuntimeException( " ");  }	  if(buffer    ==    null    ||    buffer.length    <    =    length)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
567	[BUG]  [BUGGY]  try  ==  null  ||  buffer.length  <  =  length)  {  return  parseName(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  ==  null  ||  buffer.length  <  =  length)  {  return  parseName(buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  ==  null  ||  buffer.length  <  =  length)  {  return  parseName(buffer,  offset,  length);  }	  if(buffer    ==    null    ||    buffer.length    <    =    length)    {    return    parseName(buffer,    offset,    length);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
568	[BUG]  [BUGGY]  try  ==  null  ||  buffer.length  <  length)  {  return  parseName(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  ==  null  ||  buffer.length  <  length)  {  return  parseName(buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  ==  null  ||  buffer.length  <  length)  {  return  parseName(buffer,  offset,  length);  }	  if(buffer    ==    null    ||    buffer.length    <    =    length)    {    return    parseName(buffer,    offset,    length);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
569	[BUG]  [BUGGY]  parent  ==  null  ||  buffer.length  <  =  parent.length)  {  return  parseName(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parent  ==  null  ||  buffer.length  <  =  parent.length)  {  return  parseName(buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parent  ==  null  ||  buffer.length  <  =  parent.length)  {  return  parseName(buffer,  offset,  length);  }	  if(buffer    ==    null    ||    buffer.length    <    =    length)    {    return    parseName(buffer,    offset,    length);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
570	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0,  DEFAULT_MASK);  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0,  DEFAULT_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0,  DEFAULT_MASK);	  return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING,    0,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
571	[BUG]  [BUGGY]  try  ==  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  ==  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  ==  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  if(length    ==    FALLBACK_ENCODING)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
572	[BUG]  [BUGGY]  try  ==  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  ==  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  ==  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);	  if(length    ==    FALLBACK_ENCODING)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
573	[BUG]  [BUGGY]  combatTarUtils.parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  combatTarUtils.parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	combatTarUtils.parseName(buffer,  offset,  length,  FALLBACK_ENCODING);	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
574	[BUG]  [BUGGY]  combatTarUtils.parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  combatTarUtils.parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	combatTarUtils.parseName(buffer,  offset,  length,  DEFAULT_ENCODING);	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
575	[BUG]  [BUGGY]  combatTarUtils.parse(buffer,  offset,  length,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  combatTarUtils.parse(buffer,  offset,  length,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	combatTarUtils.parse(buffer,  offset,  length,  FALLBACK_ENCODING);	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
576	[BUG]  [BUGGY]  combatTarUtils.parseName(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  combatTarUtils.parseName(buffer,  offset,  length);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	combatTarUtils.parseName(buffer,  offset,  length);	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
577	[BUG]  [BUGGY]  combatchSequence(buffer,  offset,  length,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  combatchSequence(buffer,  offset,  length,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	combatchSequence(buffer,  offset,  length,  FALLBACK_ENCODING);	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
578	[BUG]  [BUGGY]  combatchTrigger(buffer,  offset,  length,  FALLBACK_ENCODING);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  combatchTrigger(buffer,  offset,  length,  FALLBACK_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	combatchTrigger(buffer,  offset,  length,  FALLBACK_ENCODING);	  if(buffer    ==    null)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
579	[BUG]  [BUGGY]  if(length  <  =  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  parseName(buffer,  offset,  length);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(length  <  =  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  parseName(buffer,  offset,  length);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(length  <  =  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  parseName(buffer,  offset,  length);  }  else  {  throw  new  RuntimeException( " ");  }	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    return    parseName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
580	[BUG]  [BUGGY]  if(buffer.length  ==  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  parseName(buffer,  offset,  length);  }  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer.length  ==  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  parseName(buffer,  offset,  length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer.length  ==  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  parseName(buffer,  offset,  length);  }	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    return    parseName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
581	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length  +  1,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length  +  1,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length  +  1,  BYTE_MASK);	  return    parseName(buffer,    offset,    length    -    1,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
582	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING  /  BYTE_MASK  +  1);  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING  /  BYTE_MASK  +  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING  /  BYTE_MASK  +  1);	  return    parseName(buffer,    offset,    length,    BYTE_MASK    +    1);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
583	[BUG]  [BUGGY]  while((  buffer[offset]!=  null)&&(buffer.length  >  0))  {  try  {  }  catch(IOException  ioe)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while((  buffer[offset]!=  null)&&(buffer.length  >  0))  {  try  {  }  catch(IOException  ioe)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while((  buffer[offset]!=  null)&&(buffer.length  >  0))  {  try  {  }  catch(IOException  ioe)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  try    ==    [Delete]    catch(IOException    ioe)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
584	[BUG]  [BUGGY]  while((  buffer[offset]!=  null)&&(buffer.length  >  0))  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while((  buffer[offset]!=  null)&&(buffer.length  >  0))  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while((  buffer[offset]!=  null)&&(buffer.length  >  0))  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  try    ==    [Delete]    catch(IOException    ioe)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
585	[BUG]  [BUGGY]  while((  buffer[offset]  ==  null)&&(buffer.length  >  0))  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  while((  buffer[offset]  ==  null)&&(buffer.length  >  0))  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	while((  buffer[offset]  ==  null)&&(buffer.length  >  0))  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  try    ==    [Delete]    catch(IOException    ioe)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
586	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  if(length    <    =    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
587	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  4);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  4);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  4);	  return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
588	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  1);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  1);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  1);	  return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
589	[BUG]  [BUGGY]  }  else  if(buffer.length  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  }  else  if(buffer.length  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	}  else  if(buffer.length  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
590	[BUG]  [BUGGY]  if(buffer.length  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(buffer.length  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(buffer.length  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
591	[BUG]  [BUGGY]  }  else  if(buffer.length  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  }  else  if(buffer.length  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	}  else  if(buffer.length  ==  0)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
592	[BUG]  [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer.length,  BYTE_MASK);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer.length,  BYTE_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING,  buffer.length,  BYTE_MASK);	  return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING,    FALLBACK_ENCODING,    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
593	[BUG]  [BUGGY]  try  {  return  parseName(buffer,  offset,  length,  BYTE_MASK);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  {  return  parseName(buffer,  offset,  length,  BYTE_MASK);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  {  return  parseName(buffer,  offset,  length,  BYTE_MASK);  }  catch  (IOException  ex)  {  throw  new  RuntimeException( " ");  }	  try    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    catch    (IOException    ex)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
594	[BUG]  [BUGGY]  parseName(buffer,  offset,  length,  NUMBER_MASK);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  parseName(buffer,  offset,  length,  NUMBER_MASK);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	parseName(buffer,  offset,  length,  NUMBER_MASK);	  parseName(buffer,    offset,    length);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
595	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
596	[BUG]  [BUGGY]  if(!aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING))  throw  new  RuntimeException( " ");  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(!aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING))  throw  new  RuntimeException( " ");  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(!aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING))  throw  new  RuntimeException( " ");	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
597	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  throw  new  RuntimeException( " ");  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
598	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  return  parseName(buffer,  offset,  length,  BYTE_MASK);  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  return  parseName(buffer,  offset,  length,  BYTE_MASK);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  else  {  return  parseName(buffer,  offset,  length,  BYTE_MASK);  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
599	[BUG]  [BUGGY]  if(!aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING))  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(!aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING))  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(!aughtExceptionHandler.handleMissingName(buffer,  offset,  length,  DEFAULT_ENCODING))  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  aughtExceptionHandler.handleMissingName(buffer,    offset,    length,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
600	[BUG]  [BUGGY]  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_	  allowNonEmpty(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_    	non-compiled	[CE]  <identifier>  expected	33	None	replace
601	[BUG]  [BUGGY]  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  else  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_	  allowNonEmpty(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_    	non-compiled	[CE]  <identifier>  expected	33	None	replace
602	[BUG]  [BUGGY]  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	if(start  <  =  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonEmpty(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    else    {    try    {    return    parseName(buffer,    offset,    length,    FALLBACK_    	non-compiled	[CE]  <identifier>  expected	33	None	replace
603	[BUG]  [BUGGY]  enableNonLocalFunction(length)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNonLocalFunction(length)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNonLocalFunction(length)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }	  allowNonLocalFunction(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
604	[BUG]  [BUGGY]  allowNonLocalFunction(length)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  allowNonLocalFunction(length)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	allowNonLocalFunction(length)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNonLocalFunction(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
605	[BUG]  [BUGGY]  enableNonLocalFunction(length)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  enableNonLocalFunction(length)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	enableNonLocalFunction(length)  {  if(start  <  0)  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  allowNonLocalFunction(length)    {    if(start    <    =    0)    {    return    parseName(buffer,    offset,    length,    DEFAULT_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
606	[BUG]  [BUGGY]  try  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  DEFAULT_ENCODING);  }	  try    ==    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
607	[BUG]  [BUGGY]  try  ==  0)  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  ==  0)  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  ==  0)  {  try  {  return  parseName(buffer,  offset,  length,  DEFAULT_ENCODING);  }	  try    ==    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
608	[BUG]  [BUGGY]  try  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  buffer.length);  }  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  try  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  buffer.length);  }  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	try  ==  0)  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  buffer.length);  }	  try    ==    0)    {    return    parseName(buffer,    offset,    length,    FALLBACK_ENCODING);    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
609	[BUG]  [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0,  DEFAULT_ENCODING);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  try  {      [BUGGY]  String  name  =  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0,  DEFAULT_ENCODING);  [BUGGY]      }  catch  (IOException  ex)  {  try  {  return  parseName(buffer,  offset,  length,  FALLBACK_ENCODING);  }  catch  (IOException  ex2)  {  throw  new  RuntimeException(ex2);  }  }  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  IOException  ex  ex2  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  current  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	261	261	1	replace	String  name  =  parseName(buffer,  offset,  length,  FALLBACK_ENCODING,  0,  DEFAULT_ENCODING);	  String    name    =    parseName(buffer,    offset,    length,    0,    DEFAULT_ENCODING);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
