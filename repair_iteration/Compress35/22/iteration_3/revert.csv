projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,buffer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261[Delete]
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(length){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonArray(length){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){if(start<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){if(start<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,FALLBACK_ENCODING,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,BYTE_MASK,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,BYTE_MASK,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,buffer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,buffer.length-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,buffer.length+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,DEFAULT_ENCODING,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,DEFAULT_ENCODING,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,0,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,0);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,DEFAULT_ENCODING,READ_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length==FALLBACK_ENCODING){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length==FALLBACK_ENCODING){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try{returnparseName(buffer,offset,length,DEFAULT_ENCODING);}catch(IOExceptionex){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK_ENCODING
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(false){if(length<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){if(start<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK_EN
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){if(start<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK_
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,0,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,buffer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,0);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,DEFAULT_ENCODING,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parseName(buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null||buffer.length<=length){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null||buffer.length<=length){returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(length){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(length){if(start<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,2);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,false);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,4);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,0,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,DEFAULT_ENCODING,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,MISSING_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,SHORT_NAME);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261System.arraycopy(buffer,offset,buffer,0,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null){returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261System.arraycopy(buffer,offset,buffer,0,length);returnparseName(buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,buffer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(false){if(length<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(false){if(length<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK_EN
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(false){if(length<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(false){if(length<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK_
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(false){if(length<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(false){if(length<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{try{returnparseName(buffer,offset,length
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FIELD_NAME);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,SHORT_DEFAULT);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonWhitespace(buffer,offset,length)){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(false){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try{returnparseName(buffer,offset,length,DEFAULT_ENCODING);}catch(IOExceptionex){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,10);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,DEFAULT_ENCODING+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,BYTE_MASK+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(buffer,offset,length)){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(length){if(length<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length,DEFAULT_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length+1,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length,DEFAULT_ENCODING).throwAsIOException("");
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,TALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,SHORTBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,BYTE_MASK+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,DEFAULT_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261>>[Delete]
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261==[Delete]
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261>=[Delete]
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==[Delete]
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261>>
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261{[Delete]
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,DEFAULT_ENCODING,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==[Delete]catch(IOExceptionioe){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==if(length<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==if(length<0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==[Delete]catch(IOExceptionioe){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null){returnbuffer.toString();}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,BYTE_MASK,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length-1,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,DEFAULT_ENCODING,buffer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-5,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(length){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(true){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parseName(buffer,offset,length,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNonLocalFunction(length){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(true){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-5,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-4,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-2,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-5,FALLBACK_ENCODING,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(true){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNegatives(true){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(true){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261ensureCapacity(false){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(false){if(length<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(true){if(length<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(length){if(start<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(false){if(length<0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,buffer.length-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,FALLBACK_ENCODING.length-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,buffer.length-2);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,BYTE_MASK-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,buffer.length-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){if(start==0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){if(start==0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNonEmpty(length){if(start==0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){if(start<0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){if(start>=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNonEmpty(length){if(start==0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,BYTE_MASK,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,BYTE_MASK,0);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,BYTE_MASK,current,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,BYTE_MASK,current);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}catch(IOExceptionex){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}catch(Exceptionex){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(true){try{returnparseName(buffer,offset,length,DEFAULT_ENCODING);}catch(IOExceptionex){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(true){try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}catch(IOExceptionex){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try{returnparseName(buffer,offset,length,DEFAULT_ENCODING);}catch(Exceptionex){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(true){try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}catch(IOExceptionex){returnparseName(buffer,offset,length,FALLBACK_ENCODING
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,FALLBACK_ENCODING,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,buffer.length,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,DEFAULT_ENCODING,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,BYTE_MASK,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261tries==null){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261tries==null){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.throwAsIOException("");
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleEmptyName(buffer,offset,length,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,FALLBACK_ENCODING,BYTE_MASK,current);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,0,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,FALLBACK_ENCODING,0,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,buffer,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){returnparseName(buffer,offset,length,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parseName(buffer,offset,length,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNonEmpty(length){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,FALLBACK_ENCODING,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,0,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,BYTE_MASK,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,BYTE_MASK,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,buffer.length,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try{
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261finalIOExceptionioe){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261finalIOExceptionioe=parseName(buffer,offset,length,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261finalIOExceptionioe){returnparseName(buffer,offset,length,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261finalIOExceptionioe=parseName(buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261finalIOExceptionioe){returnparseName(buffer,off,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261finalIOExceptionioe){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,SHORT_NAME,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,MISSING_NAME);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_NAME);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(true){if(start<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(true){if(length<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNegatives(true){if(start<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(true){if(start<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,BYTE_MASK-FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length+1,buffer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length+1,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length-1,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length+1,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(false){if(start<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,BYTE_MASK-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261ensureCapacity(length){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonArray(length){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNonArray(length){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length,READ_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(length<=FALLBACK_ENCODING){if(length==FALLBACK_ENCODING){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(length==FALLBACK_ENCODING){try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(length==FALLBACK_ENCODING){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(length<=FALLBACK_ENCODING){if(length==DEFAULT_ENCODING){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(length==FALLBACK_ENCODING){returnparseName(buffer,offset,length,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_DEFAULT);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,SHORT_DEFAULT);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_DESCENDING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(buffer!=null&&buffer.length<=length){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(buffer==null&&buffer.length<=length){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null||buffer.length<length){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(buffer!=null||buffer.length<length){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null||buffer.length!=length){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNull(buffer,offset,length)){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,FALLBACK_ENCODING,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(length){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(false){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNonLocalFunction(false){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNonLocalFunction(length){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEAD_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length>0){System.arraycopy(buffer,offset,buffer,0,length);returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261System.arraycopy(buffer,offset,buffer,0,length-1);returnparseName(buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try{System.arraycopy(buffer,offset,buffer,0,length);returnparseName(buffer,offset,length);}catch(IOExceptionex){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length<=0){System.arraycopy(buffer,offset,buffer,0,length);returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try{System.arraycopy(buffer,offset,buffer,0,length);returnparseName(buffer,offset,length);}catch(IOExceptionioe){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(true){if(start<=0){returnparseName(buffer,offset,length,FALLBACK_EN
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(true){if(length<=0){returnparseName(buffer,offset,length,FALLBACK_EN
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,buffer.length+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length>0){returnparseName(buffer,offset,length,FALLBACK_ENCODING,buffer.length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length>0){returnparseName(buffer,offset,length,FALLBACK_ENCODING,buffer.length);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,FALLBACK_ENCODING,buffer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length-2);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length-1,buffer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,BYTE_MASK-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length-4);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}catch(IOExceptionex){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(true){try{returnparseName(buffer,offset,length,DEFAULT_ENCODING);}catch(IOExceptionex){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(true){try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}catch(IOExceptionex){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}catch(Exceptionex){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try{returnparseName(buffer,offset,length,DEFAULT_ENCODING);}catch(Exceptionex){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNonEmpty(length){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK_ENCODING
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,BYTE_MASK+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null||buffer.length<=length){thrownewIllegalArgumentException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNonEmpty(length){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(true){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){returnparseName(buffer,offset,length,0,DEFAULT_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,true);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length<=0){returnparseName(buffer,offset,length,false);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length<=0){returnparseName(buffer,offset,length,false);}else{System.arraycopy(buffer,offset,buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length<=0){returnparseName(buffer,offset,length,false);}else{try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length<=0){returnparseName(buffer,offset,length,false);}else{try{returnparseName(buffer,offset,length,BYTE_MASK);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length<=0){returnparseName(buffer,offset,length,false);}else{try{returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,FALLBACK_ENCODING,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,DEFAULT_ENCODING,FALLBACK_ENCODING,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,0,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(buffer!=null&&buffer.length<=length){returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null||buffer.length<length){returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(buffer==null&&buffer.length<=length){returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parent==null||buffer.length<=length){returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null||buffer.length!=length){returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(buffer!=null&&buffer.length<=length){returnparseName(buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(buffer!=null&&buffer.length>0){returnbuffer.toString();}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnbuffer.toString();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(buffer!=null){returnbuffer.toString();}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer!=null){returnbuffer.toString();}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(buffer!=null){buffer=buffer.toString();
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,TALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,TALLBACK_ENCODING,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261System.arraycopy(buffer,offset,buffer,0,length-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261System.arraycopy(buffer,offset,buffer,0,length+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261System.arraycopy(buffer,offset,buffer,0,length,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261System.arraycopy(buffer,offset,buffer,0,length,0);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261System.arraycopy(buffer,offset,buffer,0,length,1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261System.arraycopy(buffer,offset,buffer,0,size);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==false){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==false){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==0){returnparseName(buffer,offset,length,0,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try>>false){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,0,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,0);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleException("");
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.throwAsIgnoredException("");
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parseName(buffer,offset,length,DEFAULT_ENCODING,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,FALLBACK_ENCODING,READ_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,BYTE_MASK,READ_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,0,READ_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,READ_MASK,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,READ_MASK,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parseName(buffer,offset,length,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parseName(buffer,offset,length,0);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parseName(buffer,offset,length,MISSING_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parseName(buffer,offset,length,READ_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parseName(buffer,offset,length,SHORT_NAME);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,0,buffer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,0,0,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,0,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parent==DEFAULT_ENCODING&&length==FALLBACK_ENCODING){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parent==DEFAULT_ENCODING){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parent==DEFAULT_ENCODING||length==FALLBACK_ENCODING){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parent==null||length==FALLBACK_ENCODING){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,SHORT_DESCRIPTION);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,0,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,BYTE_MASK,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,0,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,BYTE_MASK,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,FALLBACK_ENCODING,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length+1,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonWhitespace(buffer,offset,length)){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNonWhitespace(buffer,offset,length)){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNonWhitespace(buffer,offset,length)){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,BYTE_MASK+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,FALLBACK_ENCODING+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,FALLBACK_ENCODING,BYTE_MASK+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,BYTE_MASK+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,BYTE_MASK,FALLBACK_ENCODING+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,FALLBACK_ENCODING,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length-1,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length-1,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length-1,DEFAULT_ENCODING,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length-1,0,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,buffer.length-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,buffer.length+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,buffer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,buffer.length-2);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length+1,buffer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNonEmpty(length){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261ensureCapacity(length){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(true){try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(true){if(length<0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length,FALLBACK_ENCODING,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length==FALLBACK_ENCODING){aughtExceptionHandler.handleMissingName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length==FALLBACK_ENCODING){aughtExceptionHandler.handleMissingName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length==FALLBACK_ENCODING){aughtExceptionHandler.handleMissingName(buffer,offset,length,FALLBACK_ENCODING);}else{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,DEFAULT_ENCODING,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,2);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,size);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,4);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,0,0);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,0,buffer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,0,1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,0,4);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length,FALLBACK_ENCODING).throwAsIOException("");
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length,FALLBACK_ENCODING).throwAsIOException("".);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,3);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,5);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,FALLBACK_ENCODING,buffer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,2);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,4);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,3);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261tries==if(length<0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261tries==if(length<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261tries==if(length<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261tries==if(length<=1){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261tries==if(length>=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261tries==if(start<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){if(start>=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){if(start<0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,MISSING_ENCODING,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length<=0){returnparseName(buffer,offset,length,MISSING_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length<=0){returnparseName(buffer,offset,length,MISSING_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length<=0){returnparseName(buffer,offset,length,MISSING_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,0,buffer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,0,0);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,0,size);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,0,buffer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,0,FIELD_NAME);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,DEFAULT_ENCODING,buffer.length-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,DEFAULT_ENCODING,buffer.length+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length<=0){aughtExceptionHandler.handleMissingName(buffer,offset,length,DEFAULT_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length==0){aughtExceptionHandler.handleMissingName(buffer,offset,length,DEFAULT_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length<=0){aughtExceptionHandler.handleMissingName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length==0){aughtExceptionHandler.handleMissingName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(true){if(length<0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(true){if(length<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(true){if(start<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(true){if(length==0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(true){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length-FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,BYTE_MASK+2);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(buffer,offset,length)){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(buffer,offset,length)){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(buffer,offset,length)){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(buffer,offset,length)){returnparseName(buffer,offset,length,0,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,FALLBACK_ENCODING+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,0,DEFAULT_ENCODING+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,buffer.length+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length,DEFAULT_ENCODING,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length,DEFAULT_ENCODING,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,0,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261handleMissingName(buffer,offset,length,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,SHORT_NAME);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,buffer.length*2+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,buffer.length-2);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length>0){returnparseName(buffer,offset,length,0,buffer.length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,buffer.length+2);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(size){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261tries==null){returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleEmptyName(buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261tries==null&&parseName(buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261tries==null&&parseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(length){if(length<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,BYTE_MASK-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(true){if(ioeinstanceofIOException){try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(true){if(ioeinstanceofIOException){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(true){if(ioeinstanceofIOException){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(true){if(ioeinstanceofIOException){try{returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(true){if(ioe.getClass().isArray()){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(length){if(start==0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(length){if(start==0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNonLocalFunction(length){if(start==0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(false){if(start<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNonLocalFunction(length){if(start==0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261tries==0{returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261tries==0{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261tries==0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261tries==if(length<1){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261tries==if(length<2){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261tries==if(start<0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FIELD_NAME,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,FIELD_NAME);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FIELD_NAME,READ_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try{returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try>=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(true){if(length<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Parchet.getInstance().parseName(buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261ParchetUtils.checkState(buffer==null);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Parchet.getInstance().parse(buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261ParchetUtils.checkState(buffer!=null);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,BYTE_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null){try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261tryReturn(ioe){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261tryReturn(ioe){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261tryReturn(IOExceptionioe){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(true){if(ioe){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261tryReturn(IOExceptionioe){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261tryReturn(int){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,T_BACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length,MISSING_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length,10);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,buffer.length-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,buffer.length*1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parseName(buffer,offset,length,T_BACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parseName(buffer,offset,length,SHORT_DEFAULT);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parseName(buffer,offset,length-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null||buffer.length<=0){returnbuffer.toString();}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null||buffer.length<=0){returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null){returnparseName(buffer,offset,length);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,FALLBACK_ENCODING,NUMBER_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,10);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(true){if(start<=0){returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,DEFAULT_ENCODING-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261validateNonWhitespace(buffer,offset,length)){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,NAME_NAME);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(true){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(false){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null||buffer.length<=offset){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parent==null||buffer.length<=length){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){returnparseName(buffer,offset,buffer.length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(value){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){returnparseName(buffer,offset,0,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,0,1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer!=null){aughtExceptionHandler.handleMissingName(buffer,offset,length,DEFAULT_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null){aughtExceptionHandler.handleMissingName(buffer,offset,length,DEFAULT_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer.length==0){aughtExceptionHandler.handleMissingName(buffer,offset,length,DEFAULT_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer!=null){aughtExceptionHandler.handleMissingName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null){aughtExceptionHandler.handleMissingName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(true){returnparseName(buffer,offset,length,0);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(true){returnparseName(buffer,offset,length,0,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonArray(length){returnparseName(buffer,offset,buffer.length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(true){if(length<=0){returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parent!=null&&buffer.length<=length){returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null||buffer.length<=offset){returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parent==null||buffer.length<length){returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(true){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer!=null){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FIELD_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,FIELD_NAME);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,FIELD_NAME);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(length){returnparseName(buffer,offset,buffer.length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261tries==if(length==0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,buffer);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(length){if(start<0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(true){if(start<0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonWhitespace(false){if(length<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(false){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261System.arraycopy(buffer,offset,buffer,0,start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261System.arraycopy(buffer,offset,buffer,0,bytes.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261System.arraycopy(buffer,offset,buffer,0,end);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(true){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(value){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,BYTE_MASK,DEFAULT_ENCODING+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(true){if(length==0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,SHORTBACK_ENCODING+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(true){if(length<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(true){if(length<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(false){if(length<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(true){if(length<0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(length){if(start<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,buffer,BYTE_MASK,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,BYTE_MASK,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null){try{returnparseName(buffer,offset,length,DEFAULT_ENCODING);}catch(IOExceptionex){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try{returnparseName(buffer,offset,length,10);}catch(IOExceptionex){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,TALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null||buffer.length<=0){returnparseName(buffer,offset,length);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null){returnparseName(buffer,offset,length);}else{buffer=newbyte[length];System.arraycopy(buffer,offset,buffer,0,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try{[Delete]
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261tries==if(start<0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(true){returnparseName(buffer,offset,length,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(value){returnparseName(buffer,offset,length,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,buffer.length-start);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length==0){returnparseName(buffer,offset,length,false);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length==0){returnparseName(buffer,offset,length,false);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length==0){returnparseName(buffer,offset,length,false);}else{returnbuffer[offset++];}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length==0){returnparseName(buffer,offset,length,false);}else{returnbuffer.toString();}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,null);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261System.arraycopy(buffer,offset,buffer,0,start);returnparseName(buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261System.arraycopy(buffer,offset,buffer,0,end);returnparseName(buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length,10).throwAsIOException("");
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length,DEFAULT_ENCODING).throwAsIOException(",");
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length,SHORTBACK_ENCODING).throwAsIOException("");
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length/1,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length+1,DEFAULT_ENCODING,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length+1,MISSING_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNonLocalFunction(true){if(length<0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNonLocalFunction(true){if(length<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-2);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(buffer,offset,length)){returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,buffer,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,SHORTBACK_ENCODING,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,buffer.length*2);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,0,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==0){returnparseName(buffer,offset,length,10);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==0){returnparseName(buffer,offset,length,DEFAULT_ENCODING,buffer.length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-6,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,0,DEFAULT_ENCODING,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261safeToken(buffer,offset,length)){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261safeToken(buffer,offset,length)){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261safeToken(buffer,offset,length)>0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261safeToken(buffer,offset,length)>0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261safeToken(buffer,offset,length)){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261System.arraycopy(buffer,offset,buffer,0,length);return_parseName(buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,BYTE_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,MISSING_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,MISSING_ENCODING,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null){try{returnparseName(buffer,offset,length,DEFAULT_ENCODING);}catch(IOExceptionex){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try{returnparseName(buffer,offset,length,0);}catch(IOExceptionex){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try{returnparseName(buffer,offset,length,10);}catch(IOExceptionex){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try{returnparseName(buffer,offset,length,5);}catch(IOExceptionex){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNonEmpty(buffer,offset,length)){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(true){if(length==0){returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261ParchetUtils.parseName(buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261ParchetUtils.checkName(buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261ParchetState.checkNotNull(buffer);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261ParchetUtils.checkNotNull(buffer);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(length){if(length<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(length){if(!parseName(buffer,offset,length)){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(length){if(!parseName(buffer,offset,length)){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,BYTE_MASK,DEFAULT_ENCODING,FALLBACK_ENCODING,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(true){if(length<0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(value){if(start<0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){returnparseName(buffer,offset,buffer.length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){if(start<=0){returnparseName(buffer,offset,length,FALLBACK_EN
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleIdentifier(buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length,SHORT_DEFAULT);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNonEmpty(boolean){if(start<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,buffer,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,SHORTBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parent!=null&&parent==buffer.length){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parent==null&&parent!=buffer.parent){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parent!=null&&parent==buffer.length){returnparseName(buffer,offset,length,FALLBACK_ENCODING;}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parent==null&&parent!=buffer.parent){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parent!=null&&parent==buffer.length){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(aughtExceptionHandler!=null){aughtExceptionHandler.handleMissingName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(aughtExceptionHandler!=null){aughtExceptionHandler.handleMissingName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length==0){aughtExceptionHandler.handleMissingName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,0,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-10);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261safeToInt(buffer,offset,length)>0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261safeToken(buffer,offset,length)){returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261safeToInt(buffer,offset,length)>0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261safeToInt(buffer,offset,length)>0){returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261safeToken(buffer,offset,length)){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,DEFAULT_ENCODING,BYTE_MASK,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(true){if(ioe){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261ParchetUtils.parse(buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null){try{returnparseName(buffer,offset,length);}catch(IOExceptionex){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null){try{returnparseName(buffer,offset,length,BYTE_MASK);}catch(IOExceptionex){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try{returnparseName(buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parent==null&&parent==buffer.parent){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parent==DEFAULT_ENCODING?parseName(buffer,offset,length):null;
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parent==null&&parent==buffer.parent){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parent==DEFAULT_ENCODING?ParseName(buffer,offset,length):parseName(buffer,offset,length,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,SHORTBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,SHORT_NAME,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261return_parseName(buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,false,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,false,buffer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-4);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonWhitespace(buffer,offset,length)){returnparseName(buffer,offset,length,BYTE_MASK);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonWhitespace(buffer,offset,length)&&parseName(buffer,offset,length,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,SALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,NUMBER_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==null){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==null){returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==null){returnparseName(buffer,offset,length,BYTE_MASK);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==null){returnparseName(buffer,offset,length-1);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,BYTE_MASK,FALLBACK_ENCODING,buffer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length>0){aughtExceptionHandler.handleMissingName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(aughtExceptionHandler!=null){aughtExceptionHandler.handleMissingName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length<=0){aughtExceptionHandler.handleMissingName(buffer,offset,length);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length>0){aughtExceptionHandler.handleMissingName(buffer,offset,length);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(true){returnparseName(buffer,offset,length,DEFAULT_ENCODING,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==0){returnparseName(buffer,offset,length,BYTE_MASK);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==0){returnparseName(buffer,offset,length,DEFAULT_ENCODING,BYTE_MASK);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==0){returnparseName(buffer,offset,length,DEFAULT_ENCODING,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261System.arraycopy(buffer,offset,buffer,0,length*BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261System.arraycopy(buffer,offset,buffer,0,length-2);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null||buffer.length<=length){returnbuffer.toString();}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null||buffer.length==0){returnbuffer.toString();}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,buffer.length*BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNonEmpty(length){if(start<0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNegatives(true){if(length<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNegatives(true){if(length<0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try{[Delete]catch(IOExceptionioe){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length-1,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(false!=null){aughtExceptionHandler.handleMissingName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(offset==0){aughtExceptionHandler.handleMissingName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(false==null){aughtExceptionHandler.handleMissingName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(offset==0){aughtExceptionHandler.handleMissingName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,FALLBACK_ENCODING,DEFAULT_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(false){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,FALLBACK_ENCODING,DEFAULT_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,DEFAULT_ENCODING.length+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){returnparseName(buffer,offset,length,FALLBACK_ENCODING,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while((buffer[offset]!=null)&&(buffer.length>0)){try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while((buffer[offset]==null)&&(buffer.length>0)){try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while((offset+length)>buffer.length){try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while((buffer[offset]==null)&&(length>0)){try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FIELD_NAME,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(start<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK_EN
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(start<0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK_EN
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length-1,DEFAULT_ENCODING,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(length){returnparseName(buffer,offset,0,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,MISSING_ENCODING,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(false){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try{[Delete]catch(IOExceptionioe){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==null){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aught(RuntimeException.class,"Unknownexception:"+System.identityHashCode(buffer)+")");
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aught(RuntimeException.class,"Unknownexception:"+System.identityHashCode(buffer),offset,length));
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aught(RuntimeException.class,"Unknownexception:"+System.identityHashCode(buffer));
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aught(RuntimeException.class,"Unknownexception:"+System.identityHashCode(buffer),offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNonEmpty(length){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK_ENCODING
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK_ENCODING
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(aughtExceptionHandler.handleMissingName(buffer,offset,length,FALLBACK_ENCODING).throwAsIOException("");
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length+1,DEFAULT_ENCODING,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length/2,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,BYTE_MASK,DEFAULT_ENCODING,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try{returnparseName(buffer,offset,length);}catch(IOExceptionex){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==[Delete]catch(IOExceptionex){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==[Delete]catch(Throwablet){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try{[Delete]catch(IOExceptionex){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNonLocalFunction(false){if(length<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNonLocalFunction(false){if(length<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FIELD_NAMES);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-5,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while(buffer==null||buffer.length<length){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==null||buffer.length<=length){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==null||buffer.length<=length){returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==null||buffer.length<length){returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parent==null||buffer.length<=parent.length){returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,0,DEFAULT_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==returnparseName(buffer,offset,length,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261combatTarUtils.parseName(buffer,offset,length,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261combatTarUtils.parseName(buffer,offset,length,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261combatTarUtils.parse(buffer,offset,length,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261combatTarUtils.parseName(buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261combatchSequence(buffer,offset,length,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261combatchTrigger(buffer,offset,length,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length<=0){System.arraycopy(buffer,offset,buffer,0,length);returnparseName(buffer,offset,length);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer.length==0){System.arraycopy(buffer,offset,buffer,0,length);returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length+1,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING/BYTE_MASK+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while((buffer[offset]!=null)&&(buffer.length>0)){try{}catch(IOExceptionioe){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while((buffer[offset]!=null)&&(buffer.length>0)){try{returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261while((buffer[offset]==null)&&(buffer.length>0)){try{returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,4);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261}elseif(buffer.length==0){aughtExceptionHandler.handleMissingName(buffer,offset,length,DEFAULT_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer.length==0){aughtExceptionHandler.handleMissingName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261}elseif(buffer.length==0){aughtExceptionHandler.handleMissingName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,buffer.length,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try{returnparseName(buffer,offset,length,BYTE_MASK);}catch(IOExceptionex){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parseName(buffer,offset,length,NUMBER_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(aughtExceptionHandler!=null){aughtExceptionHandler.handleMissingName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(!aughtExceptionHandler.handleMissingName(buffer,offset,length,DEFAULT_ENCODING))thrownewRuntimeException("");
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(aughtExceptionHandler!=null){aughtExceptionHandler.handleMissingName(buffer,offset,length,DEFAULT_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(aughtExceptionHandler!=null){aughtExceptionHandler.handleMissingName(buffer,offset,length,DEFAULT_ENCODING);}else{returnparseName(buffer,offset,length,BYTE_MASK);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(!aughtExceptionHandler.handleMissingName(buffer,offset,length,DEFAULT_ENCODING)){try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(start<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK_
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(start<0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK_
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(start<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNonLocalFunction(length){if(start<0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(length){if(start<0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261enableNonLocalFunction(length){if(start<0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==0){returnparseName(buffer,offset,length,FALLBACK_ENCODING,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==0){try{returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==0){returnparseName(buffer,offset,length,FALLBACK_ENCODING,buffer.length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,FALLBACK_ENCODING,0,DEFAULT_ENCODING);
