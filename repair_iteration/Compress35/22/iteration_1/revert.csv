projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,buffer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261[Delete]
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(length){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonArray(length){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){if(start<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){if(start<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,FALLBACK_ENCODING,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,BYTE_MASK,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,BYTE_MASK,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,buffer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,buffer.length-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,buffer.length+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,DEFAULT_ENCODING,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,DEFAULT_ENCODING,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,0,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,0);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,DEFAULT_ENCODING,READ_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length==FALLBACK_ENCODING){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length==FALLBACK_ENCODING){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(length<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try{returnparseName(buffer,offset,length,DEFAULT_ENCODING);}catch(IOExceptionex){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK_ENCODING
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(false){if(length<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){if(start<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK_EN
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){if(start<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK_
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,0,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,buffer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,0);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,DEFAULT_ENCODING,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261parseName(buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null||buffer.length<=length){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null||buffer.length<=length){returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(length){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(length){if(start<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(length){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,2);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,false);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,4);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,0,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,DEFAULT_ENCODING,BYTE_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,MISSING_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,SHORT_NAME);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261System.arraycopy(buffer,offset,buffer,0,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null){thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null){returnparseName(buffer,offset,length);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261System.arraycopy(buffer,offset,buffer,0,length);returnparseName(buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,buffer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(false){if(length<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(false){if(length<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK_EN
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(false){if(length<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(false){if(length<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{try{returnparseName(buffer,offset,length,FALLBACK_
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(false){if(length<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(false){if(length<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{try{returnparseName(buffer,offset,length
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length-1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FIELD_NAME);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,SHORT_DEFAULT);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonWhitespace(buffer,offset,length)){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNegatives(false){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try{returnparseName(buffer,offset,length,DEFAULT_ENCODING);}catch(IOExceptionex){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,10);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,0,DEFAULT_ENCODING+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,BYTE_MASK+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonEmpty(buffer,offset,length)){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261allowNonLocalFunction(length){if(length<=0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length,DEFAULT_ENCODING);}else{thrownewRuntimeException("");}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length+1,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261aughtExceptionHandler.handleMissingName(buffer,offset,length,DEFAULT_ENCODING).throwAsIOException("");
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,TALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,SHORTBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,BYTE_MASK+1);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,FALLBACK_ENCODING,DEFAULT_MASK);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261>>[Delete]
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261==[Delete]
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261>=[Delete]
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==[Delete]
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261>>
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261{[Delete]
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-1,DEFAULT_ENCODING,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==[Delete]catch(IOExceptionioe){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==if(length<=0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==if(length<0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==0){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==0){returnparseName(buffer,offset,length,DEFAULT_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261try==[Delete]catch(IOExceptionioe){returnparseName(buffer,offset,length,FALLBACK_ENCODING);}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261if(buffer==null){returnbuffer.toString();}
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length,DEFAULT_ENCODING,BYTE_MASK,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length-1,DEFAULT_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261Stringname=parseName(buffer,offset,length,DEFAULT_ENCODING,buffer.length);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-5,FALLBACK_ENCODING);
projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java261returnparseName(buffer,offset,length-FALLBACK_ENCODING);
