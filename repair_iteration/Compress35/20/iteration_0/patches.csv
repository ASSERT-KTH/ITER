bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(length  <  =  0  ||(buffer[offset]  &  0x80)  ==  0)  {  [CE]  <identifier>  expected  [FE]    ArchiveException  [CONTEXT]  public  static  long  parseOctalOrBinary(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  if(length  <  =  0  ||(buffer[offset]  &  0x80)  ==  0)  {  [BUGGY]  return  parseOctal(buffer,  offset,  length);  }  final  boolean  negative  =  buffer[offset]  ==  (byte)  0xff;  if  (length  <  9)  {  return  parseBinaryLong(buffer,  offset,  length,  negative);  }  return  parseBinaryBigInteger(buffer,  offset,  length,  negative);  }  [CLASS]  TarUtils  1  [METHOD]  parseOctalOrBinary  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	167	167	1	replace	if(length  <  =  0  ||(buffer[offset]  &  0x80)  ==  0)  {	if  ((buffer[offset]  &  0x80)  ==  0)  {  	non-compiled	[CE]  <identifier>  expected	39	None	replace
2	[BUG]  [BUGGY]  if(length  <  0  ||(buffer[offset]  &  0x80)  ==  0)  {  [CE]  <identifier>  expected  [FE]      ArchiveException  [CONTEXT]  public  static  long  parseOctalOrBinary(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  if(length  <  0  ||(buffer[offset]  &  0x80)  ==  0)  {  [BUGGY]  return  parseOctal(buffer,  offset,  length);  }  final  boolean  negative  =  buffer[offset]  ==  (byte)  0xff;  if  (length  <  9)  {  return  parseBinaryLong(buffer,  offset,  length,  negative);  }  return  parseBinaryBigInteger(buffer,  offset,  length,  negative);  }  [CLASS]  TarUtils  1  [METHOD]  parseOctalOrBinary  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	167	167	1	replace	if(length  <  0  ||(buffer[offset]  &  0x80)  ==  0)  {	if  ((buffer[offset]  &  0x80)  ==  0)  {  	non-compiled	[CE]  <identifier>  expected	39	None	replace
3	[BUG]  [BUGGY]  if(length  <  =  0x80  ||(buffer[offset]  &  0x80)  ==  0)  {  [CE]  <identifier>  expected  [FE]        ArchiveException  [CONTEXT]  public  static  long  parseOctalOrBinary(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  if(length  <  =  0x80  ||(buffer[offset]  &  0x80)  ==  0)  {  [BUGGY]  return  parseOctal(buffer,  offset,  length);  }  final  boolean  negative  =  buffer[offset]  ==  (byte)  0xff;  if  (length  <  9)  {  return  parseBinaryLong(buffer,  offset,  length,  negative);  }  return  parseBinaryBigInteger(buffer,  offset,  length,  negative);  }  [CLASS]  TarUtils  1  [METHOD]  parseOctalOrBinary  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	167	167	1	replace	if(length  <  =  0x80  ||(buffer[offset]  &  0x80)  ==  0)  {	if  ((buffer[offset]  &  0x80)  ==  0)  {  	non-compiled	[CE]  <identifier>  expected	39	None	replace
4	[BUG]  [BUGGY]  if(length  <  =  0)  {  [CE]  <identifier>  expected  [FE]          ArchiveException  [CONTEXT]  public  static  long  parseOctalOrBinary(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  if(length  <  =  0)  {  [BUGGY]  return  parseOctal(buffer,  offset,  length);  }  final  boolean  negative  =  buffer[offset]  ==  (byte)  0xff;  if  (length  <  9)  {  return  parseBinaryLong(buffer,  offset,  length,  negative);  }  return  parseBinaryBigInteger(buffer,  offset,  length,  negative);  }  [CLASS]  TarUtils  1  [METHOD]  parseOctalOrBinary  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	167	167	1	replace	if(length  <  =  0)  {	if  ((buffer[offset]  &  0x80)  ==  0)  {  	non-compiled	[CE]  <identifier>  expected	39	None	replace
5	[BUG]  [BUGGY]  if(length  <  =  0  ||(buffer[offset]  &  0x80)!=  0)  {  [CE]  <identifier>  expected  [FE]            ArchiveException  [CONTEXT]  public  static  long  parseOctalOrBinary(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  if(length  <  =  0  ||(buffer[offset]  &  0x80)!=  0)  {  [BUGGY]  return  parseOctal(buffer,  offset,  length);  }  final  boolean  negative  =  buffer[offset]  ==  (byte)  0xff;  if  (length  <  9)  {  return  parseBinaryLong(buffer,  offset,  length,  negative);  }  return  parseBinaryBigInteger(buffer,  offset,  length,  negative);  }  [CLASS]  TarUtils  1  [METHOD]  parseOctalOrBinary  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	167	167	1	replace	if(length  <  =  0  ||(buffer[offset]  &  0x80)!=  0)  {	if  ((buffer[offset]  &  0x80)  ==  0)  {  	non-compiled	[CE]  <identifier>  expected	39	None	replace
6	[BUG]  [BUGGY]  if(length  <  0  ||(buffer[offset]  &  0x80)!=  0)  {  [CE]  <identifier>  expected  [FE]              ArchiveException  [CONTEXT]  public  static  long  parseOctalOrBinary(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  if(length  <  0  ||(buffer[offset]  &  0x80)!=  0)  {  [BUGGY]  return  parseOctal(buffer,  offset,  length);  }  final  boolean  negative  =  buffer[offset]  ==  (byte)  0xff;  if  (length  <  9)  {  return  parseBinaryLong(buffer,  offset,  length,  negative);  }  return  parseBinaryBigInteger(buffer,  offset,  length,  negative);  }  [CLASS]  TarUtils  1  [METHOD]  parseOctalOrBinary  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	167	167	1	replace	if(length  <  0  ||(buffer[offset]  &  0x80)!=  0)  {	if  ((buffer[offset]  &  0x80)  ==  0)  {  	non-compiled	[CE]  <identifier>  expected	39	None	replace
7	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]                ArchiveException  [CONTEXT]  public  static  long  parseOctalOrBinary(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]    [BUGGY]  return  parseOctal(buffer,  offset,  length);  }  final  boolean  negative  =  buffer[offset]  ==  (byte)  0xff;  if  (length  <  9)  {  return  parseBinaryLong(buffer,  offset,  length,  negative);  }  return  parseBinaryBigInteger(buffer,  offset,  length,  negative);  }  [CLASS]  TarUtils  1  [METHOD]  parseOctalOrBinary  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	167	167	1	replace	  	if  ((buffer[offset]  &  0x80)  ==  0)  {  	non-compiled	[CE]  <identifier>  expected	39	None	replace
8	[BUG]  [BUGGY]  if(buffer  ==  null  ||(buffer[offset]  &  0x80)  ==  0)  {  [CE]  <identifier>  expected  [FE]    ArchiveException  [CONTEXT]  public  static  long  parseOctalOrBinary(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  if(buffer  ==  null  ||(buffer[offset]  &  0x80)  ==  0)  {  [BUGGY]  return  parseOctal(buffer,  offset,  length);  }  final  boolean  negative  =  buffer[offset]  ==  (byte)  0xff;  if  (length  <  9)  {  return  parseBinaryLong(buffer,  offset,  length,  negative);  }  return  parseBinaryBigInteger(buffer,  offset,  length,  negative);  }  [CLASS]  TarUtils  1  [METHOD]  parseOctalOrBinary  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	167	167	1	replace	if(buffer  ==  null  ||(buffer[offset]  &  0x80)  ==  0)  {	if  ((buffer[offset]  &  0x80)  ==  0)  {  	non-compiled	[CE]  <identifier>  expected	39	None	replace
9	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer[offset]!=  0x80)  {  [CE]  <identifier>  expected  [FE]      ArchiveException  [CONTEXT]  public  static  long  parseOctalOrBinary(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  if(buffer  ==  null  ||  buffer[offset]!=  0x80)  {  [BUGGY]  return  parseOctal(buffer,  offset,  length);  }  final  boolean  negative  =  buffer[offset]  ==  (byte)  0xff;  if  (length  <  9)  {  return  parseBinaryLong(buffer,  offset,  length,  negative);  }  return  parseBinaryBigInteger(buffer,  offset,  length,  negative);  }  [CLASS]  TarUtils  1  [METHOD]  parseOctalOrBinary  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	167	167	1	replace	if(buffer  ==  null  ||  buffer[offset]!=  0x80)  {	if  ((buffer[offset]  &  0x80)  ==  0)  {  	non-compiled	[CE]  <identifier>  expected	39	None	replace
10	[BUG]  [BUGGY]  if(buffer.length  ==  0  ||(buffer[offset]  &  0x80)  ==  0)  {  [CE]  <identifier>  expected  [FE]        ArchiveException  [CONTEXT]  public  static  long  parseOctalOrBinary(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  if(buffer.length  ==  0  ||(buffer[offset]  &  0x80)  ==  0)  {  [BUGGY]  return  parseOctal(buffer,  offset,  length);  }  final  boolean  negative  =  buffer[offset]  ==  (byte)  0xff;  if  (length  <  9)  {  return  parseBinaryLong(buffer,  offset,  length,  negative);  }  return  parseBinaryBigInteger(buffer,  offset,  length,  negative);  }  [CLASS]  TarUtils  1  [METHOD]  parseOctalOrBinary  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	167	167	1	replace	if(buffer.length  ==  0  ||(buffer[offset]  &  0x80)  ==  0)  {	if  ((buffer[offset]  &  0x80)  ==  0)  {  	non-compiled	[CE]  <identifier>  expected	39	None	replace
11	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer[offset]  ==  0x80)  {  [CE]  <identifier>  expected  [FE]          ArchiveException  [CONTEXT]  public  static  long  parseOctalOrBinary(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  if(buffer  ==  null  ||  buffer[offset]  ==  0x80)  {  [BUGGY]  return  parseOctal(buffer,  offset,  length);  }  final  boolean  negative  =  buffer[offset]  ==  (byte)  0xff;  if  (length  <  9)  {  return  parseBinaryLong(buffer,  offset,  length,  negative);  }  return  parseBinaryBigInteger(buffer,  offset,  length,  negative);  }  [CLASS]  TarUtils  1  [METHOD]  parseOctalOrBinary  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	167	167	1	replace	if(buffer  ==  null  ||  buffer[offset]  ==  0x80)  {	if  ((buffer[offset]  &  0x80)  ==  0)  {  	non-compiled	[CE]  <identifier>  expected	39	None	replace
12	[BUG]  [BUGGY]  if(length  <  =  0x7F  ||(buffer[offset]  &  0x80)  ==  0)  {  [CE]  <identifier>  expected  [FE]    ArchiveException  [CONTEXT]  public  static  long  parseOctalOrBinary(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  if(length  <  =  0x7F  ||(buffer[offset]  &  0x80)  ==  0)  {  [BUGGY]  return  parseOctal(buffer,  offset,  length);  }  final  boolean  negative  =  buffer[offset]  ==  (byte)  0xff;  if  (length  <  9)  {  return  parseBinaryLong(buffer,  offset,  length,  negative);  }  return  parseBinaryBigInteger(buffer,  offset,  length,  negative);  }  [CLASS]  TarUtils  1  [METHOD]  parseOctalOrBinary  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	167	167	1	replace	if(length  <  =  0x7F  ||(buffer[offset]  &  0x80)  ==  0)  {	if  ((buffer[offset]  &  0x80)  ==  0)  {  	non-compiled	[CE]  <identifier>  expected	39	None	replace
13	[BUG]  [BUGGY]  if(length  <  =  0x10  ||(buffer[offset]  &  0x80)  ==  0)  {  [CE]  <identifier>  expected  [FE]      ArchiveException  [CONTEXT]  public  static  long  parseOctalOrBinary(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  if(length  <  =  0x10  ||(buffer[offset]  &  0x80)  ==  0)  {  [BUGGY]  return  parseOctal(buffer,  offset,  length);  }  final  boolean  negative  =  buffer[offset]  ==  (byte)  0xff;  if  (length  <  9)  {  return  parseBinaryLong(buffer,  offset,  length,  negative);  }  return  parseBinaryBigInteger(buffer,  offset,  length,  negative);  }  [CLASS]  TarUtils  1  [METHOD]  parseOctalOrBinary  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	167	167	1	replace	if(length  <  =  0x10  ||(buffer[offset]  &  0x80)  ==  0)  {	if  ((buffer[offset]  &  0x80)  ==  0)  {  	non-compiled	[CE]  <identifier>  expected	39	None	replace
14	[BUG]  [BUGGY]  if(length  <  =  0x7F)  {  [CE]  <identifier>  expected  [FE]        ArchiveException  [CONTEXT]  public  static  long  parseOctalOrBinary(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  if(length  <  =  0x7F)  {  [BUGGY]  return  parseOctal(buffer,  offset,  length);  }  final  boolean  negative  =  buffer[offset]  ==  (byte)  0xff;  if  (length  <  9)  {  return  parseBinaryLong(buffer,  offset,  length,  negative);  }  return  parseBinaryBigInteger(buffer,  offset,  length,  negative);  }  [CLASS]  TarUtils  1  [METHOD]  parseOctalOrBinary  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	167	167	1	replace	if(length  <  =  0x7F)  {	if  ((buffer[offset]  &  0x80)  ==  0)  {  	non-compiled	[CE]  <identifier>  expected	39	None	replace
15	[BUG]  [BUGGY]  if(length  <  =  0  ||  buffer[offset]  ==  0x80)  {  [CE]  <identifier>  expected  [FE]          ArchiveException  [CONTEXT]  public  static  long  parseOctalOrBinary(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  [BUGGY]  if(length  <  =  0  ||  buffer[offset]  ==  0x80)  {  [BUGGY]  return  parseOctal(buffer,  offset,  length);  }  final  boolean  negative  =  buffer[offset]  ==  (byte)  0xff;  if  (length  <  9)  {  return  parseBinaryLong(buffer,  offset,  length,  negative);  }  return  parseBinaryBigInteger(buffer,  offset,  length,  negative);  }  [CLASS]  TarUtils  1  [METHOD]  parseOctalOrBinary  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	167	167	1	replace	if(length  <  =  0  ||  buffer[offset]  ==  0x80)  {	if  ((buffer[offset]  &  0x80)  ==  0)  {  	non-compiled	[CE]  <identifier>  expected	39	None	replace
