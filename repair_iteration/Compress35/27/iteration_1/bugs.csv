bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(len  <  =  0)  {  [CE]  <identifier>  expected  [FE]    ArchiveException  [CONTEXT]  final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }  [BUGGY]  if(len  <  =  0)  {  [BUGGY]  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return   " ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  =  0)  {	if  (len  >  0)  {  	non-compiled	[CE]  <identifier>  expected	53	None	replace
2	[BUG]  [BUGGY]  if(length  >  0)  {  [CE]  <identifier>  expected  [FE]      ArchiveException  [CONTEXT]  final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }  [BUGGY]  if(length  >  0)  {  [BUGGY]  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return   " ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0)  {	if  (len  >  0)  {  	non-compiled	[CE]  <identifier>  expected	53	None	replace
3	[BUG]  [BUGGY]  if(len  >  0  ||  buffer[offset  +  len  -  1]!=  0)  {  [CE]  <identifier>  expected  [FE]        ArchiveException  [CONTEXT]  final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }  [BUGGY]  if(len  >  0  ||  buffer[offset  +  len  -  1]!=  0)  {  [BUGGY]  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return   " ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  0  ||  buffer[offset  +  len  -  1]!=  0)  {	if  (len  >  0)  {  	non-compiled	[CE]  <identifier>  expected	53	None	replace
4	[BUG]  [BUGGY]  if(len  >  0  ||  buffer[offset  +  len  -  1]  ==  0)  {  [CE]  <identifier>  expected  [FE]          ArchiveException  [CONTEXT]  final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }  [BUGGY]  if(len  >  0  ||  buffer[offset  +  len  -  1]  ==  0)  {  [BUGGY]  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return   " ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  0  ||  buffer[offset  +  len  -  1]  ==  0)  {	if  (len  >  0)  {  	non-compiled	[CE]  <identifier>  expected	53	None	replace
5	[BUG]  [BUGGY]  if(len  ==  0)  {  [CE]  <identifier>  expected  [FE]            ArchiveException  [CONTEXT]  final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }  [BUGGY]  if(len  ==  0)  {  [BUGGY]  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return   " ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  ==  0)  {	if  (len  >  0)  {  	non-compiled	[CE]  <identifier>  expected	53	None	replace
6	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]              ArchiveException  [CONTEXT]  final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }  [BUGGY]    [BUGGY]  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return   " ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	  	if  (len  >  0)  {  	non-compiled	[CE]  <identifier>  expected	53	None	replace
7	[BUG]  [BUGGY]  if(len  >=  0)  {  [CE]  <identifier>  expected  [FE]    ArchiveException  [CONTEXT]  final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }  [BUGGY]  if(len  >=  0)  {  [BUGGY]  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return   " ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >=  0)  {	if  (len  >  0)  {  	non-compiled	[CE]  <identifier>  expected	53	None	replace
8	[BUG]  [BUGGY]  if(encoding!=  null)  {  [CE]  <identifier>  expected  [FE]    ArchiveException  [CONTEXT]  final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }  [BUGGY]  if(encoding!=  null)  {  [BUGGY]  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return   " ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null)  {	if  (len  >  0)  {  	non-compiled	[CE]  <identifier>  expected	53	None	replace
9	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]      ArchiveException  [CONTEXT]  final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return   " ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	if  (len  >  0)  {  	non-compiled	[CE]  <identifier>  expected	53	None	replace
10	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [CE]  <identifier>  expected  [FE]        ArchiveException  [CONTEXT]  final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [BUGGY]  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return   " ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {	if  (len  >  0)  {  	non-compiled	[CE]  <identifier>  expected	53	None	replace
11	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  <identifier>  expected  [FE]          ArchiveException  [CONTEXT]  final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return   " ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {	if  (len  >  0)  {  	non-compiled	[CE]  <identifier>  expected	53	None	replace
