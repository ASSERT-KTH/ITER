bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(encoding  ==  null  &&  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding  ==  null  &&  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  null  &&  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {	  if(encoding!=    null    &&    encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	96	None	replace
2	[BUG]  [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {	  if(encoding!=    null    &&    encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	96	None	replace
3	[BUG]  [BUGGY]  if(encoding  ==  null  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding  ==  null  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  null  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {	  if(encoding!=    null    &&    encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	96	None	replace
4	[BUG]  [BUGGY]  if(encoding  ==  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding  ==  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {	  if(encoding!=    null    &&    encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	96	None	replace
5	[BUG]  [BUGGY]  if(encoding!=  null  &&  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING)||  encoding.isEnabled(Feature.QUOTE_MASK))  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING)||  encoding.isEnabled(Feature.QUOTE_MASK))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING)||  encoding.isEnabled(Feature.QUOTE_MASK))  {	  if(encoding!=    null    &&    encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	96	None	replace
6	[BUG]  [BUGGY]  if(encoding  ==  null  &&  encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding  ==  null  &&  encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  null  &&  encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(encoding!=    null    &&    encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	98	None	replace
7	[BUG]  [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(encoding!=    null    &&    encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	98	None	replace
8	[BUG]  [BUGGY]  if(encoding!=  null  &&  encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT  ||  encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&  encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT  ||  encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&  encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT  ||  encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(encoding!=    null    &&    encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	98	None	replace
9	[BUG]  [BUGGY]  if(encoding  ==  null  ||  encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding  ==  null  ||  encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  null  ||  encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(encoding!=    null    &&    encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	98	None	replace
10	[BUG]  [BUGGY]  if(encoding!=  null  &&  encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&  encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&  encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(encoding!=    null    &&    encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	98	None	replace
11	[BUG]  [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	67	None	replace
12	[BUG]  [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	67	None	replace
13	[BUG]  [BUGGY]  if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	67	None	replace
14	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	67	None	replace
15	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	67	None	replace
16	[BUG]  [BUGGY]  if(encoding  ==  null  &&  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding  ==  null  &&  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  null  &&  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {	  if(encoding!=    null    &&    encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
17	[BUG]  [BUGGY]  if(encoding!=  null  ||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  ||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  ||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {	  if(encoding!=    null    &&    encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
18	[BUG]  [BUGGY]  if(encoding  ==  null  ||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding  ==  null  ||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  null  ||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {	  if(encoding!=    null    &&    encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
19	[BUG]  [BUGGY]  if(encoding!=  null  &&  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING)||  encoding.isEnabled(Feature.DEFAULT_ENCODING))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING)||  encoding.isEnabled(Feature.DEFAULT_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING)||  encoding.isEnabled(Feature.DEFAULT_ENCODING))  {	  if(encoding!=    null    &&    encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
20	[BUG]  [BUGGY]  if(encoding!=  null  &&  encoding.isEnabled(Feature.DEFAULT_ENCODING))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&  encoding.isEnabled(Feature.DEFAULT_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&  encoding.isEnabled(Feature.DEFAULT_ENCODING))  {	  if(encoding!=    null    &&    encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
21	[BUG]  [BUGGY]  if(len  >  0  ||  buffer.charAt(offset  +  len)>  buffer.length)  {  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  >  0  ||  buffer.charAt(offset  +  len)>  buffer.length)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  0  ||  buffer.charAt(offset  +  len)>  buffer.length)  {	  if(length    >    0    ||    buffer.charAt(offset    +    len)>    buffer.length)    {    	non-compiled	[CE]  <identifier>  expected	84	None	replace
22	[BUG]  [BUGGY]  if(length  >  0  &&  buffer.charAt(offset  +  len)>  buffer.length)  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(length  >  0  &&  buffer.charAt(offset  +  len)>  buffer.length)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0  &&  buffer.charAt(offset  +  len)>  buffer.length)  {	  if(length    >    0    ||    buffer.charAt(offset    +    len)>    buffer.length)    {    	non-compiled	[CE]  <identifier>  expected	84	None	replace
23	[BUG]  [BUGGY]  if(len  <  =  0  ||  buffer.charAt(offset  +  len)>  buffer.length)  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  <  =  0  ||  buffer.charAt(offset  +  len)>  buffer.length)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  =  0  ||  buffer.charAt(offset  +  len)>  buffer.length)  {	  if(length    >    0    ||    buffer.charAt(offset    +    len)>    buffer.length)    {    	non-compiled	[CE]  <identifier>  expected	84	None	replace
24	[BUG]  [BUGGY]  if(buffer.length  >  0  ||  buffer.charAt(offset  +  len)>  buffer.length)  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(buffer.length  >  0  ||  buffer.charAt(offset  +  len)>  buffer.length)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(buffer.length  >  0  ||  buffer.charAt(offset  +  len)>  buffer.length)  {	  if(length    >    0    ||    buffer.charAt(offset    +    len)>    buffer.length)    {    	non-compiled	[CE]  <identifier>  expected	84	None	replace
25	[BUG]  [BUGGY]  if(len  >  0  ||  buffer.charAt(offset  +  len)>  length)  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  >  0  ||  buffer.charAt(offset  +  len)>  length)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  0  ||  buffer.charAt(offset  +  len)>  length)  {	  if(length    >    0    ||    buffer.charAt(offset    +    len)>    buffer.length)    {    	non-compiled	[CE]  <identifier>  expected	84	None	replace
26	[BUG]  [BUGGY]  if(len  >  0  &&  buffer.charAt(offset  +  len)>  buffer.length)  {  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  >  0  &&  buffer.charAt(offset  +  len)>  buffer.length)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  0  &&  buffer.charAt(offset  +  len)>  buffer.length)  {	  if(length    >    0    ||    buffer.charAt(offset    +    len)>    buffer.length)    {    	non-compiled	[CE]  <identifier>  expected	84	None	replace
27	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	68	None	replace
28	[BUG]  [BUGGY]  if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	68	None	replace
29	[BUG]  [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAME  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAME  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding.isEnabled(Feature.QUOTE_FIELD_NAME  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	68	None	replace
30	[BUG]  [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	68	None	replace
31	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	68	None	replace
32	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	68	None	replace
33	[BUG]  [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  DEFAULT_ENCODING))  {  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  DEFAULT_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  DEFAULT_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,    DEFAULT_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
34	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  FALLBACK_ENCODING))  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  FALLBACK_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  FALLBACK_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,    DEFAULT_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
35	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  0,  len))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  0,  len))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  0,  len))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,    DEFAULT_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
36	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  length))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  length))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  length))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,    DEFAULT_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
37	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  DEFAULT_FRACTIONAL_ENCODING))  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  DEFAULT_FRACTIONAL_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  DEFAULT_FRACTIONAL_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,    DEFAULT_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
38	[BUG]  [BUGGY]  if(len  ==  0  &&  buffer[offset  +  len  -  1]!=  0)  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  ==  0  &&  buffer[offset  +  len  -  1]!=  0)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  ==  0  &&  buffer[offset  +  len  -  1]!=  0)  {	  if(len    ==    0    ||    buffer[offset    +    len    -    1]!=    0)    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
39	[BUG]  [BUGGY]  if(length  ==  0  ||  buffer[offset  +  len  -  1]!=  0)  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(length  ==  0  ||  buffer[offset  +  len  -  1]!=  0)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  ==  0  ||  buffer[offset  +  len  -  1]!=  0)  {	  if(len    ==    0    ||    buffer[offset    +    len    -    1]!=    0)    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
40	[BUG]  [BUGGY]  if(len  ==  0  ||  buffer[offset  +  length  -  1]!=  0)  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  ==  0  ||  buffer[offset  +  length  -  1]!=  0)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  ==  0  ||  buffer[offset  +  length  -  1]!=  0)  {	  if(len    ==    0    ||    buffer[offset    +    len    -    1]!=    0)    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
41	[BUG]  [BUGGY]  if(len  >=  0  &&  buffer[offset  +  len  -  1]  ==  0)  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  >=  0  &&  buffer[offset  +  len  -  1]  ==  0)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >=  0  &&  buffer[offset  +  len  -  1]  ==  0)  {	  if(len    >=    0    ||    buffer[offset    +    len    -    1]    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
42	[BUG]  [BUGGY]  if(length  >=  0  ||  buffer[offset  +  len  -  1]  ==  0)  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(length  >=  0  ||  buffer[offset  +  len  -  1]  ==  0)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >=  0  ||  buffer[offset  +  len  -  1]  ==  0)  {	  if(len    >=    0    ||    buffer[offset    +    len    -    1]    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
43	[BUG]  [BUGGY]  if(len  ==  0  &&  buffer[offset  +  len  -  1]  ==  0)  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  ==  0  &&  buffer[offset  +  len  -  1]  ==  0)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  ==  0  &&  buffer[offset  +  len  -  1]  ==  0)  {	  if(len    >=    0    ||    buffer[offset    +    len    -    1]    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
44	[BUG]  [BUGGY]  if(len  >=  offset)  {  [CE]  <identifier>  expected  [FE]            ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  >=  offset)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >=  offset)  {	  if(offset    >=    len)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
45	[BUG]  [BUGGY]  if(offset  <  len)  {  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(offset  <  len)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(offset  <  len)  {	  if(offset    >=    len)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
46	[BUG]  [BUGGY]  if(offset!=  len)  {  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(offset!=  len)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(offset!=  len)  {	  if(offset    >=    len)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
47	[BUG]  [BUGGY]  if(offset  >  len)  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(offset  >  len)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(offset  >  len)  {	  if(offset    >=    len)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
48	[BUG]  [BUGGY]  if(len  >  offset)  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  >  offset)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  offset)  {	  if(offset    >=    len)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
49	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
50	[BUG]  [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
51	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
52	[BUG]  [BUGGY]  byte[]  b  =  new  byte[length];  System.arraycopy(buffer,  offset,  b,  0,  len);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  byte[]  b  =  new  byte[length];  System.arraycopy(buffer,  offset,  b,  0,  len);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	byte[]  b  =  new  byte[length];  System.arraycopy(buffer,  offset,  b,  0,  len);	  byte[]    b    =    new    byte[len];    System.arraycopy(buffer,    offset,    b,    0,    len);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
53	[BUG]  [BUGGY]  if(length  >  0)  {  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  }  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(length  >  0)  {  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  }  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0)  {  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  }	  byte[]    b    =    new    byte[len];    System.arraycopy(buffer,    offset,    b,    0,    len);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
54	[BUG]  [BUGGY]  if(len  >  0)  {  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  }  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  >  0)  {  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  }  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  0)  {  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  }	  byte[]    b    =    new    byte[len];    System.arraycopy(buffer,    offset,    b,    0,    len);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
55	[BUG]  [BUGGY]  byte[]  b  =  new  byte[len  +  1];  System.arraycopy(buffer,  offset,  b,  0,  len);  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  byte[]  b  =  new  byte[len  +  1];  System.arraycopy(buffer,  offset,  b,  0,  len);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	byte[]  b  =  new  byte[len  +  1];  System.arraycopy(buffer,  offset,  b,  0,  len);	  byte[]    b    =    new    byte[len];    System.arraycopy(buffer,    offset,    b,    0,    len);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
56	[BUG]  [BUGGY]  byte[]  b  =  new  byte[len  -  1];  System.arraycopy(buffer,  offset,  b,  0,  len);  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  byte[]  b  =  new  byte[len  -  1];  System.arraycopy(buffer,  offset,  b,  0,  len);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	byte[]  b  =  new  byte[len  -  1];  System.arraycopy(buffer,  offset,  b,  0,  len);	  byte[]    b    =    new    byte[len];    System.arraycopy(buffer,    offset,    b,    0,    len);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
57	[BUG]  [BUGGY]  byte[]  b  =  new  byte[length];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  byte[]  b  =  new  byte[length];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	byte[]  b  =  new  byte[length];  System.arraycopy(buffer,  offset,  buffer,  0,  len);	  byte[]    b    =    new    byte[len];    System.arraycopy(buffer,    offset,    b,    0,    len);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
58	[BUG]  [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_NULL_VALUE  ||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_NULL_VALUE  ||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding.isEnabled(Feature.QUOTE_NULL_VALUE  ||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE    ||    encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
59	[BUG]  [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_NULL_VALUE  ||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_NULL_VALUE  ||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_NULL_VALUE  ||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE    ||    encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
60	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_BACK_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_BACK_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_BACK_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE    ||    encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
61	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE    ||    encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
62	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE  &&  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE  &&  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE  &&  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE    ||    encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
63	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE  ||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE  +  1))  {  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE  ||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE  +  1))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE  ||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE  +  1))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE    ||    encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
64	[BUG]  [BUGGY]  if(len  >  0  ||  buffer.charAt(offset  +  len)!=  '0')  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  >  0  ||  buffer.charAt(offset  +  len)!=  '0')  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  0  ||  buffer.charAt(offset  +  len)!=  '0')  {	  if(length    >    0    ||    buffer.charAt(offset    +    len)    >=    '0')    {    	non-compiled	[CE]  <identifier>  expected	85	None	replace
65	[BUG]  [BUGGY]  if(len  >  0  ||  buffer.charAt(offset  +  len)  >=  '0')  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  >  0  ||  buffer.charAt(offset  +  len)  >=  '0')  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  0  ||  buffer.charAt(offset  +  len)  >=  '0')  {	  if(length    >    0    ||    buffer.charAt(offset    +    len)    >=    '0')    {    	non-compiled	[CE]  <identifier>  expected	85	None	replace
66	[BUG]  [BUGGY]  if(len  >  0  ||  buffer.charAt(offset  +  len)  ==  '0')  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  >  0  ||  buffer.charAt(offset  +  len)  ==  '0')  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  0  ||  buffer.charAt(offset  +  len)  ==  '0')  {	  if(length    >    0    ||    buffer.charAt(offset    +    len)    >=    '0')    {    	non-compiled	[CE]  <identifier>  expected	85	None	replace
67	[BUG]  [BUGGY]  if(length  >  0  &&  buffer.charAt(offset  +  len)  >=  '0')  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(length  >  0  &&  buffer.charAt(offset  +  len)  >=  '0')  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0  &&  buffer.charAt(offset  +  len)  >=  '0')  {	  if(length    >    0    ||    buffer.charAt(offset    +    len)    >=    '0')    {    	non-compiled	[CE]  <identifier>  expected	85	None	replace
68	[BUG]  [BUGGY]  if(length  >  0  &&  buffer.charAt(offset  +  len)!=  '0')  {  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(length  >  0  &&  buffer.charAt(offset  +  len)!=  '0')  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0  &&  buffer.charAt(offset  +  len)!=  '0')  {	  if(length    >    0    ||    buffer.charAt(offset    +    len)    >=    '0')    {    	non-compiled	[CE]  <identifier>  expected	85	None	replace
69	[BUG]  [BUGGY]  if(len  <  =  0  ||  buffer.charAt(offset  +  len)  >=  '0')  {  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  <  =  0  ||  buffer.charAt(offset  +  len)  >=  '0')  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  =  0  ||  buffer.charAt(offset  +  len)  >=  '0')  {	  if(length    >    0    ||    buffer.charAt(offset    +    len)    >=    '0')    {    	non-compiled	[CE]  <identifier>  expected	85	None	replace
70	[BUG]  [BUGGY]  if(length  >  0  ||  buffer.charAt(offset  +  len)  ==  '0')  {  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(length  >  0  ||  buffer.charAt(offset  +  len)  ==  '0')  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0  ||  buffer.charAt(offset  +  len)  ==  '0')  {	  if(length    >    0    ||    buffer.charAt(offset    +    len)    >=    '0')    {    	non-compiled	[CE]  <identifier>  expected	85	None	replace
71	[BUG]  [BUGGY]  if(len  <  =  0  &&  buffer[offset  +  len  -  1]  ==  0)  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  <  =  0  &&  buffer[offset  +  len  -  1]  ==  0)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  =  0  &&  buffer[offset  +  len  -  1]  ==  0)  {	  if(len    >    0    &&    buffer[offset    +    len    -    1]    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	38	None	replace
72	[BUG]  [BUGGY]  if(len  >  0  &&  buffer[offset  +  length  -  1]  ==  0)  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  >  0  &&  buffer[offset  +  length  -  1]  ==  0)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  0  &&  buffer[offset  +  length  -  1]  ==  0)  {	  if(len    >    0    &&    buffer[offset    +    len    -    1]    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	38	None	replace
73	[BUG]  [BUGGY]  if(len  <  =  0  ||  buffer[offset  +  length  -  1]  ==  0)  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  <  =  0  ||  buffer[offset  +  length  -  1]  ==  0)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  =  0  ||  buffer[offset  +  length  -  1]  ==  0)  {	  if(len    >    0    ||    buffer[offset    +    length    -    1]    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
74	[BUG]  [BUGGY]  if(len  ==  0  ||  buffer[offset  +  length  -  1]  ==  0)  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  ==  0  ||  buffer[offset  +  length  -  1]  ==  0)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  ==  0  ||  buffer[offset  +  length  -  1]  ==  0)  {	  if(len    >    0    ||    buffer[offset    +    length    -    1]    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
75	[BUG]  [BUGGY]  if(len  >=  0  ||  buffer[offset  +  length  -  1]  ==  0)  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  >=  0  ||  buffer[offset  +  length  -  1]  ==  0)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >=  0  ||  buffer[offset  +  length  -  1]  ==  0)  {	  if(len    >    0    ||    buffer[offset    +    length    -    1]    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
76	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_MASK))  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_MASK))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_MASK))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING    ||    encoding.isEnabled(Feature.QUOTE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
77	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  &&  encoding.isEnabled(Feature.QUOTE_ENCODING))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  &&  encoding.isEnabled(Feature.QUOTE_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  &&  encoding.isEnabled(Feature.QUOTE_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING    ||    encoding.isEnabled(Feature.QUOTE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
78	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_SCRIPT))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_SCRIPT))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_SCRIPT))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING    ||    encoding.isEnabled(Feature.QUOTE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
79	[BUG]  [BUGGY]  if(encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_ENCODING))  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING    ||    encoding.isEnabled(Feature.QUOTE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
80	[BUG]  [BUGGY]  if(encoding!=  null  ||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  ||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  ||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(encoding!=    null    &&    encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	97	None	replace
81	[BUG]  [BUGGY]  if(encoding  ==  null  &&  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding  ==  null  &&  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  null  &&  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(encoding!=    null    &&    encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	97	None	replace
82	[BUG]  [BUGGY]  if(encoding  ==  null  ||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding  ==  null  ||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  null  ||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(encoding!=    null    &&    encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	97	None	replace
83	[BUG]  [BUGGY]  if(encoding!=  null  &&  encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&  encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&  encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(encoding!=    null    &&    encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	97	None	replace
84	[BUG]  [BUGGY]  if(encoding  ==  null  &&!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding  ==  null  &&!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  null  &&!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(encoding!=    null    &&    encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	97	None	replace
85	[BUG]  [BUGGY]  if(encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  true))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  true))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  true))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,    false))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
86	[BUG]  [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  false))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  false))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  false))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,    false))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
87	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  true)||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  true))  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  true)||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  true))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  true)||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  true))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,    false))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
88	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  true)||!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  true)||!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  true)||!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,    false))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
89	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  true)||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  false))  {  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  true)||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  false))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  true)||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  false))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,    false))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
90	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  true)||!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  true))  {  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  true)||!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  true))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  true)||!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  true))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,    false))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
91	[BUG]  [BUGGY]  if(encoding  ==  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding  ==  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(encoding!=    null    &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
92	[BUG]  [BUGGY]  if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(encoding!=    null    &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
93	[BUG]  [BUGGY]  if(encoding  ==  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding  ==  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(encoding!=    null    &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
94	[BUG]  [BUGGY]  if(encoding!=  null  &&!encoding.equals(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&!encoding.equals(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&!encoding.equals(Feature.QUOTE_FIELD_NAMES))  {	  if(encoding!=    null    &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
95	[BUG]  [BUGGY]  if(len!=  0  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len!=  0  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len!=  0  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(encoding!=    null    &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
96	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	81	None	replace
97	[BUG]  [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	81	None	replace
98	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)||  encoding.isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)||  encoding.isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)||  encoding.isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	81	None	replace
99	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.DEFAULT_ENCODING))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.DEFAULT_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.DEFAULT_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	81	None	replace
100	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES,  false))  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES,  false))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES,  false))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	81	None	replace
101	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.DEFAULT_ENCODING_FALLBACK_ENCODING))  {  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.DEFAULT_ENCODING_FALLBACK_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.DEFAULT_ENCODING_FALLBACK_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	81	None	replace
102	[BUG]  [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_MASK))  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_MASK))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_MASK))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_MASK))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
103	[BUG]  [BUGGY]  if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_MASK))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_MASK))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_MASK))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_MASK))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
104	[BUG]  [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_MASK))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_MASK))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_MASK))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_MASK))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
105	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_MASK))  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_MASK))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_MASK))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_MASK))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
106	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_MASK  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_MASK  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_MASK  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_MASK))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
107	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_SIZE))  {  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_SIZE))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_SIZE))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_MASK))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
108	[BUG]  [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
109	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
110	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME,  false))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
111	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME  ||  encoding.isEnabled(Feature.QUOTE_MASK))  {  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME  ||  encoding.isEnabled(Feature.QUOTE_MASK))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME  ||  encoding.isEnabled(Feature.QUOTE_MASK))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
112	[BUG]  [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAME)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAME)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding.isEnabled(Feature.QUOTE_FIELD_NAME)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
113	[BUG]  [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAME)||!encoding.isEnabled(Feature.QUOTE_MASK))  {  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAME)||!encoding.isEnabled(Feature.QUOTE_MASK))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding.isEnabled(Feature.QUOTE_FIELD_NAME)||!encoding.isEnabled(Feature.QUOTE_MASK))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
114	[BUG]  [BUGGY]  int  len  =  encoding.decode(buffer,  offset  +  length);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  int  len  =  encoding.decode(buffer,  offset  +  length);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	int  len  =  encoding.decode(buffer,  offset  +  length);	  int    len    =    encoding.decode(buffer,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
115	[BUG]  [BUGGY]  int  len  =  encoding.decode(buffer,  offset  +  1);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  int  len  =  encoding.decode(buffer,  offset  +  1);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	int  len  =  encoding.decode(buffer,  offset  +  1);	  int    len    =    encoding.decode(buffer,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
116	[BUG]  [BUGGY]  int  len  =  encoding.decode(buffer,  offset  +  1,  len);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  int  len  =  encoding.decode(buffer,  offset  +  1,  len);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	int  len  =  encoding.decode(buffer,  offset  +  1,  len);	  int    len    =    encoding.decode(buffer,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
117	[BUG]  [BUGGY]  byte  len  =  encoding.decode(buffer,  offset  +  len);  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  byte  len  =  encoding.decode(buffer,  offset  +  len);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	byte  len  =  encoding.decode(buffer,  offset  +  len);	  int    len    =    encoding.decode(buffer,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
118	[BUG]  [BUGGY]  int  len  =  encoding.decode(buffer,  offset,  len);  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  int  len  =  encoding.decode(buffer,  offset,  len);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	int  len  =  encoding.decode(buffer,  offset,  len);	  int    len    =    encoding.decode(buffer,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
119	[BUG]  [BUGGY]  int  len  =  encoding.decode(buffer,  offset  +  2);  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  int  len  =  encoding.decode(buffer,  offset  +  2);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	int  len  =  encoding.decode(buffer,  offset  +  2);	  int    len    =    encoding.decode(buffer,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
120	[BUG]  [BUGGY]  char  len  =  encoding.decode(buffer,  offset  +  len);  [CE]  <identifier>  expected  [FE]                                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  char  len  =  encoding.decode(buffer,  offset  +  len);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	char  len  =  encoding.decode(buffer,  offset  +  len);	  int    len    =    encoding.decode(buffer,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
121	[BUG]  [BUGGY]  if(encoding  ==  null  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]            ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding  ==  null  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  null  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(encoding    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
122	[BUG]  [BUGGY]  if(encoding  ==  FALLBACK_ENCODING)  {  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding  ==  FALLBACK_ENCODING)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  FALLBACK_ENCODING)  {	  if(encoding    ==    DEFAULT_ENCODING)    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
123	[BUG]  [BUGGY]  if(encoding!=  FALLBACK_ENCODING)  {  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  FALLBACK_ENCODING)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  FALLBACK_ENCODING)  {	  if(encoding    ==    DEFAULT_ENCODING)    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
124	[BUG]  [BUGGY]  if(encoding  ==  FALLBACK_ENCODING  ||  encoding  ==  DEFAULT_ENCODING)  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding  ==  FALLBACK_ENCODING  ||  encoding  ==  DEFAULT_ENCODING)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  FALLBACK_ENCODING  ||  encoding  ==  DEFAULT_ENCODING)  {	  if(encoding    ==    DEFAULT_ENCODING)    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
125	[BUG]  [BUGGY]  if(len  >  0  &&  buffer[offset  +  length  -  1]!=  0)  {  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  >  0  &&  buffer[offset  +  length  -  1]!=  0)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  0  &&  buffer[offset  +  length  -  1]!=  0)  {	  if(len    >    0    ||    buffer[offset    +    length    -    1]!=    0)    {    	non-compiled	[CE]  <identifier>  expected	82	None	replace
126	[BUG]  [BUGGY]  if(len  <  =  0  ||  buffer[offset  +  length  -  1]!=  0)  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  <  =  0  ||  buffer[offset  +  length  -  1]!=  0)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  =  0  ||  buffer[offset  +  length  -  1]!=  0)  {	  if(len    >    0    ||    buffer[offset    +    length    -    1]!=    0)    {    	non-compiled	[CE]  <identifier>  expected	82	None	replace
127	[BUG]  [BUGGY]  if(len  >=  0  ||  buffer[offset  +  length  -  1]!=  0)  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  >=  0  ||  buffer[offset  +  length  -  1]!=  0)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >=  0  ||  buffer[offset  +  length  -  1]!=  0)  {	  if(len    >    0    ||    buffer[offset    +    length    -    1]!=    0)    {    	non-compiled	[CE]  <identifier>  expected	82	None	replace
128	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  &&  encoding.isEnabled(Feature.DEFAULT_ENCODING))  {  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  &&  encoding.isEnabled(Feature.DEFAULT_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  &&  encoding.isEnabled(Feature.DEFAULT_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING    ||    encoding.isEnabled(Feature.DEFAULT_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
129	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.DEFAULT_FRACTIONAL_ENCODING))  {  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.DEFAULT_FRACTIONAL_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.DEFAULT_FRACTIONAL_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING    ||    encoding.isEnabled(Feature.DEFAULT_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
130	[BUG]  [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.DEFAULT_ENCODING))  {  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.DEFAULT_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.DEFAULT_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING    ||    encoding.isEnabled(Feature.DEFAULT_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
131	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.DEFAULT_FALLBACK_ENCODING))  {  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.DEFAULT_FALLBACK_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.DEFAULT_FALLBACK_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING    ||    encoding.isEnabled(Feature.DEFAULT_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
132	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.DEFAULT_CLOSE_ENCODING))  {  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.DEFAULT_CLOSE_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.DEFAULT_CLOSE_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING    ||    encoding.isEnabled(Feature.DEFAULT_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
133	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.DEFAULT_SCRIPT_ENCODING))  {  [CE]  <identifier>  expected  [FE]                                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.DEFAULT_SCRIPT_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.DEFAULT_SCRIPT_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING    ||    encoding.isEnabled(Feature.DEFAULT_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
134	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  offset))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  offset))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  offset))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,    len))    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
135	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  offset  +  len))  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  offset  +  len))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  offset  +  len))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,    len))    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
136	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  len  +  1))  {  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  len  +  1))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  len  +  1))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,    len))    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
137	[BUG]  [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  len))  {  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  len))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  len))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,    len))    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
138	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  0,  len))  {  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  0,  len))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  0,  len))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,    len))    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
139	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  len)||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  len)||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  len)||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,    len))    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
140	[BUG]  [BUGGY]  if(len  <  =  1)  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  <  =  1)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  =  1)  {	  if(len    ==    1)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
141	[BUG]  [BUGGY]  if(len  <  1)  {  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  <  1)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  1)  {	  if(len    ==    1)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
142	[BUG]  [BUGGY]  if(len  >  1)  {  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  >  1)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  1)  {	  if(len    ==    1)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
143	[BUG]  [BUGGY]  if(length  ==  1)  {  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(length  ==  1)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  ==  1)  {	  if(len    ==    1)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
144	[BUG]  [BUGGY]  if(offset  <  =  0  ||  len  <  =  offset  +  len)  {  [CE]  <identifier>  expected  [FE]            ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(offset  <  =  0  ||  len  <  =  offset  +  len)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(offset  <  =  0  ||  len  <  =  offset  +  len)  {	  if(len    <    =    0    ||    offset    +    len)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
145	[BUG]  [BUGGY]  if(len  <  =  0  ||  offset  +  length)  {  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  <  =  0  ||  offset  +  length)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  =  0  ||  offset  +  length)  {	  if(len    <    =    0    ||    offset    +    len)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
146	[BUG]  [BUGGY]  if(len  <  =  0  ||  offset  >  len)  {  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  <  =  0  ||  offset  >  len)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  =  0  ||  offset  >  len)  {	  if(len    <    =    0    ||    offset    +    len)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
147	[BUG]  [BUGGY]  if(len  <  =  0  ||  buffer.length  +  len)  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  <  =  0  ||  buffer.length  +  len)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  =  0  ||  buffer.length  +  len)  {	  if(len    <    =    0    ||    offset    +    len)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
148	[BUG]  [BUGGY]  if(len  <  =  0  ||  len  <  offset  +  len)  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  <  =  0  ||  len  <  offset  +  len)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  =  0  ||  len  <  offset  +  len)  {	  if(len    <    =    0    ||    offset    +    len)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
149	[BUG]  [BUGGY]  if(offset  <  =  0  ||  offset  +  len)  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(offset  <  =  0  ||  offset  +  len)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(offset  <  =  0  ||  offset  +  len)  {	  if(len    <    =    0    ||    offset    +    len)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
150	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FALLBACK_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FALLBACK_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FALLBACK_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FALLBACK_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
151	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FALLBACK_ENCODING))  {  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FALLBACK_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FALLBACK_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FALLBACK_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
152	[BUG]  [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FALLBACK_ENCODING))  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FALLBACK_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FALLBACK_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FALLBACK_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
153	[BUG]  [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FALLBACK_ENCODING))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FALLBACK_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FALLBACK_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FALLBACK_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
154	[BUG]  [BUGGY]  if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FALLBACK_ENCODING))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FALLBACK_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FALLBACK_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FALLBACK_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
155	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,    true))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
156	[BUG]  [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,    true))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
157	[BUG]  [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,    true))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
158	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,    true))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
159	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false)&&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false)&&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false)&&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,    true))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
160	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  bytes,  0,  len);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  System.arraycopy(buffer,  offset,  bytes,  0,  len);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	System.arraycopy(buffer,  offset,  bytes,  0,  len);	  System.arraycopy(buffer,    offset,    buffer,    0,    len);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
161	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  len  +  1);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  len  +  1);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  len  +  1);	  System.arraycopy(buffer,    offset,    buffer,    0,    len);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
162	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  len  -  1);  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  len  -  1);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  len  -  1);	  System.arraycopy(buffer,    offset,    buffer,    0,    len);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
163	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length);	  System.arraycopy(buffer,    offset,    buffer,    0,    len);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
164	[BUG]  [BUGGY]  if(encoding  ==  null  &&!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding  ==  null  &&!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  null  &&!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {	  if(encoding!=    null    &&!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
165	[BUG]  [BUGGY]  if(encoding!=  null  ||!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  ||!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  ||!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {	  if(encoding!=    null    &&!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
166	[BUG]  [BUGGY]  if(encoding  ==  null  ||!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding  ==  null  ||!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  null  ||!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {	  if(encoding!=    null    &&!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
167	[BUG]  [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.DEFAULT_ENCODING))  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.DEFAULT_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&!encoding.isEnabled(Feature.DEFAULT_ENCODING))  {	  if(encoding!=    null    &&!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
168	[BUG]  [BUGGY]  if(encoding!=  null  &&!encoding.equals(Feature.AUTO_CLOSE_ENCODING))  {  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&!encoding.equals(Feature.AUTO_CLOSE_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&!encoding.equals(Feature.AUTO_CLOSE_ENCODING))  {	  if(encoding!=    null    &&!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
169	[BUG]  [BUGGY]  if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(encoding!=    null    &&!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
170	[BUG]  [BUGGY]  if(encoding  ==  null  ||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding  ==  null  ||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  null  ||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(encoding!=    null    &&!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
171	[BUG]  [BUGGY]  if(encoding!=  null  &&!encoding.equals(Feature.QUOTE_NULL_VALUE))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&!encoding.equals(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&!encoding.equals(Feature.QUOTE_NULL_VALUE))  {	  if(encoding!=    null    &&!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
172	[BUG]  [BUGGY]  if(len  ==  offset)  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  ==  offset)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  ==  offset)  {	  if(offset    ==    len)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
173	[BUG]  [BUGGY]  if(length  ==  len)  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(length  ==  len)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  ==  len)  {	  if(offset    ==    len)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
174	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  length  -  1))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  length  -  1))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  length  -  1))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,    length))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
175	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  length  +  1))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  length  +  1))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  length  +  1))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,    length))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
176	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  offset  +  length))  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  offset  +  length))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  offset  +  length))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,    length))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
177	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  length)||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  length)||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  length)||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,    length))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
178	[BUG]  [BUGGY]  encoding.decode(buffer,  offset  +  len);  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  encoding.decode(buffer,  offset  +  len);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	encoding.decode(buffer,  offset  +  len);	  System.arraycopy(buffer,    offset,    buffer,    0,    len);    encoding.decode(buffer,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
179	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  len);  encoding.decode(buffer,  offset  +  length);  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  len);  encoding.decode(buffer,  offset  +  length);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  len);  encoding.decode(buffer,  offset  +  length);	  System.arraycopy(buffer,    offset,    buffer,    0,    len);    encoding.decode(buffer,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
180	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  encoding,  0,  len);  buffer.decode(buffer,  offset  +  length);  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  System.arraycopy(buffer,  offset,  encoding,  0,  len);  buffer.decode(buffer,  offset  +  length);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	System.arraycopy(buffer,  offset,  encoding,  0,  len);  buffer.decode(buffer,  offset  +  length);	  System.arraycopy(buffer,    offset,    buffer,    0,    len);    encoding.decode(buffer,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
181	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  len);  encoding.decode(buffer,  offset  +  1);  [CE]  <identifier>  expected  [FE]                                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  len);  encoding.decode(buffer,  offset  +  1);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  len);  encoding.decode(buffer,  offset  +  1);	  System.arraycopy(buffer,    offset,    buffer,    0,    len);    encoding.decode(buffer,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
182	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,    false))    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
183	[BUG]  [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,    false))    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
184	[BUG]  [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,    false))    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
185	[BUG]  [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,    false))    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
186	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,    false))    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
187	[BUG]  [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,    false))    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
188	[BUG]  [BUGGY]  if(len  >  0  ||  buffer.charAt(offset  +  len)!=  '-')  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  >  0  ||  buffer.charAt(offset  +  len)!=  '-')  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  0  ||  buffer.charAt(offset  +  len)!=  '-')  {	  if(length    >    0    ||    buffer.charAt(offset    +    len)!=    '-')    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
189	[BUG]  [BUGGY]  if(length  >  0  &&  buffer.charAt(offset  +  len)!=  '-')  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(length  >  0  &&  buffer.charAt(offset  +  len)!=  '-')  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0  &&  buffer.charAt(offset  +  len)!=  '-')  {	  if(length    >    0    ||    buffer.charAt(offset    +    len)!=    '-')    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
190	[BUG]  [BUGGY]  if(len  <  =  0  ||  buffer.charAt(offset  +  len)!=  '-')  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  <  =  0  ||  buffer.charAt(offset  +  len)!=  '-')  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  =  0  ||  buffer.charAt(offset  +  len)!=  '-')  {	  if(length    >    0    ||    buffer.charAt(offset    +    len)!=    '-')    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
191	[BUG]  [BUGGY]  if(len  >  0  ||  buffer.charAt(offset  +  len)  ==  '-')  {  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  >  0  ||  buffer.charAt(offset  +  len)  ==  '-')  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  0  ||  buffer.charAt(offset  +  len)  ==  '-')  {	  if(length    >    0    ||    buffer.charAt(offset    +    len)!=    '-')    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
192	[BUG]  [BUGGY]  if(offset  >  0  ||  buffer.charAt(offset  +  len)!=  '-')  {  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(offset  >  0  ||  buffer.charAt(offset  +  len)!=  '-')  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(offset  >  0  ||  buffer.charAt(offset  +  len)!=  '-')  {	  if(length    >    0    ||    buffer.charAt(offset    +    len)!=    '-')    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
193	[BUG]  [BUGGY]  if(length  >  0  ||  buffer.charAt(offset  +  len  -  1)!=  '-')  {  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(length  >  0  ||  buffer.charAt(offset  +  len  -  1)!=  '-')  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0  ||  buffer.charAt(offset  +  len  -  1)!=  '-')  {	  if(length    >    0    ||    buffer.charAt(offset    +    len)!=    '-')    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
194	[BUG]  [BUGGY]  if(len  <  =  0  ||  len  <  buffer.length)  {  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  <  =  0  ||  len  <  buffer.length)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  =  0  ||  len  <  buffer.length)  {	  if(len    <    =    0    ||    len    >    buffer.length)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
195	[BUG]  [BUGGY]  if(len  <  =  0  ||  len  >=  buffer.length)  {  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  <  =  0  ||  len  >=  buffer.length)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  =  0  ||  len  >=  buffer.length)  {	  if(len    <    =    0    ||    len    >    buffer.length)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
196	[BUG]  [BUGGY]  if(len  <  =  0  ||  len  ==  buffer.length)  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  <  =  0  ||  len  ==  buffer.length)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  =  0  ||  len  ==  buffer.length)  {	  if(len    <    =    0    ||    len    >    buffer.length)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
197	[BUG]  [BUGGY]  if(len  <  =  0  ||  len  <  length)  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  <  =  0  ||  len  <  length)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  =  0  ||  len  <  length)  {	  if(len    <    =    0    ||    len    >    buffer.length)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
198	[BUG]  [BUGGY]  if(offset  <  =  0  ||  len  >  buffer.length)  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(offset  <  =  0  ||  len  >  buffer.length)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(offset  <  =  0  ||  len  >  buffer.length)  {	  if(len    <    =    0    ||    len    >    buffer.length)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
199	[BUG]  [BUGGY]  if(len  <  =  0  ||  len!=  buffer.length)  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  <  =  0  ||  len!=  buffer.length)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  =  0  ||  len!=  buffer.length)  {	  if(len    <    =    0    ||    len    >    buffer.length)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
200	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
201	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING,  false))  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING,  false))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING,  false))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
202	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING,  true))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING,  true))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING,  true))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
203	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_MASK))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_MASK))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_MASK))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
204	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
205	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FIELD_FALLBACK_ENCODING))  {  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FIELD_FALLBACK_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FIELD_FALLBACK_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
206	[BUG]  [BUGGY]  if(encoding  ==  null  &&  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding  ==  null  &&  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  null  &&  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(encoding    ==    null    ||    encoding.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
207	[BUG]  [BUGGY]  if(encoding!=  null  &&  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(encoding    ==    null    ||    encoding.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
208	[BUG]  [BUGGY]  if(encoding  ==  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding  ==  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(encoding    ==    null    ||    encoding.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
209	[BUG]  [BUGGY]  if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(encoding    ==    null    ||    encoding.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
210	[BUG]  [BUGGY]  if(encoding  ==  null  ||  encoding.equals(Feature.QUOTE_FIELD_NAME))  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding  ==  null  ||  encoding.equals(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  null  ||  encoding.equals(Feature.QUOTE_FIELD_NAME))  {	  if(encoding    ==    null    ||    encoding.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
211	[BUG]  [BUGGY]  if(len  <  0  ||  buffer[offset  +  len  -  1]!=  0)  {  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  <  0  ||  buffer[offset  +  len  -  1]!=  0)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  0  ||  buffer[offset  +  len  -  1]!=  0)  {	  if(len    <    =    0    ||    buffer[offset    +    len    -    1]!=    0)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
212	[BUG]  [BUGGY]  if(len  <  =  0  &&  buffer[offset  +  len  -  1]!=  0)  {  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  <  =  0  &&  buffer[offset  +  len  -  1]!=  0)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  =  0  &&  buffer[offset  +  len  -  1]!=  0)  {	  if(len    <    =    0    ||    buffer[offset    +    len    -    1]!=    0)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
213	[BUG]  [BUGGY]  if(length  <  =  0  ||  buffer[offset  +  len  -  1]!=  0)  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(length  <  =  0  ||  buffer[offset  +  len  -  1]!=  0)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  <  =  0  ||  buffer[offset  +  len  -  1]!=  0)  {	  if(len    <    =    0    ||    buffer[offset    +    len    -    1]!=    0)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
214	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.DEFAULT_ENCODING  ||  encoding.isEnabled(Feature.DEFAULT_ENCODING))  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.DEFAULT_ENCODING  ||  encoding.isEnabled(Feature.DEFAULT_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.DEFAULT_ENCODING  ||  encoding.isEnabled(Feature.DEFAULT_ENCODING))  {	  if(!encoding.isEnabled(Feature.DEFAULT_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
215	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.DEFAULT_ENCODING,  false))  {  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.DEFAULT_ENCODING,  false))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.DEFAULT_ENCODING,  false))  {	  if(!encoding.isEnabled(Feature.DEFAULT_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
216	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.DEFAULT_ENCODING,  true))  {  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.DEFAULT_ENCODING,  true))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.DEFAULT_ENCODING,  true))  {	  if(!encoding.isEnabled(Feature.DEFAULT_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
217	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_DEFAULT_ENCODING))  {  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_DEFAULT_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_DEFAULT_ENCODING))  {	  if(!encoding.isEnabled(Feature.DEFAULT_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
218	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.DEFAULT_ENCODING  ||  encoding.isEnabled(Feature.DEFAULT_FALLBACK_ENCODING))  {  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.DEFAULT_ENCODING  ||  encoding.isEnabled(Feature.DEFAULT_FALLBACK_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.DEFAULT_ENCODING  ||  encoding.isEnabled(Feature.DEFAULT_FALLBACK_ENCODING))  {	  if(!encoding.isEnabled(Feature.DEFAULT_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
219	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.DEFAULT_ENCODING  ||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.DEFAULT_ENCODING  ||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.DEFAULT_ENCODING  ||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING    ||    encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
220	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_DEFAULT_ENCODING  ||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_DEFAULT_ENCODING  ||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_DEFAULT_ENCODING  ||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING    ||    encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
221	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  &&  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  &&  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  &&  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING    ||    encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
222	[BUG]  [BUGGY]  if(encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING    ||    encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
223	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_COMMA  ||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_COMMA  ||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_COMMA  ||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING    ||    encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
224	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[length];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  byte[]  buffer  =  new  byte[length];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	byte[]  buffer  =  new  byte[length];  System.arraycopy(buffer,  offset,  buffer,  0,  len);	  byte[]    buffer    =    new    byte[len];    System.arraycopy(buffer,    offset,    buffer,    0,    len);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
225	[BUG]  [BUGGY]  if(length  >  0)  {  byte[]  buffer  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(length  >  0)  {  byte[]  buffer  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0)  {  byte[]  buffer  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }	  byte[]    buffer    =    new    byte[len];    System.arraycopy(buffer,    offset,    buffer,    0,    len);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
226	[BUG]  [BUGGY]  if(length  >  0)  {  byte[]  buffer  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  else  {  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(length  >  0)  {  byte[]  buffer  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  else  {  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0)  {  byte[]  buffer  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  else  {  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }	  byte[]    buffer    =    new    byte[len];    System.arraycopy(buffer,    offset,    buffer,    0,    len);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
227	[BUG]  [BUGGY]  if(len  >  0)  {  byte[]  buffer  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  >  0)  {  byte[]  buffer  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  0)  {  byte[]  buffer  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }	  byte[]    buffer    =    new    byte[len];    System.arraycopy(buffer,    offset,    buffer,    0,    len);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
228	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  byte[]  buffer  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  length);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	byte[]  buffer  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  length);	  byte[]    buffer    =    new    byte[len];    System.arraycopy(buffer,    offset,    buffer,    0,    len);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
229	[BUG]  [BUGGY]  if(length  >  0)  {  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(length  >  0)  {  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0)  {  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }	  byte[]    b    =    new    byte[len];    System.arraycopy(buffer,    offset,    buffer,    0,    len);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
230	[BUG]  [BUGGY]  if(len  >  0)  {  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  >  0)  {  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  0)  {  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }	  byte[]    b    =    new    byte[len];    System.arraycopy(buffer,    offset,    buffer,    0,    len);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
231	[BUG]  [BUGGY]  byte[]  b  =  new  byte[len  +  1];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  byte[]  b  =  new  byte[len  +  1];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	byte[]  b  =  new  byte[len  +  1];  System.arraycopy(buffer,  offset,  buffer,  0,  len);	  byte[]    b    =    new    byte[len];    System.arraycopy(buffer,    offset,    buffer,    0,    len);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
232	[BUG]  [BUGGY]  byte[]  b  =  new  byte[length];  System.arraycopy(buffer,  offset,  len,  0,  len);  [CE]  <identifier>  expected  [FE]                                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  byte[]  b  =  new  byte[length];  System.arraycopy(buffer,  offset,  len,  0,  len);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	byte[]  b  =  new  byte[length];  System.arraycopy(buffer,  offset,  len,  0,  len);	  byte[]    b    =    new    byte[len];    System.arraycopy(buffer,    offset,    buffer,    0,    len);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
233	[BUG]  [BUGGY]  byte[]  b  =  new  byte[length];  System.arraycopy(buffer,  offset,  0,  b,  0,  len);  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  byte[]  b  =  new  byte[length];  System.arraycopy(buffer,  offset,  0,  b,  0,  len);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	byte[]  b  =  new  byte[length];  System.arraycopy(buffer,  offset,  0,  b,  0,  len);	  byte[]    b    =    new    byte[len];    System.arraycopy(buffer,    offset,    0,    b,    0,    len);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
234	[BUG]  [BUGGY]  if(length  >  0)  {  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  0,  b,  0,  len);  }  [CE]  <identifier>  expected  [FE]                                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(length  >  0)  {  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  0,  b,  0,  len);  }  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0)  {  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  0,  b,  0,  len);  }	  byte[]    b    =    new    byte[len];    System.arraycopy(buffer,    offset,    0,    b,    0,    len);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
235	[BUG]  [BUGGY]  byte[]  b  =  new  byte[len  +  1];  System.arraycopy(buffer,  offset,  0,  b,  0,  len);  [CE]  <identifier>  expected  [FE]                                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  byte[]  b  =  new  byte[len  +  1];  System.arraycopy(buffer,  offset,  0,  b,  0,  len);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	byte[]  b  =  new  byte[len  +  1];  System.arraycopy(buffer,  offset,  0,  b,  0,  len);	  byte[]    b    =    new    byte[len];    System.arraycopy(buffer,    offset,    0,    b,    0,    len);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
236	[BUG]  [BUGGY]  if(len  >  0)  {  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  0,  b,  0,  len);  }  [CE]  <identifier>  expected  [FE]                                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  >  0)  {  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  0,  b,  0,  len);  }  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  0)  {  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  0,  b,  0,  len);  }	  byte[]    b    =    new    byte[len];    System.arraycopy(buffer,    offset,    0,    b,    0,    len);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
237	[BUG]  [BUGGY]  byte[]  b  =  new  byte[len  -  1];  System.arraycopy(buffer,  offset,  0,  b,  0,  len);  [CE]  <identifier>  expected  [FE]                                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  byte[]  b  =  new  byte[len  -  1];  System.arraycopy(buffer,  offset,  0,  b,  0,  len);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	byte[]  b  =  new  byte[len  -  1];  System.arraycopy(buffer,  offset,  0,  b,  0,  len);	  byte[]    b    =    new    byte[len];    System.arraycopy(buffer,    offset,    0,    b,    0,    len);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
238	[BUG]  [BUGGY]  final  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  0,  b,  0,  len);  [CE]  <identifier>  expected  [FE]                                            ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  final  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  0,  b,  0,  len);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	final  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  0,  b,  0,  len);	  byte[]    b    =    new    byte[len];    System.arraycopy(buffer,    offset,    0,    b,    0,    len);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
239	[BUG]  [BUGGY]  if(len  >  0  &&  buffer[offset  +  len  -  1]!=  encoding.getEnd())  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  >  0  &&  buffer[offset  +  len  -  1]!=  encoding.getEnd())  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  0  &&  buffer[offset  +  len  -  1]!=  encoding.getEnd())  {	  if(length    >    0    &&    buffer[offset    +    len    -    1]!=    encoding.getEnd())    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
240	[BUG]  [BUGGY]  if(length  >  0  &&  buffer[offset  +  len  -  1]!=  encoding.getStart())  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(length  >  0  &&  buffer[offset  +  len  -  1]!=  encoding.getStart())  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0  &&  buffer[offset  +  len  -  1]!=  encoding.getStart())  {	  if(length    >    0    &&    buffer[offset    +    len    -    1]!=    encoding.getEnd())    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
241	[BUG]  [BUGGY]  if(len  >  0  &&  buffer[offset  +  len  -  1]!=  encoding.getStart())  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  >  0  &&  buffer[offset  +  len  -  1]!=  encoding.getStart())  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  0  &&  buffer[offset  +  len  -  1]!=  encoding.getStart())  {	  if(length    >    0    &&    buffer[offset    +    len    -    1]!=    encoding.getEnd())    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
242	[BUG]  [BUGGY]  if(length  >  0  ||  buffer[offset  +  len  -  1]!=  encoding.getEnd())  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(length  >  0  ||  buffer[offset  +  len  -  1]!=  encoding.getEnd())  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0  ||  buffer[offset  +  len  -  1]!=  encoding.getEnd())  {	  if(length    >    0    &&    buffer[offset    +    len    -    1]!=    encoding.getEnd())    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
243	[BUG]  [BUGGY]  if(length  >  0  &&  buffer[offset  +  len  -  1]  ==  encoding.getEnd())  {  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(length  >  0  &&  buffer[offset  +  len  -  1]  ==  encoding.getEnd())  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0  &&  buffer[offset  +  len  -  1]  ==  encoding.getEnd())  {	  if(length    >    0    &&    buffer[offset    +    len    -    1]!=    encoding.getEnd())    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
244	[BUG]  [BUGGY]  if(length  >  0  &&  buffer[offset  +  len  -  1]  ==  encoding.getStart())  {  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(length  >  0  &&  buffer[offset  +  len  -  1]  ==  encoding.getStart())  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0  &&  buffer[offset  +  len  -  1]  ==  encoding.getStart())  {	  if(length    >    0    &&    buffer[offset    +    len    -    1]!=    encoding.getEnd())    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
245	[BUG]  [BUGGY]  if(encoding!=  null  ||  buffer.length  >  0)  {  [CE]  <identifier>  expected  [FE]            ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  ||  buffer.length  >  0)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  ||  buffer.length  >  0)  {	  if(encoding!=    null    &&    buffer.length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
246	[BUG]  [BUGGY]  if(encoding  ==  null  ||  buffer.length  >  0)  {  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding  ==  null  ||  buffer.length  >  0)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  null  ||  buffer.length  >  0)  {	  if(encoding!=    null    &&    buffer.length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
247	[BUG]  [BUGGY]  if(encoding  ==  null  &&  buffer.length  >  0)  {  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding  ==  null  &&  buffer.length  >  0)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  null  &&  buffer.length  >  0)  {	  if(encoding!=    null    &&    buffer.length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
248	[BUG]  [BUGGY]  if(buffer!=  null  &&  buffer.length  >  0)  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(buffer!=  null  &&  buffer.length  >  0)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(buffer!=  null  &&  buffer.length  >  0)  {	  if(encoding!=    null    &&    buffer.length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
249	[BUG]  [BUGGY]  if(encoding!=  null  &&  buffer.length  <  =  0)  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&  buffer.length  <  =  0)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&  buffer.length  <  =  0)  {	  if(encoding!=    null    &&    buffer.length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
250	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length  >  0)  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(buffer!=  null  ||  buffer.length  >  0)  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(buffer!=  null  ||  buffer.length  >  0)  {	  if(encoding!=    null    &&    buffer.length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
251	[BUG]  [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_FALLBACK_ENCODING))  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_FALLBACK_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_FALLBACK_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FIELD_FALLBACK_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
252	[BUG]  [BUGGY]  if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_FALLBACK_ENCODING))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_FALLBACK_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_FALLBACK_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FIELD_FALLBACK_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
253	[BUG]  [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_FALLBACK_ENCODING))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_FALLBACK_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_FALLBACK_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FIELD_FALLBACK_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
254	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME  ||  encoding.isEnabled(Feature.QUOTE_FIELD_FALLBACK_ENCODING))  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME  ||  encoding.isEnabled(Feature.QUOTE_FIELD_FALLBACK_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME  ||  encoding.isEnabled(Feature.QUOTE_FIELD_FALLBACK_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FIELD_FALLBACK_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
255	[BUG]  [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FIELD_FALLBACK_ENCODING))  {  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FIELD_FALLBACK_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FIELD_FALLBACK_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FIELD_FALLBACK_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
256	[BUG]  [BUGGY]  if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
257	[BUG]  [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
258	[BUG]  [BUGGY]  if(encoding  ==  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding  ==  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  null  ||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
259	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
260	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false)))  {  [CE]  <identifier>  expected  [FE]                                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false)))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false)))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
261	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES    ||    encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
262	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE)&&!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE)&&!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE)&&!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
263	[BUG]  [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  <identifier>  expected  [FE]                            ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
264	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_BACK_ENCODING)||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  <identifier>  expected  [FE]                              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_BACK_ENCODING)||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_BACK_ENCODING)||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
265	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  b,  0,  len  +  1);  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  System.arraycopy(buffer,  offset,  b,  0,  len  +  1);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	System.arraycopy(buffer,  offset,  b,  0,  len  +  1);	  System.arraycopy(buffer,    offset,    b,    0,    len);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
266	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  b,  0,  length);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  System.arraycopy(buffer,  offset,  b,  0,  length);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	System.arraycopy(buffer,  offset,  b,  0,  length);	  System.arraycopy(buffer,    offset,    b,    0,    len);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
267	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  byte,  0,  len);  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  System.arraycopy(buffer,  offset,  byte,  0,  len);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	System.arraycopy(buffer,  offset,  byte,  0,  len);	  System.arraycopy(buffer,    offset,    b,    0,    len);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
268	[BUG]  [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_NULL_VALUE)&&!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_NULL_VALUE)&&!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding.isEnabled(Feature.QUOTE_NULL_VALUE)&&!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
269	[BUG]  [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_BACK_ENCODING)||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  <identifier>  expected  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_BACK_ENCODING)||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding.isEnabled(Feature.QUOTE_BACK_ENCODING)||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
270	[BUG]  [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_ENCODING))  {  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
271	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_ENCODING,  false))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_ENCODING,  false))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_ENCODING,  false))  {	  if(!encoding.isEnabled(Feature.QUOTE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
272	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
273	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_ENCODING,  true))  {  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_ENCODING,  true))  {  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_ENCODING,  true))  {	  if(!encoding.isEnabled(Feature.QUOTE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
274	[BUG]  [BUGGY]  if(len  >  0  &&  buffer[offset  +  len  -  1)  {  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  [CE]  <identifier>  expected  [FE]              ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  >  0  &&  buffer[offset  +  len  -  1)  {  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  0  &&  buffer[offset  +  len  -  1)  {  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }	  if(length    >    0    &&    buffer[offset    +    len    -    1)    ==    System.arraycopy(buffer,    offset,    buffer,    0,    len);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
275	[BUG]  [BUGGY]  if(length  >  0  &&  buffer[offset  +  len  -  1)  {  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  [CE]  <identifier>  expected  [FE]                ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(length  >  0  &&  buffer[offset  +  len  -  1)  {  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0  &&  buffer[offset  +  len  -  1)  {  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }	  if(length    >    0    &&    buffer[offset    +    len    -    1)    ==    System.arraycopy(buffer,    offset,    buffer,    0,    len);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
276	[BUG]  [BUGGY]  if(len  >  0  &&  buffer[offset  +  len  -  1)  ==  System.arraycopy(buffer,  offset,  buffer,  0,  len);  [CE]  <identifier>  expected  [FE]                  ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  >  0  &&  buffer[offset  +  len  -  1)  ==  System.arraycopy(buffer,  offset,  buffer,  0,  len);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  0  &&  buffer[offset  +  len  -  1)  ==  System.arraycopy(buffer,  offset,  buffer,  0,  len);	  if(length    >    0    &&    buffer[offset    +    len    -    1)    ==    System.arraycopy(buffer,    offset,    buffer,    0,    len);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
277	[BUG]  [BUGGY]  if(length  >  0  ||  buffer[offset  +  len  -  1)  ==  System.arraycopy(buffer,  offset,  buffer,  0,  len);  [CE]  <identifier>  expected  [FE]                    ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(length  >  0  ||  buffer[offset  +  len  -  1)  ==  System.arraycopy(buffer,  offset,  buffer,  0,  len);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0  ||  buffer[offset  +  len  -  1)  ==  System.arraycopy(buffer,  offset,  buffer,  0,  len);	  if(length    >    0    &&    buffer[offset    +    len    -    1)    ==    System.arraycopy(buffer,    offset,    buffer,    0,    len);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
278	[BUG]  [BUGGY]  if(len  >  0  &&  buffer[offset  +  len  -  1)  {  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  else  {  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  [CE]  <identifier>  expected  [FE]                      ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  >  0  &&  buffer[offset  +  len  -  1)  {  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  else  {  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  0  &&  buffer[offset  +  len  -  1)  {  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  else  {  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }	  if(length    >    0    &&    buffer[offset    +    len    -    1)    ==    System.arraycopy(buffer,    offset,    buffer,    0,    len);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
279	[BUG]  [BUGGY]  if(len  >  0  &&  buffer[offset  +  len  -  1)  {  System.arraycopy(buffer,  offset,  buffer,  0,  len);  [CE]  <identifier>  expected  [FE]                        ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(len  >  0  &&  buffer[offset  +  len  -  1)  {  System.arraycopy(buffer,  offset,  buffer,  0,  len);  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  0  &&  buffer[offset  +  len  -  1)  {  System.arraycopy(buffer,  offset,  buffer,  0,  len);	  if(length    >    0    &&    buffer[offset    +    len    -    1)    ==    System.arraycopy(buffer,    offset,    buffer,    0,    len);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
280	[BUG]  [BUGGY]  if(length  >  0  &&  buffer[offset  +  len  -  1)  {  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  else  {  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  [timeout]  [FE]                          ArchiveException      [CONTEXT]      final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }      [BUGGY]  if(length  >  0  &&  buffer[offset  +  len  -  1)  {  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  else  {  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  [BUGGY]      byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return       "     ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0  &&  buffer[offset  +  len  -  1)  {  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }  else  {  System.arraycopy(buffer,  offset,  buffer,  0,  len);  }	  if(length    >    0    &&    buffer[offset    +    len    -    1)    ==    System.arraycopy(buffer,    offset,    buffer,    0,    len);    	non-compiled	[timeout]	53	None	replace
