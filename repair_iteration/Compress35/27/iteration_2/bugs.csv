bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]          ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
2	[BUG]  [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]            ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
3	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_MASK))  {  [CE]  <identifier>  expected  [FE]              ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_MASK))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_MASK))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
4	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [CE]  <identifier>  expected  [FE]                ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
5	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  <identifier>  expected  [FE]                  ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
6	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
7	[BUG]  [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding.isEnabled(Feature.QUOTE_FIELD_NAMES)||!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
8	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [CE]  <identifier>  expected  [FE]            ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
9	[BUG]  [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [CE]  <identifier>  expected  [FE]              ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
10	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  false))  {  [CE]  <identifier>  expected  [FE]                ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  false))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  false))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
11	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  true))  {  [CE]  <identifier>  expected  [FE]                  ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  true))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  true))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
12	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.DEFAULT_ENCODING))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.DEFAULT_ENCODING))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.DEFAULT_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
13	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.DEFAULT_ENCODING))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.DEFAULT_ENCODING))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.DEFAULT_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
14	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.AUTO_CLOSE_FALLBACK_ENCODING))  {  [CE]  <identifier>  expected  [FE]                        ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.AUTO_CLOSE_FALLBACK_ENCODING))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.AUTO_CLOSE_FALLBACK_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
15	[BUG]  [BUGGY]  if(offset  ==  len)  {  [CE]  <identifier>  expected  [FE]                ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(offset  ==  len)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(offset  ==  len)  {	  if(len    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
16	[BUG]  [BUGGY]  if(length  ==  0)  {  [CE]  <identifier>  expected  [FE]                  ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(length  ==  0)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  ==  0)  {	  if(len    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
17	[BUG]  [BUGGY]  if(len  ==  1)  {  [CE]  <identifier>  expected  [FE]                    ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(len  ==  1)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  ==  1)  {	  if(len    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
18	[BUG]  [BUGGY]  if(len  <  =  0  ||  length  >  buffer[offset  +  len  -  1])  {  [CE]  <identifier>  expected  [FE]        ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(len  <  =  0  ||  length  >  buffer[offset  +  len  -  1])  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  =  0  ||  length  >  buffer[offset  +  len  -  1])  {	  if(len    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
19	[BUG]  [BUGGY]  if(len  <  =  0  ||  buffer[offset  +  len  -  1]!=  0)  {  [CE]  <identifier>  expected  [FE]          ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(len  <  =  0  ||  buffer[offset  +  len  -  1]!=  0)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  =  0  ||  buffer[offset  +  len  -  1]!=  0)  {	  if(len    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
20	[BUG]  [BUGGY]  if(len  <  =  0  ||  buffer[offset  +  len  -  1]  ==  0)  {  [CE]  <identifier>  expected  [FE]            ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(len  <  =  0  ||  buffer[offset  +  len  -  1]  ==  0)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  =  0  ||  buffer[offset  +  len  -  1]  ==  0)  {	  if(len    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
21	[BUG]  [BUGGY]  if(length  >  0  ||  buffer[offset  +  len  -  1]!=  0)  {  [CE]  <identifier>  expected  [FE]          ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(length  >  0  ||  buffer[offset  +  len  -  1]!=  0)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0  ||  buffer[offset  +  len  -  1]!=  0)  {	  if(length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
22	[BUG]  [BUGGY]  if(length  >  0  ||  buffer[offset  +  len  -  1]  ==  0)  {  [CE]  <identifier>  expected  [FE]            ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(length  >  0  ||  buffer[offset  +  len  -  1]  ==  0)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0  ||  buffer[offset  +  len  -  1]  ==  0)  {	  if(length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
23	[BUG]  [BUGGY]  if(length  <  =  0)  {  [CE]  <identifier>  expected  [FE]              ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(length  <  =  0)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  <  =  0)  {	  if(length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
24	[BUG]  [BUGGY]  if(encoding  ==  null)  {  [CE]  <identifier>  expected  [FE]        ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(encoding  ==  null)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  null)  {	  if(encoding!=    null)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
25	[BUG]  [BUGGY]  if(encoding!=  null  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  <identifier>  expected  [FE]          ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(encoding!=  null  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(encoding!=    null)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
26	[BUG]  [BUGGY]  if(encoding  ==  null  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  <identifier>  expected  [FE]            ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(encoding  ==  null  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  null  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(encoding!=    null)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
27	[BUG]  [BUGGY]  if(encoding!=  null  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]              ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(encoding!=  null  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(encoding!=    null)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
28	[BUG]  [BUGGY]  if(encoding!=  null  ||  encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]                ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(encoding!=  null  ||  encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  ||  encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(encoding!=    null)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
29	[BUG]  [BUGGY]  if(encoding!=  null  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [CE]  <identifier>  expected  [FE]                  ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(encoding!=  null  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {	  if(encoding!=    null)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
30	[BUG]  [BUGGY]  if(len  >  0  &&  buffer[offset  +  len  -  1]!=  0)  {  [CE]  <identifier>  expected  [FE]            ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(len  >  0  &&  buffer[offset  +  len  -  1]!=  0)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  0  &&  buffer[offset  +  len  -  1]!=  0)  {	  if(len    >    0    ||    buffer[offset    +    len    -    1]!=    0)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
31	[BUG]  [BUGGY]  if(len  >=  0  ||  buffer[offset  +  len  -  1]!=  0)  {  [CE]  <identifier>  expected  [FE]              ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(len  >=  0  ||  buffer[offset  +  len  -  1]!=  0)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >=  0  ||  buffer[offset  +  len  -  1]!=  0)  {	  if(len    >    0    ||    buffer[offset    +    len    -    1]!=    0)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
32	[BUG]  [BUGGY]  if(len  ==  0  ||  buffer[offset  +  len  -  1]!=  0)  {  [CE]  <identifier>  expected  [FE]                ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(len  ==  0  ||  buffer[offset  +  len  -  1]!=  0)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  ==  0  ||  buffer[offset  +  len  -  1]!=  0)  {	  if(len    >    0    ||    buffer[offset    +    len    -    1]!=    0)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
33	[BUG]  [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  <identifier>  expected  [FE]              ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
34	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  length))  {  [CE]  <identifier>  expected  [FE]                ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  length))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  length))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
35	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  len))  {  [CE]  <identifier>  expected  [FE]                  ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  len))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE,  len))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
36	[BUG]  [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
37	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  <identifier>  expected  [FE]                      ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
38	[BUG]  [BUGGY]  if(len  >  0  &&  buffer[offset  +  len  -  1]  ==  0)  {  [CE]  <identifier>  expected  [FE]              ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(len  >  0  &&  buffer[offset  +  len  -  1]  ==  0)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  0  &&  buffer[offset  +  len  -  1]  ==  0)  {	  if(len    >    0    ||    buffer[offset    +    len    -    1]    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
39	[BUG]  [BUGGY]  if(len  >  0  ||  buffer[offset  +  length  -  1]  ==  0)  {  [CE]  <identifier>  expected  [FE]                ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(len  >  0  ||  buffer[offset  +  length  -  1]  ==  0)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  0  ||  buffer[offset  +  length  -  1]  ==  0)  {	  if(len    >    0    ||    buffer[offset    +    len    -    1]    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
40	[BUG]  [BUGGY]  if(len  ==  0  ||  buffer[offset  +  len  -  1]  ==  0)  {  [CE]  <identifier>  expected  [FE]                  ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(len  ==  0  ||  buffer[offset  +  len  -  1]  ==  0)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  ==  0  ||  buffer[offset  +  len  -  1]  ==  0)  {	  if(len    >    0    ||    buffer[offset    +    len    -    1]    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
41	[BUG]  [BUGGY]  if(offset  >=  len)  {  [CE]  <identifier>  expected  [FE]        ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(offset  >=  len)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(offset  >=  len)  {	  if(len    >=    0)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
42	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  b,  0,  len);  [CE]  <identifier>  expected  [FE]                  ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  System.arraycopy(buffer,  offset,  b,  0,  len);  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	System.arraycopy(buffer,  offset,  b,  0,  len);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
43	[BUG]  [BUGGY]  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  [CE]  <identifier>  expected  [FE]                    ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
44	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  len);  [CE]  <identifier>  expected  [FE]                      ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  len);  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  len);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
45	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  [CE]  <identifier>  expected  [FE]                        ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  byte[]  buffer  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	byte[]  buffer  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  len);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
46	[BUG]  [BUGGY]  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  [CE]  <identifier>  expected  [FE]                          ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  len);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
47	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  encoding,  0,  len);  [CE]  <identifier>  expected  [FE]                            ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  System.arraycopy(buffer,  offset,  encoding,  0,  len);  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	System.arraycopy(buffer,  offset,  encoding,  0,  len);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
48	[BUG]  [BUGGY]  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  0,  b,  0,  len);  [CE]  <identifier>  expected  [FE]                              ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  0,  b,  0,  len);  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  0,  b,  0,  len);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
49	[BUG]  [BUGGY]  if(length  >  0  &&  buffer[offset  +  len  -  1]!=  0)  {  [CE]  <identifier>  expected  [FE]            ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(length  >  0  &&  buffer[offset  +  len  -  1]!=  0)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0  &&  buffer[offset  +  len  -  1]!=  0)  {	  if(len    >    0    ||    buffer[offset    +    len    -    1]!=    0)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
50	[BUG]  [BUGGY]  if(len  <  0)  {  [CE]  <identifier>  expected  [FE]        ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(len  <  0)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  0)  {	  if(len    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
51	[BUG]  [BUGGY]  if(len  <  =  0  ||  len  >  buffer.length)  {  [CE]  <identifier>  expected  [FE]          ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(len  <  =  0  ||  len  >  buffer.length)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  =  0  ||  len  >  buffer.length)  {	  if(len    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
52	[BUG]  [BUGGY]  if(len  <  =  0  ||  offset  >  length)  {  [CE]  <identifier>  expected  [FE]            ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(len  <  =  0  ||  offset  >  length)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  =  0  ||  offset  >  length)  {	  if(len    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
53	[BUG]  [BUGGY]  if(length  >  0  &&  buffer[offset  +  len  -  1)  ==  System.arraycopy(buffer,  offset,  buffer,  0,  len);  [CE]  <identifier>  expected  [FE]          ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(length  >  0  &&  buffer[offset  +  len  -  1)  ==  System.arraycopy(buffer,  offset,  buffer,  0,  len);  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0  &&  buffer[offset  +  len  -  1)  ==  System.arraycopy(buffer,  offset,  buffer,  0,  len);	  if(length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
54	[BUG]  [BUGGY]  if(length  >  0  &&  offset  <  =  len)  {  [CE]  <identifier>  expected  [FE]            ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(length  >  0  &&  offset  <  =  len)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0  &&  offset  <  =  len)  {	  if(length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
55	[BUG]  [BUGGY]  if(length  >  0  &&  buffer[offset  +  len  -  1]!=  encoding.getEnd())  {  [CE]  <identifier>  expected  [FE]              ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(length  >  0  &&  buffer[offset  +  len  -  1]!=  encoding.getEnd())  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0  &&  buffer[offset  +  len  -  1]!=  encoding.getEnd())  {	  if(length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
56	[BUG]  [BUGGY]  if(length  >  0  ||  buffer.charAt(offset  +  len)!=  '-')  {  [CE]  <identifier>  expected  [FE]                ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(length  >  0  ||  buffer.charAt(offset  +  len)!=  '-')  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0  ||  buffer.charAt(offset  +  len)!=  '-')  {	  if(length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
57	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_ENCODING))  {  [CE]  <identifier>  expected  [FE]              ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_ENCODING))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
58	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_BACK_ENCODING))  {  [CE]  <identifier>  expected  [FE]                ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_BACK_ENCODING))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_BACK_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
59	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  <identifier>  expected  [FE]                  ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
60	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [CE]  <identifier>  expected  [FE]            ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
61	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [CE]  <identifier>  expected  [FE]              ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
62	[BUG]  [BUGGY]  if(len  >=  0  ||  buffer[offset  +  len  -  1]  ==  0)  {  [CE]  <identifier>  expected  [FE]              ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(len  >=  0  ||  buffer[offset  +  len  -  1]  ==  0)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >=  0  ||  buffer[offset  +  len  -  1]  ==  0)  {	  if(len    >    0    ||    buffer[offset    +    len    -    1]    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
63	[BUG]  [BUGGY]  if(length  >  0  &&  buffer[offset  +  len  -  1]  ==  0)  {  [CE]  <identifier>  expected  [FE]                ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(length  >  0  &&  buffer[offset  +  len  -  1]  ==  0)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0  &&  buffer[offset  +  len  -  1]  ==  0)  {	  if(len    >    0    ||    buffer[offset    +    len    -    1]    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
64	[BUG]  [BUGGY]  if(encoding!=  DEFAULT_ENCODING)  {  [CE]  <identifier>  expected  [FE]        ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(encoding!=  DEFAULT_ENCODING)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  DEFAULT_ENCODING)  {	  if(encoding!=    null)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
65	[BUG]  [BUGGY]  if(encoding  ==  DEFAULT_ENCODING)  {  [CE]  <identifier>  expected  [FE]          ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(encoding  ==  DEFAULT_ENCODING)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding  ==  DEFAULT_ENCODING)  {	  if(encoding!=    null)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
66	[BUG]  [BUGGY]  if(offset  ==  0)  {  [CE]  <identifier>  expected  [FE]                ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(offset  ==  0)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(offset  ==  0)  {	  if(len    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
67	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [CE]  <identifier>  expected  [FE]          ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
68	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  <identifier>  expected  [FE]            ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
69	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_FALLBACK_ENCODING))  {  [CE]  <identifier>  expected  [FE]              ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_FALLBACK_ENCODING))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FIELD_FALLBACK_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
70	[BUG]  [BUGGY]  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  [CE]  <identifier>  expected  [FE]                  ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
71	[BUG]  [BUGGY]  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  return  encoding.decode(b);  [CE]  <identifier>  expected  [FE]                    ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  return  encoding.decode(b);  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  buffer,  0,  len);  return  encoding.decode(b);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
72	[BUG]  [BUGGY]  if(length  >=  0)  {  [CE]  <identifier>  expected  [FE]        ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(length  >=  0)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >=  0)  {	  if(len    >=    0)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
73	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE  ||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  <identifier>  expected  [FE]              ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE  ||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE  ||  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
74	[BUG]  [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||!encoding.isEnabled(Feature.QUOTE_BACK_ENCODING))  {  [CE]  <identifier>  expected  [FE]                ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||!encoding.isEnabled(Feature.QUOTE_BACK_ENCODING))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||!encoding.isEnabled(Feature.QUOTE_BACK_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
75	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||!encoding.isEnabled(Feature.QUOTE_BACK_ENCODING))  {  [CE]  <identifier>  expected  [FE]                  ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||!encoding.isEnabled(Feature.QUOTE_BACK_ENCODING))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||!encoding.isEnabled(Feature.QUOTE_BACK_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
76	[BUG]  [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||!encoding.isEnabled(Feature.DEFAULT_ENCODING))  {  [CE]  <identifier>  expected  [FE]                    ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||!encoding.isEnabled(Feature.DEFAULT_ENCODING))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding.isEnabled(Feature.QUOTE_NULL_VALUE)||!encoding.isEnabled(Feature.DEFAULT_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_NULL_VALUE))    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
77	[BUG]  [BUGGY]  if(len  <  =  0  ||  offset  +  len)  {  [CE]  <identifier>  expected  [FE]        ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(len  <  =  0  ||  offset  +  len)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  =  0  ||  offset  +  len)  {	  if(len    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
78	[BUG]  [BUGGY]  if(len  <  =  0  ||  offset  +  len  >  buffer.length)  {  [CE]  <identifier>  expected  [FE]          ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(len  <  =  0  ||  offset  +  len  >  buffer.length)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  <  =  0  ||  offset  +  len  >  buffer.length)  {	  if(len    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
79	[BUG]  [BUGGY]  if(len!=  0)  {  [CE]  <identifier>  expected  [FE]                ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(len!=  0)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len!=  0)  {	  if(len    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
80	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FALLBACK_ENCODING))  {  [CE]  <identifier>  expected  [FE]          ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FALLBACK_ENCODING))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.QUOTE_FALLBACK_ENCODING))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
81	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]            ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES  ||  encoding.isEnabled(Feature.AUTO_QUOTE_FIELD_NAMES))  {	  if(!encoding.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
82	[BUG]  [BUGGY]  if(len  >  0  ||  buffer[offset  +  length  -  1]!=  0)  {  [CE]  <identifier>  expected  [FE]            ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(len  >  0  ||  buffer[offset  +  length  -  1]!=  0)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(len  >  0  ||  buffer[offset  +  length  -  1]!=  0)  {	  if(len    >    0    ||    buffer[offset    +    len    -    1]!=    0)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
83	[BUG]  [BUGGY]  if(length  >  0  ||  buffer.length  <  =  len)  {  [CE]  <identifier>  expected  [FE]          ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(length  >  0  ||  buffer.length  <  =  len)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0  ||  buffer.length  <  =  len)  {	  if(length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
84	[BUG]  [BUGGY]  if(length  >  0  ||  buffer.charAt(offset  +  len)>  buffer.length)  {  [CE]  <identifier>  expected  [FE]            ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(length  >  0  ||  buffer.charAt(offset  +  len)>  buffer.length)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0  ||  buffer.charAt(offset  +  len)>  buffer.length)  {	  if(length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
85	[BUG]  [BUGGY]  if(length  >  0  ||  buffer.charAt(offset  +  len)  >=  '0')  {  [CE]  <identifier>  expected  [FE]              ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(length  >  0  ||  buffer.charAt(offset  +  len)  >=  '0')  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(length  >  0  ||  buffer.charAt(offset  +  len)  >=  '0')  {	  if(length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
86	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  DEFAULT_ENCODING))  {  [CE]  <identifier>  expected  [FE]            ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  DEFAULT_ENCODING))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING,  DEFAULT_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
87	[BUG]  [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_ENCODING))  {  [CE]  <identifier>  expected  [FE]              ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_ENCODING))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING  ||  encoding.isEnabled(Feature.QUOTE_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
88	[BUG]  [BUGGY]  if(encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING)||!encoding.isEnabled(Feature.QUOTE_ENCODING))  {  [CE]  <identifier>  expected  [FE]                ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING)||!encoding.isEnabled(Feature.QUOTE_ENCODING))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING)||!encoding.isEnabled(Feature.QUOTE_ENCODING))  {	  if(!encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
89	[BUG]  [BUGGY]  int  len  =  encoding.getLength();  [CE]  <identifier>  expected  [FE]                  ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  int  len  =  encoding.getLength();  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	int  len  =  encoding.getLength();	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
90	[BUG]  [BUGGY]  int  len  =  encoding.decode(buffer,  offset  +  len);  [CE]  <identifier>  expected  [FE]                    ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  int  len  =  encoding.decode(buffer,  offset  +  len);  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	int  len  =  encoding.decode(buffer,  offset  +  len);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
91	[BUG]  [BUGGY]  int  len  =  buffer.length();  [CE]  <identifier>  expected  [FE]                      ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  int  len  =  buffer.length();  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	int  len  =  buffer.length();	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
92	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  len);  return  encoding.decode(buffer,  offset  +  len);  [CE]  <identifier>  expected  [FE]                        ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  len);  return  encoding.decode(buffer,  offset  +  len);  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  len);  return  encoding.decode(buffer,  offset  +  len);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
93	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  len);  encoding.decode(buffer,  offset  +  len);  [CE]  <identifier>  expected  [FE]                          ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  len);  encoding.decode(buffer,  offset  +  len);  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  len);  encoding.decode(buffer,  offset  +  len);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
94	[BUG]  [BUGGY]  if(encoding!=  null  &&  buffer.length  >  0)  {  [CE]  <identifier>  expected  [FE]        ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(encoding!=  null  &&  buffer.length  >  0)  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&  buffer.length  >  0)  {	  if(encoding!=    null)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
95	[BUG]  [BUGGY]  if(encoding!=  null  &&  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [CE]  <identifier>  expected  [FE]          ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(encoding!=  null  &&  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&  encoding.isEnabled(Feature.AUTO_CLOSE_ENCODING))  {	  if(encoding!=    null)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
96	[BUG]  [BUGGY]  if(encoding!=  null  &&  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [CE]  <identifier>  expected  [FE]            ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(encoding!=  null  &&  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&  encoding.isEnabled(Feature.QUOTE_FIELD_ENCODING))  {	  if(encoding!=    null)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
97	[BUG]  [BUGGY]  if(encoding!=  null  &&  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [CE]  <identifier>  expected  [FE]              ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(encoding!=  null  &&  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&  encoding.isEnabled(Feature.QUOTE_NULL_VALUE))  {	  if(encoding!=    null)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
98	[BUG]  [BUGGY]  if(encoding!=  null  &&  encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]                ArchiveException    [CONTEXT]    final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  for  (;  len  >  0;  len--)  {  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }    [BUGGY]  if(encoding!=  null  &&  encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]    byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return     "   ";  }  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress35/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	296	296	1	replace	if(encoding!=  null  &&  encoding.isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(encoding!=    null)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
