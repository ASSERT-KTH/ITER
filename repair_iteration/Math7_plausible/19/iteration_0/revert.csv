projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java332
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java332finalEventState[]eventsInitialized=getEventsInitialized();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java332EventState[]eventsInitialized=state.getEventsInitialized();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java332finalEventState[]eventsInitialized=getEventsInitialized(events);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java332finalIterator<EventState>iterator=occuringEvents.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java332finalIterator<EventState>iterator=events.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java332finalEventState[]remaining=eventsStates.toArray(newEventState[occuringEvents.size()]);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java332finalEventState<EventState>remaining=eventsStates.get(ignoredSign);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java332finalEventState<EventState>remaining=eventsStates.get(0);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java332finalIterator<EventState>iterator=eventsStates.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java332finalEventState<EventState>remaining=state.evaluateStep(interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java332finalEventState<EventState>eventState=eventsStates.get(0);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java332finalEventState<EventState>eventState=eventsStates.get(name);
