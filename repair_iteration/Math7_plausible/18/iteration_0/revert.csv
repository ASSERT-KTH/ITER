projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java327}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java327if(isLastStep){for(inti=0;i<eventsStates.size();i++){occuringEvents.add(i,state);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java327if(isLastStep){for(inti=0;i<eventsStates.size();i++){occuringEvents.add(i);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java327
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java327if(!isLastStep){for(inti=0;i<eventsInitialized.length;i++){if(!ignoredEvents[i]){continue;}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java327if(!isLastStep){for(inti=0;i<eventsInitialized.length;i++){if(!ignoredEvents[i]){break;}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java327if(!isLastStep){for(inti=0;i<eventsInitialized.length;i++){if(!ignoredEvents[i]){break;}}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java327if(isLastStep){for(finalEventStateremaining:eventsStates){if(remainingEvents.contains(interpolator)){returnremaining*Double.compare(es0.getEventTime(),es1.getEventTime());}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java327if(isLastStep){for(finalEventStateremaining:eventsStates){if(remainingEvents.contains(interpolator)){returnremaining*Double.compare(es0.getEventTime(),es1.getEventTime());}}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java327if(isLastStep){for(finalEventStateremaining:eventsStates){if(remainingEvents.contains(interpolator)){occuringEvents.add(remaining);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java327if(isLastStep){for(finalEventStateremaining:eventsStates){if(remainingEvents.contains(interpolator)){eventT=remaining.getEventTime();}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java327if(isLastStep){for(inti=0;i<orderingSign.size();i++){EventStateremaining=state.evaluateStep(interpolator);if(remainingEvents.get(i)!=eventT){continue
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java327if(isLastStep){for(inti=0;i<orderingSign.size();i++){EventStateremaining=state.evaluateStep(interpolator);if(remainingEvents.contains(es1)){continue
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java327if(isLastStep){for(inti=0;i<orderingSign.size();i++){EventStateremaining=state.evaluateStep(remainingEvents[i]);if(remaining
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java327intstepStart=es0.getStep();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java327intstepStart=es1.getStep();
