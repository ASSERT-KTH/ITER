bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	add	                currentEvent.stepAccepted(eventT,        y);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);	  	compilable	  [FE]  AssertionError  	19	1	add
2	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        y);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);	  	compilable	  [FE]  AssertionError  	19	1	add
3	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepSizeAccepted(eventT,  y);  currentEvent.stepSizeAccepted(eventT,  y);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepSizeAccepted(eventT,  y);  currentEvent.stepSizeAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        y);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepSizeAccepted(eventT,  y);  currentEvent.stepSizeAccepted(eventT,  y);	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
4	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepStartAccepted(eventT,  y);  currentEvent.stepStartAccepted(eventT,  y);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepStartAccepted(eventT,  y);  currentEvent.stepStartAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        y);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepStartAccepted(eventT,  y);  currentEvent.stepStartAccepted(eventT,  y);	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  yDot);  currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  yDot);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	add	                currentEvent.stepAccepted(eventT,        yDot);        currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  yDot);	  	compilable	  [FE]  AssertionError  	5	1	add
6	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  yDot);  currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  yDot);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  yDot);  currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  yDot);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        yDot);        currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  yDot);	  	compilable	  [FE]  AssertionError  	5	1	add
7	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  yDot);  currentEvent.stepSizeAccepted(eventT,  y);  currentEvent.stepSizeAccepted(eventT,  yDot);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  yDot);  currentEvent.stepSizeAccepted(eventT,  y);  currentEvent.stepSizeAccepted(eventT,  yDot);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        yDot);        currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepSizeAccepted(eventT,  y);  currentEvent.stepSizeAccepted(eventT,  yDot);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
8	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  yDot);  currentEvent.stepSizeAccepted(eventT,  yDot);  currentEvent.stepSizeAccepted(eventT,  yDot);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  yDot);  currentEvent.stepSizeAccepted(eventT,  yDot);  currentEvent.stepSizeAccepted(eventT,  yDot);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        yDot);        currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepSizeAccepted(eventT,  yDot);  currentEvent.stepSizeAccepted(eventT,  yDot);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
9	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventY,  eventT,  tEnd);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]        NoBracketingException      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepAccepted(eventY,  eventT,  tEnd);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.stepAccepted(eventY,  eventT,  tEnd);	  currentEvent.stepAccepted(eventY,    eventT);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	12	None	replace
10	[BUG]  [BUGGY]  isLastStep  =  currentEvent.getIsLastStep()  -  1;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  isLastStep  =  currentEvent.getIsLastStep()  -  1;  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	isLastStep  =  currentEvent.getIsLastStep()  -  1;	  isLastStep    =    currentEvent.getIsLastStep();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	add	                currentEvent.stepAccepted(eventT,        eventY);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);	  	compilable	  [FE]  AssertionError  	3	1	add
12	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        eventY);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);	  	compilable	  [FE]  AssertionError  	3	1	add
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	add	                currentEvent.stepAccepted(eventT,        eventY);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepAccepted(eventT,  y);	  	compilable	  [FE]  AssertionError  	3	1	add
14	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepAccepted(eventT,  y);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        eventY);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepAccepted(eventT,  y);	  	compilable	  [FE]  AssertionError  	3	1	add
15	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepSizeAccepted(eventT,  y);  currentEvent.stepSizeAccepted(eventT,  y);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepSizeAccepted(eventT,  y);  currentEvent.stepSizeAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        eventY);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepSizeAccepted(eventT,  y);  currentEvent.stepSizeAccepted(eventT,  y);	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
16	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventT,  yDot);  y  =  interpolator.getInterpolatedState().clone();  [CE]  final  parameter  y  may  not  be  assigned  [FE]        NoBracketingException      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepAccepted(eventT,  yDot);  y  =  interpolator.getInterpolatedState().clone();  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.stepAccepted(eventT,  yDot);  y  =  interpolator.getInterpolatedState().clone();	          currentEvent.stepAccepted(eventT,    y);    y    =    interpolator.getInterpolatedState().clone();    	non-compiled	[CE]  final  parameter  y  may  not  be  assigned	26	None	replace
17	[BUG]  [BUGGY]  yDot  =  currentEvent.getInterpolatedState().clone();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  yDot  =  currentEvent.getInterpolatedState().clone();  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	yDot  =  currentEvent.getInterpolatedState().clone();	  yDot    =    interpolator.getInterpolatedState().clone();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
18	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  yDot);  currentEvent.stepAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	add	                currentEvent.stepAccepted(eventT,        yDot);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  yDot);  currentEvent.stepAccepted(eventT,  y);	  	compilable	  [FE]  AssertionError  	7	1	add
19	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  yDot);  currentEvent.stepAccepted(eventT,  y);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  yDot);  currentEvent.stepAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        yDot);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  yDot);  currentEvent.stepAccepted(eventT,  y);	  	compilable	  [FE]  AssertionError  	7	1	add
20	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	add	                currentEvent.stepAccepted(eventT,        yDot);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);	  	compilable	  [FE]  AssertionError  	7	1	add
21	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        yDot);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);	  	compilable	  [FE]  AssertionError  	7	1	add
22	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepSizeAccepted(eventT,  yDot);  currentEvent.stepSizeAccepted(eventT,  y);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepSizeAccepted(eventT,  yDot);  currentEvent.stepSizeAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        yDot);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepSizeAccepted(eventT,  yDot);  currentEvent.stepSizeAccepted(eventT,  y);	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepAccepted(eventT,  eventY);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	add	                currentEvent.stepAccepted(eventT,        eventY);        currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepAccepted(eventT,  eventY);	  	compilable	  [FE]  AssertionError  	1	1	add
24	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepAccepted(eventT,  eventY);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepAccepted(eventT,  eventY);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        eventY);        currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepAccepted(eventT,  eventY);	  	compilable	  [FE]  AssertionError  	1	1	add
25	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepSizeAccepted(eventT,  eventY);  currentEvent.stepSizeAccepted(eventT,  eventY);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepSizeAccepted(eventT,  eventY);  currentEvent.stepSizeAccepted(eventT,  eventY);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        eventY);        currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepSizeAccepted(eventT,  eventY);  currentEvent.stepSizeAccepted(eventT,  eventY);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
26	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  eventY);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	add	                currentEvent.stepAccepted(eventT,        eventY);        currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  eventY);	  	compilable	  [FE]  AssertionError  	1	1	add
27	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  eventY);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  eventY);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        eventY);        currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  eventY);	  	compilable	  [FE]  AssertionError  	1	1	add
28	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventY,  interpolator.getReturnState());  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepAccepted(eventY,  interpolator.getReturnState());  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.stepAccepted(eventY,  interpolator.getReturnState());	  final    double[]    stepHandlers    =    interpolator.getReturnState().clone();    currentEvent.stepAccepted(eventY,    stepHandlers);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
29	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventY,  interpolator);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepAccepted(eventY,  interpolator);  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.stepAccepted(eventY,  interpolator);	  final    double[]    stepHandlers    =    interpolator.getReturnState().clone();    currentEvent.stepAccepted(eventY,    stepHandlers);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	11	None	replace
30	[BUG]  [BUGGY]  isLastStep  =  interpolator.stopCurrentStep(currentEvent);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  isLastStep  =  interpolator.stopCurrentStep(currentEvent);  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	isLastStep  =  interpolator.stopCurrentStep(currentEvent);	  isLastStep    =    currentEvent.stopCurrentStep(interpolator);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
31	[BUG]  [BUGGY]  isLastStep  =  currentEvent.stepAccepted(eventY,  eventT,  y);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  isLastStep  =  currentEvent.stepAccepted(eventY,  eventT,  y);  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	isLastStep  =  currentEvent.stepAccepted(eventY,  eventT,  y);	  isLastStep    =    currentEvent.stepAccepted(eventY,    eventT,    eventY);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	15	None	replace
32	[BUG]  [BUGGY]  isLastStep  =  currentEvent.stepAccepted(eventT,  eventY,  eventT);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  isLastStep  =  currentEvent.stepAccepted(eventT,  eventY,  eventT);  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	isLastStep  =  currentEvent.stepAccepted(eventT,  eventY,  eventT);	  isLastStep    =    currentEvent.stepAccepted(eventY,    eventT,    eventY);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	15	None	replace
33	[BUG]  [BUGGY]  isLastStep  =  interpolator.stopCurrentStep(eventY);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  isLastStep  =  interpolator.stopCurrentStep(eventY);  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	isLastStep  =  interpolator.stopCurrentStep(eventY);	  isLastStep    =    interpolator.stopCurrentStep();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
34	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventT,  stepHandlers);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepAccepted(eventT,  stepHandlers);  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.stepAccepted(eventT,  stepHandlers);	  final    double[]    stepHandlers    =    interpolator.getReturnState().clone();    currentEvent.stepAccepted(eventT,    stepHandlers);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	10	None	replace
35	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventT,  interpolator.getReturnState());  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepAccepted(eventT,  interpolator.getReturnState());  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.stepAccepted(eventT,  interpolator.getReturnState());	  final    double[]    stepHandlers    =    interpolator.getReturnState().clone();    currentEvent.stepAccepted(eventT,    stepHandlers);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
36	[BUG]  [BUGGY]  isLastStep  =  currentEvent.stepAccepted(eventY,  y,  tEnd);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  isLastStep  =  currentEvent.stepAccepted(eventY,  y,  tEnd);  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	isLastStep  =  currentEvent.stepAccepted(eventY,  y,  tEnd);	  isLastStep    =    currentEvent.stepAccepted(eventY,    y);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	16	None	replace
37	[BUG]  [BUGGY]  isLastStep  =  currentEvent.stepAccepted(eventY,  yDot,  tEnd);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  isLastStep  =  currentEvent.stepAccepted(eventY,  yDot,  tEnd);  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	isLastStep  =  currentEvent.stepAccepted(eventY,  yDot,  tEnd);	  isLastStep    =    currentEvent.stepAccepted(eventY,    y);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	16	None	replace
38	[BUG]  [BUGGY]  isLastStep  =  currentEvent.stopCurrentStep()  ||  isLastStep;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  isLastStep  =  currentEvent.stopCurrentStep()  ||  isLastStep;  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	isLastStep  =  currentEvent.stopCurrentStep()  ||  isLastStep;	  isLastStep    =    currentEvent.stopCurrentStep()    &&    isLastStep;    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
39	[BUG]  [BUGGY]  yDot  =  currentEvent.stepAccepted(eventT,  eventY);  [CE]  incompatible  types  [FE]        NoBracketingException      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  yDot  =  currentEvent.stepAccepted(eventT,  eventY);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	yDot  =  currentEvent.stepAccepted(eventT,  eventY);	          currentEvent.stepAccepted(eventT,    yDot);    yDot    =    currentEvent.stepAccepted(eventT,    yDot);    	non-compiled	[CE]  incompatible  types	28	None	replace
40	[BUG]  [BUGGY]  yDot  =  currentEvent.stepAccepted(eventT,  yEnd);  [CE]  cannot  find  symbol  yEnd  [FE]          NoBracketingException      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  yDot  =  currentEvent.stepAccepted(eventT,  yEnd);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	yDot  =  currentEvent.stepAccepted(eventT,  yEnd);	          currentEvent.stepAccepted(eventT,    yDot);    yDot    =    currentEvent.stepAccepted(eventT,    yDot);    	non-compiled	[CE]  cannot  find  symbol  yEnd	28	None	replace
41	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventT,  eventY,  tEnd);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]        NoBracketingException      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepAccepted(eventT,  eventY,  tEnd);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.stepAccepted(eventT,  eventY,  tEnd);	  currentEvent.stepAccepted(eventT,    tEnd);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	17	None	replace
42	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventT,  t0,  tEnd);  [CE]  cannot  find  symbol  t0  [FE]          NoBracketingException      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepAccepted(eventT,  t0,  tEnd);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.stepAccepted(eventT,  t0,  tEnd);	  currentEvent.stepAccepted(eventT,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t0	17	None	replace
43	[BUG]  [BUGGY]  final  double[]  stepHandlers  =  interpolator.getInterpolatedState().clone(),  currentEvent.stepAccepted(eventY,  eventY);  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  final  double[]  stepHandlers  =  interpolator.getInterpolatedState().clone(),  currentEvent.stepAccepted(eventY,  eventY);  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	final  double[]  stepHandlers  =  interpolator.getInterpolatedState().clone(),  currentEvent.stepAccepted(eventY,  eventY);	          final    double[]    stepHandlers    =    interpolator.getInterpolatedState().clone();    	non-compiled	[CE]  ';'  expected	27	None	replace
44	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventT,  eventY);  yDot  =  interpolator.getInterpolatedState().clone();  [CE]  final  parameter  yDot  may  not  be  assigned  [FE]        NoBracketingException      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepAccepted(eventT,  eventY);  yDot  =  interpolator.getInterpolatedState().clone();  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.stepAccepted(eventT,  eventY);  yDot  =  interpolator.getInterpolatedState().clone();	          currentEvent.stepAccepted(eventT,    yDot);    yDot    =    interpolator.getInterpolatedState().clone();    	non-compiled	[CE]  final  parameter  yDot  may  not  be  assigned	31	None	replace
45	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventT,  tEnd);  yDot  =  interpolator.getInterpolatedState().clone();  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]          NoBracketingException      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepAccepted(eventT,  tEnd);  yDot  =  interpolator.getInterpolatedState().clone();  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.stepAccepted(eventT,  tEnd);  yDot  =  interpolator.getInterpolatedState().clone();	          currentEvent.stepAccepted(eventT,    yDot);    yDot    =    interpolator.getInterpolatedState().clone();    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	31	None	replace
46	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventT,  yEnd);  [CE]  cannot  find  symbol  yEnd  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepAccepted(eventT,  yEnd);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.stepAccepted(eventT,  yEnd);	          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,    yDot);    	non-compiled	[CE]  cannot  find  symbol  yEnd	6	None	replace
47	[BUG]  [BUGGY]  isLastStep  =  currentEvent.stepAccepted(eventY,  yDot,  eventT,  eventY);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  isLastStep  =  currentEvent.stepAccepted(eventY,  yDot,  eventT,  eventY);  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	isLastStep  =  currentEvent.stepAccepted(eventY,  yDot,  eventT,  eventY);	  isLastStep    =    currentEvent.stepAccepted(eventY,    yDot,    eventY);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	25	None	replace
48	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventT,  interpolator);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepAccepted(eventT,  interpolator);  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.stepAccepted(eventT,  interpolator);	          final    double[]    stepHandlers    =    interpolator.getInterpolatedState().clone();    currentEvent.stepAccepted(eventT,    stepHandlers);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	32	None	replace
49	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  if(eventY!=  null)  {  currentEvent.stepAccepted(eventT,  eventY);  }  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	add	if(eventY!=  null)  {  currentEvent.stepAccepted(eventT,  eventY);  }	          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,    eventY);    	compilable	  [FE]  NoBracketingException  	2	2	replace
50	[BUG]  [BUGGY]  if(eventY!=  null)  {  currentEvent.stepAccepted(eventT,  eventY);  }  [FE]  NoBracketingException  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  if(eventY!=  null)  {  currentEvent.stepAccepted(eventT,  eventY);  }  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	if(eventY!=  null)  {  currentEvent.stepAccepted(eventT,  eventY);  }	          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,    eventY);    	compilable	  [FE]  NoBracketingException  	2	2	replace
51	[BUG]  [BUGGY]  y.stepAccepted(eventT,  eventY);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  y.stepAccepted(eventT,  eventY);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	y.stepAccepted(eventT,  eventY);	          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,    y);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
52	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventT,  y)  [CE]  ';'  expected  [FE]          NoBracketingException      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepAccepted(eventT,  y)  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.stepAccepted(eventT,  y)	          currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,    y)    	non-compiled	[CE]  ';'  expected	21	None	replace
53	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventT,  eventY)  [CE]  ';'  expected  [FE]            NoBracketingException      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepAccepted(eventT,  eventY)  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.stepAccepted(eventT,  eventY)	          currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,    y)    	non-compiled	[CE]  ';'  expected	21	None	replace
54	[BUG]  [BUGGY]  isLastStep  =  currentEvent.isLastStep()  ||  isLastStep;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  isLastStep  =  currentEvent.isLastStep()  ||  isLastStep;  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	isLastStep  =  currentEvent.isLastStep()  ||  isLastStep;	  isLastStep    =    currentEvent.isLastStep()    &&    isLastStep;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
55	[BUG]  [BUGGY]  final  double[]  stepHandlers  =  currentEvent.getReturnState().clone();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  final  double[]  stepHandlers  =  currentEvent.getReturnState().clone();  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	final  double[]  stepHandlers  =  currentEvent.getReturnState().clone();	          final    double[]    stepHandlers    =    interpolator.getReturnState().clone();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
56	[BUG]  [BUGGY]  isLastStep  =  currentEvent.getLastStep()  -  1;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  isLastStep  =  currentEvent.getLastStep()  -  1;  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	isLastStep  =  currentEvent.getLastStep()  -  1;	  isLastStep    =    currentEvent.getLastStep();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
57	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]        AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepAccepted(eventT,  interpolator.getInterpolatedState());  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	add	currentEvent.stepAccepted(eventT,  interpolator.getInterpolatedState());	          final    double[]    stepHandlers    =    interpolator.getInterpolatedState().clone();    currentEvent.stepAccepted(eventT,    stepHandlers);    	compilable	  [FE]  NoBracketingException  	32	2	replace
58	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventT,  interpolator.getInterpolatedState());  [FE]  NoBracketingException  [FE]        AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepAccepted(eventT,  interpolator.getInterpolatedState());  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.stepAccepted(eventT,  interpolator.getInterpolatedState());	          final    double[]    stepHandlers    =    interpolator.getInterpolatedState().clone();    currentEvent.stepAccepted(eventT,    stepHandlers);    	compilable	  [FE]  NoBracketingException  	32	2	replace
59	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  yDot);  currentEvent.stepStartAccepted(eventT,  yDot);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  yDot);  currentEvent.stepStartAccepted(eventT,  yDot);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        yDot);        currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepStartAccepted(eventT,  yDot);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
60	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  yDot);  currentEvent.stepSizeAccepted(eventT,  yDot);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  yDot);  currentEvent.stepSizeAccepted(eventT,  yDot);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        yDot);        currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepSizeAccepted(eventT,  yDot);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
61	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]        AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  yDot);  currentEvent.stepAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	add	                currentEvent.stepAccepted(eventT,        yDot);        currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  y);	  	compilable	  [FE]  NoBracketingException  	5	2	add
62	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  yDot);  currentEvent.stepAccepted(eventT,  y);  [FE]  NoBracketingException  [FE]        AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  yDot);  currentEvent.stepAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        yDot);        currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  y);	  	compilable	  [FE]  NoBracketingException  	5	2	add
63	[BUG]  [BUGGY]  isLastStep  =  interpolator.getLastStep();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  isLastStep  =  interpolator.getLastStep();  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	isLastStep  =  interpolator.getLastStep();	  isLastStep    =    currentEvent.getLastStep();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
64	[BUG]  [BUGGY]  currentEvent.stepSizeAccepted(eventY,  eventT);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepSizeAccepted(eventY,  eventT);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.stepSizeAccepted(eventY,  eventT);	          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,    eventY);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
65	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventT,  eventY);  yDot  =  currentEvent.stepAccepted(eventT,  yDot);  [CE]  incompatible  types  [FE]        NoBracketingException      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepAccepted(eventT,  eventY);  yDot  =  currentEvent.stepAccepted(eventT,  yDot);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.stepAccepted(eventT,  eventY);  yDot  =  currentEvent.stepAccepted(eventT,  yDot);	          currentEvent.stepAccepted(eventT,    yDot);    yDot    =    currentEvent.stepAccepted(eventT,    yDot);    	non-compiled	[CE]  incompatible  types	28	None	replace
66	[BUG]  [BUGGY]  isLastStep  =  interpolator.getIsLastStep();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  isLastStep  =  interpolator.getIsLastStep();  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	isLastStep  =  interpolator.getIsLastStep();	  isLastStep    =    currentEvent.getIsLastStep();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
67	[BUG]  [BUGGY]  isLastStep  =  currentEvent.stepAccepted(eventY,  eventT,  yDot,  eventY);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  isLastStep  =  currentEvent.stepAccepted(eventY,  eventT,  yDot,  eventY);  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	isLastStep  =  currentEvent.stepAccepted(eventY,  eventT,  yDot,  eventY);	  isLastStep    =    currentEvent.stepAccepted(eventY,    eventT,    eventY);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	15	None	replace
68	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventY,  y,  eventT);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]        NoBracketingException      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepAccepted(eventY,  y,  eventT);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.stepAccepted(eventY,  y,  eventT);	  currentEvent.stepAccepted(eventY,    eventT);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	12	None	replace
69	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventY,  y);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepAccepted(eventY,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.stepAccepted(eventY,  y);	          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,    y);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	8	None	replace
70	[BUG]  [BUGGY]  currentEvent.stepSizeAccepted(eventY,  y);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepSizeAccepted(eventY,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.stepSizeAccepted(eventY,  y);	          currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,    y);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
71	[BUG]  [BUGGY]  final  double[]  stepHandlers  =  currentEvent.getReturnState().clone();  currentEvent.stepAccepted(eventT,  stepHandlers);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  final  double[]  stepHandlers  =  currentEvent.getReturnState().clone();  currentEvent.stepAccepted(eventT,  stepHandlers);  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	final  double[]  stepHandlers  =  currentEvent.getReturnState().clone();  currentEvent.stepAccepted(eventT,  stepHandlers);	  final    double[]    stepHandlers    =    interpolator.getReturnState().clone();    currentEvent.stepAccepted(eventT,    stepHandlers);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
72	[BUG]  [BUGGY]  currentEvent.stepSizeAccepted(eventY,  eventY);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepSizeAccepted(eventY,  eventY);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.stepSizeAccepted(eventY,  eventY);	          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,    y);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
73	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventY,  eventT);  y  =  interpolator.getInterpolatedState().clone();  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]        NoBracketingException      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepAccepted(eventY,  eventT);  y  =  interpolator.getInterpolatedState().clone();  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.stepAccepted(eventY,  eventT);  y  =  interpolator.getInterpolatedState().clone();	          currentEvent.stepAccepted(eventT,    y);    y    =    interpolator.getInterpolatedState().clone();    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	26	None	replace
74	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepStartAccepted(eventT,  eventY);  currentEvent.stepStartAccepted(eventT,  eventY);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepStartAccepted(eventT,  eventY);  currentEvent.stepStartAccepted(eventT,  eventY);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        eventY);        currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepStartAccepted(eventT,  eventY);  currentEvent.stepStartAccepted(eventT,  eventY);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
75	[BUG]  [BUGGY]  final  double[]  stepHandlers  =  currentEvent.getInterpolatedState().clone();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  final  double[]  stepHandlers  =  currentEvent.getInterpolatedState().clone();  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	final  double[]  stepHandlers  =  currentEvent.getInterpolatedState().clone();	          final    double[]    stepHandlers    =    interpolator.getInterpolatedState().clone();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
76	[BUG]  [BUGGY]  isLastStep  =  currentEvent.stepAccepted(eventY,  yDot,  tEnd,  eventY);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  isLastStep  =  currentEvent.stepAccepted(eventY,  yDot,  tEnd,  eventY);  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	isLastStep  =  currentEvent.stepAccepted(eventY,  yDot,  tEnd,  eventY);	  isLastStep    =    currentEvent.stepAccepted(eventY,    yDot,    eventY);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	25	None	replace
77	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventY,  stepHandlers);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepAccepted(eventY,  stepHandlers);  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.stepAccepted(eventY,  stepHandlers);	  final    double[]    stepHandlers    =    interpolator.getReturnState().clone();    currentEvent.stepAccepted(eventY,    stepHandlers);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	11	None	replace
78	[BUG]  [BUGGY]  currentEvent.stepStartAccepted(eventT,  y);  [CE]  cannot  find  symbol  [FE]          NoBracketingException      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepStartAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.stepStartAccepted(eventT,  y);	          currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,    y)    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
79	[BUG]  [BUGGY]  currentEvent.reset();  [CE]  method  reset  in  class  EventState  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.reset();  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.reset();	          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,    y);    	non-compiled	[CE]  method  reset  in  class  EventState  cannot  be  applied  to  given  types;	4	None	replace
80	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  yDot);  currentEvent.stepStartAccepted(eventT,  y);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  yDot);  currentEvent.stepStartAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        yDot);        currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepStartAccepted(eventT,  y);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
81	[BUG]  [BUGGY]  isLastStep  =  currentEvent.stepAccepted(eventY,  eventY,  yDot);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  isLastStep  =  currentEvent.stepAccepted(eventY,  eventY,  yDot);  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	isLastStep  =  currentEvent.stepAccepted(eventY,  eventY,  yDot);	  isLastStep    =    currentEvent.stepAccepted(eventY,    yDot,    eventY);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	25	None	replace
82	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  eventY);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	add	                currentEvent.stepAccepted(eventT,        eventY);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  eventY);	  	compilable	  [FE]  NoBracketingException  	3	2	add
83	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  eventY);  [FE]  NoBracketingException  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  eventY);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        eventY);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  eventY);	  	compilable	  [FE]  NoBracketingException  	3	2	add
84	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]      AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	add	                currentEvent.stepAccepted(eventT,        eventY);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);	  	compilable	  [FE]  NoBracketingException  	3	2	add
85	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  [FE]  NoBracketingException  [FE]      AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        eventY);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);	  	compilable	  [FE]  NoBracketingException  	3	2	add
86	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepStartAccepted(eventT,  y);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepStartAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        y);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepStartAccepted(eventT,  y);	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
87	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepSizeAccepted(eventT,  y);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepSizeAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        y);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepSizeAccepted(eventT,  y);	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
88	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]        AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	add	                currentEvent.stepAccepted(eventT,        y);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);	  	compilable	  [FE]  NoBracketingException  	19	2	add
89	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  [FE]  NoBracketingException  [FE]        AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        y);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);	  	compilable	  [FE]  NoBracketingException  	19	2	add
90	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepStartAccepted(eventT,  eventY);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepStartAccepted(eventT,  eventY);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        eventY);        currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepStartAccepted(eventT,  eventY);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
91	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]      AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepAccepted(eventT,  eventY);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	add	                currentEvent.stepAccepted(eventT,        eventY);        currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  eventY);	  	compilable	  [FE]  NoBracketingException  	1	2	add
92	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepAccepted(eventT,  eventY);  [FE]  NoBracketingException  [FE]      AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepAccepted(eventT,  eventY);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        eventY);        currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  eventY);	  	compilable	  [FE]  NoBracketingException  	1	2	add
93	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepSizeAccepted(eventT,  eventY);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepAccepted(eventT,  eventY);  currentEvent.stepSizeAccepted(eventT,  eventY);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        eventY);        currentEvent.stepAccepted(eventT,    eventY);    currentEvent.stepSizeAccepted(eventT,  eventY);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
94	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventY,  eventT,  yDot);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]        NoBracketingException      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepAccepted(eventY,  eventT,  yDot);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.stepAccepted(eventY,  eventT,  yDot);	  currentEvent.stepAccepted(eventY,    eventT);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	12	None	replace
95	[BUG]  [BUGGY]  final  double[]  stepHandlers  =  interpolator.getSteps().clone();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  final  double[]  stepHandlers  =  interpolator.getSteps().clone();  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	final  double[]  stepHandlers  =  interpolator.getSteps().clone();	          final    double[]    stepHandlers    =    interpolator.getInterpolatedState().clone();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
96	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  yDot);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	add	                currentEvent.stepAccepted(eventT,        yDot);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  yDot);	  	compilable	  [FE]  NoBracketingException  	7	2	add
97	[BUG]  [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  yDot);  [FE]  NoBracketingException  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]          currentEvent.stepAccepted(eventT,    yDot);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  yDot);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	                currentEvent.stepAccepted(eventT,        yDot);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  yDot);	  	compilable	  [FE]  NoBracketingException  	7	2	add
98	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventT,  y);  yDot  =  interpolator.getInterpolatedState().clone();  [CE]  final  parameter  yDot  may  not  be  assigned  [FE]        NoBracketingException      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  currentEvent.stepAccepted(eventT,  y);  yDot  =  interpolator.getInterpolatedState().clone();  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	currentEvent.stepAccepted(eventT,  y);  yDot  =  interpolator.getInterpolatedState().clone();	          currentEvent.stepAccepted(eventT,    yDot);    yDot    =    interpolator.getInterpolatedState().clone();    	non-compiled	[CE]  final  parameter  yDot  may  not  be  assigned	31	None	replace
99	[BUG]  [BUGGY]  isLastStep  =  currentEvent.getFirstStep();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);      [BUGGY]  isLastStep  =  currentEvent.getFirstStep();  [BUGGY]        for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  for  (final  EventState  remaining  :  occuringEvents)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	347	347	1	replace	isLastStep  =  currentEvent.getFirstStep();	  isLastStep    =    currentEvent.getLastStep();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
