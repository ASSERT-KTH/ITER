bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
39	[BUG] [BUGGY] final EventState currentEvent = iterator.next(); [FE] AssertionError [CONTEXT] if (state.evaluateStep(interpolator)) {  occuringEvents.add(state); } } while (!occuringEvents.isEmpty()) {  final Iterator<EventState> iterator = occuringEvents.iterator(); [BUGGY] final EventState currentEvent = iterator.next(); [BUGGY] iterator.remove();  final double eventT = currentEvent.getEventTime(); interpolator.setSoftPreviousTime(previousT); interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT); final double[] eventY = interpolator.getInterpolatedState().clone(); [CLASS] AbstractIntegrator 1 [METHOD] acceptStep [RETURN_TYPE] double  AbstractStepInterpolator interpolator final double[] y final double[] yDot final double tEnd [VARIABLES] ExpandableStatefulODE equations expandable expandableODE EventState currentEvent es0 es1 remaining state double convergence currentT eventT maxCheckInterval previousT stepSize stepStart t t0 tEnd Incrementor evaluations StepHandler handler String name SortedSet occuringEvents int orderingSign boolean isLastStep needReset resetOccurred stateInitialized statesInitialized double[] currentY eventY y yDot Iterator iterator Collection eventsStates stepHandlers AbstractStepInterpolator interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	333	333	1	replace	
40	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (state.evaluateStep(interpolator)) {  occuringEvents.add(state); } } while (!occuringEvents.isEmpty()) {  final Iterator<EventState> iterator = occuringEvents.iterator(); [BUGGY] [BUGGY] final EventState currentEvent = iterator.next(); iterator.remove();  final double eventT = currentEvent.getEventTime(); interpolator.setSoftPreviousTime(previousT); interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT); final double[] eventY = interpolator.getInterpolatedState().clone(); [CLASS] AbstractIntegrator 1 [METHOD] acceptStep [RETURN_TYPE] double  AbstractStepInterpolator interpolator final double[] y final double[] yDot final double tEnd [VARIABLES] ExpandableStatefulODE equations expandable expandableODE EventState currentEvent es0 es1 remaining state double convergence currentT eventT maxCheckInterval previousT stepSize stepStart t t0 tEnd Incrementor evaluations StepHandler handler String name SortedSet occuringEvents int orderingSign boolean isLastStep needReset resetOccurred stateInitialized statesInitialized double[] currentY eventY y yDot Iterator iterator Collection eventsStates stepHandlers AbstractStepInterpolator interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	333	333	1	add	
