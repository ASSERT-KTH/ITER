bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  initStep(t0,  y0,  state.getStep(),  isLastStep);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);      [BUGGY]  initStep(t0,  y0,  state.getStep(),  isLastStep);  [BUGGY]        for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	initStep(t0,  y0,  state.getStep(),  isLastStep);	  initStep(t0,    y0,    state.getStep(),    expandable);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
2	[BUG]  [BUGGY]  for(final  Incrementor  stepHandler  :  state.stepHandlers)  {  handler.init(t0,  y0,  t);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);      [BUGGY]  for(final  Incrementor  stepHandler  :  state.stepHandlers)  {  handler.init(t0,  y0,  t);  }  [BUGGY]      }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	for(final  Incrementor  stepHandler  :  state.stepHandlers)  {  handler.init(t0,  y0,  t);  }	  for(final    Incrementor    stepHandler    :    stepHandlers)    {    handler.init(t0,    y0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
3	[BUG]  [BUGGY]  for(final  Incrementor  stepHandler  :  state.getStepHandlers)  {  handler.init(t0,  y0,  t);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);      [BUGGY]  for(final  Incrementor  stepHandler  :  state.getStepHandlers)  {  handler.init(t0,  y0,  t);  }  [BUGGY]      }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	for(final  Incrementor  stepHandler  :  state.getStepHandlers)  {  handler.init(t0,  y0,  t);  }	  for(final    Incrementor    stepHandler    :    stepHandlers)    {    handler.init(t0,    y0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
4	[BUG]  [BUGGY]  for(final  Incrementor  methodHandler  :  stepHandlers)  {  methodHandler.init(t0,  y0,  t);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);      [BUGGY]  for(final  Incrementor  methodHandler  :  stepHandlers)  {  methodHandler.init(t0,  y0,  t);  }  [BUGGY]      }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	for(final  Incrementor  methodHandler  :  stepHandlers)  {  methodHandler.init(t0,  y0,  t);  }	  for(final    Incrementor    stepHandler    :    stepHandlers)    {    methodHandler.init(t0,    y0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
5	[BUG]  [BUGGY]  for(final  Incrementor  stepHandler  :  state.stepHandlers)  {  methodHandler.init(t0,  y0,  t);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);      [BUGGY]  for(final  Incrementor  stepHandler  :  state.stepHandlers)  {  methodHandler.init(t0,  y0,  t);  }  [BUGGY]      }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	for(final  Incrementor  stepHandler  :  state.stepHandlers)  {  methodHandler.init(t0,  y0,  t);  }	  for(final    Incrementor    stepHandler    :    stepHandlers)    {    methodHandler.init(t0,    y0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
6	[BUG]  [BUGGY]  State  state  =  state.getEventState();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);      [BUGGY]  State  state  =  state.getEventState();  [BUGGY]      }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	State  state  =  state.getEventState();	  State    state    =    state.getState();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
7	[BUG]  [BUGGY]  stepHandlers  =  state.getStepHandlers(t0,  y0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);      [BUGGY]  stepHandlers  =  state.getStepHandlers(t0,  y0);  [BUGGY]        for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	stepHandlers  =  state.getStepHandlers(t0,  y0);	  stepHandlers    =    state.getStepHandlers(t0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  stepHandlers  =  state.getStepHandlers(y0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);      [BUGGY]  stepHandlers  =  state.getStepHandlers(y0);  [BUGGY]        for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	stepHandlers  =  state.getStepHandlers(y0);	  stepHandlers    =    state.getStepHandlers(t0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
9	[BUG]  [BUGGY]  for(final  Incrementor  stepHandler  :  state.stepHandlers)  {  stepHandler.init(t0,  y0,  t);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);      [BUGGY]  for(final  Incrementor  stepHandler  :  state.stepHandlers)  {  stepHandler.init(t0,  y0,  t);  }  [BUGGY]      }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	for(final  Incrementor  stepHandler  :  state.stepHandlers)  {  stepHandler.init(t0,  y0,  t);  }	  for(final    Incrementor    stepHandler    :    stepHandlers)    {    stepHandler.init(t0,    y0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
10	[BUG]  [BUGGY]  for(final  Incrementor  stepHandler  :  state.getStepHandlers)  {  stepHandler.init(t0,  y0,  t);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);      [BUGGY]  for(final  Incrementor  stepHandler  :  state.getStepHandlers)  {  stepHandler.init(t0,  y0,  t);  }  [BUGGY]      }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	for(final  Incrementor  stepHandler  :  state.getStepHandlers)  {  stepHandler.init(t0,  y0,  t);  }	  for(final    Incrementor    stepHandler    :    stepHandlers)    {    stepHandler.init(t0,    y0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
11	[BUG]  [BUGGY]  state.getState()  ==  state.getState())  {  for(final  Incrementor  stepHandler  :  stepHandlers)  {  methodHandler.init(t0,  y0,  t);  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);      [BUGGY]  state.getState()  ==  state.getState())  {  for(final  Incrementor  stepHandler  :  stepHandlers)  {  methodHandler.init(t0,  y0,  t);  }  [BUGGY]      }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	state.getState()  ==  state.getState())  {  for(final  Incrementor  stepHandler  :  stepHandlers)  {  methodHandler.init(t0,  y0,  t);  }	  state.getState()!=    state.getState())    {    for(final    Incrementor    stepHandler    :    stepHandlers)    {    methodHandler.init(t0,    y0,    t);    }    	non-compiled	[CE]  not  a  statement	11	None	replace
12	[BUG]  [BUGGY]  state.getState()  ==  state.getState())  {  for(final  Incrementor  stepHandler  :  stepHandlers)  {  stepHandler.init(t0,  y0,  t);  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);      [BUGGY]  state.getState()  ==  state.getState())  {  for(final  Incrementor  stepHandler  :  stepHandlers)  {  stepHandler.init(t0,  y0,  t);  }  [BUGGY]      }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	state.getState()  ==  state.getState())  {  for(final  Incrementor  stepHandler  :  stepHandlers)  {  stepHandler.init(t0,  y0,  t);  }	  state.getState()!=    state.getState())    {    for(final    Incrementor    stepHandler    :    stepHandlers)    {    stepHandler.init(t0,    y0,    t);    }    	non-compiled	[CE]  not  a  statement	7	None	replace
13	[BUG]  [BUGGY]  initStep(t0,  y0,  state.getStepSize(),  convergence);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);      [BUGGY]  initStep(t0,  y0,  state.getStepSize(),  convergence);  [BUGGY]        for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	initStep(t0,  y0,  state.getStepSize(),  convergence);	  initStep(t0,    y0,    state.getStepSize());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
14	[BUG]  [BUGGY]  initState(t0,  y0,  state.getStepSize());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);      [BUGGY]  initState(t0,  y0,  state.getStepSize());  [BUGGY]        for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	initState(t0,  y0,  state.getStepSize());	  initStep(t0,    y0,    state.getStepSize());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
15	[BUG]  [BUGGY]  state.getState()  ==  state.getState())  {  for(final  Incrementor  stepHandler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);      [BUGGY]  state.getState()  ==  state.getState())  {  for(final  Incrementor  stepHandler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  [BUGGY]      }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	state.getState()  ==  state.getState())  {  for(final  Incrementor  stepHandler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }	  state.getState()!=    state.getState())    {    for(final    Incrementor    stepHandler    :    stepHandlers)    {    handler.init(t0,    y0,    t);    }    	non-compiled	[CE]  not  a  statement	2	None	replace
16	[BUG]  [BUGGY]  initState(t0,  y0,  state,  convergence);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);      [BUGGY]  initState(t0,  y0,  state,  convergence);  [BUGGY]        for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	initState(t0,  y0,  state,  convergence);	  initState(t0,    y0,    state);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
17	[BUG]  [BUGGY]  state.getState().init(y0,  t);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);      [BUGGY]  state.getState().init(y0,  t);  [BUGGY]        for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	state.getState().init(y0,  t);	  state.getState().init(t0,    y0,    t);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
18	[BUG]  [BUGGY]  initStep(t0,  y0,  state.getStep(),  t);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);      [BUGGY]  initStep(t0,  y0,  state.getStep(),  t);  [BUGGY]        for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	initStep(t0,  y0,  state.getStep(),  t);	  initStep(t0,    y0,    state.getStep(),    convergence);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
19	[BUG]  [BUGGY]  initState(t0,  y0,  state.getStep(),  convergence);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);      [BUGGY]  initState(t0,  y0,  state.getStep(),  convergence);  [BUGGY]        for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	initState(t0,  y0,  state.getStep(),  convergence);	  initStep(t0,    y0,    state.getStep(),    convergence);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
20	[BUG]  [BUGGY]  state.getState())  {  for(final  Incrementor  stepHandler  :  stepHandlers)  {  methodHandler.init(t0,  y0,  t);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);      [BUGGY]  state.getState())  {  for(final  Incrementor  stepHandler  :  stepHandlers)  {  methodHandler.init(t0,  y0,  t);  }  [BUGGY]      }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	state.getState())  {  for(final  Incrementor  stepHandler  :  stepHandlers)  {  methodHandler.init(t0,  y0,  t);  }	  state.getState()!=    state.getState())    {    for(final    Incrementor    stepHandler    :    stepHandlers)    {    methodHandler.init(t0,    y0,    t);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
21	[BUG]  [BUGGY]  stepHandlers  =  state.getStepHandlers(t0,  stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);      [BUGGY]  stepHandlers  =  state.getStepHandlers(t0,  stepStart);  [BUGGY]        for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	stepHandlers  =  state.getStepHandlers(t0,  stepStart);	  stepHandlers    =    state.getStepHandlers(t0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
22	[BUG]  [BUGGY]  initStep(t0,  y0,  state.getStepStart());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);      [BUGGY]  initStep(t0,  y0,  state.getStepStart());  [BUGGY]        for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	initStep(t0,  y0,  state.getStepStart());	  initStep(t0,    y0,    state.getStepSize());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
23	[BUG]  [BUGGY]  initIntegration(t0,  y0,  state);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);      [BUGGY]  initIntegration(t0,  y0,  state);  [BUGGY]        for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	initIntegration(t0,  y0,  state);	  initState(t0,    y0,    state);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
24	[BUG]  [BUGGY]  for(final  Incrementor  stepHandler  :  methodHandlers)  {  methodHandler.init(t0,  y0,  t);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);      [BUGGY]  for(final  Incrementor  stepHandler  :  methodHandlers)  {  methodHandler.init(t0,  y0,  t);  }  [BUGGY]      }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	for(final  Incrementor  stepHandler  :  methodHandlers)  {  methodHandler.init(t0,  y0,  t);  }	  for(final    Incrementor    stepHandler    :    stepHandlers)    {    methodHandler.init(t0,    y0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
25	[BUG]  [BUGGY]  for(final  Incrementor  stepHandler  :  state.getStepHandlers)  {  methodHandler.init(t0,  y0,  t);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);      [BUGGY]  for(final  Incrementor  stepHandler  :  state.getStepHandlers)  {  methodHandler.init(t0,  y0,  t);  }  [BUGGY]      }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	for(final  Incrementor  stepHandler  :  state.getStepHandlers)  {  methodHandler.init(t0,  y0,  t);  }	  for(final    Incrementor    stepHandler    :    stepHandlers)    {    methodHandler.init(t0,    y0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
26	[BUG]  [BUGGY]  state.getState()  {  for(final  Incrementor  stepHandler  :  handlers)  {  handler.init(t0,  y0,  t);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);      [BUGGY]  state.getState()  {  for(final  Incrementor  stepHandler  :  handlers)  {  handler.init(t0,  y0,  t);  }  [BUGGY]      }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	state.getState()  {  for(final  Incrementor  stepHandler  :  handlers)  {  handler.init(t0,  y0,  t);  }	  state.getState()    {    for(final    Incrementor    stepHandler    :    stepHandlers)    {    handler.init(t0,    y0,    t);    }    	non-compiled	[CE]  ';'  expected	16	None	replace
