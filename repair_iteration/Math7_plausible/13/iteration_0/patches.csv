bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    for(final  Incrementor  stepHandler  :  state.getStepHandlers())  {  StepHandler  stepHandler  =  stepHandlers.get(t0);  setStateInitialized(false);  }  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);  [BUGGY]    for(final  Incrementor  stepHandler  :  state.getStepHandlers())  {  StepHandler  stepHandler  =  stepHandlers.get(t0);  setStateInitialized(false);  }  [BUGGY]  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	    for(final  Incrementor  stepHandler  :  state.getStepHandlers())  {  StepHandler  stepHandler  =  stepHandlers.get(t0);  setStateInitialized(false);  }		non-compiled	[CE]  cannot  find  symbol	26	None	add
2	[BUG]  [BUGGY]    for(final  Incrementor  stepHandler  :  state.getStepHandlers())  {  StepHandler  stepHandler  =  stepHandlers.get(t0);  setStateInitialized(false);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);  [BUGGY]    for(final  Incrementor  stepHandler  :  state.getStepHandlers())  {  StepHandler  stepHandler  =  stepHandlers.get(t0);  setStateInitialized(false);  [BUGGY]  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	    for(final  Incrementor  stepHandler  :  state.getStepHandlers())  {  StepHandler  stepHandler  =  stepHandlers.get(t0);  setStateInitialized(false);		non-compiled	[CE]  illegal  start  of  expression	26	None	add
3	[BUG]  [BUGGY]    for(final  Incrementor  stepHandler  :  state.getStepHandlers())  {  StepHandler  stepHandler  =  stepHandlers.get(t0);  setStateInitialized(true);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);  [BUGGY]    for(final  Incrementor  stepHandler  :  state.getStepHandlers())  {  StepHandler  stepHandler  =  stepHandlers.get(t0);  setStateInitialized(true);  [BUGGY]  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	    for(final  Incrementor  stepHandler  :  state.getStepHandlers())  {  StepHandler  stepHandler  =  stepHandlers.get(t0);  setStateInitialized(true);		non-compiled	[CE]  illegal  start  of  expression	26	None	add
4	[BUG]  [BUGGY]  state.getEventHandler().init(t0,  y0,  t);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);  [BUGGY]  state.getEventHandler().init(t0,  y0,  t);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	state.getEventHandler().init(t0,  y0,  t);	}  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
5	[BUG]  [BUGGY]  initState(t0,  y0,  t);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);  [BUGGY]  initState(t0,  y0,  t);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	initState(t0,  y0,  t);	}  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
6	[BUG]  [BUGGY]    if(state.getEventHandler()!=  null)  {  for(final  Incrementor  stepHandler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);  [BUGGY]    if(state.getEventHandler()!=  null)  {  for(final  Incrementor  stepHandler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  [BUGGY]  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	    if(state.getEventHandler()!=  null)  {  for(final  Incrementor  stepHandler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }		non-compiled	[CE]  illegal  start  of  expression	26	None	add
7	[BUG]  [BUGGY]    if(state.getEventHandler()!=  null)  {  if(isLastStep)  {  setStateInitialized(true);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);  [BUGGY]    if(state.getEventHandler()!=  null)  {  if(isLastStep)  {  setStateInitialized(true);  }  [BUGGY]  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	    if(state.getEventHandler()!=  null)  {  if(isLastStep)  {  setStateInitialized(true);  }		non-compiled	[CE]  illegal  start  of  expression	26	None	add
8	[BUG]  [BUGGY]    if(state.getEventHandler()!=  null)  {  if(isLastStep)  {  setStateInitialized(false);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);  [BUGGY]    if(state.getEventHandler()!=  null)  {  if(isLastStep)  {  setStateInitialized(false);  }  [BUGGY]  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	    if(state.getEventHandler()!=  null)  {  if(isLastStep)  {  setStateInitialized(false);  }		non-compiled	[CE]  illegal  start  of  expression	26	None	add
9	[BUG]  [BUGGY]  initStep(t0,  y0,  t);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);  [BUGGY]  initStep(t0,  y0,  t);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	initStep(t0,  y0,  t);	}  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
10	[BUG]  [BUGGY]  initStep(t0,  y0,  state.getStep());  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);  [BUGGY]  initStep(t0,  y0,  state.getStep());  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	initStep(t0,  y0,  state.getStep());	}  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
11	[BUG]  [BUGGY]    if(state.getState()!=  state.getState())  {  for(final  Incrementor  stepHandler  :  stepHandlers)  {  stepHandler.init(t0,  y0,  t);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);  [BUGGY]    if(state.getState()!=  state.getState())  {  for(final  Incrementor  stepHandler  :  stepHandlers)  {  stepHandler.init(t0,  y0,  t);  }  [BUGGY]  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	    if(state.getState()!=  state.getState())  {  for(final  Incrementor  stepHandler  :  stepHandlers)  {  stepHandler.init(t0,  y0,  t);  }		non-compiled	[CE]  illegal  start  of  expression	26	None	add
12	[BUG]  [BUGGY]    if(state.getState()!=  state.getState())  {  for(final  Incrementor  stepHandler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);  [BUGGY]    if(state.getState()!=  state.getState())  {  for(final  Incrementor  stepHandler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  [BUGGY]  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	    if(state.getState()!=  state.getState())  {  for(final  Incrementor  stepHandler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }		non-compiled	[CE]  illegal  start  of  expression	26	None	add
13	[BUG]  [BUGGY]    if(state.getState()!=  state.getState())  {  for(final  Incrementor  stepHandler  :  stepHandlers)  {  methodHandler.init(t0,  y0,  t);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);  [BUGGY]    if(state.getState()!=  state.getState())  {  for(final  Incrementor  stepHandler  :  stepHandlers)  {  methodHandler.init(t0,  y0,  t);  }  [BUGGY]  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	    if(state.getState()!=  state.getState())  {  for(final  Incrementor  stepHandler  :  stepHandlers)  {  methodHandler.init(t0,  y0,  t);  }		non-compiled	[CE]  illegal  start  of  expression	26	None	add
14	[BUG]  [BUGGY]  initStep(t0,  y0,  state);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);  [BUGGY]  initStep(t0,  y0,  state);  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	initStep(t0,  y0,  state);	}  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
15	[BUG]  [BUGGY]  stepHandlers  =  state.getStepHandlers();  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  state.getEventHandler().init(t0,  y0,  t);  [BUGGY]  stepHandlers  =  state.getStepHandlers();  [BUGGY]    for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	192	192	1	replace	stepHandlers  =  state.getStepHandlers();	}  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
