projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(!statesInitialized){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(eventsStates!=null){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(!eventsStates){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(previousT!=currentT){if(isLastStep){eventsStates.add(currentT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(previousT!=currentT){if(!isLastStep){eventsStates.add(currentT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(previousT!=currentT){if(isLastStep){eventsInitialized=true;}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>iterator=eventsStates.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>iterator=events.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>iterator=eventsStates.values().iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(!currentT){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>eventsStates=this.events.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>eventsStates=getEventStates();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(previousT>currentT){if(eventT>0){eventStates.add(currentT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(!isLastStep){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>events=this.events.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304eventsStates.add(currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304eventStates.add(currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>iterator=this.events.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304eventStates.add(previousT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(previousT==currentT){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(previousT!=currentT){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(!eventsInitialized){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(!previousT){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304EventState[]eventsInitialized=getEventsInitialized();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304EventState[]eventsInitialized=newEventState[currentT.size()];
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>eventsStates=getEventStates(previousT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>eventsStates=getEventStates(currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304eventsInitialized=true;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(previousT>=currentT){if(!isLastStep){eventsStates.add(currentT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(previousT>=currentT){if(isLastStep){eventsStates.add(currentT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(previousT>=currentT){if(eventStates.contains(currentT)){eventStates.add(currentT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(previousT>currentT){if(eventStates.contains(currentT)){eventStates.add(currentT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(currentT!=previousT){if(isLastStep){eventsInitialized=true;}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>iterator=currentT.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>iterator=this.eventsStates.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>eventStates=eventsInitialized.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>iterator=this.eventsStates.values().iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>eventsStates=this.events.values().iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(!currentT&&isLastStep){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(!currentT&&currentT<eventsStates.length){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>eventsStates=currentT.events.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>eventsStates=currentEvents.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304EventsStates.add(currentT,previousT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>eventStates=this.eventsInitialized.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>eventsStates=events.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304EventState[]eventsInitialized=newEventState[currentT.size()+1];
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>events=events.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(!currentT&&currentT<eventsStates.length-1){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(previousT>currentT){if(events.contains(currentT)){eventStates.add(currentT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304eventStates.add(previousT,currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(!previousT&&isLastStep){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304EventState[]eventsInitialized=getEventsInitialized(previousT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304eventsInitialized=false;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304eventStatesInitialized=false;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>eventsStates=getEventStates(currentT,previousT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(!previousT&&currentT<eventsStates.length){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>iterator=previousT.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(previousT>=currentT){if(isLastStep){eventsInitialized=true;}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(previousT==currentT){if(previousT==currentT){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(previousT==currentT){if(previousT>=currentT){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(currentT==previousT){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304eventsStates.add(previousT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304eventsStates.add(previousT,currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(previousT>=currentT){if(events.contains(currentT)){eventStates.add(currentT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(previousT>currentT){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(previousT==currentT){If(previousT==currentT){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>events=this.events.values().iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304EventsInitialized=false;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>eventsStates=this.eventsStates.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(!currentT&&isLastStep&&previousT>tEnd){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304eventsStates.add(currentT-previousT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304eventStates.add(currentT-previousT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(previousT>currentT){if(isLastStep){eventsStates.add(currentT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304EventState[]eventsInitialized=getEventsInitialized(currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(!currentT&&currentT>=eventsStates.length){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304EventState[]eventsInitialized=newEventState[currentT.size()-1];
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>eventsStates=this.events.entrySet().iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(previousT>currentT){if(!isLastStep){eventsStates.add(currentT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(!currentT&&currentT<=eventsStates.length){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>eventsStates=iterator.getEventStates(currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>eventsInitialized=this.eventsInitialized.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>iterator=this.currentT.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(currentT>=previousT){if(isLastStep){eventsStates.add(currentT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304eventStates.add(currentT,currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304eventStates.add(currentT,previousT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(currentT!=currentT){if(isLastStep){eventsInitialized=true;}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304Iterator<EventState>eventsStates=getEventStates(currentT,currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java304if(currentT>=previousT){if(!isLastStep){eventsStates.add(currentT);}
