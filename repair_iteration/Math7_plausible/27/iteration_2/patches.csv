bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  y  =  currentEvent.stepAccepted(eventY,  eventT);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  y  =  currentEvent.stepAccepted(eventY,  eventT);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	y  =  currentEvent.stepAccepted(eventY,  eventT);	  currentEvent.stepAccepted(eventT,    y);    y    =    currentEvent.stepAccepted(eventT,    y);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	15	None	replace
2	[BUG]  [BUGGY]  y  =  currentEvent.stepAccepted(eventT,  y);  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  y  =  currentEvent.stepAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	y  =  currentEvent.stepAccepted(eventT,  y);	  currentEvent.stepAccepted(eventT,    y);    y    =    currentEvent.stepAccepted(eventT,    y);    	non-compiled	[CE]  incompatible  types	15	None	replace
3	[BUG]  [BUGGY]  yDot  =  interpolator.getInterpolatedState().toArray(new  double[y.length]);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  yDot  =  interpolator.getInterpolatedState().toArray(new  double[y.length]);  [BUGGY]      currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	yDot  =  interpolator.getInterpolatedState().toArray(new  double[y.length]);	  yDot    =    interpolator.getInterpolatedState().clone();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
4	[BUG]  [BUGGY]  EventState  currentEvent  =  y.clone();  [CE]  variable  currentEvent  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]            AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  EventState  currentEvent  =  y.clone();  [BUGGY]      currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	EventState  currentEvent  =  y.clone();	  EventState    currentEvent    =    eventY.clone();    	non-compiled	[CE]  variable  currentEvent  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	5	None	replace
5	[BUG]  [BUGGY]  currentEvent.stepAccept(y,  eventY);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  currentEvent.stepAccept(y,  eventY);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccept(y,  eventY);	  currentEvent.stepAccept(eventY,    y);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	add	currentEvent.stepAccepted(eventT,        y);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);	  	compilable	  [FE]  AssertionError  	1	1	add
7	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventT,        y);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);	  	compilable	  [FE]  AssertionError  	1	1	add
8	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]      AssertionError    [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	add	currentEvent.stepAccepted(eventT,        y);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);	  	compilable	  [FE]  NoBracketingException  	1	2	add
9	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  [FE]  NoBracketingException  [FE]      AssertionError    [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventT,        y);        currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);	  	compilable	  [FE]  NoBracketingException  	1	2	add
10	[BUG]  [BUGGY]  state.stepAccepted(eventT,  y);  [CE]  cannot  find  symbol  state  [FE]            AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  state.stepAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	state.stepAccepted(eventT,  y);	  currentEvent.stepAccepted(eventT,    y);    state.stepAccepted(eventT,    y);    	non-compiled	[CE]  cannot  find  symbol  state	4	None	replace
11	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventY,  t0,  tEnd);  [CE]  cannot  find  symbol  t0  [FE]            AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  currentEvent.stepAccepted(eventY,  t0,  tEnd);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventY,  t0,  tEnd);	  currentEvent.stepAccepted(eventY,    eventT,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t0	12	None	replace
12	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventY,  y,  eventT,  tEnd);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  currentEvent.stepAccepted(eventY,  y,  eventT,  tEnd);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventY,  y,  eventT,  tEnd);	  currentEvent.stepAccepted(eventY,    eventT,    tEnd);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	12	None	replace
13	[BUG]  [BUGGY]  currentEvent.stepAccept(eventY,  t0,  tEnd);  [CE]  cannot  find  symbol  t0  [FE]              AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  currentEvent.stepAccept(eventY,  t0,  tEnd);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccept(eventY,  t0,  tEnd);	  currentEvent.stepAccept(eventY,    eventT,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t0	10	None	replace
14	[BUG]  [BUGGY]  currentEvent.stepAccept(eventY,  y,  eventT,  tEnd);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  currentEvent.stepAccept(eventY,  y,  eventT,  tEnd);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccept(eventY,  y,  eventT,  tEnd);	  currentEvent.stepAccept(eventY,    eventT,    tEnd);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
15	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventY,  eventT,  y);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  currentEvent.stepAccepted(eventY,  eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventY,  eventT,  y);	  currentEvent.stepAccepted(eventY,    y,    eventT);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	17	None	replace
16	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventT,  y,  y);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  currentEvent.stepAccepted(eventT,  y,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventT,  y,  y);	  currentEvent.stepAccepted(eventY,    y,    eventT);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	17	None	replace
17	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventY,  eventT);  y  =  interpolator.getInterpolatedState().clone();  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  currentEvent.stepAccepted(eventY,  eventT);  y  =  interpolator.getInterpolatedState().clone();  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventY,  eventT);  y  =  interpolator.getInterpolatedState().clone();	  currentEvent.stepAccepted(eventT,    y);    y    =    interpolator.getInterpolatedState().clone();    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	3	None	replace
18	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventY,  t);  y  =  interpolator.getInterpolatedState().clone();  [CE]  cannot  find  symbol  t  [FE]            AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  currentEvent.stepAccepted(eventY,  t);  y  =  interpolator.getInterpolatedState().clone();  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventY,  t);  y  =  interpolator.getInterpolatedState().clone();	  currentEvent.stepAccepted(eventT,    y);    y    =    interpolator.getInterpolatedState().clone();    	non-compiled	[CE]  cannot  find  symbol  t	3	None	replace
19	[BUG]  [BUGGY]  eventT.stepAccepted(eventT,  y);  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  eventT.stepAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	eventT.stepAccepted(eventT,  y);	  currentEvent.stepAccepted(eventT,    y);    eventT.stepAccepted(eventT,    y);    	non-compiled	[CE]  double  cannot  be  dereferenced	19	None	replace
20	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventY,  y);  eventT.stepAccepted(eventT,  y);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  currentEvent.stepAccepted(eventY,  y);  eventT.stepAccepted(eventT,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventY,  y);  eventT.stepAccepted(eventT,  y);	  currentEvent.stepAccepted(eventT,    y);    eventT.stepAccepted(eventT,    y);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	19	None	replace
21	[BUG]  [BUGGY]  final  double  y  =  interpolator.getInterpolatedState().clone();  [CE]  variable  y  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]              AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  final  double  y  =  interpolator.getInterpolatedState().clone();  [BUGGY]      currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	final  double  y  =  interpolator.getInterpolatedState().clone();	  final    y    =    interpolator.getInterpolatedState().clone();    	non-compiled	[CE]  variable  y  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	14	None	replace
22	[BUG]  [BUGGY]  eventY  =  yDot.clone();  [CE]  cannot  assign  a  value  to  final  variable  eventY  [FE]                AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  eventY  =  yDot.clone();  [BUGGY]      currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	eventY  =  yDot.clone();	  eventY    =    y.clone();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  eventY	8	None	replace
23	[BUG]  [BUGGY]  currentEvent.stepAccepted(y,  eventY);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  currentEvent.stepAccepted(y,  eventY);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(y,  eventY);	  currentEvent.stepAccepted(eventY,    y);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	6	None	replace
24	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventY,  y,  tEnd);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  currentEvent.stepAccepted(eventY,  y,  tEnd);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventY,  y,  tEnd);	  currentEvent.stepAccepted(eventY,    y);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	6	None	replace
25	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventY,  eventT,  yDot,  tEnd);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  currentEvent.stepAccepted(eventY,  eventT,  yDot,  tEnd);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventY,  eventT,  yDot,  tEnd);	  currentEvent.stepAccepted(eventY,    eventT,    yDot);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	18	None	replace
26	[BUG]  [BUGGY]  currentEvent.stepAccept(eventY,  yDot,  tEnd);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  currentEvent.stepAccept(eventY,  yDot,  tEnd);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccept(eventY,  yDot,  tEnd);	  currentEvent.stepAccept(eventY,    yDot);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
27	[BUG]  [BUGGY]  y  =  currentEvent.stepAccepted(eventY,  y);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  y  =  currentEvent.stepAccepted(eventY,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	y  =  currentEvent.stepAccepted(eventY,  y);	  currentEvent.stepAccepted(eventT,    y);    y    =    currentEvent.stepAccepted(eventT,    y);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	15	None	replace
28	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventY,  y,  tEnd,  eventT);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  currentEvent.stepAccepted(eventY,  y,  tEnd,  eventT);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventY,  y,  tEnd,  eventT);	  currentEvent.stepAccepted(eventY,    y,    eventT);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	17	None	replace
29	[BUG]  [BUGGY]  yDot  =  interpolator.getInterpolatedState().extend(tEnd);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  yDot  =  interpolator.getInterpolatedState().extend(tEnd);  [BUGGY]      currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	yDot  =  interpolator.getInterpolatedState().extend(tEnd);	  yDot    =    interpolator.getInterpolatedState().clone();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
30	[BUG]  [BUGGY]  state.stepAccepted(eventY,  y);  [CE]  cannot  find  symbol  state  [FE]            AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  state.stepAccepted(eventY,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	state.stepAccepted(eventY,  y);	  currentEvent.stepAccepted(eventT,    y);    state.stepAccepted(eventT,    y);    	non-compiled	[CE]  cannot  find  symbol  state	4	None	replace
31	[BUG]  [BUGGY]  currentEvent.stepSizeAccepted(eventY,  y);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  currentEvent.stepSizeAccepted(eventY,  y);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepSizeAccepted(eventY,  y);	  currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,    y);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
32	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventT,  eventY,  yDot);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  currentEvent.stepAccepted(eventT,  eventY,  yDot);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventT,  eventY,  yDot);	  currentEvent.stepAccepted(eventY,    eventT,    yDot);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	18	None	replace
33	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  y  =  interpolator.getInterpolatedState().clone();  [CE]  final  parameter  y  may  not  be  assigned  [FE]    AssertionError    [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);  y  =  interpolator.getInterpolatedState().clone();  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventT,        y);        currentEvent.stepAccepted(eventT,    y);    y  =  interpolator.getInterpolatedState().clone();	  	non-compiled	[CE]  final  parameter  y  may  not  be  assigned	1	None	add
34	[BUG]  [BUGGY]  eventY  =  interpolator.clone();  [CE]  cannot  assign  a  value  to  final  variable  eventY  [FE]                  AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  eventY  =  interpolator.clone();  [BUGGY]      currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	eventY  =  interpolator.clone();	  eventY    =    currentEvent.clone();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  eventY	9	None	replace
35	[BUG]  [BUGGY]  EventState  currentEvent  =  this.eventY.clone();  [CE]  variable  currentEvent  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]            AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  EventState  currentEvent  =  this.eventY.clone();  [BUGGY]      currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	EventState  currentEvent  =  this.eventY.clone();	  EventState    currentEvent    =    eventY.clone();    	non-compiled	[CE]  variable  currentEvent  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	5	None	replace
36	[BUG]  [BUGGY]  final  double[]  eventY  =  interpolator.getState().getY();  [CE]  variable  eventY  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]            AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  final  double[]  eventY  =  interpolator.getState().getY();  [BUGGY]      currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	final  double[]  eventY  =  interpolator.getState().getY();	  final    double[]    eventY    =    interpolator.getState().clone();    	non-compiled	[CE]  variable  eventY  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	13	None	replace
37	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventY,  y);  y  =  interpolator.getInterpolatedState().clone();  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  currentEvent.stepAccepted(eventY,  y);  y  =  interpolator.getInterpolatedState().clone();  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventY,  y);  y  =  interpolator.getInterpolatedState().clone();	  currentEvent.stepAccepted(eventT,    y);    y    =    interpolator.getInterpolatedState().clone();    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	3	None	replace
38	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  if(eventY!=  null)  {  currentEvent.stepAccepted(eventT,  y);  }  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	add	if(eventY!=  null)  {  currentEvent.stepAccepted(eventT,  y);  }	  currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,    y);    	compilable	  [FE]  AssertionError  	2	1	replace
39	[BUG]  [BUGGY]  if(eventY!=  null)  {  currentEvent.stepAccepted(eventT,  y);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  if(eventY!=  null)  {  currentEvent.stepAccepted(eventT,  y);  }  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	if(eventY!=  null)  {  currentEvent.stepAccepted(eventT,  y);  }	  currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,    y);    	compilable	  [FE]  AssertionError  	2	1	replace
40	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventY,  yDot,  tEnd);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  currentEvent.stepAccepted(eventY,  yDot,  tEnd);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventY,  yDot,  tEnd);	  currentEvent.stepAccepted(eventY,    y);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	6	None	replace
41	[BUG]  [BUGGY]  yDot  =  interpolator.getInterpolatedState().reset();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  yDot  =  interpolator.getInterpolatedState().reset();  [BUGGY]      currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	yDot  =  interpolator.getInterpolatedState().reset();	  yDot    =    interpolator.getInterpolatedState().clone();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
42	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventT,  eventY,  tEnd);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  currentEvent.stepAccepted(eventT,  eventY,  tEnd);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventT,  eventY,  tEnd);	  currentEvent.stepAccepted(eventY,    eventT,    tEnd);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	12	None	replace
43	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventY,  t0,  eventT,  tEnd);  [CE]  cannot  find  symbol  t0  [FE]              AssertionError      [CONTEXT]        final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();        [BUGGY]  currentEvent.stepAccepted(eventY,  t0,  eventT,  tEnd);  [BUGGY]      isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventY,  t0,  eventT,  tEnd);	  currentEvent.stepAccepted(eventY,    eventT,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t0	12	None	replace
