bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
11	[BUG] [BUGGY] for (final EventState remaining : occuringEvents) { [FE] AssertionError [CONTEXT] return eventT; } boolean needReset = currentEvent.reset(eventT, eventY); if (needReset) {   System.arraycopy(eventY, 0, y, 0, y.length); computeDerivatives(eventT, y, yDot); resetOccurred = true; [BUGGY] for (final EventState remaining : occuringEvents) { [BUGGY] remaining.stepAccepted(eventT, eventY); } return eventT; }  previousT = eventT; interpolator.setSoftPreviousTime(eventT); interpolator.setSoftCurrentTime(currentT);  [CLASS] AbstractIntegrator 1 [METHOD] acceptStep [RETURN_TYPE] double  AbstractStepInterpolator interpolator final double[] y final double[] yDot final double tEnd [VARIABLES] ExpandableStatefulODE equations expandable expandableODE EventState currentEvent es0 es1 remaining state double convergence currentT eventT maxCheckInterval previousT stepSize stepStart t t0 tEnd Incrementor evaluations StepHandler handler String name SortedSet occuringEvents int orderingSign boolean isLastStep needReset resetOccurred stateInitialized statesInitialized double[] currentY eventY y yDot Iterator iterator Collection eventsStates stepHandlers AbstractStepInterpolator interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	370	370	1	replace	
12	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] return eventT; } boolean needReset = currentEvent.reset(eventT, eventY); if (needReset) {   System.arraycopy(eventY, 0, y, 0, y.length); computeDerivatives(eventT, y, yDot); resetOccurred = true; [BUGGY] [BUGGY] for (final EventState remaining : occuringEvents) { remaining.stepAccepted(eventT, eventY); } return eventT; }  previousT = eventT; interpolator.setSoftPreviousTime(eventT); interpolator.setSoftCurrentTime(currentT);  [CLASS] AbstractIntegrator 1 [METHOD] acceptStep [RETURN_TYPE] double  AbstractStepInterpolator interpolator final double[] y final double[] yDot final double tEnd [VARIABLES] ExpandableStatefulODE equations expandable expandableODE EventState currentEvent es0 es1 remaining state double convergence currentT eventT maxCheckInterval previousT stepSize stepStart t t0 tEnd Incrementor evaluations StepHandler handler String name SortedSet occuringEvents int orderingSign boolean isLastStep needReset resetOccurred stateInitialized statesInitialized double[] currentY eventY y yDot Iterator iterator Collection eventsStates stepHandlers AbstractStepInterpolator interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	370	370	1	add	
