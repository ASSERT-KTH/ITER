projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305state.reinitializeBegin(interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305state.reinitializeBegin(previousT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305EventState[]events=getEvents();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305for(EventStatestate:eventsStates){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305for(EventStatestate:eventsInitialized){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305for(EventStatestate:eventStates.values()){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>iterator=eventsStates.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>iterator=events.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305for(EventStatestate:currentT){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>eventsStates=this.events.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>eventsStates=this.eventsInitialized.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>eventsStates=events.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305for(EventStatestate:currentT.values()){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305for(EventStatestate:events.values()){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>iterator=eventsStates.iterator();Iterator<EventState>iterator=eventsStates.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>iterator=eventsStates.iterator();Iterator<EventState>iterator=eventStates.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305EventState[]events=getEvents().events;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305state.reinitializeBegin(currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>events=this.events.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305state.reinitializeBegin(previousT,interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>eventsStates=this.eventsInitialized,currentT.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>iterator=this.eventsInitialized.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>iterator=eventsInitialized.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305for(EventStatestate:previousT){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305for(EventStatestate:currentT,previousT){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>iterator=this.events.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>iterator=eventsStates.iterator();Ilerator<EventState>iterator=eventsStates.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>eventsStates=stepHandlers.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305for(EventStatestate:this.events.values()){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>eventsStates=this.eventsInitialized.enterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>iterator=this.eventsStates.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305EventState[]events=getEvents().toArray(events);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305for(EventStatestate:currentT.getEventState()){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>eventsStates=this.events.values().iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>iterator=currentT.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>eventsStates=state.eventsInitialized.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305EventState[]events=getEventsInitialized();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305for(EventStatestate:eventT.getEventState()){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>iterator=eventsStates.iterator();Iterator<EventState>iterator=eventsStates.iterator());
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305for(EventStatestate:previousT,currentT){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305EventState[]events=getEventsInitialized().events;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305state.reinitializeBegin(currentT,interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305state.reinitializeBegin(interpolator,previousT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>iterator=previousT.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305EventState[]events=getEvents().toArray(currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>events=this.events.values().iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305for(EventStatestate:previousT.getEventState()){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305for(EventStatestate:previousT.values()){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>eventsStates=this.stepHandlers.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305state.removeBegin(previousT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>eventsStates=this.eventsInitialized,previousT.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305for(EventStatestate:currentT,eventT){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305for(EventStatestate:eventState.previousT){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>eventsStates=state.eventsInitialized.enterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>iterator=this.eventsInitialized.values().iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305for(EventStatestate:other.values()){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>eventsStates=this.events.entrySet().iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>iterator=this.eventsInitialized.iterator();Iterator<EventState>iterator=this.eventsStates.iterator());
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305EventState[]events=getEvents().toArray(events,currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305for(EventStatestate:currentT,interpolator.getEventState()){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305EventState[]events=getEvents().eventsInitialized;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>iterator=eventsInitialized.iterator();Ilerator<EventState>iterator=eventsStates.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>iterator=this.eventsStates.iterator();Ilerator<EventState>iterator=this.eventsStates.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>iterator=this.currentT.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305for(EventStatestate:this.eventState.getEventState()){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>eventsStates=currentT.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305EventState[]events=getEvents().toArray(newEventState[currentT]);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305state.reset();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305for(EventStatestate:eventT){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305for(EventStatestate:currentT.events()){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305state.reinitialize(currentT,interpolator);
