bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Incrementor  t0  =  state.getEventHandler(0);  [CE]  variable  t0  is  already  defined  in  method  initIntegration(double,double[],double)  [FE]        AssertionError    [CONTEXT]    protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {    [BUGGY]  Incrementor  t0  =  state.getEventHandler(0);  [BUGGY]    state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	Incrementor  t0  =  state.getEventHandler(0);	      Incrementor    t0    =    state.getEventHandler();    	non-compiled	[CE]  variable  t0  is  already  defined  in  method  initIntegration(double,double[],double)	5	None	replace
2	[BUG]  [BUGGY]  EventState  state  =  state.getState();  [CE]  variable  state  is  already  defined  in  method  initIntegration(double,double[],double)  [FE]            AssertionError    [CONTEXT]    protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {    [BUGGY]  EventState  state  =  state.getState();  [BUGGY]    state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	EventState  state  =  state.getState();	      EventState    state    =    state.getEventState();    	non-compiled	[CE]  variable  state  is  already  defined  in  method  initIntegration(double,double[],double)	3	None	replace
3	[BUG]  [BUGGY]  EventState  stepHandler  =  state.getStepHandler(t0);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {    [BUGGY]  EventState  stepHandler  =  state.getStepHandler(t0);  [BUGGY]    state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	EventState  stepHandler  =  state.getStepHandler(t0);	      EventState    stepHandler    =    state.getStepHandler();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
4	[BUG]  [BUGGY]  Incrementor  stepHandlers  =  state.getStepHandlers(t0);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {    [BUGGY]  Incrementor  stepHandlers  =  state.getStepHandlers(t0);  [BUGGY]    state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	Incrementor  stepHandlers  =  state.getStepHandlers(t0);	      Incrementor    stepHandlers    =    state.getStepHandlers();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
5	[BUG]  [BUGGY]  initState(t0,  y0,  t);  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]    protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {    [BUGGY]  initState(t0,  y0,  t);  [BUGGY]    state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	initState(t0,  y0,  t);	      initIntegration(t0,    y0,    t);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
6	[BUG]  [BUGGY]  initIntegration(t0,  y0,  t,  state);  [CE]  method  initIntegration  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {    [BUGGY]  initIntegration(t0,  y0,  t,  state);  [BUGGY]    state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	initIntegration(t0,  y0,  t,  state);	      initIntegration(t0,    y0,    state);    	non-compiled	[CE]  method  initIntegration  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	6	None	replace
7	[BUG]  [BUGGY]  state.getState().init(t0,  y0,  t));  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {    [BUGGY]  state.getState().init(t0,  y0,  t));  [BUGGY]    }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	state.getState().init(t0,  y0,  t));	  state.getState().init(t0,    y0,    t);    	non-compiled	[CE]  ';'  expected	4	None	replace
8	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]    protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {    [BUGGY]      initIntegration(t0,  y0,  t);  initIntegration(t0,  y0,  t);  [BUGGY]    state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	add	        initIntegration(t0,    y0,    t);    initIntegration(t0,  y0,  t);	  	compilable	  [FE]  StackOverflowError  	7	4	add
9	[BUG]  [BUGGY]      initIntegration(t0,  y0,  t);  initIntegration(t0,  y0,  t);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]    protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {    [BUGGY]      initIntegration(t0,  y0,  t);  initIntegration(t0,  y0,  t);  [BUGGY]    state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	        initIntegration(t0,    y0,    t);    initIntegration(t0,  y0,  t);	  	compilable	  [FE]  StackOverflowError  	7	4	add
10	[BUG]  [BUGGY]      initIntegration(t0,  y0,  t);  Integration(t0,  y0,  t);  [CE]  cannot  find  symbol  [FE]      StackOverflowError    [CONTEXT]    protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {    [BUGGY]      initIntegration(t0,  y0,  t);  Integration(t0,  y0,  t);  [BUGGY]    state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	        initIntegration(t0,    y0,    t);    Integration(t0,  y0,  t);	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
11	[BUG]  [BUGGY]  EventState  state  =  state.getEventState(t0);  [CE]  variable  state  is  already  defined  in  method  initIntegration(double,double[],double)  [FE]            AssertionError    [CONTEXT]    protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {    [BUGGY]  EventState  state  =  state.getEventState(t0);  [BUGGY]    state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	EventState  state  =  state.getEventState(t0);	      EventState    state    =    state.getEventState();    	non-compiled	[CE]  variable  state  is  already  defined  in  method  initIntegration(double,double[],double)	3	None	replace
12	[BUG]  [BUGGY]  EventState[]  stepHandlers  =  state.getStepHandlers2();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {    [BUGGY]  EventState[]  stepHandlers  =  state.getStepHandlers2();  [BUGGY]    state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	EventState[]  stepHandlers  =  state.getStepHandlers2();	      EventState[]    stepHandlers    =    state.getStepHandlers();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
13	[BUG]  [BUGGY]  state.getState().init(y0,  t0);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {    [BUGGY]  state.getState().init(y0,  t0);  [BUGGY]    }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	state.getState().init(y0,  t0);	  state.getState().init(t0,    y0,    t);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
14	[BUG]  [BUGGY]  EventState[]  stepHandlers  =  state.getStepHandlers(t0);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {    [BUGGY]  EventState[]  stepHandlers  =  state.getStepHandlers(t0);  [BUGGY]    state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	EventState[]  stepHandlers  =  state.getStepHandlers(t0);	      EventState[]    stepHandlers    =    state.getStepHandlers();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
15	[BUG]  [BUGGY]      initIntegration(t0,  y0,  t);  initIntegration(t0,  y1,  t);  [CE]  cannot  find  symbol  y1  [FE]    StackOverflowError    [CONTEXT]    protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {    [BUGGY]      initIntegration(t0,  y0,  t);  initIntegration(t0,  y1,  t);  [BUGGY]    state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	        initIntegration(t0,    y0,    t);    initIntegration(t0,  y1,  t);	  	non-compiled	[CE]  cannot  find  symbol  y1	7	None	add
16	[BUG]  [BUGGY]  State  state  =  state.getState().init(t0,  y0,  t);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {    [BUGGY]  State  state  =  state.getState().init(t0,  y0,  t);  [BUGGY]    }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	State  state  =  state.getState().init(t0,  y0,  t);	  state.getState().init(t0,    y0,    t);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
