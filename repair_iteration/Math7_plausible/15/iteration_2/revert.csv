projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(previousT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307if(previousT>t){if(state.isForward()){continue;}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307if(previousT>t){if(state.isForward()){orderingSign=true;}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307if(currentT>tEnd){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT*currentT,remaining);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307if(currentT>tEnd){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT,remaining);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307if(currentT>tEnd){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT*currentT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(previousT,currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.initializeBegin(previousT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.removeBegin(previousT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(currentT,previousT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(interpolator,previousT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307orderingSign=true;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT,remaining);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307if(previousT>tEnd){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT,previousT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307t>previousT){if(state.isForward()){continue;}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT*currentT,remaining);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307if(previousT>tEnd){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT*currentT,remaining);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(interpolator);state.reinitializeBegin(interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(interpolator);state.reinitializeEnd(interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT*currentT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307if(previousT>tEnd){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT*currentT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(interpolator);state.reinitializeAndSet(currentT,currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307lastCheckInterval*tEnd){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT*currentT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307previousT>t&&state.isForward()){orderingSign=true;}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307Preconditions.checkState(previousT>=t);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(expandableODE,currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307t0>tEnd){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT*currentT,remaining);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307t0>tEnd){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(currentT*currentT,remaining);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reset();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.initialize(previousT,currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307lastCheckInterval*tEnd){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT,remaining);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307previousT>tEnd){if(state.isForward()){orderingSign=true;}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.initialize(currentT,currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307if(t>previousT){if(state.isForward()){continue;}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307if(previousT>currentT){if(state.isForward()){continue;}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(currentT*currentT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307if(remainingT>tEnd){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT*currentT,remaining);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307if(remainingT>tEnd){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT,previousT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307orderingSign=false;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307orderingSign-=state.reinitializeBegin(previousT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT*previousT,remaining);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307lastCheckInterval*tEnd){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(currentT,remaining);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307lastCheckInterval*tEnd){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT,previousT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.resetOccurred();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT,previousT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307t>currentT){if(state.isForward()){continue;}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307previousT>tEnd){if(state.isInitializing()){orderingSign=true;}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(previousT*currentT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307lastCheckInterval*t0){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT*currentT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.resetOccurred=true;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.resetOccurred=false;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.removeBegin(previousT,currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.initialize(currentT,previousT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.initialize(previousT,currentT+orderingSign);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.isForward()){continue;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(interpolator);state.reinitializeBegin(interpolator);state.reinitializeBegin(interpolator);state.reinitializeBegin(interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(interpolator);state.reinitializeBegin(interpolator);state.reinitializeEnd(interpolator);state.reinitializeBegin(interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.initializeBegin(currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(previousT);state.reinitializeEnd(interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(previousT,interpolator);state.reinitializeEnd(interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(previousT,interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(currentT,remaining);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(previousT);state.reinitializeAndSet(currentT,currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(previousT,currentT);state.reinitializeAndSet(currentT,currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.removeBegin(currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307previousT>t&&state.isInitializing()){orderingSign=true;}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307Preconditions.checkState(previousT==t);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307Preconditions.checkState(previousT>=t0);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307if(remainingT>=tEnd){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT*currentT,remaining);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307previousT>t0){if(state.isForward()){orderingSign=true;}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307lastCheckInterval*tEnd){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT*currentT,remaining);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(currentT,remaining);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307t0>currentT){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT*currentT,remaining);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(previousT,interpolator);state.reinitializeAndSet(currentT,currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(interpolator,currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(currentT,expandableODE);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(currentT,expansionableODE);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307previousT>tEnd){if(state.isForward()){continue;}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307if(previousT>=currentT){if(state.isForward()){continue;}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307Preconditions.checkState(previousT>tEnd){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT*currentT,remaining);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307Preconditions.checkState(previousT>tEnd){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT*currentT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307previousT>tEnd&&state.getRemaining()<remainingT){returnorderingSign*State.compare(remainingT*currentT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307lastCheckInterval*tStart){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT*currentT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitialize(currentT,previousT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307orderingSign-=true;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(currentT*remaining);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307for(EventStatecurrentT:state.getRemaining()){returnorderingSign*State.compare(currentT*remaining);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(currentT);state.reinitializeEnd(interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.addBegin(currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307Preconditions.checkState(previousT>tEnd){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT,previousT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307previousT>tEnd){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT,previousT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307Preconditions.checkState(previousT>t);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307Preconditions.checkState(currentT>=t);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307lastCheckInterval>tEnd){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT,previousT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(interpolator);state.reinitializeBegin(interpolator);state.reinitializeBegin(currentT);state.reinitializeBegin(interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(currentT*remaining,remaining);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307previousT>tEnd&&state.isForward()){orderingSign=true;}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307if(t>currentT){if(state.isForward()){continue;}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307if(currentT>t){if(state.isForward()){continue;}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307previousT>tEnd){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT*currentT);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307orderingSign-=state.isForward()?1:-1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307previousT>orderSign){if(state.isForward()){orderingSign=true;}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307t0>tEnd){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(currentT*previousT,remaining);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(interpolator);state.reinitializeBegin(interpolator);state.reinitializeEnd(interpolator);state.reinitializeEnd(interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(interpolator);state.reinitializeBegin(interpolator);state.reinitialize(interpolator);state.reinitializeBegin(interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.initialize(currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307if(previousT>currentT){if(state.isForward()||state.isInitialized()){continue;}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitialize();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.reinitializeBegin(currentT);state.reinitializeAndSet(currentT,currentT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.removeBegin(previousT,interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307Preconditions.checkState(remainingT>tEnd){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT*currentT,remaining);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307previousT>tEnd){for(EventStateremaining:state.getRemaining()){returnorderingSign*State.compare(remainingT*currentT,remaining);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java307state.removeBegin(currentT,previousT);
