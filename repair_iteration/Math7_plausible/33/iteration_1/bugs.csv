bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  state.stepAccepted(currentT,  tEnd);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]    AssertionError  [CONTEXT]    occuringEvents.add(currentEvent);  }  }  interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  [BUGGY]  state.stepAccepted(currentT,  tEnd);  [BUGGY]  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	393	393	1	replace	state.stepAccepted(currentT,  tEnd);	state.stepAccepted(currentT,  currentY);  	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	65	None	replace
2	[BUG]  [BUGGY]  state.stepAccepted(currentT,  tEnd,  1);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]      AssertionError  [CONTEXT]    occuringEvents.add(currentEvent);  }  }  interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  [BUGGY]  state.stepAccepted(currentT,  tEnd,  1);  [BUGGY]  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	393	393	1	replace	state.stepAccepted(currentT,  tEnd,  1);	state.stepAccepted(currentT,  currentY);  	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	65	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]    occuringEvents.add(currentEvent);  }  }  interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  [BUGGY]    [BUGGY]  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	393	393	1	add	  	state.stepAccepted(currentT,  currentY);  	compilable	  [FE]  AssertionError  	65	2	replace
4	[BUG]  [BUGGY]    [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]    occuringEvents.add(currentEvent);  }  }  interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  [BUGGY]    [BUGGY]  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	393	393	1	replace	  	state.stepAccepted(currentT,  currentY);  	compilable	  [FE]  AssertionError  	65	2	replace
5	[BUG]  [BUGGY]    state.stepAccepted(currentT,  tEnd,  2);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]    AssertionError  [CONTEXT]    occuringEvents.add(currentEvent);  }  }  interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  [BUGGY]    state.stepAccepted(currentT,  tEnd,  2);  [BUGGY]  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	393	393	1	replace	    state.stepAccepted(currentT,  tEnd,  2);		non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	66	None	add
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]    occuringEvents.add(currentEvent);  }  }  interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  [BUGGY]  state.stepAccepted(currentT,  y);  [BUGGY]  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	393	393	1	add	state.stepAccepted(currentT,  y);	state.stepAccepted(currentT,  currentY);  	compilable	  [FE]  AssertionError  	65	1	replace
7	[BUG]  [BUGGY]  state.stepAccepted(currentT,  y);  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]    occuringEvents.add(currentEvent);  }  }  interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  [BUGGY]  state.stepAccepted(currentT,  y);  [BUGGY]  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	393	393	1	replace	state.stepAccepted(currentT,  y);	state.stepAccepted(currentT,  currentY);  	compilable	  [FE]  AssertionError  	65	1	replace
8	[BUG]  [BUGGY]    state.stepAccepted(currentT,  tEnd,  3);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]    AssertionError  [CONTEXT]    occuringEvents.add(currentEvent);  }  }  interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  [BUGGY]    state.stepAccepted(currentT,  tEnd,  3);  [BUGGY]  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	393	393	1	replace	    state.stepAccepted(currentT,  tEnd,  3);		non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	66	None	add
9	[BUG]  [BUGGY]    state.stepAccepted(currentT,  tStart,  1);  [CE]  cannot  find  symbol  tStart  [FE]    AssertionError  [CONTEXT]    occuringEvents.add(currentEvent);  }  }  interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  [BUGGY]    state.stepAccepted(currentT,  tStart,  1);  [BUGGY]  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	393	393	1	replace	    state.stepAccepted(currentT,  tStart,  1);		non-compiled	[CE]  cannot  find  symbol  tStart	66	None	add
10	[BUG]  [BUGGY]  state.stepAccepted(currentT,  tEnd,  y);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]    AssertionError  [CONTEXT]    occuringEvents.add(currentEvent);  }  }  interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  [BUGGY]  state.stepAccepted(currentT,  tEnd,  y);  [BUGGY]  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	393	393	1	replace	state.stepAccepted(currentT,  tEnd,  y);	state.stepAccepted(currentT,  currentY);  	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	65	None	replace
