projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java196}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java196state.getEventHandler().init(t0,y0,t);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java196state.getEventHandler().init(handler,t0,t);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java196
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java196if(events.size()>1){for(inti=0;i<evaluations.size();++i){evaluates.remove(i);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java196if(events.size()>1){for(inti=0;i<evaluations.size();i++){evaluates.remove(i);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java196if(events.size()>1){for(inti=0;i<evaluations.size();i++){evaluates.resetCount();}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java196if(!isLastStep){for(finalIncrementorexpansion:state.getExecutableStates()){evaluations.resetCount();}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java196if(!isLastStep){for(finalIncrementorexpansion:state.getExecutableStates()){evaluates.resetCount();}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java196initStep(handler,t0,t);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java196state.getEventHandler().init(t0,y1,t);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java196if(expanable.equals(handler.getInstance())){for(finalIncrementorstepStart:steps){state.getEventHandler().init(stepStart,y0,stepStart);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java196if(expanable.equals(handler.getInstance())){for(finalIncrementorstepStart:steps){state.getEventHandler().init(y0,stepStart,t);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java196if(expanable.equals(handler.getInstance())){for(finalIncrementorstepStart:steps){state.getEventHandler().init(stepStart,y0,t);}
