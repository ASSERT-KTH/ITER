bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Iterator  iterator  =  this.eventsStates.iterator();  [CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]        AssertionError    [CONTEXT]    final  EventState  currentEvent  =  iterator.next();  iterator.remove();  final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);    [BUGGY]  Iterator  iterator  =  this.eventsStates.iterator();  [BUGGY]    final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	343	343	1	replace	Iterator  iterator  =  this.eventsStates.iterator();	      Iterator    iterator    =    eventsStates.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	5	None	replace
2	[BUG]  [BUGGY]  Iterator  iterator  =  this.eventsInitialized.iterator();  [CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]          AssertionError    [CONTEXT]    final  EventState  currentEvent  =  iterator.next();  iterator.remove();  final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);    [BUGGY]  Iterator  iterator  =  this.eventsInitialized.iterator();  [BUGGY]    final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	343	343	1	replace	Iterator  iterator  =  this.eventsInitialized.iterator();	      Iterator    iterator    =    eventsStates.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	5	None	replace
3	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    final  EventState  currentEvent  =  iterator.next();  iterator.remove();  final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);    [BUGGY]      iterator.remove();  iterator.remove();  [BUGGY]    final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	343	343	1	add	        iterator.remove();    iterator.remove();	  	compilable	  [FE]  IllegalStateException  	6	4	add
4	[BUG]  [BUGGY]      iterator.remove();  iterator.remove();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    final  EventState  currentEvent  =  iterator.next();  iterator.remove();  final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);    [BUGGY]      iterator.remove();  iterator.remove();  [BUGGY]    final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	343	343	1	replace	        iterator.remove();    iterator.remove();	  	compilable	  [FE]  IllegalStateException  	6	4	add
5	[BUG]  [BUGGY]      iterator.remove();  Iterator  iterator  =  this.eventsInitialized.iterator();  [CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]      IllegalStateException    [CONTEXT]    final  EventState  currentEvent  =  iterator.next();  iterator.remove();  final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);    [BUGGY]      iterator.remove();  Iterator  iterator  =  this.eventsInitialized.iterator();  [BUGGY]    final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	343	343	1	replace	        iterator.remove();    Iterator  iterator  =  this.eventsInitialized.iterator();	  	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	6	None	add
6	[BUG]  [BUGGY]      iterator.remove();  Iterator  iterator  =  this.stepHandlers.iterator();  [CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]        IllegalStateException    [CONTEXT]    final  EventState  currentEvent  =  iterator.next();  iterator.remove();  final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);    [BUGGY]      iterator.remove();  Iterator  iterator  =  this.stepHandlers.iterator();  [BUGGY]    final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	343	343	1	replace	        iterator.remove();    Iterator  iterator  =  this.stepHandlers.iterator();	  	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	6	None	add
7	[BUG]  [BUGGY]  final  double[]  eventY  =  currentEvent.getInterpolatedState().getY();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    final  EventState  currentEvent  =  iterator.next();  iterator.remove();  final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);    [BUGGY]  final  double[]  eventY  =  currentEvent.getInterpolatedState().getY();  [BUGGY]      currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	343	343	1	replace	final  double[]  eventY  =  currentEvent.getInterpolatedState().getY();	  final    double[]    eventY    =    interpolator.getInterpolatedState().getY();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
8	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  this.events.iterator();  [CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]            AssertionError    [CONTEXT]    final  EventState  currentEvent  =  iterator.next();  iterator.remove();  final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);    [BUGGY]  Iterator  <  EventState>  iterator  =  this.events.iterator();  [BUGGY]    final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	343	343	1	replace	Iterator  <  EventState>  iterator  =  this.events.iterator();	      Iterator    <    EventState>    iterator    =    events.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	3	None	replace
9	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  this.eventsInitialized.iterator();  [CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]              AssertionError    [CONTEXT]    final  EventState  currentEvent  =  iterator.next();  iterator.remove();  final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);    [BUGGY]  Iterator  <  EventState>  iterator  =  this.eventsInitialized.iterator();  [BUGGY]    final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	343	343	1	replace	Iterator  <  EventState>  iterator  =  this.eventsInitialized.iterator();	      Iterator    <    EventState>    iterator    =    events.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	3	None	replace
10	[BUG]  [BUGGY]  final  double[]  eventY  =  currentEvent.getState().clone();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    final  EventState  currentEvent  =  iterator.next();  iterator.remove();  final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);    [BUGGY]  final  double[]  eventY  =  currentEvent.getState().clone();  [BUGGY]      currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	343	343	1	replace	final  double[]  eventY  =  currentEvent.getState().clone();	  final    double[]    eventY    =    interpolator.getState().clone();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
11	[BUG]  [BUGGY]  Iterator  iterator  =  this.statesInitialized.iterator();  [CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]          AssertionError    [CONTEXT]    final  EventState  currentEvent  =  iterator.next();  iterator.remove();  final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);    [BUGGY]  Iterator  iterator  =  this.statesInitialized.iterator();  [BUGGY]    final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	343	343	1	replace	Iterator  iterator  =  this.statesInitialized.iterator();	      Iterator    iterator    =    eventsInitialized.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	2	None	replace
12	[BUG]  [BUGGY]  final  double[]  eventY  =  interpolator.getInterpolatedState(),  state.getY();  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    final  EventState  currentEvent  =  iterator.next();  iterator.remove();  final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);    [BUGGY]  final  double[]  eventY  =  interpolator.getInterpolatedState(),  state.getY();  [BUGGY]      currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	343	343	1	replace	final  double[]  eventY  =  interpolator.getInterpolatedState(),  state.getY();	  final    double[]    eventY    =    interpolator.getInterpolatedState().getY();    	non-compiled	[CE]  ';'  expected	8	None	replace
13	[BUG]  [BUGGY]  iterator.clear();  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]    final  EventState  currentEvent  =  iterator.next();  iterator.remove();  final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);    [BUGGY]  iterator.clear();  [BUGGY]    final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	343	343	1	replace	iterator.clear();	      iterator.remove();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
14	[BUG]  [BUGGY]      iterator.remove();  Iterator  iterator.remove();  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]    final  EventState  currentEvent  =  iterator.next();  iterator.remove();  final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);    [BUGGY]      iterator.remove();  Iterator  iterator.remove();  [BUGGY]    final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	343	343	1	replace	        iterator.remove();    Iterator  iterator.remove();	  	non-compiled	[CE]  ';'  expected	6	None	add
15	[BUG]  [BUGGY]  final  double[]  eventY  =  interpolator.getState(),  state.clone();  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    final  EventState  currentEvent  =  iterator.next();  iterator.remove();  final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);    [BUGGY]  final  double[]  eventY  =  interpolator.getState(),  state.clone();  [BUGGY]      currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	343	343	1	replace	final  double[]  eventY  =  interpolator.getState(),  state.clone();	  final    double[]    eventY    =    interpolator.getState().clone();    	non-compiled	[CE]  ';'  expected	4	None	replace
16	[BUG]  [BUGGY]  Iterator  iterator  =  stepHandlers.iterator();  [CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]        AssertionError    [CONTEXT]    final  EventState  currentEvent  =  iterator.next();  iterator.remove();  final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);    [BUGGY]  Iterator  iterator  =  stepHandlers.iterator();  [BUGGY]    final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	343	343	1	replace	Iterator  iterator  =  stepHandlers.iterator();	      Iterator    iterator    =    eventsStates.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	5	None	replace
17	[BUG]  [BUGGY]  Iterator  iterator  =  this.stateStatesInitialized.iterator();  [CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]          AssertionError    [CONTEXT]    final  EventState  currentEvent  =  iterator.next();  iterator.remove();  final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);    [BUGGY]  Iterator  iterator  =  this.stateStatesInitialized.iterator();  [BUGGY]    final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	343	343	1	replace	Iterator  iterator  =  this.stateStatesInitialized.iterator();	      Iterator    iterator    =    eventsInitialized.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	2	None	replace
18	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  stateInitialized.iterator();  [CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]        AssertionError    [CONTEXT]    final  EventState  currentEvent  =  iterator.next();  iterator.remove();  final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);    [BUGGY]  Iterator  <  EventState>  iterator  =  stateInitialized.iterator();  [BUGGY]    final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	343	343	1	replace	Iterator  <  EventState>  iterator  =  stateInitialized.iterator();	      Iterator    <    EventState>    iterator    =    eventsInitialized.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	1	None	replace
19	[BUG]  [BUGGY]  final  double[]  eventY  =  interpolator.getState().yDot.clone();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    final  EventState  currentEvent  =  iterator.next();  iterator.remove();  final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);    [BUGGY]  final  double[]  eventY  =  interpolator.getState().yDot.clone();  [BUGGY]      currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	343	343	1	replace	final  double[]  eventY  =  interpolator.getState().yDot.clone();	  final    double[]    eventY    =    interpolator.getState().clone();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
20	[BUG]  [BUGGY]  Iterator  iterator  =  this.eventStatesInitialized.iterator();  [CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]          AssertionError    [CONTEXT]    final  EventState  currentEvent  =  iterator.next();  iterator.remove();  final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);    [BUGGY]  Iterator  iterator  =  this.eventStatesInitialized.iterator();  [BUGGY]    final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	343	343	1	replace	Iterator  iterator  =  this.eventStatesInitialized.iterator();	      Iterator    iterator    =    eventsInitialized.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	2	None	replace
21	[BUG]  [BUGGY]  Iterator  iterator  =  this.eventStates.iterator();  [CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]        AssertionError    [CONTEXT]    final  EventState  currentEvent  =  iterator.next();  iterator.remove();  final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);    [BUGGY]  Iterator  iterator  =  this.eventStates.iterator();  [BUGGY]    final  double[]  eventY  =  interpolator.getInterpolatedState().clone();  currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	343	343	1	replace	Iterator  iterator  =  this.eventStates.iterator();	      Iterator    iterator    =    eventsStates.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	5	None	replace
