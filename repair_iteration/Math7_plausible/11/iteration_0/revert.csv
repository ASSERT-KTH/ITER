projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java140
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java140eventsStates.add(newEventState(handler,maxCheckInterval,convergence,maxIterationCount,solver));
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java140if(eventsStates!=null){for(inti=0;i<eventsStates.size();i++){eventsStates.add(newEventState(handler,maxCheckInterval,convergence,maxIterationCount,solver));}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java140if(eventsStates!=null){for(inti=0;i<eventsStates.size();i++){eventsStates.add(newEventState(handler,minCheckInterval,convergence,maxIterationCount,solver));}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java140}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java140this.eventsStates.add(newEventState(handler,maxCheckInterval,convergence,maxIterationCount,solver));
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java140eventStates.add(newEventState(handler,maxCheckInterval,convergence,maxIterationCount,solver));
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java140eventsStates.add(newEventState(handler,maxCheckInterval,convergence,maxIterationCount,solver));return;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java140if(eventsStates!=null){eventsStates.add(newEventState(handler,maxCheckInterval,convergence,maxIterationCount,solver));}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java140if(eventsStates!=null){for(inti=0;i<eventsStates.size();i++){EventHandlerhandler=(EventHandler)eventsStates.get(i);if(!
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java140this.stepHandlers.add(handler);
