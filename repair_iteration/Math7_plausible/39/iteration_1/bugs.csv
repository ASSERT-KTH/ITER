bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.eventsStates.add(handler);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  public  void  addStepHandler(final  StepHandler  handler)  {  stepHandlers.add(handler);  [BUGGY]  this.eventsStates.add(handler);  [BUGGY]    [CLASS]  AbstractIntegrator  1  [METHOD]  addStepHandler  [RETURN_TYPE]  void  StepHandler  handler  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3779644730092272	110	110	1	replace	this.eventsStates.add(handler);	}  	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
2	[BUG]  [BUGGY]  add(new  Integer(stepSize));  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  public  void  addStepHandler(final  StepHandler  handler)  {  stepHandlers.add(handler);  [BUGGY]  add(new  Integer(stepSize));  [BUGGY]    [CLASS]  AbstractIntegrator  1  [METHOD]  addStepHandler  [RETURN_TYPE]  void  StepHandler  handler  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3779644730092272	110	110	1	replace	add(new  Integer(stepSize));	}  	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
3	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  public  void  addStepHandler(final  StepHandler  handler)  {  stepHandlers.add(handler);  [BUGGY]    [BUGGY]    [CLASS]  AbstractIntegrator  1  [METHOD]  addStepHandler  [RETURN_TYPE]  void  StepHandler  handler  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3779644730092272	110	110	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  void  addStepHandler(final  StepHandler  handler)  {  stepHandlers.add(handler);  [BUGGY]    if(!stepHandlers.contains(handler))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  addStepHandler  [RETURN_TYPE]  void  StepHandler  handler  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3779644730092272	110	110	1	add	    if(!stepHandlers.contains(handler))  {  throw  new  IllegalStateException( " ");  }		compilable	  [FE]  AssertionError  	78	1	add
5	[BUG]  [BUGGY]    if(!stepHandlers.contains(handler))  {  throw  new  IllegalStateException( " ");  }  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  void  addStepHandler(final  StepHandler  handler)  {  stepHandlers.add(handler);  [BUGGY]    if(!stepHandlers.contains(handler))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  addStepHandler  [RETURN_TYPE]  void  StepHandler  handler  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3779644730092272	110	110	1	replace	    if(!stepHandlers.contains(handler))  {  throw  new  IllegalStateException( " ");  }		compilable	  [FE]  AssertionError  	78	1	add
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  void  addStepHandler(final  StepHandler  handler)  {  stepHandlers.add(handler);  [BUGGY]    if(!stepHandlers.contains(handler))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  addStepHandler  [RETURN_TYPE]  void  StepHandler  handler  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3779644730092272	110	110	1	add	    if(!stepHandlers.contains(handler))  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  AssertionError  	78	1	add
7	[BUG]  [BUGGY]    if(!stepHandlers.contains(handler))  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  void  addStepHandler(final  StepHandler  handler)  {  stepHandlers.add(handler);  [BUGGY]    if(!stepHandlers.contains(handler))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  addStepHandler  [RETURN_TYPE]  void  StepHandler  handler  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3779644730092272	110	110	1	replace	    if(!stepHandlers.contains(handler))  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  AssertionError  	78	1	add
8	[BUG]  [BUGGY]  this.eventsStates.add(handler);  fireSeriesChanged();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  public  void  addStepHandler(final  StepHandler  handler)  {  stepHandlers.add(handler);  [BUGGY]  this.eventsStates.add(handler);  fireSeriesChanged();  [BUGGY]    [CLASS]  AbstractIntegrator  1  [METHOD]  addStepHandler  [RETURN_TYPE]  void  StepHandler  handler  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3779644730092272	110	110	1	replace	this.eventsStates.add(handler);  fireSeriesChanged();	}  	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
9	[BUG]  [BUGGY]    this.eventsStates.add(handler);  fireInitializingStep();  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]    AssertionError  [CONTEXT]  public  void  addStepHandler(final  StepHandler  handler)  {  stepHandlers.add(handler);  [BUGGY]    this.eventsStates.add(handler);  fireInitializingStep();  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  addStepHandler  [RETURN_TYPE]  void  StepHandler  handler  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3779644730092272	110	110	1	replace	    this.eventsStates.add(handler);  fireInitializingStep();		non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	78	None	add
10	[BUG]  [BUGGY]  if(stepHandlers!=  null)  {  for(int  i  =  0;  i  <  stepHandlers.size();  ++i)  {  StepHandler  handler  =(StepHandler)stepHandlers.get(i);  if(handler.  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  public  void  addStepHandler(final  StepHandler  handler)  {  stepHandlers.add(handler);  [BUGGY]  if(stepHandlers!=  null)  {  for(int  i  =  0;  i  <  stepHandlers.size();  ++i)  {  StepHandler  handler  =(StepHandler)stepHandlers.get(i);  if(handler.  [BUGGY]    [CLASS]  AbstractIntegrator  1  [METHOD]  addStepHandler  [RETURN_TYPE]  void  StepHandler  handler  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3779644730092272	110	110	1	replace	if(stepHandlers!=  null)  {  for(int  i  =  0;  i  <  stepHandlers.size();  ++i)  {  StepHandler  handler  =(StepHandler)stepHandlers.get(i);  if(handler.	}  	non-compiled	[CE]  <identifier>  expected	77	None	replace
11	[BUG]  [BUGGY]    if(stepHandlers!=  null)  {  for(int  i  =  stepStart;  i  <  stepHandlers.size();  ++i)  {  StepHandler  handler  =(StepHandler)stepHandlers.get(i);  if(!  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  public  void  addStepHandler(final  StepHandler  handler)  {  stepHandlers.add(handler);  [BUGGY]    if(stepHandlers!=  null)  {  for(int  i  =  stepStart;  i  <  stepHandlers.size();  ++i)  {  StepHandler  handler  =(StepHandler)stepHandlers.get(i);  if(!  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  addStepHandler  [RETURN_TYPE]  void  StepHandler  handler  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3779644730092272	110	110	1	replace	    if(stepHandlers!=  null)  {  for(int  i  =  stepStart;  i  <  stepHandlers.size();  ++i)  {  StepHandler  handler  =(StepHandler)stepHandlers.get(i);  if(!		non-compiled	[CE]  illegal  start  of  expression	78	None	add
12	[BUG]  [BUGGY]    if(stepHandlers!=  null)  {  for(int  i  =  stepStart;  i  <  stepHandlers.size();  ++i)  {  StepHandler  handler  =(StepHandler)stepHandlers.get(i);  if(handler.  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  public  void  addStepHandler(final  StepHandler  handler)  {  stepHandlers.add(handler);  [BUGGY]    if(stepHandlers!=  null)  {  for(int  i  =  stepStart;  i  <  stepHandlers.size();  ++i)  {  StepHandler  handler  =(StepHandler)stepHandlers.get(i);  if(handler.  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  addStepHandler  [RETURN_TYPE]  void  StepHandler  handler  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3779644730092272	110	110	1	replace	    if(stepHandlers!=  null)  {  for(int  i  =  stepStart;  i  <  stepHandlers.size();  ++i)  {  StepHandler  handler  =(StepHandler)stepHandlers.get(i);  if(handler.		non-compiled	[CE]  <identifier>  expected	78	None	add
