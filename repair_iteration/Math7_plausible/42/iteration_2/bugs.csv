bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  this.events.iterator();  [CE]  cannot  find  symbol  events  [FE]          AssertionError    [CONTEXT]    throws  MaxCountExceededException,  DimensionMismatchException,  NoBracketingException  {    [BUGGY]  Iterator  <  EventState>  iterator  =  this.events.iterator();  [BUGGY]    double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3333333333333333	300	300	1	replace	Iterator  <  EventState>  iterator  =  this.events.iterator();	      Iterator    <    EventState>    iterator    =    eventStates.iterator();    	non-compiled	[CE]  cannot  find  symbol  events	11	None	replace
2	[BUG]  [BUGGY]  Iterator  iterator  =  eventsStates.iterator();  isLastStep  =  false;  [CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]            AssertionError    [CONTEXT]    throws  MaxCountExceededException,  DimensionMismatchException,  NoBracketingException  {    [BUGGY]  Iterator  iterator  =  eventsStates.iterator();  isLastStep  =  false;  [BUGGY]    double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3333333333333333	300	300	1	replace	Iterator  iterator  =  eventsStates.iterator();  isLastStep  =  false;	      Iterator    iterator    =    eventsStates.iterator();    isLastStep    =    true;    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	3	None	replace
3	[BUG]  [BUGGY]  Iterator  iterator  =  this.events.iterator();  isLastStep  =  true;  [CE]  cannot  find  symbol  events  [FE]              AssertionError    [CONTEXT]    throws  MaxCountExceededException,  DimensionMismatchException,  NoBracketingException  {    [BUGGY]  Iterator  iterator  =  this.events.iterator();  isLastStep  =  true;  [BUGGY]    double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3333333333333333	300	300	1	replace	Iterator  iterator  =  this.events.iterator();  isLastStep  =  true;	      Iterator    iterator    =    eventsStates.iterator();    isLastStep    =    true;    	non-compiled	[CE]  cannot  find  symbol  events	3	None	replace
4	[BUG]  [BUGGY]  double  previousT  =  interpolator.getCurrentTime();  double  previousT  =  interpolator.getCurrentTime();  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]    AssertionError    [CONTEXT]    throws  MaxCountExceededException,  DimensionMismatchException,  NoBracketingException  {    [BUGGY]  double  previousT  =  interpolator.getCurrentTime();  double  previousT  =  interpolator.getCurrentTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3333333333333333	300	300	1	replace	double    previousT    =    interpolator.getCurrentTime();    double  previousT  =  interpolator.getCurrentTime();	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	6	None	add
5	[BUG]  [BUGGY]  double  previousT  =  interpolator.getCurrentTime();  Double  previousT  =  interpolator.getCurrentTime();  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]      AssertionError    [CONTEXT]    throws  MaxCountExceededException,  DimensionMismatchException,  NoBracketingException  {    [BUGGY]  double  previousT  =  interpolator.getCurrentTime();  Double  previousT  =  interpolator.getCurrentTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3333333333333333	300	300	1	replace	double    previousT    =    interpolator.getCurrentTime();    Double  previousT  =  interpolator.getCurrentTime();	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	6	None	add
6	[BUG]  [BUGGY]  double  previousT  =  interpolator.getCurrentTime();  final  double  previousT  =  interpolator.getCurrentTime();  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]        AssertionError    [CONTEXT]    throws  MaxCountExceededException,  DimensionMismatchException,  NoBracketingException  {    [BUGGY]  double  previousT  =  interpolator.getCurrentTime();  final  double  previousT  =  interpolator.getCurrentTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3333333333333333	300	300	1	replace	double    previousT    =    interpolator.getCurrentTime();    final  double  previousT  =  interpolator.getCurrentTime();	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	6	None	add
7	[BUG]  [BUGGY]  final  double  previousT  =  interpolator.getPreviousTime();  [CE]  cannot  assign  a  value  to  final  variable  previousT  [FE]    AssertionError    [CONTEXT]    throws  MaxCountExceededException,  DimensionMismatchException,  NoBracketingException  {    [BUGGY]  final  double  previousT  =  interpolator.getPreviousTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3333333333333333	300	300	1	replace	final  double  previousT  =  interpolator.getPreviousTime();	  double    previousT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  previousT	5	None	replace
8	[BUG]  [BUGGY]  double  previousT  =  interpolator.getNext();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    throws  MaxCountExceededException,  DimensionMismatchException,  NoBracketingException  {    [BUGGY]  double  previousT  =  interpolator.getNext();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3333333333333333	300	300	1	replace	double  previousT  =  interpolator.getNext();	  double    previousT    =    interpolator.getCurrentTime();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
9	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousSize()  -  1;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    throws  MaxCountExceededException,  DimensionMismatchException,  NoBracketingException  {    [BUGGY]  double  previousT  =  interpolator.getPreviousSize()  -  1;  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3333333333333333	300	300	1	replace	double  previousT  =  interpolator.getPreviousSize()  -  1;	  double    previousT    =    interpolator.getPreviousSize();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
10	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousTime();  double  previousT  =  interpolator.getPreviousTime();  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]    AssertionError    [CONTEXT]    throws  MaxCountExceededException,  DimensionMismatchException,  NoBracketingException  {    [BUGGY]  double  previousT  =  interpolator.getPreviousTime();  double  previousT  =  interpolator.getPreviousTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3333333333333333	300	300	1	replace	double    previousT    =    interpolator.getPreviousTime();    double  previousT  =  interpolator.getPreviousTime();	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	4	None	add
11	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousTime();  Double  previousT  =  interpolator.getPreviousTime();  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]      AssertionError    [CONTEXT]    throws  MaxCountExceededException,  DimensionMismatchException,  NoBracketingException  {    [BUGGY]  double  previousT  =  interpolator.getPreviousTime();  Double  previousT  =  interpolator.getPreviousTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3333333333333333	300	300	1	replace	double    previousT    =    interpolator.getPreviousTime();    Double  previousT  =  interpolator.getPreviousTime();	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	4	None	add
12	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]        AssertionError    [CONTEXT]    throws  MaxCountExceededException,  DimensionMismatchException,  NoBracketingException  {    [BUGGY]  double  previousT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3333333333333333	300	300	1	replace	double    previousT    =    interpolator.getPreviousTime();    final  double  previousT  =  interpolator.getPreviousTime();	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	4	None	add
13	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  eventsStates.iterator();  [CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]          AssertionError    [CONTEXT]    throws  MaxCountExceededException,  DimensionMismatchException,  NoBracketingException  {    [BUGGY]  Iterator  <  EventState>  iterator  =  eventsStates.iterator();  [BUGGY]    double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3333333333333333	300	300	1	replace	Iterator  <  EventState>  iterator  =  eventsStates.iterator();	      Iterator    <    EventState>    iterator    =    eventStates.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	11	None	replace
14	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousT();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    throws  MaxCountExceededException,  DimensionMismatchException,  NoBracketingException  {    [BUGGY]  double  previousT  =  interpolator.getPreviousT();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3333333333333333	300	300	1	replace	double  previousT  =  interpolator.getPreviousT();	  double    previousT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
15	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousTTime();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    throws  MaxCountExceededException,  DimensionMismatchException,  NoBracketingException  {    [BUGGY]  double  previousT  =  interpolator.getPreviousTTime();  [BUGGY]    final  double  currentT  =  interpolator.getGlobalCurrentTime();  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3333333333333333	300	300	1	replace	double  previousT  =  interpolator.getPreviousTTime();	  double    previousT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
16	[BUG]  [BUGGY]  Iterator  iterator  =  stepHandlers.iterator();  [CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]        AssertionError    [CONTEXT]    throws  MaxCountExceededException,  DimensionMismatchException,  NoBracketingException  {    [BUGGY]  Iterator  iterator  =  stepHandlers.iterator();  [BUGGY]    double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3333333333333333	300	300	1	replace	Iterator  iterator  =  stepHandlers.iterator();	      Iterator    iterator    =    eventsStates.iterator();    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	1	None	replace
17	[BUG]  [BUGGY]  Iterator  iterator  =  this.eventsStates.iterator();  isLastStep  =  true;  [CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]            AssertionError    [CONTEXT]    throws  MaxCountExceededException,  DimensionMismatchException,  NoBracketingException  {    [BUGGY]  Iterator  iterator  =  this.eventsStates.iterator();  isLastStep  =  true;  [BUGGY]    double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3333333333333333	300	300	1	replace	Iterator  iterator  =  this.eventsStates.iterator();  isLastStep  =  true;	      Iterator    iterator    =    eventsStates.iterator();    isLastStep    =    true;    	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	3	None	replace
18	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  this.eventStates.iterator();  [CE]  cannot  find  symbol  eventStates  [FE]          AssertionError    [CONTEXT]    throws  MaxCountExceededException,  DimensionMismatchException,  NoBracketingException  {    [BUGGY]  Iterator  <  EventState>  iterator  =  this.eventStates.iterator();  [BUGGY]    double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.3333333333333333	300	300	1	replace	Iterator  <  EventState>  iterator  =  this.eventStates.iterator();	      Iterator    <    EventState>    iterator    =    eventStates.iterator();    	non-compiled	[CE]  cannot  find  symbol  eventStates	11	None	replace
