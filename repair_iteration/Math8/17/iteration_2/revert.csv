projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92for(inti=0;i<samples.size();i++){
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92for(inti=0;i<probs.size();i++){
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGenerator<Pair<T,Double>sample=random.getValue();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGenerator<Pair<T,Double>sample=random.get(rng);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGenerator<Pair<T,Double>sample=random.getValues();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGeneratorrandomGenerator=rng.getRandomGenerator();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGeneratorrandomGenerator=rng.getValue();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGeneratorrandomGenerator=newRandomGenerator(random);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGenerator<Pair<T,Double>sample=random.get(probs);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGenerator<Pair<T,Double>sample=rng.getValue();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGenerator<T>random=newRandomGenerator<T>(singletons.size());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGeneratorrandomGenerator=newRandomGenerator(rng);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGeneratorrandomGenerator=newRandomGenerator(probs);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGeneratorrandomGenerator=rng,random.getRandomGenerator();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGenerator<Pair<T,Double>sample=probs.getValues();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGenerator<Pair<T,Double>sample=rng.getValues();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGenerator<Pair<T,Double>sample=probs.getValue();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGeneratorrandomGenerator=random.getRandomGenerator();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGenerator<Pair<T,Double>sample=random.get(tests);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGenerator<T>sample=randomGenerator.nextDouble();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGeneratorrandomGenerator=newRandomGenerator(random,probs);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGenerator<Pair<T,Double>sample=probs.get(0);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGenerator<T>sample=rng.nextDouble();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGeneratorrandomGenerator=newRandomGenerator(rng,probs);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGeneratorrandomGenerator=newRandomGenerator(random,probs,rng);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGeneratorrandomGenerator=rng,probs.getRandomGenerator();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGeneratorrandomGenerator=probs,random.getRandomGenerator();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGeneratorrandomGenerator=newRandomGenerator(tests);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGenerator<Pair<T,Double>sample=random.get(probs,probs.length);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGeneratorrandomGenerator=newRandomGenerator(probs,probs.length);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGeneratorrandomGenerator=newRandomGenerator(probs,rng);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGeneratorrandomGenerator=newRandomGenerator(rng.getRandomGenerator());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGenerator<T>random=newRandomGenerator<T>(probs.size());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGenerator<T>random=newRandomGenerator<T>(tests.size());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGenerator<Pair<T,Double>sample=random.get(tests,probs);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGenerator<Pair<T,Double>sample=probs.get(probs);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGenerator<T>sample=randomGenerator.nextDouble(probs);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGeneratorrandomGenerator=newRandomGenerator(probs,probs);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGeneratorrandomGenerator=newRandomGenerator(probs,random);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGeneratorrandomGenerator=newRandomGenerator(thousands,probs);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGeneratorrandomGenerator=newRandomGenerator(thousands);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGenerator<Pair<T,Double>sample=probs.get(rng);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGeneratorrandomGenerator=random,rng.getRandomGenerator();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGenerator<Pair<T,Double>sample=randoms.get(probs);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGenerator<Pair<T,Double>sample=randoms.get(tests);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java92RandomGeneratorrandomGenerator=random.getRandomGenerator(rng);
