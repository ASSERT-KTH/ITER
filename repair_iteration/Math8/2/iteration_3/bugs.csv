bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.singletontons  =  Lists.newArrayList(singletons);  [CE]  illegal  start  of  expression  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {  this(new  Well19937c(),  samples);      [BUGGY]  this.singletontons  =  Lists.newArrayList(singletons);  [BUGGY]        [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	70	70	1	replace	this.singletontons  =  Lists.newArrayList(singletons);	  this.singletontons    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  this.singletons  =  Double.parseDouble(singletons)/  1;  [CE]  illegal  start  of  expression  [FE]              ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {  this(new  Well19937c(),  samples);      [BUGGY]  this.singletons  =  Double.parseDouble(singletons)/  1;  [BUGGY]        [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	70	70	1	replace	this.singletons  =  Double.parseDouble(singletons)/  1;	  this.singletons    =    Double.parseDouble(singletons)+    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
3	[BUG]  [BUGGY]  RandomGenerator  randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedField(this,  Pair.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  expression  [FE]                ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {  this(new  Well19937c(),  samples);      [BUGGY]  RandomGenerator  randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedField(this,  Pair.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY);  [BUGGY]        [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	70	70	1	replace	RandomGenerator  randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedField(this,  Pair.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY);	  RandomGenerator    randomGenerator    =    new    RandomGenerator();    randomGenerator.setIndexedField(this,    T,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
4	[BUG]  [BUGGY]  this.singletons  =  Double.valueOf(singletons.length  -  1);  [CE]  illegal  start  of  expression  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {  this(new  Well19937c(),  samples);      [BUGGY]  this.singletons  =  Double.valueOf(singletons.length  -  1);  [BUGGY]        [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	70	70	1	replace	this.singletons  =  Double.valueOf(singletons.length  -  1);	  this.singletons    =    Double.valueOf(singletons.length);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
5	[BUG]  [BUGGY]  RandomGenerator  randomGenerator  =  getValueGenerator();  randomGenerator.setIndexedField(this,  Pair  <  T,  Double>,  Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  expression  [FE]                ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {  this(new  Well19937c(),  samples);      [BUGGY]  RandomGenerator  randomGenerator  =  getValueGenerator();  randomGenerator.setIndexedField(this,  Pair  <  T,  Double>,  Double.POSITIVE_INFINITY);  [BUGGY]        [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	70	70	1	replace	RandomGenerator  randomGenerator  =  getValueGenerator();  randomGenerator.setIndexedField(this,  Pair  <  T,  Double>,  Double.POSITIVE_INFINITY);	  RandomGenerator    randomGenerator    =    getValueGenerator();    randomGenerator.setIndexedField(this,    T,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
6	[BUG]  [BUGGY]  randomGenerator  =  getValueGenerator();  randomGenerator.setIndexedField(this,  T,  Double.POSITIVE_INFINITY,  randomGenerator);  [CE]  illegal  start  of  expression  [FE]                  ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {  this(new  Well19937c(),  samples);      [BUGGY]  randomGenerator  =  getValueGenerator();  randomGenerator.setIndexedField(this,  T,  Double.POSITIVE_INFINITY,  randomGenerator);  [BUGGY]        [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	70	70	1	replace	randomGenerator  =  getValueGenerator();  randomGenerator.setIndexedField(this,  T,  Double.POSITIVE_INFINITY,  randomGenerator);	  RandomGenerator    randomGenerator    =    getValueGenerator();    randomGenerator.setIndexedField(this,    T,    Double.POSITIVE_INFINITY,    randomGenerator);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
7	[BUG]  [BUGGY]  this.singletons  =  Double.valueOf(singletons,  randomgenerator).doubleValue();  [CE]  illegal  start  of  expression  [FE]              ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {  this(new  Well19937c(),  samples);      [BUGGY]  this.singletons  =  Double.valueOf(singletons,  randomgenerator).doubleValue();  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	70	70	1	replace	this.singletons  =  Double.valueOf(singletons,  randomgenerator).doubleValue();	  this.singletons    =    Double.valueOf(singletons,    randomGenerator).doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
8	[BUG]  [BUGGY]  this.singletons  =  Double.valueOf(singletons,  RandomGenerator.DEFAULT).doubleValue();  [CE]  illegal  start  of  expression  [FE]              ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {  this(new  Well19937c(),  samples);      [BUGGY]  this.singletons  =  Double.valueOf(singletons,  RandomGenerator.DEFAULT).doubleValue();  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	70	70	1	replace	this.singletons  =  Double.valueOf(singletons,  RandomGenerator.DEFAULT).doubleValue();	  this.singletons    =    Double.valueOf(singletons,    randomGenerator).doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
9	[BUG]  [BUGGY]  randomGenerator  =  getValueGenerator();  randomGenerator.setIndexedField(this,  T,  Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  expression  [FE]                ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {  this(new  Well19937c(),  samples);      [BUGGY]  randomGenerator  =  getValueGenerator();  randomGenerator.setIndexedField(this,  T,  Double.POSITIVE_INFINITY);  [BUGGY]        [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	70	70	1	replace	randomGenerator  =  getValueGenerator();  randomGenerator.setIndexedField(this,  T,  Double.POSITIVE_INFINITY);	  RandomGenerator    randomGenerator    =    getValueGenerator();    randomGenerator.setIndexedField(this,    T,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
10	[BUG]  [BUGGY]  RandomGenerator  randomGenerator  =  new  RandomGenerator(this);  randomGenerator.setIndexedField(this,  T,  Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  expression  [FE]                ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {  this(new  Well19937c(),  samples);      [BUGGY]  RandomGenerator  randomGenerator  =  new  RandomGenerator(this);  randomGenerator.setIndexedField(this,  T,  Double.POSITIVE_INFINITY);  [BUGGY]        [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	70	70	1	replace	RandomGenerator  randomGenerator  =  new  RandomGenerator(this);  randomGenerator.setIndexedField(this,  T,  Double.POSITIVE_INFINITY);	  RandomGenerator    randomGenerator    =    new    RandomGenerator();    randomGenerator.setIndexedField(this,    T,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
11	[BUG]  [BUGGY]  this.singletontons  =  Lists.newLinkedList();  [CE]  illegal  start  of  expression  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {  this(new  Well19937c(),  samples);      [BUGGY]  this.singletontons  =  Lists.newLinkedList();  [BUGGY]        [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	70	70	1	replace	this.singletontons  =  Lists.newLinkedList();	  this.singletontons    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
12	[BUG]  [BUGGY]  randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedField(this,  T,  Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  expression  [FE]                ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {  this(new  Well19937c(),  samples);      [BUGGY]  randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedField(this,  T,  Double.POSITIVE_INFINITY);  [BUGGY]        [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	70	70	1	replace	randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedField(this,  T,  Double.POSITIVE_INFINITY);	  RandomGenerator    randomGenerator    =    new    RandomGenerator();    randomGenerator.setIndexedField(this,    T,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
