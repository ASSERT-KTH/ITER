projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGenerator<T>random=rng.getRandomGenerator();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrng=newRandomGenerator(samples);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrng=(DynamicGenerator)this.selectedSegments.get(rng);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87random=rng;
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87random=newRandomGenerator(rng.getValue());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87random=newRandomGenerator(rng,samples);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87random=newRandomGenerator(rng);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrng=newRandomGenerator(samples.size());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrng=newRandomGenerator(samples.get(0));
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrandomGenerator=rng.getRandomGenerator();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrandomGenerator=rng.getValue();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87random=newRandomGenerator(rng,rng.getValue());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrandom=newRandomGenerator(rng,rng.getValue());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87random=newRandomGenerator(rng,samples,probs);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87random=newRandomGenerator(rng,samples,probabilitys);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrng=(DynamicGenerator)this.selectedSegments.get(random);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrng=(DynamicGenerator)this.selectedSegments.get(variable);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGenerator<T>random=rng.getRandomGenerator(null);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrandom=newRandomGenerator(rng,samples);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrng=newRandomGenerator(samples.get(0),samples.size());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrng=newRandomGenerator(samples.get(0),sample.getValue());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrandomGenerator=rng.generateRandomGenerator();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrng=newRandomGenerator(tests);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrng=newRandomGenerator(samples.size()-1);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrng=newRandomGenerator(samples.size()+1);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87random=newRandomGenerator(rng,probs);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrng=(DynamicGenerator)this.selectedSegments.get(p);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87random=newRandomGenerator(rng,samples,probabilities);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87random=newRandomGenerator(rng,sample);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrng=newRandomGenerator(samples.get(0),sample.getKey());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrng=newRandomGenerator(samples.get(0),sample.getValue()+1);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87random=newRandomGenerator(rng,sample.getValue());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87random=newRandomGenerator(rng,rng.getKey());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87random=newRandomGenerator(rng,samples,Probabilities);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrng=newRandomGenerator(samples.get(0),probs.size());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrng=newRandomGenerator(samples.get(0),samples.size()+1);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrng=(DynamicGenerator)this.selectedSegments.get(0);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrandomGenerator=newRandomGenerator(rng.generateRandomGenerator());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrandom=newRandomGenerator(rng,sample.getValue());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrandom=newRandomGenerator(rng,rng.getKey());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrandom=newRandomGenerator(rng,samples,probs);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrandom=newRandomGenerator(rng,samples,probabilities);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrng=newRandomGenerator(tests,random);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrng=(DynamicGenerator)this.selectedSegments.get(variable,samples);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87random=newRandomGenerator(rng,probs,probabilities);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrandom=newRandomGenerator(rng,probs,probabilities);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87random=newRandomGenerator(rng,probabilitys);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGenerator<T>random=rng.getRandomGenerator(null,null);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGenerator<T>random=rng.getRandomGenerator(null,sample);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrng=newRandomGenerator(samples.get(0),samples.get(1));
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGenerator<T>random=rng.getRandomGenerator(null,probs);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrng=newRandomGenerator(samples.get(0),samples.size()-1);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87random=newRandomGenerator(rng,sample,probs);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrng=(DynamicGenerator)this.selectedSegments.get(random-1);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrng=(DynamicGenerator)this.selectedSegments.get(variable,0);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrng=newRandomGenerator(tests.size());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrng=newRandomGenerator(tests,probs);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrandom=newRandomGenerator(rng,probs);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87random=newRandomGenerator(rng,Arrays.asList(samples));
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGenerator<T>random=rng.getRandomGenerator(random);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87randomGeneratorrng=newRandomGenerator(samples.size());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrandom=newRandomGenerator(rng,samples,probabilitys);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrandomGenerator=newRandomGenerator(samples.size());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87random=newRandomGenerator(rng,samples,probableities);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87random=newRandomGenerator(rng,probabilities);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrandomGenerator=rng,randomGenerator.generateRandomGenerator();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87random=newRandomGenerator(rng,probabilities,samples);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java87RandomGeneratorrng=newRandomGenerator(samples.get(0),singletons.size());
