8	[BUG]  [BUGGY]  for  (int  i  =  0;  i  <  sampleSize;  i++)  {  [FE]  ArrayStoreException  [CONTEXT]  public  T[]  sample(int  sampleSize)  throws  NotStrictlyPositiveException  {  if  (sampleSize  <=  0)  {  throw  new  NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,  sampleSize);  }  final  T[]out  =  (T[])  java.lang.reflect.Array.newInstance(singletons.get(0).getClass(),  sampleSize);  [BUGGY]  for  (int  i  =  0;  i  <  sampleSize;  i++)  {  [BUGGY]  out[i]  =  sample();  }  return  out;  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T[]    int  sampleSize  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  int  i  sampleSize  T[]  out    	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	189	189	1	replace	for(int  i  =  1;  i  <  sampleSize;  i++)  {	for  (int  i  =  0;  i  <  sampleSize;  i++)  {  	plausible		9	0
