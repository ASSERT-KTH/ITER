bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  null,  randomGenerator);  [CE]  '('  or  '['  expected  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  null,  randomGenerator);  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  null,  randomGenerator);	  this(new    SortedList    <    Pair    <    T,    Double    >>    samples,    null);    	non-compiled	[CE]  '('  or  '['  expected	13	None	replace
2	[BUG]  [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  null,  false);  [CE]  '('  or  '['  expected  [FE]              ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  null,  false);  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  null,  false);	  this(new    SortedList    <    Pair    <    T,    Double    >>    samples,    null);    	non-compiled	[CE]  '('  or  '['  expected	13	None	replace
3	[BUG]  [BUGGY]  this(new  Well2001c(),  samples,  null,  randomGenerator);  [CE]  cannot  find  symbol  [FE]              ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  Well2001c(),  samples,  null,  randomGenerator);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well2001c(),  samples,  null,  randomGenerator);	  this(new    Well2001c(),    samples,    null);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
4	[BUG]  [BUGGY]  this(new  Well2001c(),  samples,  null,  probabilities);  [CE]  cannot  find  symbol  [FE]                ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  Well2001c(),  samples,  null,  probabilities);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well2001c(),  samples,  null,  probabilities);	  this(new    Well2001c(),    samples,    null);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
5	[BUG]  [BUGGY]  this(new  SortedWell19937(),  samples,  null,  randomGenerator);  [CE]  cannot  find  symbol  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedWell19937(),  samples,  null,  randomGenerator);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedWell19937(),  samples,  null,  randomGenerator);	  this(new    SortedWell19937(),    samples,    null);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
6	[BUG]  [BUGGY]  this(new  SortedWell19937(),  samples,  null,  probabilities);  [CE]  cannot  find  symbol  [FE]              ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedWell19937(),  samples,  null,  probabilities);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedWell19937(),  samples,  null,  probabilities);	  this(new    SortedWell19937(),    samples,    null);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
7	[BUG]  [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  randomGenerator,  null);  [CE]  '('  or  '['  expected  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  randomGenerator,  null);  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  randomGenerator,  null);	  this(new    SortedList    <    Pair    <    T,    Double    >>    samples,    randomGenerator);    	non-compiled	[CE]  '('  or  '['  expected	16	None	replace
8	[BUG]  [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double>),  samples,  randomGenerator);  [CE]  >  expected  [FE]                  ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double>),  samples,  randomGenerator);  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedList  <  Pair  <  T,  Double>),  samples,  randomGenerator);	  this(new    SortedList    <    Pair    <    T,    Double>),    samples);    	non-compiled	[CE]  >  expected	2	None	replace
9	[BUG]  [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double>),  samples,  null);  [CE]  >  expected  [FE]                    ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double>),  samples,  null);  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedList  <  Pair  <  T,  Double>),  samples,  null);	  this(new    SortedList    <    Pair    <    T,    Double>),    samples);    	non-compiled	[CE]  >  expected	2	None	replace
10	[BUG]  [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  true);  [CE]  '('  or  '['  expected  [FE]              ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  true);  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  true);	  this(new    SortedList    <    Pair    <    T,    Double    >>    samples,    false);    	non-compiled	[CE]  '('  or  '['  expected	14	None	replace
11	[BUG]  [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >=  samples,  true);  [CE]  >  expected  [FE]                ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >=  samples,  true);  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedList  <  Pair  <  T,  Double  >=  samples,  true);	  this(new    SortedList    <    Pair    <    T,    Double    >>    samples,    false);    	non-compiled	[CE]  >  expected	14	None	replace
12	[BUG]  [BUGGY]  this(new  SortedWell19937c(),  randomGenerator,  samples);  [CE]  cannot  find  symbol  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedWell19937c(),  randomGenerator,  samples);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedWell19937c(),  randomGenerator,  samples);	  this(new    SortedWell19937c(),    samples,    randomGenerator);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
13	[BUG]  [BUGGY]  this(new  SortedWell19937c(),  samples,  randomGenerator,  randomGenerator);  [CE]  cannot  find  symbol  [FE]              ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedWell19937c(),  samples,  randomGenerator,  randomGenerator);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedWell19937c(),  samples,  randomGenerator,  randomGenerator);	  this(new    SortedWell19937c(),    samples,    randomGenerator);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
14	[BUG]  [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double>,  samples,  randomGenerator);  [CE]  >  expected  [FE]                ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double>,  samples,  randomGenerator);  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedList  <  Pair  <  T,  Double>,  samples,  randomGenerator);	  this(new    SortedList    <    Pair    <    T,    Double>,    samples);    	non-compiled	[CE]  >  expected	1	None	replace
15	[BUG]  [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double>,  samples,  null);  [CE]  illegal  start  of  type  [FE]                  ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double>,  samples,  null);  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedList  <  Pair  <  T,  Double>,  samples,  null);	  this(new    SortedList    <    Pair    <    T,    Double>,    samples);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
16	[BUG]  [BUGGY]  this(new  Well19937(),  samples,  Double.valueOf(T));  [CE]  cannot  find  symbol  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  Well19937(),  samples,  Double.valueOf(T));  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937(),  samples,  Double.valueOf(T));	  this(new    Well19937(),    samples,    T);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
17	[BUG]  [BUGGY]  this(new  SortedWell2001c(),  samples,  T);  [CE]  cannot  find  symbol  [FE]              ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedWell2001c(),  samples,  T);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedWell2001c(),  samples,  T);	  this(new    Well2001c(),    samples,    T);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
18	[BUG]  [BUGGY]  this(new  Well2001c(),  samples,  Double.valueOf(T));  [CE]  cannot  find  symbol  [FE]                ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  Well2001c(),  samples,  Double.valueOf(T));  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well2001c(),  samples,  Double.valueOf(T));	  this(new    Well2001c(),    samples,    T);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
19	[BUG]  [BUGGY]  this(new  Well19937c(),  samples,  double[]  probabilities);  [CE]  '.class'  expected  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  Well19937c(),  samples,  double[]  probabilities);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937c(),  samples,  double[]  probabilities);	  this(new    Well19937c(),    samples,    probability);    	non-compiled	[CE]  '.class'  expected	8	None	replace
20	[BUG]  [BUGGY]  this(new  SortedWell19937(),  randomGenerator,  samples);  [CE]  cannot  find  symbol  [FE]              ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedWell19937(),  randomGenerator,  samples);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedWell19937(),  randomGenerator,  samples);	  this(new    SortedWell19937(),    samples,    randomGenerator);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
21	[BUG]  [BUGGY]  this(new  SortedWell19937(),  samples,  randomGenerator,  randomGenerator);  [CE]  cannot  find  symbol  [FE]                ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedWell19937(),  samples,  randomGenerator,  randomGenerator);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedWell19937(),  samples,  randomGenerator,  randomGenerator);	  this(new    SortedWell19937(),    samples,    randomGenerator);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
22	[BUG]  [BUGGY]  this(new  Well19937c(),  samples,  probabilities);  [CE]  cannot  reference  probabilities  before  supertype  constructor  has  been  called  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  Well19937c(),  samples,  probabilities);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937c(),  samples,  probabilities);	  this(new    Well19937c(),    samples,    randomizer);    	non-compiled	[CE]  cannot  reference  probabilities  before  supertype  constructor  has  been  called	22	None	replace
23	[BUG]  [BUGGY]  this(new  SortedWell19937c(),  samples,  null,  randomGenerator);  [CE]  cannot  find  symbol  [FE]              ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedWell19937c(),  samples,  null,  randomGenerator);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedWell19937c(),  samples,  null,  randomGenerator);	  this(new    SortedWell19937c(),    samples,    null);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
24	[BUG]  [BUGGY]  this(new  SortedWell19937c(),  samples,  null,  probabilities);  [CE]  cannot  find  symbol  [FE]                ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedWell19937c(),  samples,  null,  probabilities);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedWell19937c(),  samples,  null,  probabilities);	  this(new    SortedWell19937c(),    samples,    null);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
25	[BUG]  [BUGGY]  RandomGenerator  randomGenerator  =  new  RandomGenerator(this,  samples);  randomGenerator.setIndexedField(this,  T,  0,  samples);  [CE]  RandomGenerator  is  abstract;  cannot  be  instantiated  [FE]              ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  RandomGenerator  randomGenerator  =  new  RandomGenerator(this,  samples);  randomGenerator.setIndexedField(this,  T,  0,  samples);  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	RandomGenerator  randomGenerator  =  new  RandomGenerator(this,  samples);  randomGenerator.setIndexedField(this,  T,  0,  samples);	  RandomGenerator    randomGenerator    =    new    RandomGenerator(this);    randomGenerator.setIndexedField(this,    T,    0,    samples);    	non-compiled	[CE]  RandomGenerator  is  abstract;  cannot  be  instantiated	15	None	replace
26	[BUG]  [BUGGY]  RandomGenerator  randomGenerator  =  new  RandomGenerator(this);  randomGenerator.setIndexedField(this,  Pair  <  T,  samples);  [CE]  RandomGenerator  is  abstract;  cannot  be  instantiated  [FE]                ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  RandomGenerator  randomGenerator  =  new  RandomGenerator(this);  randomGenerator.setIndexedField(this,  Pair  <  T,  samples);  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	RandomGenerator  randomGenerator  =  new  RandomGenerator(this);  randomGenerator.setIndexedField(this,  Pair  <  T,  samples);	  RandomGenerator    randomGenerator    =    new    RandomGenerator(this);    randomGenerator.setIndexedField(this,    T,    0,    samples);    	non-compiled	[CE]  RandomGenerator  is  abstract;  cannot  be  instantiated	15	None	replace
27	[BUG]  [BUGGY]  this(new  Well2001c(),  randomGenerator,  samples);  [CE]  cannot  find  symbol  [FE]                ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  Well2001c(),  randomGenerator,  samples);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well2001c(),  randomGenerator,  samples);	  this(new    Well2001c(),    samples,    randomGenerator);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
28	[BUG]  [BUGGY]  this(new  Well2001c(),  samples,  randomGenerator,  randomGenerator);  [CE]  cannot  find  symbol  [FE]                  ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  Well2001c(),  samples,  randomGenerator,  randomGenerator);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well2001c(),  samples,  randomGenerator,  randomGenerator);	  this(new    Well2001c(),    samples,    randomGenerator);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
29	[BUG]  [BUGGY]  this(new  Well19937c(),  samples,  double[]);  [CE]  '.class'  expected  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  Well19937c(),  samples,  double[]);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937c(),  samples,  double[]);	  this(new    Well19937c(),    samples,    T);    	non-compiled	[CE]  '.class'  expected	19	None	replace
30	[BUG]  [BUGGY]  randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedSingletons(selected);  [CE]  cannot  find  symbol  randomGenerator  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedSingletons(selected);  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedSingletons(selected);	  RandomGenerator    randomGenerator    =    new    RandomGenerator();    randomGenerator.setIndexedSingletons(selected);    	non-compiled	[CE]  cannot  find  symbol  randomGenerator	17	None	replace
31	[BUG]  [BUGGY]  this(new  Well19937c(),  samples,  null,  probabilities);  [CE]  cannot  reference  probabilities  before  supertype  constructor  has  been  called  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  Well19937c(),  samples,  null,  probabilities);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937c(),  samples,  null,  probabilities);	  this(new    Well19937c(),    samples,    null,    randomGenerator);    	non-compiled	[CE]  cannot  reference  probabilities  before  supertype  constructor  has  been  called	3	None	replace
32	[BUG]  [BUGGY]  this(new  Well19937c(),  samples,  null,  probability);  [CE]  cannot  find  symbol  probability  [FE]              ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  Well19937c(),  samples,  null,  probability);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937c(),  samples,  null,  probability);	  this(new    Well19937c(),    samples,    null,    randomGenerator);    	non-compiled	[CE]  cannot  find  symbol  probability	3	None	replace
33	[BUG]  [BUGGY]  this(new  Well19937c(),  samples,  0,  sampleCount,  null);  [CE]  cannot  find  symbol  sampleCount  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  Well19937c(),  samples,  0,  sampleCount,  null);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937c(),  samples,  0,  sampleCount,  null);	  this(new    Well19937c(),    samples,    0,    null);    	non-compiled	[CE]  cannot  find  symbol  sampleCount	18	None	replace
34	[BUG]  [BUGGY]  this(new  SortedWell19937c(),  samples,  0,  null);  [CE]  cannot  find  symbol  [FE]              ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedWell19937c(),  samples,  0,  null);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedWell19937c(),  samples,  0,  null);	  this(new    Well19937c(),    samples,    0,    null);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
35	[BUG]  [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >=  samples,  new  Double[]  {  }  );  [CE]  >  expected  [FE]              ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >=  samples,  new  Double[]  {  }  );  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedList  <  Pair  <  T,  Double  >=  samples,  new  Double[]  {  }  );	  this(new    SortedList    <    Pair    <    T,    Double    >>    samples,    new    Double[]    {    }    );    	non-compiled	[CE]  >  expected	20	None	replace
36	[BUG]  [BUGGY]  this(new  Well19937(),  randomGenerator,  samples);  [CE]  cannot  find  symbol  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  Well19937(),  randomGenerator,  samples);  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937(),  randomGenerator,  samples);	  this(new    Well19937(),    samples,    randomGenerator);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
37	[BUG]  [BUGGY]  this(new  Well19937(),  samples,  null,  probabilities);  [CE]  cannot  find  symbol  [FE]              ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  Well19937(),  samples,  null,  probabilities);  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937(),  samples,  null,  probabilities);	  this(new    Well19937(),    samples,    null);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
38	[BUG]  [BUGGY]  this(new  Well19937(),  samples,  null,  randomGenerator);  [CE]  cannot  find  symbol  [FE]                ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  Well19937(),  samples,  null,  randomGenerator);  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937(),  samples,  null,  randomGenerator);	  this(new    Well19937(),    samples,    null);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
39	[BUG]  [BUGGY]  this(new  SortedWell2001c(),  samples,  randomGenerator);  [CE]  cannot  find  symbol  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedWell2001c(),  samples,  randomGenerator);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedWell2001c(),  samples,  randomGenerator);	  this(new    SortedWell19937c(),    samples,    randomGenerator);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
40	[BUG]  [BUGGY]  this(new  Well2001c(),  samples,  Double.POSITIVE_INFINITY);  [CE]  cannot  find  symbol  [FE]              ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  Well2001c(),  samples,  Double.POSITIVE_INFINITY);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well2001c(),  samples,  Double.POSITIVE_INFINITY);	  this(new    Well2001c(),    samples,    T);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
41	[BUG]  [BUGGY]  this(new  Well2001c(),  samples,  T,  randomGenerator);  [CE]  cannot  find  symbol  [FE]                ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  Well2001c(),  samples,  T,  randomGenerator);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well2001c(),  samples,  T,  randomGenerator);	  this(new    Well2001c(),    samples,    T);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
42	[BUG]  [BUGGY]  RandomGenerator  randomGenerator  =  new  RandomGenerator(this);  randomGenerator.setIndexedField(this,  T,  1,  samples);  [CE]  RandomGenerator  is  abstract;  cannot  be  instantiated  [FE]              ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  RandomGenerator  randomGenerator  =  new  RandomGenerator(this);  randomGenerator.setIndexedField(this,  T,  1,  samples);  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	RandomGenerator  randomGenerator  =  new  RandomGenerator(this);  randomGenerator.setIndexedField(this,  T,  1,  samples);	  RandomGenerator    randomGenerator    =    new    RandomGenerator(this);    randomGenerator.setIndexedField(this,    T,    0,    samples);    	non-compiled	[CE]  RandomGenerator  is  abstract;  cannot  be  instantiated	15	None	replace
43	[BUG]  [BUGGY]  RandomGenerator  randomGenerator  =  new  RandomGenerator(this);  randomGenerator.setIndexedField(this,  Pair  <  T,  samples,  0,  randomGenerator.length);  [CE]  RandomGenerator  is  abstract;  cannot  be  instantiated  [FE]                ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  RandomGenerator  randomGenerator  =  new  RandomGenerator(this);  randomGenerator.setIndexedField(this,  Pair  <  T,  samples,  0,  randomGenerator.length);  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	RandomGenerator  randomGenerator  =  new  RandomGenerator(this);  randomGenerator.setIndexedField(this,  Pair  <  T,  samples,  0,  randomGenerator.length);	  RandomGenerator    randomGenerator    =    new    RandomGenerator(this);    randomGenerator.setIndexedField(this,    T,    0,    samples);    	non-compiled	[CE]  RandomGenerator  is  abstract;  cannot  be  instantiated	15	None	replace
44	[BUG]  [BUGGY]  this(new  Well19937(),  samples,  Double.POSITIVE_INFINITY);  [CE]  cannot  find  symbol  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  Well19937(),  samples,  Double.POSITIVE_INFINITY);  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937(),  samples,  Double.POSITIVE_INFINITY);	  this(new    Well19937(),    samples,    T);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
45	[BUG]  [BUGGY]  this(new  Well19937c(),  samples,  Double.POSITIVE_INFINITY);  [CE]  no  suitable  constructor  found  for  DiscreteDistribution(Well19937c,List<Pair<T,Double>>,double)  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  Well19937c(),  samples,  Double.POSITIVE_INFINITY);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937c(),  samples,  Double.POSITIVE_INFINITY);	  this(new    Well19937c(),    samples,    T);    	non-compiled	[CE]  no  suitable  constructor  found  for  DiscreteDistribution(Well19937c,List<Pair<T,Double>>,double)	19	None	replace
46	[BUG]  [BUGGY]  this(new  SortedWell2001(),  samples,  randomGenerator);  [CE]  cannot  find  symbol  [FE]              ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedWell2001(),  samples,  randomGenerator);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedWell2001(),  samples,  randomGenerator);	  this(new    SortedWell19937(),    samples,    randomGenerator);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
47	[BUG]  [BUGGY]  this(new  Well19937c(),  samples,  0,  null,  randomGenerator);  [CE]  cannot  find  symbol  randomGenerator  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  Well19937c(),  samples,  0,  null,  randomGenerator);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937c(),  samples,  0,  null,  randomGenerator);	  this(new    Well19937c(),    samples,    0,    null);    	non-compiled	[CE]  cannot  find  symbol  randomGenerator	18	None	replace
48	[BUG]  [BUGGY]  this(new  Well19937c(),  sample,  0,  samples.length,  null);  [CE]  cannot  find  symbol  sample  [FE]              ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  Well19937c(),  sample,  0,  samples.length,  null);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937c(),  sample,  0,  samples.length,  null);	  this(new    Well19937c(),    samples,    0,    null);    	non-compiled	[CE]  cannot  find  symbol  sample	18	None	replace
49	[BUG]  [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >>  randomGenerator,  samples);  [CE]  '('  or  '['  expected  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >>  randomGenerator,  samples);  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedList  <  Pair  <  T,  Double  >>  randomGenerator,  samples);	  this(new    SortedList    <    Pair    <    T,    Double    >>    samples,    randomGenerator);    	non-compiled	[CE]  '('  or  '['  expected	16	None	replace
50	[BUG]  [BUGGY]  this(new  SortedWell2001c(),  randomGenerator,  samples);  [CE]  cannot  find  symbol  [FE]                ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedWell2001c(),  randomGenerator,  samples);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedWell2001c(),  randomGenerator,  samples);	  this(new    Well2001c(),    samples,    randomGenerator);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
51	[BUG]  [BUGGY]  this(new  Well19937c(),  samples,  null,  null);  [CE]  no  suitable  constructor  found  for  DiscreteDistribution(Well19937c,List<Pair<T,Double>>,<null>,<null>)  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  Well19937c(),  samples,  null,  null);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937c(),  samples,  null,  null);	  this(new    Well19937c(),    samples,    null,    randomGenerator);    	non-compiled	[CE]  no  suitable  constructor  found  for  DiscreteDistribution(Well19937c,List<Pair<T,Double>>,<null>,<null>)	3	None	replace
52	[BUG]  [BUGGY]  this(new  Well19937c(),  samples,  double[]  probability);  [CE]  '.class'  expected  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  Well19937c(),  samples,  double[]  probability);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937c(),  samples,  double[]  probability);	  this(new    Well19937c(),    samples,    probability);    	non-compiled	[CE]  '.class'  expected	8	None	replace
53	[BUG]  [BUGGY]  RandomGenerator  randomGenerator  =  new  RandomGenerator(this);  randomGenerator.setIndexedField(this,  T,  0,  samples,  probabilities);  [CE]  RandomGenerator  is  abstract;  cannot  be  instantiated  [FE]              ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  RandomGenerator  randomGenerator  =  new  RandomGenerator(this);  randomGenerator.setIndexedField(this,  T,  0,  samples,  probabilities);  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	RandomGenerator  randomGenerator  =  new  RandomGenerator(this);  randomGenerator.setIndexedField(this,  T,  0,  samples,  probabilities);	  RandomGenerator    randomGenerator    =    new    RandomGenerator(this);    randomGenerator.setIndexedField(this,    T,    0,    samples);    	non-compiled	[CE]  RandomGenerator  is  abstract;  cannot  be  instantiated	15	None	replace
54	[BUG]  [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  0,  null);  [CE]  '('  or  '['  expected  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  0,  null);  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  0,  null);	  this(new    SortedList    <    Pair    <    T,    Double    >>    samples,    null);    	non-compiled	[CE]  '('  or  '['  expected	13	None	replace
55	[BUG]  [BUGGY]  this(new  SortedWell2001(),  samples,  null);  [CE]  cannot  find  symbol  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedWell2001(),  samples,  null);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedWell2001(),  samples,  null);	  this(new    SortedWell19937(),    samples,    null);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
56	[BUG]  [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  randomGenerator,  randomGenerator);  [CE]  '('  or  '['  expected  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  randomGenerator,  randomGenerator);  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  randomGenerator,  randomGenerator);	  this(new    SortedList    <    Pair    <    T,    Double    >>    samples,    randomGenerator);    	non-compiled	[CE]  '('  or  '['  expected	16	None	replace
57	[BUG]  [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  new  Double[]  {  0,  }  );  [CE]  '('  or  '['  expected  [FE]              ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  new  Double[]  {  0,  }  );  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  new  Double[]  {  0,  }  );	  this(new    SortedList    <    Pair    <    T,    Double    >>    samples,    new    Double[]    {    }    );    	non-compiled	[CE]  '('  or  '['  expected	20	None	replace
58	[BUG]  [BUGGY]  RandomGenerator  randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedField(this,  T,  1,  samples,  randomGenerator);  [CE]  RandomGenerator  is  abstract;  cannot  be  instantiated  [FE]              ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  RandomGenerator  randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedField(this,  T,  1,  samples,  randomGenerator);  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	RandomGenerator  randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedField(this,  T,  1,  samples,  randomGenerator);	  RandomGenerator    randomGenerator    =    new    RandomGenerator();    randomGenerator.setIndexedField(this,    T,    1,    samples);    	non-compiled	[CE]  RandomGenerator  is  abstract;  cannot  be  instantiated	21	None	replace
59	[BUG]  [BUGGY]  this(new  Well19937c(),  samples,  Double.NaN);  [CE]  no  suitable  constructor  found  for  DiscreteDistribution(Well19937c,List<Pair<T,Double>>,double)  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  Well19937c(),  samples,  Double.NaN);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937c(),  samples,  Double.NaN);	  this(new    Well19937c(),    samples,    T);    	non-compiled	[CE]  no  suitable  constructor  found  for  DiscreteDistribution(Well19937c,List<Pair<T,Double>>,double)	19	None	replace
60	[BUG]  [BUGGY]  this(new  Well19937(),  samples,  randomGenerator,  randomGenerator);  [CE]  cannot  find  symbol  [FE]            ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  Well19937(),  samples,  randomGenerator,  randomGenerator);  [BUGGY]      this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937(),  samples,  randomGenerator,  randomGenerator);	  this(new    Well19937(),    samples,    randomGenerator);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
61	[BUG]  [BUGGY]  this(new  SortedWell2001c(),  samples,  null);  [CE]  cannot  find  symbol  [FE]              ArrayStoreException      [CONTEXT]      public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {      [BUGGY]  this(new  SortedWell2001c(),  samples,  null);  [BUGGY]      }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedWell2001c(),  samples,  null);	  this(new    Well2001c(),    samples,    null);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
