bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    this(new  SortedList  <  Pair  <  T,  Double  >=  samples);  [CE]  >  expected  [FE]    ArrayStoreException  [CONTEXT]  public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {  [BUGGY]    this(new  SortedList  <  Pair  <  T,  Double  >=  samples);  [BUGGY]  this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	    this(new  SortedList  <  Pair  <  T,  Double  >=  samples);		non-compiled	[CE]  >  expected	2	None	add
2	[BUG]  [BUGGY]    this(new  SortedList  <  Pair  <  T,  Double  >>  samples);  [CE]  '('  or  '['  expected  [FE]      ArrayStoreException  [CONTEXT]  public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {  [BUGGY]    this(new  SortedList  <  Pair  <  T,  Double  >>  samples);  [BUGGY]  this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	    this(new  SortedList  <  Pair  <  T,  Double  >>  samples);		non-compiled	[CE]  '('  or  '['  expected	2	None	add
3	[BUG]  [BUGGY]    this(new  SortedList  <  Pair  <  T,  Double>));  [CE]  >  expected  [FE]        ArrayStoreException  [CONTEXT]  public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {  [BUGGY]    this(new  SortedList  <  Pair  <  T,  Double>));  [BUGGY]  this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	    this(new  SortedList  <  Pair  <  T,  Double>));		non-compiled	[CE]  >  expected	2	None	add
4	[BUG]  [BUGGY]  this(new  Well19937c(),  samples,  null);  [CE]  no  suitable  constructor  found  for  DiscreteDistribution(Well19937c,List<Pair<T,Double>>,<null>)  [FE]    ArrayStoreException  [CONTEXT]  public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {  [BUGGY]  this(new  Well19937c(),  samples,  null);  [BUGGY]  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937c(),  samples,  null);	this(new  Well19937c(),  samples);  	non-compiled	[CE]  no  suitable  constructor  found  for  DiscreteDistribution(Well19937c,List<Pair<T,Double>>,<null>)	1	None	replace
5	[BUG]  [BUGGY]  this(new  Well2001c(),  samples);  [CE]  cannot  find  symbol  [FE]      ArrayStoreException  [CONTEXT]  public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {  [BUGGY]  this(new  Well2001c(),  samples);  [BUGGY]  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well2001c(),  samples);	this(new  Well19937c(),  samples);  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
6	[BUG]  [BUGGY]  this(new  Well19937c(),  samples,  randomGenerator);  [CE]  cannot  find  symbol  randomGenerator  [FE]    ArrayStoreException  [CONTEXT]  public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {  [BUGGY]  this(new  Well19937c(),  samples,  randomGenerator);  [BUGGY]  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937c(),  samples,  randomGenerator);	this(new  Well19937c(),  samples);  	non-compiled	[CE]  cannot  find  symbol  randomGenerator	1	None	replace
7	[BUG]  [BUGGY]    RandomGenerator  randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedSingletons(singletons);  [CE]  RandomGenerator  is  abstract;  cannot  be  instantiated  [FE]    ArrayStoreException  [CONTEXT]  public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {  [BUGGY]    RandomGenerator  randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedSingletons(singletons);  [BUGGY]  this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	    RandomGenerator  randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedSingletons(singletons);		non-compiled	[CE]  RandomGenerator  is  abstract;  cannot  be  instantiated	2	None	add
8	[BUG]  [BUGGY]  this(new  SortedWell19937c(),  samples);  [CE]  cannot  find  symbol  [FE]    ArrayStoreException  [CONTEXT]  public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {  [BUGGY]  this(new  SortedWell19937c(),  samples);  [BUGGY]  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedWell19937c(),  samples);	this(new  Well19937c(),  samples);  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
9	[BUG]  [BUGGY]    this(new  Well19937(),  samples);  [CE]  cannot  find  symbol  [FE]    ArrayStoreException  [CONTEXT]  public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {  [BUGGY]    this(new  Well19937(),  samples);  [BUGGY]  this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	    this(new  Well19937(),  samples);		non-compiled	[CE]  cannot  find  symbol	2	None	add
10	[BUG]  [BUGGY]    RandomGenerator  randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedField(this,  T,  0,  samples);  [CE]  RandomGenerator  is  abstract;  cannot  be  instantiated  [FE]      ArrayStoreException  [CONTEXT]  public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {  [BUGGY]    RandomGenerator  randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedField(this,  T,  0,  samples);  [BUGGY]  this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	    RandomGenerator  randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedField(this,  T,  0,  samples);		non-compiled	[CE]  RandomGenerator  is  abstract;  cannot  be  instantiated	2	None	add
