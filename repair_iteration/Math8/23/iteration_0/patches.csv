bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(probs!=  null)  {  for(int  i  =  0;  i  <  samples.size();  i++)  {  final  Pair  <  T,  Double>  sample  =  samples.get(i);  probs[i]  =  sample.getValue();  }  [CE]  illegal  start  of  expression  [FE]    ArrayStoreException  [CONTEXT]  for  (int  i  =  0;  i  <  samples.size();  i++)  {  final  Pair<T,  Double>  sample  =  samples.get(i);  singletons.add(sample.getKey());  if  (sample.getValue()  <  0)  {  throw  new  NotPositiveException(sample.getValue());  }  probs[i]  =  sample.getValue();  }  probabilities  =  MathArrays.normalizeArray(probs,  1.0);  [BUGGY]    if(probs!=  null)  {  for(int  i  =  0;  i  <  samples.size();  i++)  {  final  Pair  <  T,  Double>  sample  =  samples.get(i);  probs[i]  =  sample.getValue();  }  [BUGGY]  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  RandomGenerator  rng  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  int  i  Pair  sample  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.2773500981126146	102	102	1	replace	    if(probs!=  null)  {  for(int  i  =  0;  i  <  samples.size();  i++)  {  final  Pair  <  T,  Double>  sample  =  samples.get(i);  probs[i]  =  sample.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	46	None	add
2	[BUG]  [BUGGY]    if(probs!=  null)  {  for(int  i  =  0;  i  <  samples.size();  i++)  {  final  Pair  <  T,  Double>  sample  =  samples.get(i);  probs[i]  =  sample.getKey();  }  [CE]  illegal  start  of  expression  [FE]      ArrayStoreException  [CONTEXT]  for  (int  i  =  0;  i  <  samples.size();  i++)  {  final  Pair<T,  Double>  sample  =  samples.get(i);  singletons.add(sample.getKey());  if  (sample.getValue()  <  0)  {  throw  new  NotPositiveException(sample.getValue());  }  probs[i]  =  sample.getValue();  }  probabilities  =  MathArrays.normalizeArray(probs,  1.0);  [BUGGY]    if(probs!=  null)  {  for(int  i  =  0;  i  <  samples.size();  i++)  {  final  Pair  <  T,  Double>  sample  =  samples.get(i);  probs[i]  =  sample.getKey();  }  [BUGGY]  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  RandomGenerator  rng  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  int  i  Pair  sample  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.2773500981126146	102	102	1	replace	    if(probs!=  null)  {  for(int  i  =  0;  i  <  samples.size();  i++)  {  final  Pair  <  T,  Double>  sample  =  samples.get(i);  probs[i]  =  sample.getKey();  }		non-compiled	[CE]  illegal  start  of  expression	46	None	add
3	[BUG]  [BUGGY]    if(probs!=  null)  {  for(int  i  =  0;  i  <  samples.size();  i++)  {  final  Pair  <  T,  Double>  sample  =  samples.get(i);  probabilities[i]  =  sample.getValue();  }  [CE]  illegal  start  of  expression  [FE]        ArrayStoreException  [CONTEXT]  for  (int  i  =  0;  i  <  samples.size();  i++)  {  final  Pair<T,  Double>  sample  =  samples.get(i);  singletons.add(sample.getKey());  if  (sample.getValue()  <  0)  {  throw  new  NotPositiveException(sample.getValue());  }  probs[i]  =  sample.getValue();  }  probabilities  =  MathArrays.normalizeArray(probs,  1.0);  [BUGGY]    if(probs!=  null)  {  for(int  i  =  0;  i  <  samples.size();  i++)  {  final  Pair  <  T,  Double>  sample  =  samples.get(i);  probabilities[i]  =  sample.getValue();  }  [BUGGY]  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  RandomGenerator  rng  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  int  i  Pair  sample  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.2773500981126146	102	102	1	replace	    if(probs!=  null)  {  for(int  i  =  0;  i  <  samples.size();  i++)  {  final  Pair  <  T,  Double>  sample  =  samples.get(i);  probabilities[i]  =  sample.getValue();  }		non-compiled	[CE]  illegal  start  of  expression	46	None	add
4	[BUG]  [BUGGY]    RandomGenerator  randomGenerator  =  new  RandomGenerator(singletons.get(i).getValue());  [CE]  cannot  find  symbol  i  [FE]    ArrayStoreException  [CONTEXT]  for  (int  i  =  0;  i  <  samples.size();  i++)  {  final  Pair<T,  Double>  sample  =  samples.get(i);  singletons.add(sample.getKey());  if  (sample.getValue()  <  0)  {  throw  new  NotPositiveException(sample.getValue());  }  probs[i]  =  sample.getValue();  }  probabilities  =  MathArrays.normalizeArray(probs,  1.0);  [BUGGY]    RandomGenerator  randomGenerator  =  new  RandomGenerator(singletons.get(i).getValue());  [BUGGY]  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  RandomGenerator  rng  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  int  i  Pair  sample  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.2773500981126146	102	102	1	replace	    RandomGenerator  randomGenerator  =  new  RandomGenerator(singletons.get(i).getValue());		non-compiled	[CE]  cannot  find  symbol  i	46	None	add
5	[BUG]  [BUGGY]    RandomGenerator  randomGenerator  =  new  RandomGenerator(singletons.get(i),  probs);  randomGenerator.setValue(rng);  [CE]  cannot  find  symbol  i  [FE]      ArrayStoreException  [CONTEXT]  for  (int  i  =  0;  i  <  samples.size();  i++)  {  final  Pair<T,  Double>  sample  =  samples.get(i);  singletons.add(sample.getKey());  if  (sample.getValue()  <  0)  {  throw  new  NotPositiveException(sample.getValue());  }  probs[i]  =  sample.getValue();  }  probabilities  =  MathArrays.normalizeArray(probs,  1.0);  [BUGGY]    RandomGenerator  randomGenerator  =  new  RandomGenerator(singletons.get(i),  probs);  randomGenerator.setValue(rng);  [BUGGY]  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  RandomGenerator  rng  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  int  i  Pair  sample  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.2773500981126146	102	102	1	replace	    RandomGenerator  randomGenerator  =  new  RandomGenerator(singletons.get(i),  probs);  randomGenerator.setValue(rng);		non-compiled	[CE]  cannot  find  symbol  i	46	None	add
6	[BUG]  [BUGGY]    RandomGenerator  randomGenerator  =  new  RandomGenerator(singletons.get(i),  probs);  randomGenerator.addValue(rng);  [CE]  cannot  find  symbol  i  [FE]        ArrayStoreException  [CONTEXT]  for  (int  i  =  0;  i  <  samples.size();  i++)  {  final  Pair<T,  Double>  sample  =  samples.get(i);  singletons.add(sample.getKey());  if  (sample.getValue()  <  0)  {  throw  new  NotPositiveException(sample.getValue());  }  probs[i]  =  sample.getValue();  }  probabilities  =  MathArrays.normalizeArray(probs,  1.0);  [BUGGY]    RandomGenerator  randomGenerator  =  new  RandomGenerator(singletons.get(i),  probs);  randomGenerator.addValue(rng);  [BUGGY]  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  RandomGenerator  rng  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  int  i  Pair  sample  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.2773500981126146	102	102	1	replace	    RandomGenerator  randomGenerator  =  new  RandomGenerator(singletons.get(i),  probs);  randomGenerator.addValue(rng);		non-compiled	[CE]  cannot  find  symbol  i	46	None	add
7	[BUG]  [BUGGY]  return  new  Double(singleton.getValue());  [CE]  illegal  start  of  expression  [FE]    ArrayStoreException  [CONTEXT]  for  (int  i  =  0;  i  <  samples.size();  i++)  {  final  Pair<T,  Double>  sample  =  samples.get(i);  singletons.add(sample.getKey());  if  (sample.getValue()  <  0)  {  throw  new  NotPositiveException(sample.getValue());  }  probs[i]  =  sample.getValue();  }  probabilities  =  MathArrays.normalizeArray(probs,  1.0);  [BUGGY]  return  new  Double(singleton.getValue());  [BUGGY]    [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  RandomGenerator  rng  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  int  i  Pair  sample  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.2773500981126146	102	102	1	replace	return  new  Double(singleton.getValue());	}  	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
8	[BUG]  [BUGGY]  return  new  Double(singletons.size());  [CE]  illegal  start  of  expression  [FE]      ArrayStoreException  [CONTEXT]  for  (int  i  =  0;  i  <  samples.size();  i++)  {  final  Pair<T,  Double>  sample  =  samples.get(i);  singletons.add(sample.getKey());  if  (sample.getValue()  <  0)  {  throw  new  NotPositiveException(sample.getValue());  }  probs[i]  =  sample.getValue();  }  probabilities  =  MathArrays.normalizeArray(probs,  1.0);  [BUGGY]  return  new  Double(singletons.size());  [BUGGY]    [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  RandomGenerator  rng  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  int  i  Pair  sample  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.2773500981126146	102	102	1	replace	return  new  Double(singletons.size());	}  	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
9	[BUG]  [BUGGY]    rng.setValue(probs[i]);  [CE]  cannot  find  symbol  i  [FE]    ArrayStoreException  [CONTEXT]  for  (int  i  =  0;  i  <  samples.size();  i++)  {  final  Pair<T,  Double>  sample  =  samples.get(i);  singletons.add(sample.getKey());  if  (sample.getValue()  <  0)  {  throw  new  NotPositiveException(sample.getValue());  }  probs[i]  =  sample.getValue();  }  probabilities  =  MathArrays.normalizeArray(probs,  1.0);  [BUGGY]    rng.setValue(probs[i]);  [BUGGY]  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  RandomGenerator  rng  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  int  i  Pair  sample  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.2773500981126146	102	102	1	replace	    rng.setValue(probs[i]);		non-compiled	[CE]  cannot  find  symbol  i	46	None	add
10	[BUG]  [BUGGY]    rng.setValue(probs);  [CE]  cannot  find  symbol  [FE]      ArrayStoreException  [CONTEXT]  for  (int  i  =  0;  i  <  samples.size();  i++)  {  final  Pair<T,  Double>  sample  =  samples.get(i);  singletons.add(sample.getKey());  if  (sample.getValue()  <  0)  {  throw  new  NotPositiveException(sample.getValue());  }  probs[i]  =  sample.getValue();  }  probabilities  =  MathArrays.normalizeArray(probs,  1.0);  [BUGGY]    rng.setValue(probs);  [BUGGY]  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  RandomGenerator  rng  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  int  i  Pair  sample  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.2773500981126146	102	102	1	replace	    rng.setValue(probs);		non-compiled	[CE]  cannot  find  symbol	46	None	add
11	[BUG]  [BUGGY]    rng.addValue(probs);  [CE]  cannot  find  symbol  [FE]        ArrayStoreException  [CONTEXT]  for  (int  i  =  0;  i  <  samples.size();  i++)  {  final  Pair<T,  Double>  sample  =  samples.get(i);  singletons.add(sample.getKey());  if  (sample.getValue()  <  0)  {  throw  new  NotPositiveException(sample.getValue());  }  probs[i]  =  sample.getValue();  }  probabilities  =  MathArrays.normalizeArray(probs,  1.0);  [BUGGY]    rng.addValue(probs);  [BUGGY]  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  RandomGenerator  rng  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  int  i  Pair  sample  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.2773500981126146	102	102	1	replace	    rng.addValue(probs);		non-compiled	[CE]  cannot  find  symbol	46	None	add
