projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java101probabilities=MathArrays.normalizeArray(probs,1.0);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java101Probabilitiesprobabilities=MathArrays.normalizeArray(probs,1.0);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java101
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java101Pair<T,Double>probs=samples.get(i);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java101Pair<T,Double>probs=sample.getValue();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java101Pair<T,Double>probs=sample.getProbs();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java101Pair<T,Double>random=sample.getValue();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java101RandomGeneratorrandomGenerator=newRandomGenerator(singletons.get(i));
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java101RandomGeneratorrandomGenerator=newRandomGenerator(singleton.getValue());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java101RandomGeneratorrandomGenerator=newRandomGenerator(singletons.size());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java101Probabilities=MathArrays.normalizeArray(probs,1.0);
