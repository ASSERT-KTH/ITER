bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _itemFilter  =  f.getItemFilter();  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT  [CONTEXT]  }  f  =  _headContext.checkValue(f);  if  (f  ==  null)  {  delegate.skipChildren();  break;  }  if  (f  !=  TokenFilter.INCLUDE_ALL)  {  f  =  f.filterStartObject();  }  [BUGGY]  _itemFilter  =  f.getItemFilter();  [BUGGY]  if  (f  ==  TokenFilter.INCLUDE_ALL)  {  _headContext  =  _headContext.createChildObjectContext(f,  true);  return  (_currToken  =  t);  }  _headContext  =  _headContext.createChildObjectContext(f,  false);  if  (_includePath)  {  t  =  _nextTokenWithBuffering(_headContext);  if  (t  !=  null)  {  _currToken  =  t;  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	358	358	3	replace	_itemFilter  =  f.getItemFilter();	_itemFilter  =  f;  	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
2	[BUG]  [BUGGY]  _itemFilter  =  f.getImmediateParent();  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT  [CONTEXT]  }  f  =  _headContext.checkValue(f);  if  (f  ==  null)  {  delegate.skipChildren();  break;  }  if  (f  !=  TokenFilter.INCLUDE_ALL)  {  f  =  f.filterStartObject();  }  [BUGGY]  _itemFilter  =  f.getImmediateParent();  [BUGGY]  if  (f  ==  TokenFilter.INCLUDE_ALL)  {  _headContext  =  _headContext.createChildObjectContext(f,  true);  return  (_currToken  =  t);  }  _headContext  =  _headContext.createChildObjectContext(f,  false);  if  (_includePath)  {  t  =  _nextTokenWithBuffering(_headContext);  if  (t  !=  null)  {  _currToken  =  t;  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	358	358	3	replace	_itemFilter  =  f.getImmediateParent();	_itemFilter  =  f;  	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
3	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT  [CONTEXT]  }  f  =  _headContext.checkValue(f);  if  (f  ==  null)  {  delegate.skipChildren();  break;  }  if  (f  !=  TokenFilter.INCLUDE_ALL)  {  f  =  f.filterStartObject();  }  [BUGGY]    [BUGGY]  if  (f  ==  TokenFilter.INCLUDE_ALL)  {  _headContext  =  _headContext.createChildObjectContext(f,  true);  return  (_currToken  =  t);  }  _headContext  =  _headContext.createChildObjectContext(f,  false);  if  (_includePath)  {  t  =  _nextTokenWithBuffering(_headContext);  if  (t  !=  null)  {  _currToken  =  t;  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	358	358	3	replace	  	_itemFilter  =  f;  	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
4	[BUG]  [BUGGY]  _itemFilter  =  rootFilter;  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT  [CONTEXT]  }  f  =  _headContext.checkValue(f);  if  (f  ==  null)  {  delegate.skipChildren();  break;  }  if  (f  !=  TokenFilter.INCLUDE_ALL)  {  f  =  f.filterStartObject();  }  [BUGGY]  _itemFilter  =  rootFilter;  [BUGGY]  if  (f  ==  TokenFilter.INCLUDE_ALL)  {  _headContext  =  _headContext.createChildObjectContext(f,  true);  return  (_currToken  =  t);  }  _headContext  =  _headContext.createChildObjectContext(f,  false);  if  (_includePath)  {  t  =  _nextTokenWithBuffering(_headContext);  if  (t  !=  null)  {  _currToken  =  t;  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	358	358	3	replace	_itemFilter  =  rootFilter;	_itemFilter  =  f;  	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
5	[BUG]  [BUGGY]  _itemFilter  =  f.filterEndObject();  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT  [CONTEXT]  }  f  =  _headContext.checkValue(f);  if  (f  ==  null)  {  delegate.skipChildren();  break;  }  if  (f  !=  TokenFilter.INCLUDE_ALL)  {  f  =  f.filterStartObject();  }  [BUGGY]  _itemFilter  =  f.filterEndObject();  [BUGGY]  if  (f  ==  TokenFilter.INCLUDE_ALL)  {  _headContext  =  _headContext.createChildObjectContext(f,  true);  return  (_currToken  =  t);  }  _headContext  =  _headContext.createChildObjectContext(f,  false);  if  (_includePath)  {  t  =  _nextTokenWithBuffering(_headContext);  if  (t  !=  null)  {  _currToken  =  t;  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	358	358	3	replace	_itemFilter  =  f.filterEndObject();	_itemFilter  =  f;  	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
6	[BUG]  [BUGGY]  _itemFilter  =  f.cloneTree();  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT  [CONTEXT]  }  f  =  _headContext.checkValue(f);  if  (f  ==  null)  {  delegate.skipChildren();  break;  }  if  (f  !=  TokenFilter.INCLUDE_ALL)  {  f  =  f.filterStartObject();  }  [BUGGY]  _itemFilter  =  f.cloneTree();  [BUGGY]  if  (f  ==  TokenFilter.INCLUDE_ALL)  {  _headContext  =  _headContext.createChildObjectContext(f,  true);  return  (_currToken  =  t);  }  _headContext  =  _headContext.createChildObjectContext(f,  false);  if  (_includePath)  {  t  =  _nextTokenWithBuffering(_headContext);  if  (t  !=  null)  {  _currToken  =  t;  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	358	358	3	replace	_itemFilter  =  f.cloneTree();	_itemFilter  =  f;  	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
