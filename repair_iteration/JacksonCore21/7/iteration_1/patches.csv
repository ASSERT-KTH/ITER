bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ||  _lastClearedToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  ||  _lastClearedToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	||  _lastClearedToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.END_OBJECT)  {  if(includePath!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  if(_currToken  ==  JsonToken.END_OBJECT)  {  if(includePath!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken  ==  JsonToken.END_OBJECT)  {  if(includePath!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
3	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT)  {  if(includePath!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT)  {  if(includePath!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken  ==  JsonToken.START_OBJECT)  {  if(includePath!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
4	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
5	[BUG]  [BUGGY]  _lastClearedToken  =  JsonToken.END_ARRAY;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  _lastClearedToken  =  JsonToken.END_ARRAY;  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  JsonToken.END_ARRAY;	  _lastClearedToken    =    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  if(_currToken!=  null)  {  if(_lastClearedToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  if(_currToken!=  null)  {  if(_lastClearedToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken!=  null)  {  if(_lastClearedToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
7	[BUG]  [BUGGY]  if(_currToken!=  null)  {  if(includePath  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  if(_currToken!=  null)  {  if(includePath  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken!=  null)  {  if(includePath  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  if(_currToken  ==  null)  {  if(includePath  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  if(_currToken  ==  null)  {  if(includePath  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken  ==  null)  {  if(includePath  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
9	[BUG]  [BUGGY]  _lastClearedToken  =  JsonToken.FIELD_NAME;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  _lastClearedToken  =  JsonToken.FIELD_NAME;  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  JsonToken.FIELD_NAME;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
10	[BUG]  [BUGGY]  _lastClearedToken  =  p.getLastChild();  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  _lastClearedToken  =  p.getLastChild();  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  p.getLastChild();	  _lastClearedToken    =    p.getParent();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
11	[BUG]  [BUGGY]  _lastClearedToken  =  p.getNext();  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  _lastClearedToken  =  p.getNext();  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  p.getNext();	  _lastClearedToken    =    p.getParent();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
12	[BUG]  [BUGGY]  if(_matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  if(_matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_matchCount    >    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
13	[BUG]  [BUGGY]  if(includePath!=  null)  {  if(_matchCount  >  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  if(includePath!=  null)  {  if(_matchCount  >  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath!=  null)  {  if(_matchCount  >  2)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_matchCount    >    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
14	[BUG]  [BUGGY]  if(includePath!=  null)  {  if(_matchCount  <  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  if(includePath!=  null)  {  if(_matchCount  <  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath!=  null)  {  if(_matchCount  <  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_matchCount    >    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
15	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _includePath,  allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _includePath,  allowMultipleMatches);  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  _includePath,  allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  includePath,  allowMultipleMatches,  rootFilter);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  return  new  FilteringParserDelegate(p,  f,  includePath,  allowMultipleMatches,  rootFilter);  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  includePath,  allowMultipleMatches,  rootFilter);	  return    new    FilteringParserDelegate(p,    f,    includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  allowMultipleMatches,  includePath);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  return  new  FilteringParserDelegate(p,  f,  allowMultipleMatches,  includePath);  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  allowMultipleMatches,  includePath);	  return    new    FilteringParserDelegate(p,    f,    includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
18	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  includePath,  allowMultipleMatches,  _matchCount);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  return  new  FilteringParserDelegate(p,  f,  includePath,  allowMultipleMatches,  _matchCount);  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  includePath,  allowMultipleMatches,  _matchCount);	  return    new    FilteringParserDelegate(p,    f,    includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  _lastClearedToken  =  p.getFirstClearedToken();  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  _lastClearedToken  =  p.getFirstClearedToken();  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  p.getFirstClearedToken();	  _lastClearedToken    =    p.getLastClearedToken();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
20	[BUG]  [BUGGY]  if(_includePath!=  null)  {  if(_matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  if(_includePath!=  null)  {  if(_matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_includePath!=  null)  {  if(_matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_matchCount    >    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
21	[BUG]  [BUGGY]  if(includePath  ==  null)  {  if(_matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  if(includePath  ==  null)  {  if(_matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath  ==  null)  {  if(_matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_matchCount    >    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
22	[BUG]  [BUGGY]  if(includePath!=  null)  {  if(_allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  if(includePath!=  null)  {  if(_allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath!=  null)  {  if(_allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_matchCount    >    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
23	[BUG]  [BUGGY]  _lastClearedToken  =  p.nextToken();  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  _lastClearedToken  =  p.nextToken();  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  p.nextToken();	  _lastClearedToken    =    p.getLastClearedToken();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
24	[BUG]  [BUGGY]  _lastClearedToken  =  f.getFirstClearedToken();  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  _lastClearedToken  =  f.getFirstClearedToken();  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  f.getFirstClearedToken();	  _lastClearedToken    =    f.getLastClearedToken();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
25	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _itemFilter,  includePath,  allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _itemFilter,  includePath,  allowMultipleMatches);  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  _itemFilter,  includePath,  allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
26	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  false,  includePath,  allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  return  new  FilteringParserDelegate(p,  f,  false,  includePath,  allowMultipleMatches);  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  false,  includePath,  allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
27	[BUG]  [BUGGY]  _lastClearedToken  =  JsonToken.START_ARRAY;  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  _lastClearedToken  =  JsonToken.START_ARRAY;  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  JsonToken.START_ARRAY;	  _lastClearedToken    =    JsonToken.START_OBJECT;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
28	[BUG]  [BUGGY]  _lastClearedToken  =  JsonToken.START_OBJECT  |  JsonToken.START_ARRAY;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  _lastClearedToken  =  JsonToken.START_OBJECT  |  JsonToken.START_ARRAY;  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  JsonToken.START_OBJECT  |  JsonToken.START_ARRAY;	  _lastClearedToken    =    JsonToken.START_OBJECT;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
29	[BUG]  [BUGGY]  _lastClearedToken  =  f;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  _lastClearedToken  =  f;  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  f;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
30	[BUG]  [BUGGY]  if(includePath  ==  null)  {  if(_lastClearedToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  if(includePath  ==  null)  {  if(_lastClearedToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath  ==  null)  {  if(_lastClearedToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
31	[BUG]  [BUGGY]  if(!includePath)  {  if(_lastClearedToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  if(!includePath)  {  if(_lastClearedToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(!includePath)  {  if(_lastClearedToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
32	[BUG]  [BUGGY]  if(_currToken!=  null)  {  if(_lastClearedToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  if(_currToken!=  null)  {  if(_lastClearedToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken!=  null)  {  if(_lastClearedToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
33	[BUG]  [BUGGY]  if(includePath!=  null)  {  if(_lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  if(includePath!=  null)  {  if(_lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath!=  null)  {  if(_lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
34	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
35	[BUG]  [BUGGY]  if(_currToken  ==  null)  {  if(_lastClearedToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  if(_currToken  ==  null)  {  if(_lastClearedToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken  ==  null)  {  if(_lastClearedToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
36	[BUG]  [BUGGY]  _lastClearedToken  =  JsonToken.START_OBJECT  |  JsonToken.END_ARRAY;  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  _lastClearedToken  =  JsonToken.START_OBJECT  |  JsonToken.END_ARRAY;  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  JsonToken.START_OBJECT  |  JsonToken.END_ARRAY;	  _lastClearedToken    =    JsonToken.START_OBJECT;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
37	[BUG]  [BUGGY]  _lastClearedToken  =  p.getLastParent();  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  _lastClearedToken  =  p.getLastParent();  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  p.getLastParent();	  _lastClearedToken    =    p.getParent();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
38	[BUG]  [BUGGY]  if(_lastClearedToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  if(_lastClearedToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_lastClearedToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
39	[BUG]  [BUGGY]  if(includePath!=  null)  {  if(_lastClearedToken  ==  JsonToken.START_OBJECT  ||  includePath  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  if(includePath!=  null)  {  if(_lastClearedToken  ==  JsonToken.START_OBJECT  ||  includePath  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath!=  null)  {  if(_lastClearedToken  ==  JsonToken.START_OBJECT  ||  includePath  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
40	[BUG]  [BUGGY]  if(_includePath  ==  null)  {  if(_matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  if(_includePath  ==  null)  {  if(_matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_includePath  ==  null)  {  if(_matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_matchCount    >    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
41	[BUG]  [BUGGY]  if(includePath!=  null)  {  if(_matchCount  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  if(includePath!=  null)  {  if(_matchCount  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath!=  null)  {  if(_matchCount  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_matchCount    >    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
42	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _itemFilter,  allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _itemFilter,  allowMultipleMatches);  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  _itemFilter,  allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
43	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _itemFilter,  _allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;    [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _itemFilter,  _allowMultipleMatches);  [BUGGY]      [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  _itemFilter,  _allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
