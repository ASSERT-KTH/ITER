bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(_lastClearedToken!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_lastClearedToken!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_lastClearedToken!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    null)    {    if(_lastClearedToken    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
2	[BUG]  [BUGGY]  if(_lastClearedToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_lastClearedToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_lastClearedToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    null)    {    if(_lastClearedToken    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
3	[BUG]  [BUGGY]  if(_currToken!=  null)  {  if(_lastClearedToken!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken!=  null)  {  if(_lastClearedToken!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken!=  null)  {  if(_lastClearedToken!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    null)    {    if(_lastClearedToken    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
4	[BUG]  [BUGGY]  if(_matchCount  <  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_matchCount  <  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_matchCount  <  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_matchCount    <    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
5	[BUG]  [BUGGY]  if(includePath!=  null)  {  if(_matchCount  <  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(includePath!=  null)  {  if(_matchCount  <  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath!=  null)  {  if(_matchCount  <  2)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_matchCount    <    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
6	[BUG]  [BUGGY]  _lastClearedToken  =  p.getFirstChild();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  _lastClearedToken  =  p.getFirstChild();  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  p.getFirstChild();	  _lastClearedToken    =    p.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
7	[BUG]  [BUGGY]  _lastClearedToken  =  p.getLastToken();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  _lastClearedToken  =  p.getLastToken();  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  p.getLastToken();	  _lastClearedToken    =    p.nextToken();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
8	[BUG]  [BUGGY]  p  =  new  FilteringParserDelegate(p,  f,  includePath,  allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  p  =  new  FilteringParserDelegate(p,  f,  includePath,  allowMultipleMatches);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	p  =  new  FilteringParserDelegate(p,  f,  includePath,  allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    allowMultipleMatches,    includePath);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
9	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  allowMultipleMatches,  includePath,  allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  allowMultipleMatches,  includePath,  allowMultipleMatches);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  allowMultipleMatches,  includePath,  allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    allowMultipleMatches,    includePath);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
10	[BUG]  [BUGGY]  ||(includePath!=  null  &&  allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  ||(includePath!=  null  &&  allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	||(includePath!=  null  &&  allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_allowMultipleMatches)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
11	[BUG]  [BUGGY]  if(includePath!=  null)  {  if(!_allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(includePath!=  null)  {  if(!_allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath!=  null)  {  if(!_allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_allowMultipleMatches)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
12	[BUG]  [BUGGY]  ||(includePath!=  null  &&  allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  ||(includePath!=  null  &&  allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	||(includePath!=  null  &&  allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");	  if(includePath!=    null)    {    if(_allowMultipleMatches)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
13	[BUG]  [BUGGY]  if(_includePath!=  null)  {  if(_matchCount  >  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_includePath!=  null)  {  if(_matchCount  >  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_includePath!=  null)  {  if(_matchCount  >  2)  {  throw  new  IllegalArgumentException( " ");  }	  if(_includePath!=    null)    {    if(_matchCount    >    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
14	[BUG]  [BUGGY]  if(_includePath!=  null)  {  if(!_matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_includePath!=  null)  {  if(!_matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_includePath!=  null)  {  if(!_matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(_includePath!=    null)    {    if(_matchCount    >    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
15	[BUG]  [BUGGY]  if(includePath!=  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(includePath!=  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath!=  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.START_OBJECT)    {    if(includePath!=    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
16	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT)  {  if(includePath!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT)  {  if(includePath!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken!=  JsonToken.START_OBJECT)  {  if(includePath!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.START_OBJECT)    {    if(includePath!=    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
17	[BUG]  [BUGGY]  if(includePath!=  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(includePath!=  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath!=  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.START_OBJECT)    {    if(includePath!=    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
18	[BUG]  [BUGGY]  ||  includePath!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  ||  includePath!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	||  includePath!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.START_OBJECT)    {    if(includePath!=    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  _lastClearedToken  =  p;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  _lastClearedToken  =  p;  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  p;	  _lastClearedToken    =    f;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
20	[BUG]  [BUGGY]  allowMultipleMatches)  {  if(_lastClearedToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  allowMultipleMatches)  {  if(_lastClearedToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	allowMultipleMatches)  {  if(_lastClearedToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(!includePath)    {    if(_lastClearedToken    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	31	None	replace
21	[BUG]  [BUGGY]  ||  includePath  ==  JsonToken.START_OBJECT  ||  includePath  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  ||  includePath  ==  JsonToken.START_OBJECT  ||  includePath  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	||  includePath  ==  JsonToken.START_OBJECT  ||  includePath  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    JsonToken.START_OBJECT    ||    includePath    ==    JsonToken.END_ARRAY)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
22	[BUG]  [BUGGY]  if(_currToken  ==  null)  {  if(includePath  ==  JsonToken.START_OBJECT  ||  includePath  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken  ==  null)  {  if(includePath  ==  JsonToken.START_OBJECT  ||  includePath  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken  ==  null)  {  if(includePath  ==  JsonToken.START_OBJECT  ||  includePath  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    JsonToken.START_OBJECT    ||    includePath    ==    JsonToken.END_ARRAY)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
23	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _lastClearedToken  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _lastClearedToken  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _lastClearedToken  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    JsonToken.START_OBJECT    ||    includePath    ==    JsonToken.END_ARRAY)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
24	[BUG]  [BUGGY]  if(includePath!=  JsonToken.END_OBJECT)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(includePath!=  JsonToken.END_OBJECT)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath!=  JsonToken.END_OBJECT)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.END_OBJECT)    {    if(includePath!=    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
25	[BUG]  [BUGGY]  if(includePath!=  JsonToken.END_OBJECT)  {  if(_currToken!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(includePath!=  JsonToken.END_OBJECT)  {  if(_currToken!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath!=  JsonToken.END_OBJECT)  {  if(_currToken!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.END_OBJECT)    {    if(includePath!=    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
26	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _matchCount,  allowMultipleMatches,  includePath);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _matchCount,  allowMultipleMatches,  includePath);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  _matchCount,  allowMultipleMatches,  includePath);	  return    new    FilteringParserDelegate(p,    f,    includePath,    allowMultipleMatches,    _matchCount);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
27	[BUG]  [BUGGY]  p  =  new  FilteringParserDelegate(p,  f,  _matchCount,  allowMultipleMatches,  includePath);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  p  =  new  FilteringParserDelegate(p,  f,  _matchCount,  allowMultipleMatches,  includePath);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	p  =  new  FilteringParserDelegate(p,  f,  _matchCount,  allowMultipleMatches,  includePath);	  return    new    FilteringParserDelegate(p,    f,    includePath,    allowMultipleMatches,    _matchCount);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
28	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  _headContext,  f,  includePath,  allowMultipleMatches,  _matchCount);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  _headContext,  f,  includePath,  allowMultipleMatches,  _matchCount);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  _headContext,  f,  includePath,  allowMultipleMatches,  _matchCount);	  return    new    FilteringParserDelegate(p,    f,    includePath,    allowMultipleMatches,    _matchCount);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
29	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _matchCount,  includePath,  allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _matchCount,  includePath,  allowMultipleMatches);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  _matchCount,  includePath,  allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    includePath,    allowMultipleMatches,    _matchCount);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
30	[BUG]  [BUGGY]  _lastClearedToken  =  JsonToken.START_OBJECT  &  JsonToken.END_ARRAY;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  _lastClearedToken  =  JsonToken.START_OBJECT  &  JsonToken.END_ARRAY;  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  JsonToken.START_OBJECT  &  JsonToken.END_ARRAY;	  _lastClearedToken    =    JsonToken.START_OBJECT    |    JsonToken.END_ARRAY;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
31	[BUG]  [BUGGY]  allowMultipleMatches  =  _matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  allowMultipleMatches  =  _matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	allowMultipleMatches  =  _matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(_matchCount    >    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	12	None	replace
32	[BUG]  [BUGGY]  ||(_matchCount  >  1)&&!allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  ||(_matchCount  >  1)&&!allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	||(_matchCount  >  1)&&!allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }	  if(_matchCount    >    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
33	[BUG]  [BUGGY]  allowMultipleMatches  =  _matchCount  >  1;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  allowMultipleMatches  =  _matchCount  >  1;  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	allowMultipleMatches  =  _matchCount  >  1;	  if(_matchCount    >    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
34	[BUG]  [BUGGY]  allowMultipleMatches  =  allowMultipleMatches  &&  _matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  allowMultipleMatches  =  allowMultipleMatches  &&  _matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	allowMultipleMatches  =  allowMultipleMatches  &&  _matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(_matchCount    >    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	12	None	replace
35	[BUG]  [BUGGY]  ||(_lastClearedToken  ==  JsonToken.END_OBJECT  &&!allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  ||(_lastClearedToken  ==  JsonToken.END_OBJECT  &&!allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	||(_lastClearedToken  ==  JsonToken.END_OBJECT  &&!allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    JsonToken.END_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
36	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.END_OBJECT)  {  if(includePath!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken  ==  JsonToken.END_OBJECT)  {  if(includePath!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken  ==  JsonToken.END_OBJECT)  {  if(includePath!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    JsonToken.END_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
37	[BUG]  [BUGGY]  ||(_lastClearedToken  ==  JsonToken.END_OBJECT  &&  _allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  ||(_lastClearedToken  ==  JsonToken.END_OBJECT  &&  _allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	||(_lastClearedToken  ==  JsonToken.END_OBJECT  &&  _allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    JsonToken.END_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
38	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    JsonToken.END_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
39	[BUG]  [BUGGY]  ||  _lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  ||  _lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	||  _lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  ||    _lastClearedToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
40	[BUG]  [BUGGY]  ||  _currToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  ||  _currToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	||  _currToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  ||    _lastClearedToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
41	[BUG]  [BUGGY]  ||  _lastClearedToken!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  ||  _lastClearedToken!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	||  _lastClearedToken!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  ||    _lastClearedToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
42	[BUG]  [BUGGY]  if(_matchCount  >  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_matchCount  >  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_matchCount  >  2)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_matchCount    >    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
43	[BUG]  [BUGGY]  if(_matchCount  >  1)  {  throw  new  IllegalArgumentException( " ".equals(includePath));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_matchCount  >  1)  {  throw  new  IllegalArgumentException( " ".equals(includePath));  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_matchCount  >  1)  {  throw  new  IllegalArgumentException( " ".equals(includePath));  }	  if(includePath!=    null)    {    if(_matchCount    >    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
44	[BUG]  [BUGGY]  parentContext  =  p.getParentContext();  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  parentContext  =  p.getParentContext();  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	parentContext  =  p.getParentContext();	  if(includePath!=    null)    {    if(_matchCount    >    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
45	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _itemFilter,  _includePath,  allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _itemFilter,  _includePath,  allowMultipleMatches);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  _itemFilter,  _includePath,  allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    _itemFilter,    includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
46	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _itemFilter,  includePath,  allowMultipleMatches,  rootFilter);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _itemFilter,  includePath,  allowMultipleMatches,  rootFilter);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  _itemFilter,  includePath,  allowMultipleMatches,  rootFilter);	  return    new    FilteringParserDelegate(p,    f,    _itemFilter,    includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
47	[BUG]  [BUGGY]  p  =  new  FilteringParserDelegate(p,  f,  _itemFilter,  includePath,  allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  p  =  new  FilteringParserDelegate(p,  f,  _itemFilter,  includePath,  allowMultipleMatches);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	p  =  new  FilteringParserDelegate(p,  f,  _itemFilter,  includePath,  allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    _itemFilter,    includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
48	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  _itemFilter,  f,  includePath,  allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  _itemFilter,  f,  includePath,  allowMultipleMatches);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  _itemFilter,  f,  includePath,  allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    _itemFilter,    includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
49	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _includePath,  allowMultipleMatches,  rootFilter);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _includePath,  allowMultipleMatches,  rootFilter);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  _includePath,  allowMultipleMatches,  rootFilter);	  return    new    FilteringParserDelegate(p,    f,    _includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
50	[BUG]  [BUGGY]  p  =  new  FilteringParserDelegate(p,  f,  _includePath,  allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  p  =  new  FilteringParserDelegate(p,  f,  _includePath,  allowMultipleMatches);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	p  =  new  FilteringParserDelegate(p,  f,  _includePath,  allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    _includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
51	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _includePath,  allowMultipleMatches,  _matchCount);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _includePath,  allowMultipleMatches,  _matchCount);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  _includePath,  allowMultipleMatches,  _matchCount);	  return    new    FilteringParserDelegate(p,    f,    _includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
52	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _includePath,  includePath,  allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _includePath,  includePath,  allowMultipleMatches);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  _includePath,  includePath,  allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    _includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
53	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  _itemFilter,  f,  allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  _itemFilter,  f,  allowMultipleMatches);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  _itemFilter,  f,  allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    _itemFilter,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
54	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _itemFilter,  allowMultipleMatches,  includePath);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _itemFilter,  allowMultipleMatches,  includePath);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  _itemFilter,  allowMultipleMatches,  includePath);	  return    new    FilteringParserDelegate(p,    f,    _itemFilter,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
55	[BUG]  [BUGGY]  p  =  new  FilteringParserDelegate(p,  f,  _itemFilter,  allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  p  =  new  FilteringParserDelegate(p,  f,  _itemFilter,  allowMultipleMatches);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	p  =  new  FilteringParserDelegate(p,  f,  _itemFilter,  allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    _itemFilter,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
56	[BUG]  [BUGGY]  if(includePath  ==  null)  {  if(_matchCount  >  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(includePath  ==  null)  {  if(_matchCount  >  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath  ==  null)  {  if(_matchCount  >  2)  {  throw  new  IllegalArgumentException( " ");  }	  if(_includePath    ==    null)    {    if(_matchCount    >    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
57	[BUG]  [BUGGY]  if(_lastClearedToken!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_lastClearedToken!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_lastClearedToken!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken!=    null)    {    if(_lastClearedToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
58	[BUG]  [BUGGY]  ||(_lastClearedToken  ==  JsonToken.START_OBJECT  &&  _allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  ||(_lastClearedToken  ==  JsonToken.START_OBJECT  &&  _allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	||(_lastClearedToken  ==  JsonToken.START_OBJECT  &&  _allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken!=    null)    {    if(_lastClearedToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
59	[BUG]  [BUGGY]  ||(_lastClearedToken  ==  JsonToken.START_OBJECT  &&!allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  ||(_lastClearedToken  ==  JsonToken.START_OBJECT  &&!allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	||(_lastClearedToken  ==  JsonToken.START_OBJECT  &&!allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken!=    null)    {    if(_lastClearedToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
60	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _itemFilter,  includePath,  _allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _itemFilter,  includePath,  _allowMultipleMatches);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  _itemFilter,  includePath,  _allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    _itemFilter,    _allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
61	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _itemFilter,  _includePath,  _allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _itemFilter,  _includePath,  _allowMultipleMatches);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  _itemFilter,  _includePath,  _allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    _itemFilter,    _allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
62	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  _itemFilter,  f,  _allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  _itemFilter,  f,  _allowMultipleMatches);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  _itemFilter,  f,  _allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    _itemFilter,    _allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
63	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  true,  includePath,  allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  true,  includePath,  allowMultipleMatches);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  true,  includePath,  allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    false,    includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
64	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  false,  includePath,  allowMultipleMatches,  rootFilter);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  false,  includePath,  allowMultipleMatches,  rootFilter);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  false,  includePath,  allowMultipleMatches,  rootFilter);	  return    new    FilteringParserDelegate(p,    f,    false,    includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
65	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  false,  includePath,  allowMultipleMatches,  _matchCount);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  false,  includePath,  allowMultipleMatches,  _matchCount);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  false,  includePath,  allowMultipleMatches,  _matchCount);	  return    new    FilteringParserDelegate(p,    f,    false,    includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
66	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  false,  includePath,  allowMultipleMatches,  true);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  false,  includePath,  allowMultipleMatches,  true);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  false,  includePath,  allowMultipleMatches,  true);	  return    new    FilteringParserDelegate(p,    f,    false,    includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
67	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  rootFilter,  allowMultipleMatches,  includePath);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  rootFilter,  allowMultipleMatches,  includePath);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  rootFilter,  allowMultipleMatches,  includePath);	  return    new    FilteringParserDelegate(p,    f,    includePath,    allowMultipleMatches,    rootFilter);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
68	[BUG]  [BUGGY]  new  FilteringParserDelegate(p,  f,  rootFilter,  allowMultipleMatches,  includePath);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  new  FilteringParserDelegate(p,  f,  rootFilter,  allowMultipleMatches,  includePath);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	new  FilteringParserDelegate(p,  f,  rootFilter,  allowMultipleMatches,  includePath);	  return    new    FilteringParserDelegate(p,    f,    includePath,    allowMultipleMatches,    rootFilter);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
69	[BUG]  [BUGGY]  p  =  new  FilteringParserDelegate(p,  f,  rootFilter,  allowMultipleMatches,  includePath);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  p  =  new  FilteringParserDelegate(p,  f,  rootFilter,  allowMultipleMatches,  includePath);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	p  =  new  FilteringParserDelegate(p,  f,  rootFilter,  allowMultipleMatches,  includePath);	  return    new    FilteringParserDelegate(p,    f,    includePath,    allowMultipleMatches,    rootFilter);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
70	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  rootFilter,  f,  allowMultipleMatches,  includePath);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  rootFilter,  f,  allowMultipleMatches,  includePath);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  rootFilter,  f,  allowMultipleMatches,  includePath);	  return    new    FilteringParserDelegate(p,    f,    includePath,    allowMultipleMatches,    rootFilter);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
71	[BUG]  [BUGGY]  _lastClearedToken  =  JsonToken.START_OBJECT  &  JsonToken.START_ARRAY;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  _lastClearedToken  =  JsonToken.START_OBJECT  &  JsonToken.START_ARRAY;  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  JsonToken.START_OBJECT  &  JsonToken.START_ARRAY;	  _lastClearedToken    =    JsonToken.START_OBJECT    |    JsonToken.START_ARRAY;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
72	[BUG]  [BUGGY]  allowMultipleMatches  =  _lastClearedToken  ==  JsonToken.START_OBJECT;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  allowMultipleMatches  =  _lastClearedToken  ==  JsonToken.START_OBJECT;  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	allowMultipleMatches  =  _lastClearedToken  ==  JsonToken.START_OBJECT;	  if(_lastClearedToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
73	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  &&  _lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  &&  _lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken  ==  JsonToken.START_OBJECT  &&  _lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _lastClearedToken    ==    JsonToken.END_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
74	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.END_OBJECT  ||  _lastClearedToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken  ==  JsonToken.END_OBJECT  ||  _lastClearedToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken  ==  JsonToken.END_OBJECT  ||  _lastClearedToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _lastClearedToken    ==    JsonToken.END_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
75	[BUG]  [BUGGY]  if(_matchCount  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_matchCount  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_matchCount  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_matchCount    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
76	[BUG]  [BUGGY]  ||(_matchCount  >  0  &&!allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  ||(_matchCount  >  0  &&!allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	||(_matchCount  >  0  &&!allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_matchCount    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
77	[BUG]  [BUGGY]  ||(_matchCount  >  0  &&  p.getCurrentToken()!=  JsonToken.END_OBJECT))  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  ||(_matchCount  >  0  &&  p.getCurrentToken()!=  JsonToken.END_OBJECT))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	||(_matchCount  >  0  &&  p.getCurrentToken()!=  JsonToken.END_OBJECT))  {  throw  new  IllegalArgumentException( " ");	  if(includePath!=    null)    {    if(_matchCount    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
78	[BUG]  [BUGGY]  ||(_matchCount  >  0  &&!allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  ||(_matchCount  >  0  &&!allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	||(_matchCount  >  0  &&!allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");	  if(includePath!=    null)    {    if(_matchCount    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
79	[BUG]  [BUGGY]  if(includePath  ==  null)  {  if(_currToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(includePath  ==  null)  {  if(_currToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath  ==  null)  {  if(_currToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    null)    {    if(includePath    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
80	[BUG]  [BUGGY]  if(includePath!=  null)  {  if(_currToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(includePath!=  null)  {  if(_currToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath!=  null)  {  if(_currToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    null)    {    if(includePath    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
81	[BUG]  [BUGGY]  if(includePath  ==  null)  {  if(_currToken!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(includePath  ==  null)  {  if(_currToken!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath  ==  null)  {  if(_currToken!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    null)    {    if(includePath    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
82	[BUG]  [BUGGY]  if(includePath  ==  null)  {  if(_currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(includePath  ==  null)  {  if(_currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath  ==  null)  {  if(_currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    null)    {    if(includePath    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
83	[BUG]  [BUGGY]  if(includePath!=  null)  {  if(_currToken!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(includePath!=  null)  {  if(_currToken!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath!=  null)  {  if(_currToken!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken!=    null)    {    if(includePath    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
84	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
85	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
86	[BUG]  [BUGGY]  ||(_currToken  ==  JsonToken.START_OBJECT  &&!allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  ||(_currToken  ==  JsonToken.START_OBJECT  &&!allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	||(_currToken  ==  JsonToken.START_OBJECT  &&!allowMultipleMatches))  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
87	[BUG]  [BUGGY]  if(includePath  ==  null)  {  if(_allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(includePath  ==  null)  {  if(_allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath  ==  null)  {  if(_allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_allowMultipleMatches)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
88	[BUG]  [BUGGY]  if(_includePath!=  null)  {  if(_allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_includePath!=  null)  {  if(_allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_includePath!=  null)  {  if(_allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_allowMultipleMatches)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
89	[BUG]  [BUGGY]  if(!includePath)  {  if(_allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(!includePath)  {  if(_allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(!includePath)  {  if(_allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_allowMultipleMatches)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
90	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _includePath,  _allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _includePath,  _allowMultipleMatches);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  _includePath,  _allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    _includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
91	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _includePath,  _allowMultipleMatches,  includePath);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _includePath,  _allowMultipleMatches,  includePath);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  _includePath,  _allowMultipleMatches,  includePath);	  return    new    FilteringParserDelegate(p,    f,    _includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
92	[BUG]  [BUGGY]  if(includePath)  {  if(_lastClearedToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(includePath)  {  if(_lastClearedToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath)  {  if(_lastClearedToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken!=    null)    {    if(_lastClearedToken    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
93	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  rootFilter,  allowMultipleMatches,  includePath);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  rootFilter,  allowMultipleMatches,  includePath);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  rootFilter,  allowMultipleMatches,  includePath);	  return    new    FilteringParserDelegate(p,    f,    includePath,    allowMultipleMatches,    rootFilter);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
94	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _itemFilter,  allowMultipleMatches,  rootFilter);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _itemFilter,  allowMultipleMatches,  rootFilter);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  _itemFilter,  allowMultipleMatches,  rootFilter);	  return    new    FilteringParserDelegate(p,    f,    includePath,    allowMultipleMatches,    rootFilter);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
95	[BUG]  [BUGGY]  if(_lastClearedToken!=  null)  {  if(includePath  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_lastClearedToken!=  null)  {  if(includePath  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_lastClearedToken!=  null)  {  if(includePath  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken!=    null)    {    if(includePath    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
96	[BUG]  [BUGGY]  if(!allowMultipleMatches)  {  if(_currToken!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(!allowMultipleMatches)  {  if(_currToken!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(!allowMultipleMatches)  {  if(_currToken!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken!=    null)    {    if(includePath    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
97	[BUG]  [BUGGY]  if(includePath  ==  null)  {  if(_lastClearedToken!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(includePath  ==  null)  {  if(_lastClearedToken!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath  ==  null)  {  if(_lastClearedToken!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath    ==    null)    {    if(_lastClearedToken    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
98	[BUG]  [BUGGY]  allowMultipleMatches  =  _matchCount;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  allowMultipleMatches  =  _matchCount;  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	allowMultipleMatches  =  _matchCount;	  if(_matchCount    >    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
99	[BUG]  [BUGGY]  _lastClearedToken  =  p.getFirstParent();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  _lastClearedToken  =  p.getFirstParent();  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  p.getFirstParent();	  _lastClearedToken    =    p.getLastParent();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
100	[BUG]  [BUGGY]  _lastClearedToken  =  p.firstToken();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  _lastClearedToken  =  p.firstToken();  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  p.firstToken();	  _lastClearedToken    =    p.nextToken();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
101	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  includePath,  allowMultipleMatches,  _includeImmediateParent);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  includePath,  allowMultipleMatches,  _includeImmediateParent);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  includePath,  allowMultipleMatches,  _includeImmediateParent);	  return    new    FilteringParserDelegate(p,    f,    includePath,    allowMultipleMatches,    _matchCount);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
102	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  includePath,  _matchCount,  allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  includePath,  _matchCount,  allowMultipleMatches);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  includePath,  _matchCount,  allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    includePath,    allowMultipleMatches,    _matchCount);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
103	[BUG]  [BUGGY]  if(_lastClearedToken!=  null)  {  if(_currToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_lastClearedToken!=  null)  {  if(_currToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_lastClearedToken!=  null)  {  if(_currToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    null)    {    if(_lastClearedToken    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
104	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  false,  includePath,  allowMultipleMatches,  _includeImmediateParent);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  false,  includePath,  allowMultipleMatches,  _includeImmediateParent);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  false,  includePath,  allowMultipleMatches,  _includeImmediateParent);	  return    new    FilteringParserDelegate(p,    f,    false,    includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
105	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(f,  p,  false,  includePath,  allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(f,  p,  false,  includePath,  allowMultipleMatches);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(f,  p,  false,  includePath,  allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    false,    includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
106	[BUG]  [BUGGY]  if(_lastClearedToken  ==  null)  {  if(includePath  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_lastClearedToken  ==  null)  {  if(includePath  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_lastClearedToken  ==  null)  {  if(includePath  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    null)    {    if(includePath    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
107	[BUG]  [BUGGY]  if(!allowMultipleMatches)  {  if(_currToken  ==  null)  {  if(includePath  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(!allowMultipleMatches)  {  if(_currToken  ==  null)  {  if(includePath  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(!allowMultipleMatches)  {  if(_currToken  ==  null)  {  if(includePath  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    null)    {    if(includePath    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
108	[BUG]  [BUGGY]  _lastClearedToken  =  f._lastClearedToken;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  _lastClearedToken  =  f._lastClearedToken;  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  f._lastClearedToken;	  _lastClearedToken    =    f;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
109	[BUG]  [BUGGY]  if(_currToken!=  null)  {  if(_lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken!=  null)  {  if(_lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken!=  null)  {  if(_lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    JsonToken.END_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
110	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT)  {  if(includePath!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT)  {  if(includePath!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken  ==  JsonToken.START_OBJECT)  {  if(includePath!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    JsonToken.END_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
111	[BUG]  [BUGGY]  if(includePath!=  null)  {  if(_lastClearedToken  ==  JsonToken.END_OBJECT  ||  _allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(includePath!=  null)  {  if(_lastClearedToken  ==  JsonToken.END_OBJECT  ||  _allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath!=  null)  {  if(_lastClearedToken  ==  JsonToken.END_OBJECT  ||  _allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    JsonToken.END_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
112	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _includePath,  _itemFilter,  allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _includePath,  _itemFilter,  allowMultipleMatches);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  _includePath,  _itemFilter,  allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    _itemFilter,    includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
113	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _itemFilter,  rootFilter,  allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _itemFilter,  rootFilter,  allowMultipleMatches);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  _itemFilter,  rootFilter,  allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    _itemFilter,    includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
114	[BUG]  [BUGGY]  _currToken  =  JsonToken.START_OBJECT  ||  _lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  _currToken  =  JsonToken.START_OBJECT  ||  _lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_currToken  =  JsonToken.START_OBJECT  ||  _lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _lastClearedToken    ==    JsonToken.END_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	4	None	replace
115	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken!=  JsonToken.START_OBJECT  ||  _lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _lastClearedToken    ==    JsonToken.END_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
116	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _lastClearedToken!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _lastClearedToken!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _lastClearedToken!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _lastClearedToken    ==    JsonToken.END_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
117	[BUG]  [BUGGY]  _lastClearedToken  =  JsonToken.START_OBJECT  |  JsonToken.START_ARRAY  +  1;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  _lastClearedToken  =  JsonToken.START_OBJECT  |  JsonToken.START_ARRAY  +  1;  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  JsonToken.START_OBJECT  |  JsonToken.START_ARRAY  +  1;	  _lastClearedToken    =    JsonToken.START_OBJECT    |    JsonToken.START_ARRAY;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
118	[BUG]  [BUGGY]  if(_includePath!=  null)  {  if(_matchCount  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_includePath!=  null)  {  if(_matchCount  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_includePath!=  null)  {  if(_matchCount  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_matchCount    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
119	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  rootFilter,  allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  rootFilter,  allowMultipleMatches);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  rootFilter,  allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    _itemFilter,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
120	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _lastClearedToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _lastClearedToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _lastClearedToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_lastClearedToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
121	[BUG]  [BUGGY]  if(_lastClearedToken  ==  JsonToken.START_OBJECT  ||  _lastClearedToken  ==  JsonToken.START_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_lastClearedToken  ==  JsonToken.START_OBJECT  ||  _lastClearedToken  ==  JsonToken.START_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_lastClearedToken  ==  JsonToken.START_OBJECT  ||  _lastClearedToken  ==  JsonToken.START_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }	  if(_lastClearedToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
122	[BUG]  [BUGGY]  _lastClearedToken  =  p.next();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  _lastClearedToken  =  p.next();  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  p.next();	  _lastClearedToken    =    p.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
123	[BUG]  [BUGGY]  _lastClearedToken  =  JsonToken.END_ARRAY  |  JsonToken.END_OBJECT;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  _lastClearedToken  =  JsonToken.END_ARRAY  |  JsonToken.END_OBJECT;  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  JsonToken.END_ARRAY  |  JsonToken.END_OBJECT;	  _lastClearedToken    =    JsonToken.END_ARRAY;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
124	[BUG]  [BUGGY]  _lastClearedToken  =  JsonToken.END_ARRAY  +  1;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  _lastClearedToken  =  JsonToken.END_ARRAY  +  1;  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  JsonToken.END_ARRAY  +  1;	  _lastClearedToken    =    JsonToken.END_ARRAY;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
125	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.END_OBJECT)  {  if(includePath!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken!=  JsonToken.END_OBJECT)  {  if(includePath!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken!=  JsonToken.END_OBJECT)  {  if(includePath!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.START_OBJECT)    {    if(includePath!=    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
126	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT)  {  if(includePath!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT)  {  if(includePath!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken!=  JsonToken.START_OBJECT)  {  if(includePath!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.START_OBJECT)    {    if(includePath!=    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
127	[BUG]  [BUGGY]  _lastClearedToken  =  JsonToken.START_OBJECT  |  JsonToken.END_ARRAY  +  1;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  _lastClearedToken  =  JsonToken.START_OBJECT  |  JsonToken.END_ARRAY  +  1;  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  JsonToken.START_OBJECT  |  JsonToken.END_ARRAY  +  1;	  _lastClearedToken    =    JsonToken.START_OBJECT    |    JsonToken.END_ARRAY;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
128	[BUG]  [BUGGY]  _lastClearedToken  =  JsonToken.START_OBJECT  |  JsonToken.END_ARRAY,  _currToken;  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  _lastClearedToken  =  JsonToken.START_OBJECT  |  JsonToken.END_ARRAY,  _currToken;  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  JsonToken.START_OBJECT  |  JsonToken.END_ARRAY,  _currToken;	  _lastClearedToken    =    JsonToken.START_OBJECT    |    JsonToken.END_ARRAY;    	non-compiled	[CE]  ';'  expected	36	None	replace
129	[BUG]  [BUGGY]  if(includePath  ==  null)  {  if(_lastClearedToken  ==  JsonToken.START_OBJECT  ||  includePath  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(includePath  ==  null)  {  if(_lastClearedToken  ==  JsonToken.START_OBJECT  ||  includePath  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath  ==  null)  {  if(_lastClearedToken  ==  JsonToken.START_OBJECT  ||  includePath  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    JsonToken.START_OBJECT    ||    includePath    ==    JsonToken.END_ARRAY)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
130	[BUG]  [BUGGY]  if(_currToken!=  null)  {  if(_lastClearedToken  ==  JsonToken.START_OBJECT  ||  includePath  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken!=  null)  {  if(_lastClearedToken  ==  JsonToken.START_OBJECT  ||  includePath  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken!=  null)  {  if(_lastClearedToken  ==  JsonToken.START_OBJECT  ||  includePath  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    JsonToken.START_OBJECT    ||    includePath    ==    JsonToken.END_ARRAY)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
131	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    JsonToken.START_OBJECT    ||    includePath    ==    JsonToken.END_ARRAY)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
132	[BUG]  [BUGGY]  _lastClearedToken  =  JsonToken.START_ARRAY  +  1;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  _lastClearedToken  =  JsonToken.START_ARRAY  +  1;  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  JsonToken.START_ARRAY  +  1;	  _lastClearedToken    =    JsonToken.START_ARRAY;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
133	[BUG]  [BUGGY]  if(includePath!=  null  ||  allowMultipleMatches)  {  if(_matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(includePath!=  null  ||  allowMultipleMatches)  {  if(_matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath!=  null  ||  allowMultipleMatches)  {  if(_matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(_includePath    ==    null)    {    if(_matchCount    >    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
134	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.FIELD_NAME)  {  if(includePath!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken!=  JsonToken.FIELD_NAME)  {  if(includePath!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken!=  JsonToken.FIELD_NAME)  {  if(includePath!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.END_OBJECT)    {    if(includePath!=    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
135	[BUG]  [BUGGY]  if(includePath!=  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(includePath!=  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath!=  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.END_OBJECT)    {    if(includePath!=    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
136	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(includePath!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(includePath!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(includePath!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.END_OBJECT)    {    if(includePath!=    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
137	[BUG]  [BUGGY]  _lastClearedToken  =  JsonToken.FIELD_NAME  +  1;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  _lastClearedToken  =  JsonToken.FIELD_NAME  +  1;  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  JsonToken.FIELD_NAME  +  1;	  _lastClearedToken    =    JsonToken.FIELD_NAME;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
138	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  includePath,  _allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  includePath,  _allowMultipleMatches);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  includePath,  _allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    _itemFilter,    _allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
139	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  rootFilter,  _allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  rootFilter,  _allowMultipleMatches);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  rootFilter,  _allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    _itemFilter,    _allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
140	[BUG]  [BUGGY]  if(includePath)  {  if(_lastClearedToken!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(includePath)  {  if(_lastClearedToken!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath)  {  if(_lastClearedToken!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(!includePath)    {    if(_lastClearedToken    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
141	[BUG]  [BUGGY]  if(!includePath)  {  if(_lastClearedToken!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(!includePath)  {  if(_lastClearedToken!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(!includePath)  {  if(_lastClearedToken!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(!includePath)    {    if(_lastClearedToken    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
142	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
143	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
144	[BUG]  [BUGGY]  if(includePath  ==  null)  {  if(_matchCount  <  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(includePath  ==  null)  {  if(_matchCount  <  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath  ==  null)  {  if(_matchCount  <  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_matchCount    <    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
145	[BUG]  [BUGGY]  if(_includePath!=  null)  {  if(_matchCount  <  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_includePath!=  null)  {  if(_matchCount  <  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_includePath!=  null)  {  if(_matchCount  <  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_matchCount    <    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
146	[BUG]  [BUGGY]  if(_currToken  ==  null)  {  if(_lastClearedToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken  ==  null)  {  if(_lastClearedToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken  ==  null)  {  if(_lastClearedToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken!=    null)    {    if(_lastClearedToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
147	[BUG]  [BUGGY]  _lastClearedToken  =  p.getCurrentToken();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  _lastClearedToken  =  p.getCurrentToken();  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  p.getCurrentToken();	  _lastClearedToken    =    p.getNext();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
148	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  rootFilter,  _itemFilter,  allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  rootFilter,  _itemFilter,  allowMultipleMatches);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  rootFilter,  _itemFilter,  allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    _itemFilter,    includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
149	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
150	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
151	[BUG]  [BUGGY]  _lastClearedToken  =  JsonToken.START_ARRAY  |  JsonToken.START_OBJECT;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  _lastClearedToken  =  JsonToken.START_ARRAY  |  JsonToken.START_OBJECT;  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  JsonToken.START_ARRAY  |  JsonToken.START_OBJECT;	  _lastClearedToken    =    JsonToken.START_ARRAY;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
152	[BUG]  [BUGGY]  _lastClearedToken  =  JsonToken.START_ARRAY  |  JsonToken.END_OBJECT;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  _lastClearedToken  =  JsonToken.START_ARRAY  |  JsonToken.END_OBJECT;  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  JsonToken.START_ARRAY  |  JsonToken.END_OBJECT;	  _lastClearedToken    =    JsonToken.START_ARRAY;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
153	[BUG]  [BUGGY]  if(_includePath!=  null)  {  if(!_includePath.equals(includePath))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_includePath!=  null)  {  if(!_includePath.equals(includePath))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_includePath!=  null)  {  if(!_includePath.equals(includePath))  {  throw  new  IllegalArgumentException( " ");  }	  if(_includePath    ==    null)    {    if(_matchCount    >    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
154	[BUG]  [BUGGY]  if(_lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    JsonToken.END_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
155	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT)  {  if(_lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT)  {  if(_lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken!=  JsonToken.START_OBJECT)  {  if(_lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    JsonToken.END_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
156	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    JsonToken.END_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
157	[BUG]  [BUGGY]  parentContext  =  p.getParent();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  parentContext  =  p.getParent();  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	parentContext  =  p.getParent();	  if(_matchCount    >    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
158	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _itemFilter,  allowMultipleMatches,  _matchCount);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _itemFilter,  allowMultipleMatches,  _matchCount);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  _itemFilter,  allowMultipleMatches,  _matchCount);	  return    new    FilteringParserDelegate(p,    f,    includePath,    allowMultipleMatches,    _matchCount);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
159	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _includePath,  _allowMultipleMatches,  _matchCount);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _includePath,  _allowMultipleMatches,  _matchCount);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  _includePath,  _allowMultipleMatches,  _matchCount);	  return    new    FilteringParserDelegate(p,    f,    _includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
160	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  false,  _includePath,  allowMultipleMatches);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  false,  _includePath,  allowMultipleMatches);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  false,  _includePath,  allowMultipleMatches);	  return    new    FilteringParserDelegate(p,    f,    false,    includePath,    allowMultipleMatches);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
161	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  beanDesc,  allowMultipleMatches,  rootFilter);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  beanDesc,  allowMultipleMatches,  rootFilter);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  beanDesc,  allowMultipleMatches,  rootFilter);	  return    new    FilteringParserDelegate(p,    f,    includePath,    allowMultipleMatches,    rootFilter);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
162	[BUG]  [BUGGY]  _lastClearedToken  =  JsonToken.START_OBJECT?  JsonToken.END_ARRAY  :  JsonToken.START_OBJECT;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  _lastClearedToken  =  JsonToken.START_OBJECT?  JsonToken.END_ARRAY  :  JsonToken.START_OBJECT;  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  JsonToken.START_OBJECT?  JsonToken.END_ARRAY  :  JsonToken.START_OBJECT;	  _lastClearedToken    =    JsonToken.START_OBJECT    |    JsonToken.END_ARRAY;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
163	[BUG]  [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _itemFilter,  includePath);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  return  new  FilteringParserDelegate(p,  f,  _itemFilter,  includePath);  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	return  new  FilteringParserDelegate(p,  f,  _itemFilter,  includePath);	  return    new    FilteringParserDelegate(p,    f,    allowMultipleMatches,    includePath);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
164	[BUG]  [BUGGY]  if(_lastClearedToken  ==  JsonToken.START_OBJECT  ||  _lastClearedToken  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_lastClearedToken  ==  JsonToken.START_OBJECT  ||  _lastClearedToken  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_lastClearedToken  ==  JsonToken.START_OBJECT  ||  _lastClearedToken  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }	  if(_lastClearedToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
165	[BUG]  [BUGGY]  if(_includePath  ==  null)  {  if(_matchCount  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_includePath  ==  null)  {  if(_matchCount  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_includePath  ==  null)  {  if(_matchCount  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_matchCount    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
166	[BUG]  [BUGGY]  if(_lastClearedToken!=  null)  {  if(_allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_lastClearedToken!=  null)  {  if(_allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_lastClearedToken!=  null)  {  if(_allowMultipleMatches)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken!=    null)    {    if(_lastClearedToken    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
167	[BUG]  [BUGGY]  _lastClearedToken  =  JsonToken.START_OBJECT  &&  JsonToken.START_ARRAY;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  _lastClearedToken  =  JsonToken.START_OBJECT  &&  JsonToken.START_ARRAY;  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  JsonToken.START_OBJECT  &&  JsonToken.START_ARRAY;	  _lastClearedToken    =    JsonToken.START_OBJECT    |    JsonToken.START_ARRAY;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
168	[BUG]  [BUGGY]  allowMultipleMatches  =  _lastClearedToken;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  allowMultipleMatches  =  _lastClearedToken;  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	allowMultipleMatches  =  _lastClearedToken;	  if(_currToken    ==    null)    {    if(_lastClearedToken    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
169	[BUG]  [BUGGY]  _lastClearedToken  =  JsonToken.VALUE_STRING;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  _lastClearedToken  =  JsonToken.VALUE_STRING;  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	_lastClearedToken  =  JsonToken.VALUE_STRING;	  _lastClearedToken    =    f;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
170	[BUG]  [BUGGY]  if(includePath  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(includePath  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken!=    null)    {    if(includePath    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
171	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.END_OBJECT)  {  if(includePath!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken!=  JsonToken.END_OBJECT)  {  if(includePath!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken!=  JsonToken.END_OBJECT)  {  if(includePath!=  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.END_OBJECT)    {    if(includePath!=    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
172	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.FIELD_NAME)  {  if(includePath!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken!=  JsonToken.FIELD_NAME)  {  if(includePath!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken!=  JsonToken.FIELD_NAME)  {  if(includePath!=  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.END_OBJECT)    {    if(includePath!=    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
173	[BUG]  [BUGGY]  ||  _lastClearedToken  ==  JsonToken.START_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  ||  _lastClearedToken  ==  JsonToken.START_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	||  _lastClearedToken  ==  JsonToken.START_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }	  ||    _lastClearedToken    ==    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
174	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  includePath  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  includePath  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  includePath  ==  JsonToken.END_ARRAY)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath!=    null)    {    if(_lastClearedToken    ==    JsonToken.START_OBJECT    ||    includePath    ==    JsonToken.END_ARRAY)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
175	[BUG]  [BUGGY]  if(includePath!=  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(includePath!=  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath!=  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.START_OBJECT)    {    if(includePath!=    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
176	[BUG]  [BUGGY]  if(includePath!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(includePath!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(includePath!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.START_OBJECT)    {    if(includePath!=    JsonToken.START_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
177	[BUG]  [BUGGY]  if(_includePath  ==  null  ||  includePath!=  null)  {  if(_matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_includePath  ==  null  ||  includePath!=  null)  {  if(_matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_includePath  ==  null  ||  includePath!=  null)  {  if(_matchCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(includePath    ==    null)    {    if(_matchCount    >    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
178	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  &&  _lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  &&  _lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(_currToken!=  JsonToken.START_OBJECT  &&  _lastClearedToken  ==  JsonToken.END_OBJECT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _lastClearedToken    ==    JsonToken.END_OBJECT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
179	[BUG]  [BUGGY]  if(!includePath)  {  if(_currToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      public  FilteringParserDelegate(JsonParser  p,  TokenFilter  f,  boolean  includePath,  boolean  allowMultipleMatches)  {  super(p);  rootFilter  =  f;  _itemFilter  =  f;  _headContext  =  TokenFilterContext.createRootContext(f);  _includePath  =  includePath;  _allowMultipleMatches  =  allowMultipleMatches;      [BUGGY]  if(!includePath)  {  if(_currToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  FilteringParserDelegate  [METHOD]  <init>  [RETURN_TYPE]  TokenFilter,boolean,boolean)  JsonParser  p  TokenFilter  f  boolean  includePath  boolean  allowMultipleMatches  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  TokenFilterContext  _exposedContext  _headContext  int  _matchCount  TokenFilter  _itemFilter  f  rootFilter  JsonParser  p  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	124	124	3	replace	if(!includePath)  {  if(_currToken  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(!includePath)    {    if(_lastClearedToken    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
