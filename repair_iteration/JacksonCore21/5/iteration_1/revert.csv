projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_includePath=includePath;
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_includePath=includePath+1;
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_includePath=includePath+Integer.MIN_VALUE;
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_includePath=insertPath;
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_includePath=includePath+2;
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_includePath=includePath+3;
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_lastClearedToken=p.getLastClearedToken();
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_lastClearedToken=f.getLastClearedToken();
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(includePath){_lastClearedToken=JsonToken.END_OBJECT;}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(includePath){_lastClearedToken=JsonToken.START_OBJECT;}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_includePath=includePath+Integer.MAX_VALUE;
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_includePath=includePath+Integer.MIN_VALUE+1;
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(includePath){if(_lastClearedToken==JsonToken.END_OBJECT){thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(includePath){_lastClearedToken=JsonToken.START_OBJECT;}else{thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(includePath){if(_lastClearedToken==JsonToken.END_OBJECT){thrownewIllegalStateException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(includePath!=null){_includePath=insertPath;}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(includePath!=null){_includePath=insertPath;}else{_includePath=includePath;}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(includePath!=null){_includePath=insertPath;}else{thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_lastClearedToken=p.getParent();
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122p.setCurrentToken(JsonToken.START_OBJECT);
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_lastClearedToken=JsonToken.END_ARRAY;
