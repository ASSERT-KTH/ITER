projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_includePath=includePath;
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_includePath=includePath+1;
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_includePath=includePath+Integer.MIN_VALUE;
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_includePath=insertPath;
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_includePath=includePath+2;
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_includePath=includePath+3;
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_lastClearedToken=p.getLastClearedToken();
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_lastClearedToken=f.getLastClearedToken();
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(includePath){_lastClearedToken=JsonToken.END_OBJECT;}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(includePath){_lastClearedToken=JsonToken.START_OBJECT;}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_includePath=includePath+Integer.MAX_VALUE;
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_includePath=includePath+Integer.MIN_VALUE+1;
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(includePath){if(_lastClearedToken==JsonToken.END_OBJECT){thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(includePath){_lastClearedToken=JsonToken.START_OBJECT;}else{thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(includePath){if(_lastClearedToken==JsonToken.END_OBJECT){thrownewIllegalStateException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(includePath!=null){_includePath=insertPath;}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(includePath!=null){_includePath=insertPath;}else{_includePath=includePath;}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(includePath!=null){_includePath=insertPath;}else{thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_lastClearedToken=p.getParent();
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122p.setCurrentToken(JsonToken.START_OBJECT);
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_lastClearedToken=JsonToken.END_ARRAY;
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_lastClearedToken=JsonToken.END_OBJECT;
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_lastClearedToken=JsonToken.END_ARRAY|JsonToken.END_OBJECT;
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_lastClearedToken=p.getLastChild();
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_lastClearedToken=p.getNext();
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(includePath!=null){_includePath=includePath;}else{_includePath=includePath;}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(includePath!=null){_includePath=includePath;}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_includePath=includePath+Integer.MAX_VALUE+1;
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122||includePath==JsonToken.END_OBJECT){thrownewIllegalStateException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122||includePath==JsonToken.END_OBJECT||allowMultipleMatches){thrownewIllegalStateException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122allowMultipleMatches=_lastClearedToken;
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122||includePath==JsonToken.END_OBJECT||includePath==JsonToken.END_FALSE){thrownewIllegalStateException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122||includePath){_lastClearedToken=JsonToken.START_OBJECT;}else{thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_lastClearedToken=JsonToken.START_OBJECT;
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(_includePath!=null){_includePath=insertPath;}else{thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(includePath!=null){_includePath=f.includePath;}else{thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_lastClearedToken=p.getFirstClearedToken();
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_includePath=includePath+Integer.MIN_VALUE/1;
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122||includePath){_lastClearedToken=JsonToken.END_OBJECT;}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122||includePath){_lastClearedToken=JsonToken.START_OBJECT;}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122||includePath==JsonToken.END_OBJECT){thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122||includePath==JsonToken.END_OBJECT||allowMultipleMatches){thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122||includePath==JsonToken.END_OBJECT||includePath==JsonToken.END_ARRAY){thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122||includePath==JsonToken.END_OBJECT||includePath==JsonToken.END_FALSE){thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_lastClearedToken=f.getFirstClearedToken();
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122p.setCurrentToken(JsonToken.END_OBJECT);
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122p.setCurrentToken(JsonToken.START_OBJECT,includePath);
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122p.setCurrentToken(END_OBJECT);
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(_currToken!=JsonToken.START_OBJECT){if(includePath){thrownewIllegalStateException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(_currToken!=JsonToken.END_OBJECT||_lastClearedToken==JsonToken.END_ARRAY){thrownewIllegalStateException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(_currToken!=JsonToken.START_OBJECT||_lastClearedToken==JsonToken.END_ARRAY){thrownewIllegalStateException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(_currToken!=JsonToken.END_OBJECT){thrownewIllegalStateException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(includePath!=null){_includePath=rootFilter;}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_lastClearedToken=f.getLastClearedToken(includePath);
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(includePath!=null){_includePath=rootFilter;}else{thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_lastClearedToken=JsonToken.END_ARRAY+1;
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(_includePath!=null){_includePath=insertPath;}else{_includePath=includePath;}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_includePath=excludePath+1;
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_lastClearedToken=p.getLastClearedToken(includePath);
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(_currToken!=null){if(includePath){_lastClearedToken=JsonToken.START_OBJECT;}else{thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(includePath){_lastClearedToken=JsonToken.END_OBJECT;}else{thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(_currToken!=JsonToken.START_OBJECT){if(includePath){thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(_currToken!=JsonToken.END_OBJECT||_lastClearedToken==JsonToken.END_ARRAY){thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(_currToken!=JsonToken.START_OBJECT||_lastClearedToken==JsonToken.END_ARRAY){thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(_currToken!=JsonToken.START_OBJECT||_lastClearedToken==JsonToken.END_OBJECT){thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(_currToken!=JsonToken.START_OBJECT){if(includePath==JsonToken.END_OBJECT){thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(_currToken==JsonToken.END_OBJECT||_lastClearedToken==JsonToken.END_ARRAY){thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(_currToken!=JsonToken.END_ARRAY){if(includePath==JsonToken.END_OBJECT){thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(_currToken==JsonToken.END_OBJECT){thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(includePath!=null){_includePath=f.getIncludePath();}else{thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(includePath!=null){_includePath=f;}else{thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(_lastClearedToken!=JsonToken.START_OBJECT){_lastClearedToken=JsonToken.START_OBJECT;}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(_lastClearedToken!=JsonToken.END_OBJECT){_lastClearedToken=JsonToken.END_OBJECT;}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(_lastClearedToken==JsonToken.END_OBJECT){_lastClearedToken=JsonToken.END_OBJECT;}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122p.setCurrentToken(JsonToken.START_OBJECT,_currToken);
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122p.setCurrentToken(JsonToken.START_OBJECT|JsonToken.END_ARRAY);
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122_lastClearedToken=p.getLastParent();
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(_includePath){_lastClearedToken=JsonToken.START_OBJECT;}else{thrownewIllegalArgumentException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(_currToken!=JsonToken.START_OBJECT){if(includePath==JsonToken.END_OBJECT){thrownewIllegalStateException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(_currToken!=JsonToken.END_ARRAY){if(includePath==JsonToken.END_OBJECT){thrownewIllegalStateException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(_currToken!=JsonToken.START_OBJECT){if(_lastClearedToken==JsonToken.END_OBJECT){thrownewIllegalStateException("");}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(_includePath!=null){_includePath=insertPath;}
projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java122if(includePath!=null){_includePath=f.includePath;}
