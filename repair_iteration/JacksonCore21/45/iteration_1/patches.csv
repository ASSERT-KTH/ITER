bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _lastClearedToken  =  f;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  _lastClearedToken  =  f;  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	_lastClearedToken  =  f;	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  if(f  ==  null)  {  if(_lastClearedToken!=  JsonToken.END_OBJECT)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(f  ==  null)  {  if(_lastClearedToken!=  JsonToken.END_OBJECT)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  null)  {  if(_lastClearedToken!=  JsonToken.END_OBJECT)  {  t  =  _headContext.nextTokenToRead();  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  if(f!=  null)  {  if(_lastClearedToken  ==  JsonToken.END_OBJECT)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(f!=  null)  {  if(_lastClearedToken  ==  JsonToken.END_OBJECT)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  null)  {  if(_lastClearedToken  ==  JsonToken.END_OBJECT)  {  t  =  _headContext.nextTokenToRead();  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
4	[BUG]  [BUGGY]  t  =  _lastClearedTokenToRead();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  t  =  _lastClearedTokenToRead();  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	t  =  _lastClearedTokenToRead();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
5	[BUG]  [BUGGY]  if(f!=  TokenFilter.INCLUDE_ALL  ||!_allowMultipleMatches)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(f!=  TokenFilter.INCLUDE_ALL  ||!_allowMultipleMatches)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  TokenFilter.INCLUDE_ALL  ||!_allowMultipleMatches)  {	  if(f!=    TokenFilter.INCLUDE_ALL    &&!_allowMultipleMatches)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  f!=  TokenFilter.INCLUDE_ALL)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(!_allowMultipleMatches  &&  f!=  TokenFilter.INCLUDE_ALL)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  f!=  TokenFilter.INCLUDE_ALL)  {	  if(f!=    TokenFilter.INCLUDE_ALL    &&!_allowMultipleMatches)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  if(f!=  null  ||  f!=  TokenFilter.INCLUDE_ALL)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(f!=  null  ||  f!=  TokenFilter.INCLUDE_ALL)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  null  ||  f!=  TokenFilter.INCLUDE_ALL)  {	  if(f!=    TokenFilter.INCLUDE_ALL)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
8	[BUG]  [BUGGY]  if(f!=  TokenFilter.INCLUDE_ALL  ||  f  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(f!=  TokenFilter.INCLUDE_ALL  ||  f  ==  null)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  TokenFilter.INCLUDE_ALL  ||  f  ==  null)  {	  if(f!=    TokenFilter.INCLUDE_ALL)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
9	[BUG]  [BUGGY]  if(f  ==  TokenFilter.INCLUDE_ALL  ||!_allowMultipleMatches)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(f  ==  TokenFilter.INCLUDE_ALL  ||!_allowMultipleMatches)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  TokenFilter.INCLUDE_ALL  ||!_allowMultipleMatches)  {	  if(f    ==    TokenFilter.INCLUDE_ALL    &&!_allowMultipleMatches)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
10	[BUG]  [BUGGY]  if(f!=  null  ||!_allowMultipleMatches)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(f!=  null  ||!_allowMultipleMatches)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  null  ||!_allowMultipleMatches)  {	  if(f!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
11	[BUG]  [BUGGY]  if(_itemFilter!=  null)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(_itemFilter!=  null)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_itemFilter!=  null)  {	  if(f!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
12	[BUG]  [BUGGY]  if(f  ==  null  ||  f  ==  TokenFilter.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(f  ==  null  ||  f  ==  TokenFilter.EXPR_RESULT)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  null  ||  f  ==  TokenFilter.EXPR_RESULT)  {	  if(f    ==    TokenFilter.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  if(f!=  TokenFilter.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(f!=  TokenFilter.EXPR_RESULT)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  TokenFilter.EXPR_RESULT)  {	  if(f    ==    TokenFilter.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
14	[BUG]  [BUGGY]  if(f  ==  null  ||!_allowMultipleMatches)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(f  ==  null  ||!_allowMultipleMatches)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  null  ||!_allowMultipleMatches)  {	  if(f    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  f!=  null)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(!_allowMultipleMatches  &&  f!=  null)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  f!=  null)  {	  if(!_allowMultipleMatches)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
16	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  f  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(!_allowMultipleMatches  &&  f  ==  null)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  f  ==  null)  {	  if(!_allowMultipleMatches)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  f.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(!_allowMultipleMatches  &&  f.length()  >  0)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  f.length()  >  0)  {	  if(!_allowMultipleMatches)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
18	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  f.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(!_allowMultipleMatches  &&  f.isEmpty())  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  f.isEmpty())  {	  if(!_allowMultipleMatches)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
19	[BUG]  [BUGGY]  if(_itemFilter  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(_itemFilter  ==  null)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_itemFilter  ==  null)  {	  if(f!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
20	[BUG]  [BUGGY]  if(f!=  null  &&  f!=  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(f!=  null  &&  f!=  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  null  &&  f!=  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {	  if(f!=    TokenFilter.INCLUDE_ALL    &&!_allowMultipleMatches)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
21	[BUG]  [BUGGY]  if(!_allowMultipleMatches)  {  if(!_lastClearedToken)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(!_allowMultipleMatches)  {  if(!_lastClearedToken)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches)  {  if(!_lastClearedToken)  {  t  =  _headContext.nextTokenToRead();  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
22	[BUG]  [BUGGY]  f  =  delegate.getCurrentName();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  f  =  delegate.getCurrentName();  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	f  =  delegate.getCurrentName();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
23	[BUG]  [BUGGY]  t  =  _headContext.nextTokenToRead();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  t  =  _headContext.nextTokenToRead();  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	t  =  _headContext.nextTokenToRead();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
24	[BUG]  [BUGGY]  if(f  ==  null  ||  f  ==  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(f  ==  null  ||  f  ==  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  null  ||  f  ==  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {	  if(f    ==    TokenFilter.INCLUDE_ALL    &&!_allowMultipleMatches)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
25	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!_allowMultipleMatches)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
26	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&!_includePath)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(!_allowMultipleMatches  &&!_includePath)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&!_includePath)  {	  if(!_allowMultipleMatches)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
27	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&!_includeImmediateParent)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(!_allowMultipleMatches  &&!_includeImmediateParent)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&!_includeImmediateParent)  {	  if(!_allowMultipleMatches)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
28	[BUG]  [BUGGY]  if(f  ==  null  ||!_lastClearedToken)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(f  ==  null  ||!_lastClearedToken)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  null  ||!_lastClearedToken)  {	  if(f    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
29	[BUG]  [BUGGY]  if(f  ==  null)  {  if(!_allowMultipleMatches)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(f  ==  null)  {  if(!_allowMultipleMatches)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  null)  {  if(!_allowMultipleMatches)  {  t  =  _headContext.nextTokenToRead();  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
30	[BUG]  [BUGGY]  if(!_allowMultipleMatches)  {  if(!_includePath)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(!_allowMultipleMatches)  {  if(!_includePath)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches)  {  if(!_includePath)  {  t  =  _headContext.nextTokenToRead();  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
31	[BUG]  [BUGGY]  if(f  ==  null)  {  if(_includePath)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(f  ==  null)  {  if(_includePath)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  null)  {  if(_includePath)  {  t  =  _headContext.nextTokenToRead();  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
32	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.FLUSH_PASSED_TOKEN))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.FLUSH_PASSED_TOKEN))  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.FLUSH_PASSED_TOKEN))  {	  if(!_allowMultipleMatches)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
33	[BUG]  [BUGGY]  if(f!=  null  &&!_allowMultipleMatches)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(f!=  null  &&!_allowMultipleMatches)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  null  &&!_allowMultipleMatches)  {	  if(f!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
34	[BUG]  [BUGGY]  if(f!=  null  &&!_lastClearedToken)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(f!=  null  &&!_lastClearedToken)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  null  &&!_lastClearedToken)  {	  if(f!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
35	[BUG]  [BUGGY]  if(f!=  null  &&!_includePath)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(f!=  null  &&!_includePath)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  null  &&!_includePath)  {	  if(f!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
36	[BUG]  [BUGGY]  if(f!=  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches  &&!_includePath)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(f!=  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches  &&!_includePath)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches  &&!_includePath)  {	  if(f!=    TokenFilter.INCLUDE_ALL    &&!_allowMultipleMatches)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
37	[BUG]  [BUGGY]  if(f  ==  TokenFilter.EXPR_RESULT  &&!_allowMultipleMatches)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(f  ==  TokenFilter.EXPR_RESULT  &&!_allowMultipleMatches)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  TokenFilter.EXPR_RESULT  &&!_allowMultipleMatches)  {	  if(f    ==    TokenFilter.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
38	[BUG]  [BUGGY]  if(f  ==  TokenFilter.EXPR_RESULT  &&!_includePath)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(f  ==  TokenFilter.EXPR_RESULT  &&!_includePath)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  TokenFilter.EXPR_RESULT  &&!_includePath)  {	  if(f    ==    TokenFilter.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
39	[BUG]  [BUGGY]  if(f  ==  TokenFilter.EXPR_RESULT  ||  f!=  null)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(f  ==  TokenFilter.EXPR_RESULT  ||  f!=  null)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  TokenFilter.EXPR_RESULT  ||  f!=  null)  {	  if(f    ==    TokenFilter.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
40	[BUG]  [BUGGY]  if(f!=  TokenFilter.INCLUDE_ALL  &&!_includePath)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(f!=  TokenFilter.INCLUDE_ALL  &&!_includePath)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  TokenFilter.INCLUDE_ALL  &&!_includePath)  {	  if(f!=    TokenFilter.INCLUDE_ALL)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
41	[BUG]  [BUGGY]  if(f!=  TokenFilter.INCLUDE_ALL  &&  f!=  null)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(f!=  TokenFilter.INCLUDE_ALL  &&  f!=  null)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  TokenFilter.INCLUDE_ALL  &&  f!=  null)  {	  if(f!=    TokenFilter.INCLUDE_ALL)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
42	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  f  ==  TokenFilter.INCLUDE_ALL)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]    return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);    [BUGGY]  if(!_allowMultipleMatches  &&  f  ==  TokenFilter.INCLUDE_ALL)  {  [BUGGY]    _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  f  ==  TokenFilter.INCLUDE_ALL)  {	  if(f    ==    TokenFilter.INCLUDE_ALL    &&!_allowMultipleMatches)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
