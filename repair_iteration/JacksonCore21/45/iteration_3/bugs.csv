bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.QUOTE_FIELD_NAME,  f))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.QUOTE_FIELD_NAME,  f))  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.QUOTE_FIELD_NAME,  f))  {	  if(!_allowMultipleMatches    &&    delegate.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
2	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.QUOTE_FIELD_NAME,  name))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.QUOTE_FIELD_NAME,  name))  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.QUOTE_FIELD_NAME,  name))  {	  if(!_allowMultipleMatches    &&    delegate.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
3	[BUG]  [BUGGY]  if(f!=  null  &&!_allowMultipleMatches  &&  delegate.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f!=  null  &&!_allowMultipleMatches  &&  delegate.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  null  &&!_allowMultipleMatches  &&  delegate.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!_allowMultipleMatches    &&    delegate.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
4	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.QUOTE_FIELD_NAME)||  f!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.QUOTE_FIELD_NAME)||  f!=  null)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.QUOTE_FIELD_NAME)||  f!=  null)  {	  if(!_allowMultipleMatches    &&    delegate.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
5	[BUG]  [BUGGY]  if(f!=  null  ||  f!=  TokenFilter.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f!=  null  ||  f!=  TokenFilter.EXPR_RESULT)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  null  ||  f!=  TokenFilter.EXPR_RESULT)  {	  if(f!=    TokenFilter.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
6	[BUG]  [BUGGY]  if(_lastClearedToken  ==  null  ||!_lastClearedToken)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_lastClearedToken  ==  null  ||!_lastClearedToken)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_lastClearedToken  ==  null  ||!_lastClearedToken)  {	  if(f    ==    null    ||!_lastClearedToken)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
7	[BUG]  [BUGGY]  if(f!=  null  ||!_lastClearedToken)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f!=  null  ||!_lastClearedToken)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  null  ||!_lastClearedToken)  {	  if(f    ==    null    ||!_lastClearedToken)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
8	[BUG]  [BUGGY]  if(f  ==  TokenFilter.EXPR_RESULT  &&  f!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f  ==  TokenFilter.EXPR_RESULT  &&  f!=  null)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  TokenFilter.EXPR_RESULT  &&  f!=  null)  {	  if(f    ==    TokenFilter.EXPR_RESULT    ||    f!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
9	[BUG]  [BUGGY]  if(f!=  null  ||  f  ==  TokenFilter.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f!=  null  ||  f  ==  TokenFilter.EXPR_RESULT)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  null  ||  f  ==  TokenFilter.EXPR_RESULT)  {	  if(f    ==    TokenFilter.EXPR_RESULT    ||    f!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
10	[BUG]  [BUGGY]  if(f!=  null  &&  f!=  TokenFilter.INCLUDE_ALL)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f!=  null  &&  f!=  TokenFilter.INCLUDE_ALL)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  null  &&  f!=  TokenFilter.INCLUDE_ALL)  {	  if(f!=    null    ||    f!=    TokenFilter.INCLUDE_ALL)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
11	[BUG]  [BUGGY]  if(f  ==  null  &&  f!=  TokenFilter.INCLUDE_ALL)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f  ==  null  &&  f!=  TokenFilter.INCLUDE_ALL)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  null  &&  f!=  TokenFilter.INCLUDE_ALL)  {	  if(f!=    null    ||    f!=    TokenFilter.INCLUDE_ALL)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
12	[BUG]  [BUGGY]  if(f  ==  null  ||  f!=  TokenFilter.INCLUDE_ALL)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f  ==  null  ||  f!=  TokenFilter.INCLUDE_ALL)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  null  ||  f!=  TokenFilter.INCLUDE_ALL)  {	  if(f!=    null    ||    f!=    TokenFilter.INCLUDE_ALL)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  t  =  _exposedContext.nextTokenToRead();  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  t  =  _exposedContext.nextTokenToRead();  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	t  =  _exposedContext.nextTokenToRead();	  t    =    _headContext.nextTokenToRead();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
14	[BUG]  [BUGGY]  t  =  _headContext.nextTokenToRead(f);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  t  =  _headContext.nextTokenToRead(f);  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	t  =  _headContext.nextTokenToRead(f);	  t    =    _headContext.nextTokenToRead();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
15	[BUG]  [BUGGY]  t  =  f.nextTokenToRead();  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  t  =  f.nextTokenToRead();  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	t  =  f.nextTokenToRead();	  t    =    _headContext.nextTokenToRead();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
16	[BUG]  [BUGGY]  if(f  ==  null  &&  f  ==  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f  ==  null  &&  f  ==  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  null  &&  f  ==  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {	  if(f    ==    null    ||    f    ==    TokenFilter.INCLUDE_ALL    &&!_allowMultipleMatches)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
17	[BUG]  [BUGGY]  if(f!=  null  &&  f  ==  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f!=  null  &&  f  ==  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  null  &&  f  ==  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {	  if(f    ==    null    ||    f    ==    TokenFilter.INCLUDE_ALL    &&!_allowMultipleMatches)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
18	[BUG]  [BUGGY]  if(_lastClearedToken!=  null)  {  if(!_allowMultipleMatches)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_lastClearedToken!=  null)  {  if(!_allowMultipleMatches)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_lastClearedToken!=  null)  {  if(!_allowMultipleMatches)  {  t  =  _headContext.nextTokenToRead();  }	  if(!_allowMultipleMatches)    {    if(!_lastClearedToken)    {    t    =    _headContext.nextTokenToRead();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
19	[BUG]  [BUGGY]  if(!_lastClearedToken)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_lastClearedToken)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_lastClearedToken)  {  t  =  _headContext.nextTokenToRead();  }	  if(!_allowMultipleMatches)    {    if(!_lastClearedToken)    {    t    =    _headContext.nextTokenToRead();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
20	[BUG]  [BUGGY]  if(f!=  null)  {  if(!_allowMultipleMatches)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f!=  null)  {  if(!_allowMultipleMatches)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  null)  {  if(!_allowMultipleMatches)  {  t  =  _headContext.nextTokenToRead();  }	  if(!_allowMultipleMatches)    {    if(!_lastClearedToken)    {    t    =    _headContext.nextTokenToRead();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
21	[BUG]  [BUGGY]  if(_lastClearedToken  ==  null)  {  if(!_allowMultipleMatches)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_lastClearedToken  ==  null)  {  if(!_allowMultipleMatches)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_lastClearedToken  ==  null)  {  if(!_allowMultipleMatches)  {  t  =  _headContext.nextTokenToRead();  }	  if(f    ==    null)    {    if(!_allowMultipleMatches)    {    t    =    _headContext.nextTokenToRead();    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
22	[BUG]  [BUGGY]  if(f  ==  null  &&!_allowMultipleMatches)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f  ==  null  &&!_allowMultipleMatches)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  null  &&!_allowMultipleMatches)  {	  if(f    ==    null    ||!_allowMultipleMatches)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
23	[BUG]  [BUGGY]  _lastClearedToken  =  t;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  _lastClearedToken  =  t;  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	_lastClearedToken  =  t;	  _lastClearedToken    =    f;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
24	[BUG]  [BUGGY]  _lastClearedToken  =  f.toString();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  _lastClearedToken  =  f.toString();  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	_lastClearedToken  =  f.toString();	  _lastClearedToken    =    f;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
25	[BUG]  [BUGGY]  if(_allowMultipleMatches  &&  f!=  TokenFilter.INCLUDE_ALL)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_allowMultipleMatches  &&  f!=  TokenFilter.INCLUDE_ALL)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_allowMultipleMatches  &&  f!=  TokenFilter.INCLUDE_ALL)  {	  if(!_allowMultipleMatches    &&    f!=    TokenFilter.INCLUDE_ALL)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
26	[BUG]  [BUGGY]  if(f  ==  null  ||  f!=  TokenFilter.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f  ==  null  ||  f!=  TokenFilter.EXPR_RESULT)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  null  ||  f!=  TokenFilter.EXPR_RESULT)  {	  if(f    ==    null    ||    f    ==    TokenFilter.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
27	[BUG]  [BUGGY]  if(f  ==  null  ||  f.length()  ==  TokenFilter.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f  ==  null  ||  f.length()  ==  TokenFilter.EXPR_RESULT)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  null  ||  f.length()  ==  TokenFilter.EXPR_RESULT)  {	  if(f    ==    null    ||    f    ==    TokenFilter.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
28	[BUG]  [BUGGY]  if(_includePath)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_includePath)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_includePath)  {  t  =  _headContext.nextTokenToRead();  }	  if(f    ==    null)    {    if(_includePath)    {    t    =    _headContext.nextTokenToRead();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
29	[BUG]  [BUGGY]  if(_includePath)  {  t  =  _headContext.getTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_includePath)  {  t  =  _headContext.getTokenToRead();  }  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_includePath)  {  t  =  _headContext.getTokenToRead();  }	  if(f    ==    null)    {    if(_includePath)    {    t    =    _headContext.nextTokenToRead();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
30	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.FIELD_NAME))  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.FIELD_NAME))  {	  if(!_allowMultipleMatches    &&    delegate.isEnabled(Feature.FLUSH_PASSED_TOKEN))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
31	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.FIELD_NAME,  f))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.FIELD_NAME,  f))  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.FIELD_NAME,  f))  {	  if(!_allowMultipleMatches    &&    delegate.isEnabled(Feature.FLUSH_PASSED_TOKEN))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
32	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.FIELD_NAMES))  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.FIELD_NAMES))  {	  if(!_allowMultipleMatches    &&    delegate.isEnabled(Feature.FLUSH_PASSED_TOKEN))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
33	[BUG]  [BUGGY]  if(_lastClearedToken!=  null  &&!_lastClearedToken)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_lastClearedToken!=  null  &&!_lastClearedToken)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_lastClearedToken!=  null  &&!_lastClearedToken)  {	  if(f!=    null    &&!_lastClearedToken)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
34	[BUG]  [BUGGY]  if(f  ==  null  &&!_lastClearedToken)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f  ==  null  &&!_lastClearedToken)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  null  &&!_lastClearedToken)  {	  if(f!=    null    &&!_lastClearedToken)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
35	[BUG]  [BUGGY]  if(_includePath!=  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches  &&!_includePath)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_includePath!=  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches  &&!_includePath)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_includePath!=  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches  &&!_includePath)  {	  if(f!=    TokenFilter.INCLUDE_ALL    &&!_allowMultipleMatches    &&!_includePath)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
36	[BUG]  [BUGGY]  if(f  ==  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches  &&!_includePath)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f  ==  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches  &&!_includePath)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches  &&!_includePath)  {	  if(f!=    TokenFilter.INCLUDE_ALL    &&!_allowMultipleMatches    &&!_includePath)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
37	[BUG]  [BUGGY]  if(f!=  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches  &&!_matchCount  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f!=  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches  &&!_matchCount  >  0)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches  &&!_matchCount  >  0)  {	  if(f!=    TokenFilter.INCLUDE_ALL    &&!_allowMultipleMatches    &&!_includePath)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
38	[BUG]  [BUGGY]  if(!_allowMultipleMatches  ||  f!=  null)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  ||  f!=  null)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  ||  f!=  null)  {	  if(!_allowMultipleMatches    &&    f!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
39	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&!f.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&!f.isEmpty())  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&!f.isEmpty())  {	  if(!_allowMultipleMatches    &&!_includePath)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
40	[BUG]  [BUGGY]  if(!_allowMultipleMatches  ||!_includePath)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  ||!_includePath)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  ||!_includePath)  {	  if(!_allowMultipleMatches    &&!_includePath)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
41	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&!f.hasNext())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&!f.hasNext())  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&!f.hasNext())  {	  if(!_allowMultipleMatches    &&!_includePath)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
42	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&!_matchCount  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&!_matchCount  >  0)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&!_matchCount  >  0)  {	  if(!_allowMultipleMatches    &&!_includePath)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
43	[BUG]  [BUGGY]  if(_lastClearedToken!=  JsonToken.END_OBJECT)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_lastClearedToken!=  JsonToken.END_OBJECT)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_lastClearedToken!=  JsonToken.END_OBJECT)  {  t  =  _headContext.nextTokenToRead();  }	  if(f    ==    null)    {    if(_lastClearedToken!=    JsonToken.END_OBJECT)    {    t    =    _headContext.nextTokenToRead();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
44	[BUG]  [BUGGY]  if(_lastClearedToken!=  JsonToken.START_OBJECT)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_lastClearedToken!=  JsonToken.START_OBJECT)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_lastClearedToken!=  JsonToken.START_OBJECT)  {  t  =  _headContext.nextTokenToRead();  }	  if(f    ==    null)    {    if(_lastClearedToken!=    JsonToken.END_OBJECT)    {    t    =    _headContext.nextTokenToRead();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
45	[BUG]  [BUGGY]  if(_itemFilter!=  null  &&!_allowMultipleMatches)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_itemFilter!=  null  &&!_allowMultipleMatches)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_itemFilter!=  null  &&!_allowMultipleMatches)  {	  if(f!=    null    &&!_allowMultipleMatches)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
46	[BUG]  [BUGGY]  if(f!=  TokenFilter.INCLUDE_ALL  ||  f!=  null)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f!=  TokenFilter.INCLUDE_ALL  ||  f!=  null)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  TokenFilter.INCLUDE_ALL  ||  f!=  null)  {	  if(f!=    TokenFilter.INCLUDE_ALL    &&    f!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
47	[BUG]  [BUGGY]  if(f  ==  TokenFilter.INCLUDE_ALL  &&  f!=  null)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f  ==  TokenFilter.INCLUDE_ALL  &&  f!=  null)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  TokenFilter.INCLUDE_ALL  &&  f!=  null)  {	  if(f!=    TokenFilter.INCLUDE_ALL    &&    f!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
48	[BUG]  [BUGGY]  if(f!=  TokenFilter.INCLUDE_ALL  &&  f  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f!=  TokenFilter.INCLUDE_ALL  &&  f  ==  null)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  TokenFilter.INCLUDE_ALL  &&  f  ==  null)  {	  if(f!=    TokenFilter.INCLUDE_ALL    ||    f    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
49	[BUG]  [BUGGY]  if(f  ==  TokenFilter.INCLUDE_ALL  ||  f  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f  ==  TokenFilter.INCLUDE_ALL  ||  f  ==  null)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  TokenFilter.INCLUDE_ALL  ||  f  ==  null)  {	  if(f!=    TokenFilter.INCLUDE_ALL    ||    f    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
50	[BUG]  [BUGGY]  if(_includePath  ==  TokenFilter.EXPR_RESULT  &&!_includePath)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_includePath  ==  TokenFilter.EXPR_RESULT  &&!_includePath)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_includePath  ==  TokenFilter.EXPR_RESULT  &&!_includePath)  {	  if(f    ==    TokenFilter.EXPR_RESULT    &&!_includePath)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
51	[BUG]  [BUGGY]  if(f  ==  null  ||  f  ==  TokenFilter.EXPR_RESULT  &&!_includePath)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f  ==  null  ||  f  ==  TokenFilter.EXPR_RESULT  &&!_includePath)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  null  ||  f  ==  TokenFilter.EXPR_RESULT  &&!_includePath)  {	  if(f    ==    TokenFilter.EXPR_RESULT    &&!_includePath)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
52	[BUG]  [BUGGY]  if(f  ==  TokenFilter.EXPR_RESULT  ||!_includePath)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f  ==  TokenFilter.EXPR_RESULT  ||!_includePath)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  TokenFilter.EXPR_RESULT  ||!_includePath)  {	  if(f    ==    TokenFilter.EXPR_RESULT    &&!_includePath)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
53	[BUG]  [BUGGY]  if(_lastClearedToken  ==  JsonToken.END_OBJECT)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_lastClearedToken  ==  JsonToken.END_OBJECT)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_lastClearedToken  ==  JsonToken.END_OBJECT)  {  t  =  _headContext.nextTokenToRead();  }	  if(f!=    null)    {    if(_lastClearedToken    ==    JsonToken.END_OBJECT)    {    t    =    _headContext.nextTokenToRead();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
54	[BUG]  [BUGGY]  if(_lastClearedToken  ==  JsonToken.START_OBJECT)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_lastClearedToken  ==  JsonToken.START_OBJECT)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_lastClearedToken  ==  JsonToken.START_OBJECT)  {  t  =  _headContext.nextTokenToRead();  }	  if(f!=    null)    {    if(_lastClearedToken    ==    JsonToken.END_OBJECT)    {    t    =    _headContext.nextTokenToRead();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
55	[BUG]  [BUGGY]  if(_includePath!=  TokenFilter.INCLUDE_ALL  &&!_includePath)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_includePath!=  TokenFilter.INCLUDE_ALL  &&!_includePath)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_includePath!=  TokenFilter.INCLUDE_ALL  &&!_includePath)  {	  if(f!=    TokenFilter.INCLUDE_ALL    &&!_includePath)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
56	[BUG]  [BUGGY]  if(f!=  TokenFilter.INCLUDE_ALL  ||!_includePath)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f!=  TokenFilter.INCLUDE_ALL  ||!_includePath)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  TokenFilter.INCLUDE_ALL  ||!_includePath)  {	  if(f!=    TokenFilter.INCLUDE_ALL    &&!_includePath)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
57	[BUG]  [BUGGY]  if(_itemFilter!=  null  &&  f!=  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_itemFilter!=  null  &&  f!=  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_itemFilter!=  null  &&  f!=  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {	  if(f!=    null    &&    f!=    TokenFilter.INCLUDE_ALL    &&!_allowMultipleMatches)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
58	[BUG]  [BUGGY]  if(f  ==  null  &&  f!=  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f  ==  null  &&  f!=  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  null  &&  f!=  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {	  if(f!=    null    &&    f!=    TokenFilter.INCLUDE_ALL    &&!_allowMultipleMatches)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
59	[BUG]  [BUGGY]  t  =  _nextTokenToRead();  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  t  =  _nextTokenToRead();  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	t  =  _nextTokenToRead();	  t    =    _lastClearedTokenToRead();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
60	[BUG]  [BUGGY]  t  =  _lastClearedTokenToRead(f);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  t  =  _lastClearedTokenToRead(f);  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	t  =  _lastClearedTokenToRead(f);	  t    =    _lastClearedTokenToRead();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
61	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  f.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&  f.length()  ==  0)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  f.length()  ==  0)  {	  if(!_allowMultipleMatches    &&    f.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
62	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  f!=  null  &&  f.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&  f!=  null  &&  f.length()  >  0)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  f!=  null  &&  f.length()  >  0)  {	  if(!_allowMultipleMatches    &&    f.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
63	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  f.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&  f.length()!=  0)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  f.length()!=  0)  {	  if(!_allowMultipleMatches    &&    f.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
64	[BUG]  [BUGGY]  if(_includePath)  {  if(!_allowMultipleMatches)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_includePath)  {  if(!_allowMultipleMatches)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_includePath)  {  if(!_allowMultipleMatches)  {  t  =  _headContext.nextTokenToRead();  }	  if(!_allowMultipleMatches)    {    if(!_includePath)    {    t    =    _headContext.nextTokenToRead();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
65	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  f!=  null  &&  f.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&  f!=  null  &&  f.isEmpty())  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  f!=  null  &&  f.isEmpty())  {	  if(!_allowMultipleMatches    &&    f.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
66	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  f.isEmpty()  &&  delegate.getCurrentName().equals(name))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&  f.isEmpty()  &&  delegate.getCurrentName().equals(name))  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  f.isEmpty()  &&  delegate.getCurrentName().equals(name))  {	  if(!_allowMultipleMatches    &&    f.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
67	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  f.isEmpty()  &&  delegate.getCurrentName().endsWith(name))  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&  f.isEmpty()  &&  delegate.getCurrentName().endsWith(name))  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  f.isEmpty()  &&  delegate.getCurrentName().endsWith(name))  {	  if(!_allowMultipleMatches    &&    f.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
68	[BUG]  [BUGGY]  if(!_allowMultipleMatches  ||  f  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  ||  f  ==  null)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  ||  f  ==  null)  {	  if(!_allowMultipleMatches    &&    f    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
69	[BUG]  [BUGGY]  f  =  _headContext.getCurrentName();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  f  =  _headContext.getCurrentName();  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	f  =  _headContext.getCurrentName();	  f    =    delegate.getCurrentName();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
70	[BUG]  [BUGGY]  f  =  _lastClearedTokenToRead();  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  f  =  _lastClearedTokenToRead();  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	f  =  _lastClearedTokenToRead();	  f    =    delegate.getCurrentName();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
71	[BUG]  [BUGGY]  f  =  _exposedContext.getCurrentName();  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  f  =  _exposedContext.getCurrentName();  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	f  =  _exposedContext.getCurrentName();	  f    =    delegate.getCurrentName();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
72	[BUG]  [BUGGY]  f  =  _context.getCurrentName();  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  f  =  _context.getCurrentName();  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	f  =  _context.getCurrentName();	  f    =    delegate.getCurrentName();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
73	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&!_includeImmediateParent  &&  f!=  null)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&!_includeImmediateParent  &&  f!=  null)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&!_includeImmediateParent  &&  f!=  null)  {	  if(!_allowMultipleMatches    &&!_includeImmediateParent)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
74	[BUG]  [BUGGY]  if(!_allowMultipleMatches  ||!_includeImmediateParent)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  ||!_includeImmediateParent)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  ||!_includeImmediateParent)  {	  if(!_allowMultipleMatches    &&!_includeImmediateParent)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
75	[BUG]  [BUGGY]  if(!f.allowMultipleMatches  &&!_includeImmediateParent)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!f.allowMultipleMatches  &&!_includeImmediateParent)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!f.allowMultipleMatches  &&!_includeImmediateParent)  {	  if(!_allowMultipleMatches    &&!_includeImmediateParent)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
76	[BUG]  [BUGGY]  if(f!=  TokenFilter.EXPR_RESULT  &&!_allowMultipleMatches)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f!=  TokenFilter.EXPR_RESULT  &&!_allowMultipleMatches)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  TokenFilter.EXPR_RESULT  &&!_allowMultipleMatches)  {	  if(f    ==    TokenFilter.EXPR_RESULT    &&!_allowMultipleMatches)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
77	[BUG]  [BUGGY]  if(f  ==  TokenFilter.EXPR_RESULT  ||!_allowMultipleMatches)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f  ==  TokenFilter.EXPR_RESULT  ||!_allowMultipleMatches)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  TokenFilter.EXPR_RESULT  ||!_allowMultipleMatches)  {	  if(f    ==    TokenFilter.EXPR_RESULT    &&!_allowMultipleMatches)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
78	[BUG]  [BUGGY]  if(f  ==  null  ||  f  ==  TokenFilter.EXPR_RESULT  &&!_allowMultipleMatches)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f  ==  null  ||  f  ==  TokenFilter.EXPR_RESULT  &&!_allowMultipleMatches)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  null  ||  f  ==  TokenFilter.EXPR_RESULT  &&!_allowMultipleMatches)  {	  if(f    ==    TokenFilter.EXPR_RESULT    &&!_allowMultipleMatches)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
79	[BUG]  [BUGGY]  if(!_allowMultipleMatches  ||  f  ==  TokenFilter.INCLUDE_ALL)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  ||  f  ==  TokenFilter.INCLUDE_ALL)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  ||  f  ==  TokenFilter.INCLUDE_ALL)  {	  if(!_allowMultipleMatches    &&    f    ==    TokenFilter.INCLUDE_ALL)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
80	[BUG]  [BUGGY]  if(f!=  null  ||!_includePath)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f!=  null  ||!_includePath)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  null  ||!_includePath)  {	  if(f!=    null    &&!_includePath)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
81	[BUG]  [BUGGY]  if(_includePath)  {  t  =  _headContext.getCurrentTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_includePath)  {  t  =  _headContext.getCurrentTokenToRead();  }  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_includePath)  {  t  =  _headContext.getCurrentTokenToRead();  }	  if(f    ==    null)    {    if(_includePath)    {    t    =    _headContext.nextTokenToRead();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
82	[BUG]  [BUGGY]  if(_lastClearedToken!=  null)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_lastClearedToken!=  null)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_lastClearedToken!=  null)  {	  if(f!=    null    &&!_lastClearedToken)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
83	[BUG]  [BUGGY]  if(delegate!=  null  &&!_lastClearedToken)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(delegate!=  null  &&!_lastClearedToken)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(delegate!=  null  &&!_lastClearedToken)  {	  if(f!=    null    &&!_lastClearedToken)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
84	[BUG]  [BUGGY]  if(_itemFilter!=  null  &&  f!=  TokenFilter.INCLUDE_ALL)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_itemFilter!=  null  &&  f!=  TokenFilter.INCLUDE_ALL)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_itemFilter!=  null  &&  f!=  TokenFilter.INCLUDE_ALL)  {	  if(f!=    TokenFilter.INCLUDE_ALL    &&    f!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
85	[BUG]  [BUGGY]  _lastClearedToken  =  _headContext.nextTokenToRead();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  _lastClearedToken  =  _headContext.nextTokenToRead();  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	_lastClearedToken  =  _headContext.nextTokenToRead();	  if(!_allowMultipleMatches)    {    if(!_lastClearedToken)    {    t    =    _headContext.nextTokenToRead();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
86	[BUG]  [BUGGY]  if(_itemFilter!=  null  &&!_allowMultipleMatches  &&  f.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_itemFilter!=  null  &&!_allowMultipleMatches  &&  f.isEmpty())  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_itemFilter!=  null  &&!_allowMultipleMatches  &&  f.isEmpty())  {	  if(!_allowMultipleMatches    &&    f.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
87	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&!_includeImmediateParent  &&!_headContext.isStartHandled())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&!_includeImmediateParent  &&!_headContext.isStartHandled())  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&!_includeImmediateParent  &&!_headContext.isStartHandled())  {	  if(!_allowMultipleMatches    &&!_includeImmediateParent)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
88	[BUG]  [BUGGY]  if(_itemFilter  ==  null  ||  f!=  TokenFilter.INCLUDE_ALL)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_itemFilter  ==  null  ||  f!=  TokenFilter.INCLUDE_ALL)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_itemFilter  ==  null  ||  f!=  TokenFilter.INCLUDE_ALL)  {	  if(f!=    null    ||    f!=    TokenFilter.INCLUDE_ALL)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
89	[BUG]  [BUGGY]  if(_itemFilter  ==  null  ||!_allowMultipleMatches)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_itemFilter  ==  null  ||!_allowMultipleMatches)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_itemFilter  ==  null  ||!_allowMultipleMatches)  {	  if(f!=    null    ||    f!=    TokenFilter.INCLUDE_ALL)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
90	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  f!=  TokenFilter.INCLUDE_ARRAY)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&  f!=  TokenFilter.INCLUDE_ARRAY)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  f!=  TokenFilter.INCLUDE_ARRAY)  {	  if(!_allowMultipleMatches    &&    f    ==    TokenFilter.INCLUDE_ALL)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
91	[BUG]  [BUGGY]  if(delegate!=  null  &&!_allowMultipleMatches  &&  delegate.isEnabled(Feature.FLUSH_PASSED_TOKEN))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(delegate!=  null  &&!_allowMultipleMatches  &&  delegate.isEnabled(Feature.FLUSH_PASSED_TOKEN))  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(delegate!=  null  &&!_allowMultipleMatches  &&  delegate.isEnabled(Feature.FLUSH_PASSED_TOKEN))  {	  if(!_allowMultipleMatches    &&    delegate.isEnabled(Feature.FLUSH_PASSED_TOKEN))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
92	[BUG]  [BUGGY]  if(f  ==  null  &&!_includePath)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f  ==  null  &&!_includePath)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  null  &&!_includePath)  {	  if(f!=    null    &&!_includePath)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
93	[BUG]  [BUGGY]  if(_includePath!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_includePath!=  null)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_includePath!=  null)  {	  if(f!=    null    &&!_includePath)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
94	[BUG]  [BUGGY]  if(f!=  null  &&!_allowMultipleMatches  &&!_includePath)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f!=  null  &&!_allowMultipleMatches  &&!_includePath)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  null  &&!_allowMultipleMatches  &&!_includePath)  {	  if(f!=    TokenFilter.INCLUDE_ALL    &&!_allowMultipleMatches    &&!_includePath)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
95	[BUG]  [BUGGY]  if(_currToken  ==  null  ||!_lastClearedToken)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_currToken  ==  null  ||!_lastClearedToken)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_currToken  ==  null  ||!_lastClearedToken)  {	  if(f    ==    null    ||!_lastClearedToken)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
96	[BUG]  [BUGGY]  if(f  ==  TokenFilter.EXPR_RESULT  ||  f  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f  ==  TokenFilter.EXPR_RESULT  ||  f  ==  null)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  TokenFilter.EXPR_RESULT  ||  f  ==  null)  {	  if(f    ==    TokenFilter.EXPR_RESULT    ||    f!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
97	[BUG]  [BUGGY]  if(f!=  null  &&  f  ==  TokenFilter.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f!=  null  &&  f  ==  TokenFilter.EXPR_RESULT)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  null  &&  f  ==  TokenFilter.EXPR_RESULT)  {	  if(f    ==    null    ||    f    ==    TokenFilter.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
98	[BUG]  [BUGGY]  if(f!=  null  ||  f.length()  ==  TokenFilter.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f!=  null  ||  f.length()  ==  TokenFilter.EXPR_RESULT)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  null  ||  f.length()  ==  TokenFilter.EXPR_RESULT)  {	  if(f    ==    null    ||    f    ==    TokenFilter.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
99	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&!_returnEnd)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&!_returnEnd)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&!_returnEnd)  {	  if(!_allowMultipleMatches    &&!_includePath)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
100	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&!_itemFilter)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&!_itemFilter)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&!_itemFilter)  {	  if(!_allowMultipleMatches    &&!_includePath)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
101	[BUG]  [BUGGY]  if(delegate!=  null  &&!_allowMultipleMatches  &&  delegate.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(delegate!=  null  &&!_allowMultipleMatches  &&  delegate.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(delegate!=  null  &&!_allowMultipleMatches  &&  delegate.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!_allowMultipleMatches    &&    delegate.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
102	[BUG]  [BUGGY]  if(delegate.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(delegate.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(delegate.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!_allowMultipleMatches    &&    delegate.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
103	[BUG]  [BUGGY]  _lastClearedToken  =  name;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  _lastClearedToken  =  name;  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	_lastClearedToken  =  name;	  _lastClearedToken    =    f;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
104	[BUG]  [BUGGY]  _lastClearedToken  =  JsonToken.END_OBJECT;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  _lastClearedToken  =  JsonToken.END_OBJECT;  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	_lastClearedToken  =  JsonToken.END_OBJECT;	  _lastClearedToken    =    f;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
105	[BUG]  [BUGGY]  t  =  _headContext.getCurrentTokenToRead();  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  t  =  _headContext.getCurrentTokenToRead();  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	t  =  _headContext.getCurrentTokenToRead();	  t    =    _headContext.nextTokenToRead();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
106	[BUG]  [BUGGY]  if(_itemFilter  ==  null  ||  f  ==  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_itemFilter  ==  null  ||  f  ==  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_itemFilter  ==  null  ||  f  ==  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {	  if(f    ==    null    ||    f    ==    TokenFilter.INCLUDE_ALL    &&!_allowMultipleMatches)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
107	[BUG]  [BUGGY]  f  =  delegate.nextTokenToRead();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  f  =  delegate.nextTokenToRead();  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	f  =  delegate.nextTokenToRead();	  f    =    delegate.getCurrentName();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
108	[BUG]  [BUGGY]  f  =  _delegate.getCurrentName();  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  f  =  _delegate.getCurrentName();  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	f  =  _delegate.getCurrentName();	  f    =    delegate.getCurrentName();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
109	[BUG]  [BUGGY]  if(f  ==  TokenFilter.INCLUDE_ALL  &&!_includePath)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f  ==  TokenFilter.INCLUDE_ALL  &&!_includePath)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f  ==  TokenFilter.INCLUDE_ALL  &&!_includePath)  {	  if(f!=    TokenFilter.INCLUDE_ALL    &&!_includePath)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
110	[BUG]  [BUGGY]  if(f!=  null  &&  f!=  TokenFilter.INCLUDE_ALL  &&!_includePath)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f!=  null  &&  f!=  TokenFilter.INCLUDE_ALL  &&!_includePath)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  null  &&  f!=  TokenFilter.INCLUDE_ALL  &&!_includePath)  {	  if(f!=    TokenFilter.INCLUDE_ALL    &&!_includePath)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
111	[BUG]  [BUGGY]  if(_lastClearedToken  ==  JsonToken.END_OBJECT  ||  f!=  null)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_lastClearedToken  ==  JsonToken.END_OBJECT  ||  f!=  null)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_lastClearedToken  ==  JsonToken.END_OBJECT  ||  f!=  null)  {  t  =  _headContext.nextTokenToRead();  }	  if(f!=    null)    {    if(_lastClearedToken    ==    JsonToken.END_OBJECT)    {    t    =    _headContext.nextTokenToRead();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
112	[BUG]  [BUGGY]  if(delegate.isEnabled(Feature.FLUSH_PASSED_TOKEN))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(delegate.isEnabled(Feature.FLUSH_PASSED_TOKEN))  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(delegate.isEnabled(Feature.FLUSH_PASSED_TOKEN))  {	  if(!_allowMultipleMatches    &&    delegate.isEnabled(Feature.FLUSH_PASSED_TOKEN))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
113	[BUG]  [BUGGY]  if(t  ==  null)  {  if(!_allowMultipleMatches)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(t  ==  null)  {  if(!_allowMultipleMatches)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(t  ==  null)  {  if(!_allowMultipleMatches)  {  t  =  _headContext.nextTokenToRead();  }	  if(f    ==    null)    {    if(!_allowMultipleMatches)    {    t    =    _headContext.nextTokenToRead();    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
114	[BUG]  [BUGGY]  if(t  ==  null)  {  if(!_allowMultipleMatches)  {  t  =  _headContext.getTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(t  ==  null)  {  if(!_allowMultipleMatches)  {  t  =  _headContext.getTokenToRead();  }  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(t  ==  null)  {  if(!_allowMultipleMatches)  {  t  =  _headContext.getTokenToRead();  }	  if(f    ==    null)    {    if(!_allowMultipleMatches)    {    t    =    _headContext.nextTokenToRead();    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
115	[BUG]  [BUGGY]  if(_itemFilter  ==  f)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_itemFilter  ==  f)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_itemFilter  ==  f)  {	  if(_itemFilter    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
116	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  f!=  null  &&  f.isImmutable())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&  f!=  null  &&  f.isImmutable())  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  f!=  null  &&  f.isImmutable())  {	  if(!_allowMultipleMatches    &&    f!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
117	[BUG]  [BUGGY]  if(f!=  TokenFilter.EXPR_RESULT  ||  f!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f!=  TokenFilter.EXPR_RESULT  ||  f!=  null)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  TokenFilter.EXPR_RESULT  ||  f!=  null)  {	  if(f    ==    TokenFilter.EXPR_RESULT    ||    f!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
118	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&!_includePath  &&  f!=  null)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&!_includePath  &&  f!=  null)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&!_includePath  &&  f!=  null)  {	  if(!_allowMultipleMatches    &&!_includePath)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
119	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&!_exposedContext.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&!_exposedContext.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&!_exposedContext.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!_allowMultipleMatches    &&!_includePath)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
120	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&!_includePath  &&  f.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&!_includePath  &&  f.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&!_includePath  &&  f.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!_allowMultipleMatches    &&!_includePath)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
121	[BUG]  [BUGGY]  t  =  _headContext.getTokenToRead();  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  t  =  _headContext.getTokenToRead();  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	t  =  _headContext.getTokenToRead();	  t    =    _headContext.nextTokenToRead();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
122	[BUG]  [BUGGY]  t  =  _lastClearedTokenToString();  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  t  =  _lastClearedTokenToString();  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	t  =  _lastClearedTokenToString();	  t    =    _lastClearedTokenToRead();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
123	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  f.isEmpty()  &&  delegate.hasChildren())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&  f.isEmpty()  &&  delegate.hasChildren())  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  f.isEmpty()  &&  delegate.hasChildren())  {	  if(!_allowMultipleMatches    &&    f.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
124	[BUG]  [BUGGY]  if(f!=  null  ||  f  ==  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f!=  null  ||  f  ==  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  null  ||  f  ==  TokenFilter.INCLUDE_ALL  &&!_allowMultipleMatches)  {	  if(f    ==    null    ||    f    ==    TokenFilter.INCLUDE_ALL    &&!_allowMultipleMatches)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
125	[BUG]  [BUGGY]  if(f!=  TokenFilter.EXPR_RESULT  &&!_includePath)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f!=  TokenFilter.EXPR_RESULT  &&!_includePath)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  TokenFilter.EXPR_RESULT  &&!_includePath)  {	  if(f!=    TokenFilter.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
126	[BUG]  [BUGGY]  if(f!=  TokenFilter.EXPR_RESULT  &&!_exposedContext.isStartHandled())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f!=  TokenFilter.EXPR_RESULT  &&!_exposedContext.isStartHandled())  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  TokenFilter.EXPR_RESULT  &&!_exposedContext.isStartHandled())  {	  if(f!=    TokenFilter.EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
127	[BUG]  [BUGGY]  if(_itemFilter!=  null  &&!_allowMultipleMatches  &&  delegate.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_itemFilter!=  null  &&!_allowMultipleMatches  &&  delegate.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_itemFilter!=  null  &&!_allowMultipleMatches  &&  delegate.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!_allowMultipleMatches    &&    delegate.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
128	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.QUOTE_FIELD_NAME)&&  f!=  null)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.QUOTE_FIELD_NAME)&&  f!=  null)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  delegate.isEnabled(Feature.QUOTE_FIELD_NAME)&&  f!=  null)  {	  if(!_allowMultipleMatches    &&    delegate.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
129	[BUG]  [BUGGY]  if(t  ==  JsonToken.END_OBJECT)  {  if(_lastClearedToken!=  JsonToken.END_ARRAY)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(t  ==  JsonToken.END_OBJECT)  {  if(_lastClearedToken!=  JsonToken.END_ARRAY)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(t  ==  JsonToken.END_OBJECT)  {  if(_lastClearedToken!=  JsonToken.END_ARRAY)  {  t  =  _headContext.nextTokenToRead();  }	  if(f    ==    null)    {    if(_lastClearedToken!=    JsonToken.END_OBJECT)    {    t    =    _headContext.nextTokenToRead();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
130	[BUG]  [BUGGY]  if(t  ==  JsonToken.END_OBJECT)  {  if(_lastClearedToken!=  JsonToken.END_OBJECT)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(t  ==  JsonToken.END_OBJECT)  {  if(_lastClearedToken!=  JsonToken.END_OBJECT)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(t  ==  JsonToken.END_OBJECT)  {  if(_lastClearedToken!=  JsonToken.END_OBJECT)  {  t  =  _headContext.nextTokenToRead();  }	  if(f    ==    null)    {    if(_lastClearedToken!=    JsonToken.END_OBJECT)    {    t    =    _headContext.nextTokenToRead();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
131	[BUG]  [BUGGY]  if(_itemFilter!=  TokenFilter.INCLUDE_ALL  &&  f  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_itemFilter!=  TokenFilter.INCLUDE_ALL  &&  f  ==  null)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_itemFilter!=  TokenFilter.INCLUDE_ALL  &&  f  ==  null)  {	  if(f!=    TokenFilter.INCLUDE_ALL    ||    f    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
132	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&!_includePath)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&!_includePath)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&!_includePath)  {  t  =  _headContext.nextTokenToRead();  }	  if(!_allowMultipleMatches)    {    if(!_includePath)    {    t    =    _headContext.nextTokenToRead();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
133	[BUG]  [BUGGY]  if(!_includePath)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_includePath)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_includePath)  {  t  =  _headContext.nextTokenToRead();  }	  if(!_allowMultipleMatches)    {    if(!_includePath)    {    t    =    _headContext.nextTokenToRead();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
134	[BUG]  [BUGGY]  if(t  ==  null)  {  if(_includePath)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(t  ==  null)  {  if(_includePath)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(t  ==  null)  {  if(_includePath)  {  t  =  _headContext.nextTokenToRead();  }	  if(f    ==    null)    {    if(_includePath)    {    t    =    _headContext.nextTokenToRead();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
135	[BUG]  [BUGGY]  if(t!=  null)  {  if(_includePath)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(t!=  null)  {  if(_includePath)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(t!=  null)  {  if(_includePath)  {  t  =  _headContext.nextTokenToRead();  }	  if(f    ==    null)    {    if(_includePath)    {    t    =    _headContext.nextTokenToRead();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
136	[BUG]  [BUGGY]  if(t  ==  null)  {  if(_includePath)  {  t  =  _headContext.getTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(t  ==  null)  {  if(_includePath)  {  t  =  _headContext.getTokenToRead();  }  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(t  ==  null)  {  if(_includePath)  {  t  =  _headContext.getTokenToRead();  }	  if(f    ==    null)    {    if(_includePath)    {    t    =    _headContext.nextTokenToRead();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
137	[BUG]  [BUGGY]  if(_lastClearedToken!=  null)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(_lastClearedToken!=  null)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(_lastClearedToken!=  null)  {  t  =  _headContext.nextTokenToRead();  }	  if(!_allowMultipleMatches)    {    if(!_lastClearedToken)    {    t    =    _headContext.nextTokenToRead();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
138	[BUG]  [BUGGY]  if(t  ==  JsonToken.END_OBJECT)  {  if(_lastClearedToken  ==  JsonToken.END_OBJECT)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(t  ==  JsonToken.END_OBJECT)  {  if(_lastClearedToken  ==  JsonToken.END_OBJECT)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(t  ==  JsonToken.END_OBJECT)  {  if(_lastClearedToken  ==  JsonToken.END_OBJECT)  {  t  =  _headContext.nextTokenToRead();  }	  if(f!=    null)    {    if(_lastClearedToken    ==    JsonToken.END_OBJECT)    {    t    =    _headContext.nextTokenToRead();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
139	[BUG]  [BUGGY]  if(t  ==  JsonToken.END_OBJECT)  {  if(_lastClearedToken  ==  JsonToken.END_ARRAY)  {  t  =  _headContext.nextTokenToRead();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(t  ==  JsonToken.END_OBJECT)  {  if(_lastClearedToken  ==  JsonToken.END_ARRAY)  {  t  =  _headContext.nextTokenToRead();  }  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(t  ==  JsonToken.END_OBJECT)  {  if(_lastClearedToken  ==  JsonToken.END_ARRAY)  {  t  =  _headContext.nextTokenToRead();  }	  if(f!=    null)    {    if(_lastClearedToken    ==    JsonToken.END_OBJECT)    {    t    =    _headContext.nextTokenToRead();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
140	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  f  ==  null  &&  f.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&  f  ==  null  &&  f.length()  >  0)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  f  ==  null  &&  f.length()  >  0)  {	  if(!_allowMultipleMatches    &&    f    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
141	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  f  ==  TokenFilter.INCLUDE_ALL  &&  f!=  null)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&  f  ==  TokenFilter.INCLUDE_ALL  &&  f!=  null)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  f  ==  TokenFilter.INCLUDE_ALL  &&  f!=  null)  {	  if(!_allowMultipleMatches    &&    f    ==    TokenFilter.INCLUDE_ALL)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
142	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  f  ==  TokenFilter.INCLUDE_ARRAY)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&  f  ==  TokenFilter.INCLUDE_ARRAY)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  f  ==  TokenFilter.INCLUDE_ARRAY)  {	  if(!_allowMultipleMatches    &&    f    ==    TokenFilter.INCLUDE_ALL)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
143	[BUG]  [BUGGY]  if(f!=  null  &&!_allowMultipleMatches  &&  f  ==  TokenFilter.INCLUDE_ALL)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(f!=  null  &&!_allowMultipleMatches  &&  f  ==  TokenFilter.INCLUDE_ALL)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(f!=  null  &&!_allowMultipleMatches  &&  f  ==  TokenFilter.INCLUDE_ALL)  {	  if(!_allowMultipleMatches    &&    f    ==    TokenFilter.INCLUDE_ALL)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
144	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  f!=  TokenFilter.INCLUDE_ALL  &&  f!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&  f!=  TokenFilter.INCLUDE_ALL  &&  f!=  null)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  f!=  TokenFilter.INCLUDE_ALL  &&  f!=  null)  {	  if(!_allowMultipleMatches    &&    f!=    TokenFilter.INCLUDE_ALL)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
145	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&  f!=  TokenFilter.INCLUDE_ALL  &&  f  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&  f!=  TokenFilter.INCLUDE_ALL  &&  f  ==  null)  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&  f!=  TokenFilter.INCLUDE_ALL  &&  f  ==  null)  {	  if(!_allowMultipleMatches    &&    f!=    TokenFilter.INCLUDE_ALL)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
146	[BUG]  [BUGGY]  if(!_allowMultipleMatches  &&!_includeImmediateParent  &&!_headContext.isEndHandled())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  if(!_allowMultipleMatches  &&!_includeImmediateParent  &&!_headContext.isEndHandled())  {  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	if(!_allowMultipleMatches  &&!_includeImmediateParent  &&!_headContext.isEndHandled())  {	  if(!_allowMultipleMatches    &&!_includeImmediateParent)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
147	[BUG]  [BUGGY]  _lastClearedToken  =  ctxt;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  _lastClearedToken  =  ctxt;  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	_lastClearedToken  =  ctxt;	  _lastClearedToken    =    f;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
148	[BUG]  [BUGGY]  _lastClearedToken  =  delegate.nextTokenToken();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  _lastClearedToken  =  delegate.nextTokenToken();  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	_lastClearedToken  =  delegate.nextTokenToken();	  _lastClearedToken    =    f;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
149	[BUG]  [BUGGY]  f  =  delegate.nextTokenToString();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      return  (_currToken  =  t);  }  }  break;  case  ID_FIELD_NAME:  {  final  String  name  =  delegate.getCurrentName();  f  =  _headContext.setFieldName(name);      [BUGGY]  f  =  delegate.nextTokenToString();  [BUGGY]      _itemFilter  =  f;  if  (!_includePath)  {    if  (_includeImmediateParent  &&  !_headContext.isStartHandled())  {  t  =  _headContext.nextTokenToRead();  //  returns  START_OBJECT  but  also  marks  it  handled  _exposedContext  =  _headContext;  }  }  return  (_currToken  =  t);  [CLASS]  FilteringParserDelegate  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  JsonToken  _currToken  _lastClearedToken  t  boolean  _allowMultipleMatches  _includeImmediateParent  _includePath  allowMultipleMatches  includePath  returnEnd  String  name  TokenFilterContext  _exposedContext  _headContext  ctxt  int  _matchCount  id  TokenFilter  _itemFilter  f  rootFilter  	projects/JacksonCore21/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	1.0	397	397	3	replace	f  =  delegate.nextTokenToString();	  f    =    delegate.getCurrentName();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
