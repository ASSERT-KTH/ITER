bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  state.removeBegin(previousT);  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  throws  MaxCountExceededException,  DimensionMismatchException,  NoBracketingException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  [BUGGY]  state.removeBegin(previousT);  [BUGGY]  }  statesInitialized  =  true;  }  final  int  orderingSign  =  interpolator.isForward()  ?  +1  :  -1;  SortedSet<EventState>  occuringEvents  =  new  TreeSet<EventState>(new  Comparator<EventState>()  {  public  int  compare(EventState  es0,  EventState  es1)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	306	306	1	replace	state.removeBegin(previousT);	state.reinitializeBegin(interpolator);  	non-compiled	[CE]  cannot  find  symbol	27	None	replace
2	[BUG]  [BUGGY]  state.reinitializeBegin(previousT);  [CE]  method  reinitializeBegin  in  class  EventState  cannot  be  applied  to  given  types;  [FE]      AssertionError  [CONTEXT]  throws  MaxCountExceededException,  DimensionMismatchException,  NoBracketingException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  [BUGGY]  state.reinitializeBegin(previousT);  [BUGGY]  }  statesInitialized  =  true;  }  final  int  orderingSign  =  interpolator.isForward()  ?  +1  :  -1;  SortedSet<EventState>  occuringEvents  =  new  TreeSet<EventState>(new  Comparator<EventState>()  {  public  int  compare(EventState  es0,  EventState  es1)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	306	306	1	replace	state.reinitializeBegin(previousT);	state.reinitializeBegin(interpolator);  	non-compiled	[CE]  method  reinitializeBegin  in  class  EventState  cannot  be  applied  to  given  types;	27	None	replace
3	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]        AssertionError  [CONTEXT]  throws  MaxCountExceededException,  DimensionMismatchException,  NoBracketingException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  [BUGGY]    [BUGGY]  }  statesInitialized  =  true;  }  final  int  orderingSign  =  interpolator.isForward()  ?  +1  :  -1;  SortedSet<EventState>  occuringEvents  =  new  TreeSet<EventState>(new  Comparator<EventState>()  {  public  int  compare(EventState  es0,  EventState  es1)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	306	306	1	add	  	state.reinitializeBegin(interpolator);  	compilable	  [FE]  NoBracketingException  	27	4	replace
4	[BUG]  [BUGGY]    [FE]  NoBracketingException  [FE]        AssertionError  [CONTEXT]  throws  MaxCountExceededException,  DimensionMismatchException,  NoBracketingException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  [BUGGY]    [BUGGY]  }  statesInitialized  =  true;  }  final  int  orderingSign  =  interpolator.isForward()  ?  +1  :  -1;  SortedSet<EventState>  occuringEvents  =  new  TreeSet<EventState>(new  Comparator<EventState>()  {  public  int  compare(EventState  es0,  EventState  es1)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	306	306	1	replace	  	state.reinitializeBegin(interpolator);  	compilable	  [FE]  NoBracketingException  	27	4	replace
5	[BUG]  [BUGGY]    state.reinitializeBegin(eventT);  [CE]  cannot  find  symbol  eventT  [FE]    AssertionError  [CONTEXT]  throws  MaxCountExceededException,  DimensionMismatchException,  NoBracketingException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  [BUGGY]    state.reinitializeBegin(eventT);  [BUGGY]  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  final  int  orderingSign  =  interpolator.isForward()  ?  +1  :  -1;  SortedSet<EventState>  occuringEvents  =  new  TreeSet<EventState>(new  Comparator<EventState>()  {  public  int  compare(EventState  es0,  EventState  es1)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	306	306	1	replace	    state.reinitializeBegin(eventT);		non-compiled	[CE]  cannot  find  symbol  eventT	28	None	add
6	[BUG]  [BUGGY]    state.reinitializeBegin(currentT);  [CE]  method  reinitializeBegin  in  class  EventState  cannot  be  applied  to  given  types;  [FE]    AssertionError  [CONTEXT]  throws  MaxCountExceededException,  DimensionMismatchException,  NoBracketingException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  [BUGGY]    state.reinitializeBegin(currentT);  [BUGGY]  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  final  int  orderingSign  =  interpolator.isForward()  ?  +1  :  -1;  SortedSet<EventState>  occuringEvents  =  new  TreeSet<EventState>(new  Comparator<EventState>()  {  public  int  compare(EventState  es0,  EventState  es1)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	306	306	1	replace	    state.reinitializeBegin(currentT);		non-compiled	[CE]  method  reinitializeBegin  in  class  EventState  cannot  be  applied  to  given  types;	28	None	add
7	[BUG]  [BUGGY]  state.reset();  [CE]  method  reset  in  class  EventState  cannot  be  applied  to  given  types;  [FE]    AssertionError  [CONTEXT]  throws  MaxCountExceededException,  DimensionMismatchException,  NoBracketingException  {  double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  [BUGGY]  state.reset();  [BUGGY]  }  statesInitialized  =  true;  }  final  int  orderingSign  =  interpolator.isForward()  ?  +1  :  -1;  SortedSet<EventState>  occuringEvents  =  new  TreeSet<EventState>(new  Comparator<EventState>()  {  public  int  compare(EventState  es0,  EventState  es1)  {  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	306	306	1	replace	state.reset();	state.reinitializeBegin(interpolator);  	non-compiled	[CE]  method  reset  in  class  EventState  cannot  be  applied  to  given  types;	27	None	replace
