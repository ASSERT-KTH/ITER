bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  handler.handleStep(currentT,  t0,  isLastStep,  tEnd);  [CE]  cannot  find  symbol  t0  [FE]                AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.handleStep(currentT,  t0,  isLastStep,  tEnd);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(currentT,  t0,  isLastStep,  tEnd);	  handler.handleStep(currentT,    isLastStep,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t0	17	None	replace
2	[BUG]  [BUGGY]  isLastStep  ||  tEnd.isInitialized();  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  isLastStep  ||  tEnd.isInitialized();  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	isLastStep  ||  tEnd.isInitialized();	  isLastStep    ||    handler.isInitialized();    	non-compiled	[CE]  not  a  statement	19	None	replace
3	[BUG]  [BUGGY]  parent!=  null  &&  handler.equals(currentT))  {  for(final  EventState  currentT  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  parent!=  null  &&  handler.equals(currentT))  {  for(final  EventState  currentT  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	parent!=  null  &&  handler.equals(currentT))  {  for(final  EventState  currentT  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }	  if(handler!=    null)    {    for(final    EventState    currentT    :    eventsStates)    {    state.stepAccepted(currentT,    tEnd,    1);    isLastStep    =    isLastStep    ||    state.stop();    }    	non-compiled	[CE]  not  a  statement	31	None	replace
4	[BUG]  [BUGGY]  parent!=  null  &&  handler.equals(currentT))  {  for(final  EventState  currentT  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  parent!=  null  &&  handler.equals(currentT))  {  for(final  EventState  currentT  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	parent!=  null  &&  handler.equals(currentT))  {  for(final  EventState  currentT  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.	  if(handler!=    null)    {    for(final    EventState    currentT    :    eventsStates)    {    state.stepAccepted(currentT,    tEnd,    1);    isLastStep    =    isLastStep    ||    state.stop();    }    	non-compiled	[CE]  not  a  statement	31	None	replace
5	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(tStart,  yDot,  tEnd);  [CE]  cannot  find  symbol  tStart  [FE]                AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  ((  StepHandler)handler).stepAccepted(tStart,  yDot,  tEnd);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(tStart,  yDot,  tEnd);	  ((    StepHandler)handler).stepAccepted(t0,    yDot,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  tStart	7	None	replace
6	[BUG]  [BUGGY]  isLastStep  =  handler.isLastStep()  &&  state.stepAccepted(currentT,  tEnd,  1);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  isLastStep  =  handler.isLastStep()  &&  state.stepAccepted(currentT,  tEnd,  1);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	isLastStep  =  handler.isLastStep()  &&  state.stepAccepted(currentT,  tEnd,  1);	  isLastStep    =    handler.isLastStep();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
7	[BUG]  [BUGGY]  Interpolator  interpolator  =(Interpolator)events.get(tEnd,  yDot,  tEnd);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  Interpolator  interpolator  =(Interpolator)events.get(tEnd,  yDot,  tEnd);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	Interpolator  interpolator  =(Interpolator)events.get(tEnd,  yDot,  tEnd);	  Interpolator    interpolator    =(Interpolator)events.get(tEnd,    yDot);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
8	[BUG]  [BUGGY]  Interpolator  interpolator  =(Interpolator)events.get(tEnd,  yDot,  orderingSign);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  Interpolator  interpolator  =(Interpolator)events.get(tEnd,  yDot,  orderingSign);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	Interpolator  interpolator  =(Interpolator)events.get(tEnd,  yDot,  orderingSign);	  Interpolator    interpolator    =(Interpolator)events.get(tEnd,    yDot);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
9	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(y,  t0,  tEnd);  [CE]  cannot  find  symbol  t0  [FE]              AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  ((  StepHandler)handler).stepAccepted(y,  t0,  tEnd);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(y,  t0,  tEnd);	  ((    StepHandler)handler).stepAccepted(y,    tStart,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t0	26	None	replace
10	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(y,  currentT,  tEnd);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  ((  StepHandler)handler).stepAccepted(y,  currentT,  tEnd);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(y,  currentT,  tEnd);	  ((    StepHandler)handler).stepAccepted(y,    tStart,    tEnd);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
11	[BUG]  [BUGGY]  Interpolator  interpolator  =(Interpolator)events.get(handler,  tEnd);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  Interpolator  interpolator  =(Interpolator)events.get(handler,  tEnd);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	Interpolator  interpolator  =(Interpolator)events.get(handler,  tEnd);	  Interpolator    interpolator    =(Interpolator)events.get(handler);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
12	[BUG]  [BUGGY]  parent!=  null  &&  handler.equals(currentT))  {  for(final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  parent!=  null  &&  handler.equals(currentT))  {  for(final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	parent!=  null  &&  handler.equals(currentT))  {  for(final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }	  if(handler!=    null)    {    for(final    EventState    state    :    eventsStates)    {    state.stepAccepted(currentT,    tEnd,    1);    isLastStep    =    isLastStep    ||    state.stop();    }    	non-compiled	[CE]  not  a  statement	30	None	replace
13	[BUG]  [BUGGY]  parent!=  null  &&  handler.equals(currentT))  {  for(final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop()  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  parent!=  null  &&  handler.equals(currentT))  {  for(final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop()  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	parent!=  null  &&  handler.equals(currentT))  {  for(final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop()	  if(handler!=    null)    {    for(final    EventState    state    :    eventsStates)    {    state.stepAccepted(currentT,    tEnd,    1);    isLastStep    =    isLastStep    ||    state.stop();    }    	non-compiled	[CE]  not  a  statement	30	None	replace
14	[BUG]  [BUGGY]  ||  handler!=  null)  {  for(final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  ||  handler!=  null)  {  for(final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep;  }  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	||  handler!=  null)  {  for(final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep;  }	          if(handler!=    null)    {    for(final    EventState    state    :    eventsStates)    {    state.stepAccepted(currentT,    tEnd,    1);    isLastStep    =    isLastStep;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
15	[BUG]  [BUGGY]  ||  handler!=  null)  {  for(final  EventState  state  :  eventStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  ||  handler!=  null)  {  for(final  EventState  state  :  eventStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep;  }  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	||  handler!=  null)  {  for(final  EventState  state  :  eventStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep;  }	          if(handler!=    null)    {    for(final    EventState    state    :    eventsStates)    {    state.stepAccepted(currentT,    tEnd,    1);    isLastStep    =    isLastStep;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
16	[BUG]  [BUGGY]  Interpolator  interpolator  =(Interpolator)handler.get(tEnd,  events);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  Interpolator  interpolator  =(Interpolator)handler.get(tEnd,  events);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	Interpolator  interpolator  =(Interpolator)handler.get(tEnd,  events);	  Interpolator    interpolator    =(Interpolator)events.get(tEnd,    handler);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
17	[BUG]  [BUGGY]  stepHandlers.add(interpolator,  handler,  tEnd);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepHandlers.add(interpolator,  handler,  tEnd);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	stepHandlers.add(interpolator,  handler,  tEnd);	  stepHandlers.add(interpolator,    handler);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	12	None	replace
18	[BUG]  [BUGGY]  stepHandlers.add(interpolator,  tEnd,  handler);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepHandlers.add(interpolator,  tEnd,  handler);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	stepHandlers.add(interpolator,  tEnd,  handler);	  stepHandlers.add(interpolator,    handler);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	12	None	replace
19	[BUG]  [BUGGY]  handler.handleStep(interpolator,  t0,  tEnd);  [CE]  cannot  find  symbol  t0  [FE]            AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.handleStep(interpolator,  t0,  tEnd);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(interpolator,  t0,  tEnd);	  handler.handleStep(interpolator,    tStart,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t0	21	None	replace
20	[BUG]  [BUGGY]  handler.handleStep(interpolator,  y,  tEnd);  [CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.handleStep(interpolator,  y,  tEnd);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(interpolator,  y,  tEnd);	  handler.handleStep(interpolator,    tStart,    tEnd);    	non-compiled	[CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;	21	None	replace
21	[BUG]  [BUGGY]  handler.handleStep(interpolator,  tEnd,  yDot,  isLastStep,  state);  [CE]  cannot  find  symbol  state  [FE]                AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.handleStep(interpolator,  tEnd,  yDot,  isLastStep,  state);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(interpolator,  tEnd,  yDot,  isLastStep,  state);	  handler.handleStep(interpolator,    tEnd,    yDot,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  state	9	None	replace
22	[BUG]  [BUGGY]  handler.handleStep(interpolator,  tStart,  yDot,  isLastStep);  [CE]  cannot  find  symbol  tStart  [FE]                  AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.handleStep(interpolator,  tStart,  yDot,  isLastStep);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(interpolator,  tStart,  yDot,  isLastStep);	  handler.handleStep(interpolator,    tEnd,    yDot,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  tStart	9	None	replace
23	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(currentT,  t0,  yDot,  tEnd);  [CE]  cannot  find  symbol  t0  [FE]              AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  ((  StepHandler)handler).stepAccepted(currentT,  t0,  yDot,  tEnd);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(currentT,  t0,  yDot,  tEnd);	  ((    StepHandler)handler).stepAccepted(currentT,    yDot,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t0	6	None	replace
24	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(currentT,  t1,  yDot,  tEnd);  [CE]  cannot  find  symbol  t1  [FE]                AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  ((  StepHandler)handler).stepAccepted(currentT,  t1,  yDot,  tEnd);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(currentT,  t1,  yDot,  tEnd);	  ((    StepHandler)handler).stepAccepted(currentT,    yDot,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t1	6	None	replace
25	[BUG]  [BUGGY]  handler.handleStep(interpolator,  y,  tEnd,  isLastStep);  [CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.handleStep(interpolator,  y,  tEnd,  isLastStep);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(interpolator,  y,  tEnd,  isLastStep);	  handler.handleStep(interpolator,    t0,    tEnd,    isLastStep);    	non-compiled	[CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;	32	None	replace
26	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(tEnd,  currentT,  yDot,  1);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  ((  StepHandler)handler).stepAccepted(tEnd,  currentT,  yDot,  1);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(tEnd,  currentT,  yDot,  1);	  ((    StepHandler)handler).stepAccepted(currentT,    yDot,    1);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
27	[BUG]  [BUGGY]  stepHandlers.add(interpolator,  yDot,  tEnd);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepHandlers.add(interpolator,  yDot,  tEnd);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	stepHandlers.add(interpolator,  yDot,  tEnd);	  stepHandlers.add(interpolator,    tEnd);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	13	None	replace
28	[BUG]  [BUGGY]  stepHandlers.add(interpolator,  tEnd,  yDot);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepHandlers.add(interpolator,  tEnd,  yDot);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	stepHandlers.add(interpolator,  tEnd,  yDot);	  stepHandlers.add(interpolator,    tEnd);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	13	None	replace
29	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(tEnd,  currentT,  yDot,  0);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  ((  StepHandler)handler).stepAccepted(tEnd,  currentT,  yDot,  0);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(tEnd,  currentT,  yDot,  0);	  ((    StepHandler)handler).stepAccepted(currentT,    yDot,    0);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
30	[BUG]  [BUGGY]  isLastStep  =  handler.isLastStep()?  currentT.getImplicitReturn()  :  state.stop();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  isLastStep  =  handler.isLastStep()?  currentT.getImplicitReturn()  :  state.stop();  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	isLastStep  =  handler.isLastStep()?  currentT.getImplicitReturn()  :  state.stop();	          isLastStep    =    handler.isLastStep()?    currentT.getImplicitReturn()    :    null;    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
31	[BUG]  [BUGGY]  stepHandlers.add(tEnd,  handler);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepHandlers.add(tEnd,  handler);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	stepHandlers.add(tEnd,  handler);	  stepHandlers.add(handler,    tEnd);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	24	None	replace
32	[BUG]  [BUGGY]  handler.handleStep(currentT,  tEnd,  yDot,  isLastStep);  [CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.handleStep(currentT,  tEnd,  yDot,  isLastStep);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(currentT,  tEnd,  yDot,  isLastStep);	  handler.handleStep(currentT,    tEnd,    isLastStep);    	non-compiled	[CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;	16	None	replace
33	[BUG]  [BUGGY]  handler.handleStep(currentT,  tStart,  tEnd,  isLastStep);  [CE]  cannot  find  symbol  tStart  [FE]                AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.handleStep(currentT,  tStart,  tEnd,  isLastStep);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(currentT,  tStart,  tEnd,  isLastStep);	  handler.handleStep(currentT,    tEnd,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  tStart	16	None	replace
34	[BUG]  [BUGGY]  handler.handleStep(interpolator,  currentT,  tEnd,  isLastStep);  [CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.handleStep(interpolator,  currentT,  tEnd,  isLastStep);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(interpolator,  currentT,  tEnd,  isLastStep);	  handler.handleStep(interpolator,    currentT,    tEnd);    	non-compiled	[CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;	1	None	replace
35	[BUG]  [BUGGY]  handler.handleStep(interpolator,  currentT,  yDot,  tEnd);  [CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.handleStep(interpolator,  currentT,  yDot,  tEnd);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(interpolator,  currentT,  yDot,  tEnd);	  handler.handleStep(interpolator,    currentT,    tEnd);    	non-compiled	[CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;	1	None	replace
36	[BUG]  [BUGGY]  handler.handleStep(interpolator,  t0,  isLastStep,  tEnd);  [CE]  cannot  find  symbol  t0  [FE]            AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.handleStep(interpolator,  t0,  isLastStep,  tEnd);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(interpolator,  t0,  isLastStep,  tEnd);	  handler.handleStep(interpolator,    tStart,    isLastStep,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t0	15	None	replace
37	[BUG]  [BUGGY]  handler.handleStep(interpolator,  y,  isLastStep,  tEnd);  [CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.handleStep(interpolator,  y,  isLastStep,  tEnd);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(interpolator,  y,  isLastStep,  tEnd);	  handler.handleStep(interpolator,    tStart,    isLastStep,    tEnd);    	non-compiled	[CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;	15	None	replace
38	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(expandableODEvents,  t0,  yDot,  tEnd);  [CE]  cannot  find  symbol  expandableODEvents  [FE]              AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  ((  StepHandler)handler).stepAccepted(expandableODEvents,  t0,  yDot,  tEnd);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(expandableODEvents,  t0,  yDot,  tEnd);	  ((    StepHandler)handler).stepAccepted(expandableEvents,    t0,    yDot,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  expandableODEvents	34	None	replace
39	[BUG]  [BUGGY]  handler.handleStep(currentT,  tEnd,  interpolator);  [CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.handleStep(currentT,  tEnd,  interpolator);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(currentT,  tEnd,  interpolator);	  handler.handleStep(currentT,    interpolator);    	non-compiled	[CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;	2	None	replace
40	[BUG]  [BUGGY]  handler.handleStep(interpolator,  tEnd,  yDot,  state);  [CE]  cannot  find  symbol  state  [FE]              AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.handleStep(interpolator,  tEnd,  yDot,  state);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(interpolator,  tEnd,  yDot,  state);	  handler.handleStep(interpolator,    tEnd,    yDot);    	non-compiled	[CE]  cannot  find  symbol  state	22	None	replace
41	[BUG]  [BUGGY]  handler.handleStep(currentT,  tStart,  tEnd);  [CE]  cannot  find  symbol  tStart  [FE]            AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.handleStep(currentT,  tStart,  tEnd);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(currentT,  tStart,  tEnd);	  handler.handleStep(interpolator,    tStart,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  tStart	21	None	replace
42	[BUG]  [BUGGY]  parent!=  null)  {  for(final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  parent!=  null)  {  for(final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	parent!=  null)  {  for(final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }	  if(handler!=    null)    {    for(final    EventState    state    :    eventsStates)    {    state.stepAccepted(currentT,    tEnd,    1);    isLastStep    =    isLastStep    ||    state.stop();    }    	non-compiled	[CE]  not  a  statement	30	None	replace
43	[BUG]  [BUGGY]  parent!=  null)  {  for(final  EventState  state  :  eventStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  parent!=  null)  {  for(final  EventState  state  :  eventStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	parent!=  null)  {  for(final  EventState  state  :  eventStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }	  if(handler!=    null)    {    for(final    EventState    state    :    eventsStates)    {    state.stepAccepted(currentT,    tEnd,    1);    isLastStep    =    isLastStep    ||    state.stop();    }    	non-compiled	[CE]  not  a  statement	30	None	replace
44	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(yDot,  tEnd,  2);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  ((  StepHandler)handler).stepAccepted(yDot,  tEnd,  2);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(yDot,  tEnd,  2);	  ((    StepHandler)handler).stepAccepted(yDot,    tEnd,    1);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
45	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(expableODE,  t0,  yDot,  tEnd);  [CE]  cannot  find  symbol  expableODE  [FE]              AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  ((  StepHandler)handler).stepAccepted(expableODE,  t0,  yDot,  tEnd);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(expableODE,  t0,  yDot,  tEnd);	  ((    StepHandler)handler).stepAccepted(expandableEvents,    t0,    yDot,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  expableODE	34	None	replace
46	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(expableODEvents,  t0,  yDot,  tEnd);  [CE]  cannot  find  symbol  expableODEvents  [FE]                AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  ((  StepHandler)handler).stepAccepted(expableODEvents,  t0,  yDot,  tEnd);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(expableODEvents,  t0,  yDot,  tEnd);	  ((    StepHandler)handler).stepAccepted(expandableEvents,    t0,    yDot,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  expableODEvents	34	None	replace
47	[BUG]  [BUGGY]  Interpolator  interpolator  =(Interpolator)events.get(yDot,  tEnd);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  Interpolator  interpolator  =(Interpolator)events.get(yDot,  tEnd);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	Interpolator  interpolator  =(Interpolator)events.get(yDot,  tEnd);	  Interpolator    interpolator    =(Interpolator)events.get(tEnd,    yDot);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
48	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(currentT,  yDot,  tEnd,  1);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  ((  StepHandler)handler).stepAccepted(currentT,  yDot,  tEnd,  1);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(currentT,  yDot,  tEnd,  1);	  ((    StepHandler)handler).stepAccepted(currentT,    yDot,    1);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
49	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(y,  tStart,  1);  [CE]  cannot  find  symbol  tStart  [FE]            AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  ((  StepHandler)handler).stepAccepted(y,  tStart,  1);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(y,  tStart,  1);	  ((    StepHandler)handler).stepAccepted(y,    tEnd,    1);    	non-compiled	[CE]  cannot  find  symbol  tStart	5	None	replace
50	[BUG]  [BUGGY]  handler.handleStep(interpolator,  tEnd,  yDot,  currentT,  isLastStep);  [CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.handleStep(interpolator,  tEnd,  yDot,  currentT,  isLastStep);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(interpolator,  tEnd,  yDot,  currentT,  isLastStep);	  handler.handleStep(interpolator,    tEnd,    yDot,    isLastStep);    	non-compiled	[CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;	9	None	replace
51	[BUG]  [BUGGY]  luate(eventsStates,  handler)  {  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  luate(eventsStates,  handler)  {  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	luate(eventsStates,  handler)  {	          if(handler!=    null)    {    for(final    EventState    state    :    eventsStates)    {    state.stepAccepted(currentT,    tEnd,    1);    isLastStep    =    isLastStep;    }    	non-compiled	[CE]  ';'  expected	35	None	replace
52	[BUG]  [BUGGY]  cast(handler,  state.stop(),  isLastStep,  orderingSign);  [CE]  cannot  find  symbol  state  [FE]          AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  cast(handler,  state.stop(),  isLastStep,  orderingSign);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	cast(handler,  state.stop(),  isLastStep,  orderingSign);	          if(handler!=    null)    {    for(final    EventState    state    :    eventsStates)    {    state.stepAccepted(currentT,    tEnd,    1);    isLastStep    =    isLastStep;    }    	non-compiled	[CE]  cannot  find  symbol  state	35	None	replace
53	[BUG]  [BUGGY]  isLastStep  =  handler.getImplicitReturn()?  currentT.getImplicitReturn()  :  null;  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  isLastStep  =  handler.getImplicitReturn()?  currentT.getImplicitReturn()  :  null;  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	isLastStep  =  handler.getImplicitReturn()?  currentT.getImplicitReturn()  :  null;	          isLastStep    =    handler.isLastStep()?    currentT.getImplicitReturn()    :    null;    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
54	[BUG]  [BUGGY]  tEnd  =  state.stepAccepted(currentT,  yDot,  tEnd);  [CE]  cannot  find  symbol  state  [FE]              AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  tEnd  =  state.stepAccepted(currentT,  yDot,  tEnd);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	tEnd  =  state.stepAccepted(currentT,  yDot,  tEnd);	  tEnd    =    state.stepAccepted(currentT,    yDot);    	non-compiled	[CE]  cannot  find  symbol  state	11	None	replace
55	[BUG]  [BUGGY]  handler.handleStep(currentT,  interpolator,  tEnd);  [CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.handleStep(currentT,  interpolator,  tEnd);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(currentT,  interpolator,  tEnd);	  handler.handleStep(interpolator,    currentT,    tEnd);    	non-compiled	[CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;	1	None	replace
56	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(currentT,  yDot,  3);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  ((  StepHandler)handler).stepAccepted(currentT,  yDot,  3);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(currentT,  yDot,  3);	  ((    StepHandler)handler).stepAccepted(currentT,    tEnd,    3);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
57	[BUG]  [BUGGY]  Interpolator  interpolator  =(Interpolator)handler.get(events);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  Interpolator  interpolator  =(Interpolator)handler.get(events);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	Interpolator  interpolator  =(Interpolator)handler.get(events);	  Interpolator    interpolator    =(Interpolator)events.get(handler);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
58	[BUG]  [BUGGY]  stepHandlers.add(interpolator,  handler,  state);  [CE]  cannot  find  symbol  state  [FE]            AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepHandlers.add(interpolator,  handler,  state);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	stepHandlers.add(interpolator,  handler,  state);	  stepHandlers.add(interpolator,    handler);    	non-compiled	[CE]  cannot  find  symbol  state	12	None	replace
59	[BUG]  [BUGGY]  stepHandlers.add(handler,  tStart,  tEnd);  [CE]  cannot  find  symbol  tStart  [FE]            AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepHandlers.add(handler,  tStart,  tEnd);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	stepHandlers.add(handler,  tStart,  tEnd);	  stepHandlers.add(handler,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  tStart	24	None	replace
60	[BUG]  [BUGGY]  isLastStep  &&  handler.isInitialized();  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  isLastStep  &&  handler.isInitialized();  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	isLastStep  &&  handler.isInitialized();	  isLastStep    ||    handler.isInitialized();    	non-compiled	[CE]  not  a  statement	19	None	replace
61	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(currentT,  yDot,  tEnd,  orderingSign);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  ((  StepHandler)handler).stepAccepted(currentT,  yDot,  tEnd,  orderingSign);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(currentT,  yDot,  tEnd,  orderingSign);	  ((    StepHandler)handler).stepAccepted(currentT,    yDot,    tEnd);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
62	[BUG]  [BUGGY]  stepHandlers.add(interpolator,  tStart,  tEnd);  [CE]  cannot  find  symbol  tStart  [FE]              AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepHandlers.add(interpolator,  tStart,  tEnd);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	stepHandlers.add(interpolator,  tStart,  tEnd);	  stepHandlers.add(interpolator,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  tStart	13	None	replace
63	[BUG]  [BUGGY]  isLastStep  =  handler.isLastStep()  &&  state.stop();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  isLastStep  =  handler.isLastStep()  &&  state.stop();  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	isLastStep  =  handler.isLastStep()  &&  state.stop();	  isLastStep    =    handler.isLastStep();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
64	[BUG]  [BUGGY]  parent!=  null)  {  for(final  EventState  currentT  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  parent!=  null)  {  for(final  EventState  currentT  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	parent!=  null)  {  for(final  EventState  currentT  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }	  if(handler!=    null)    {    for(final    EventState    currentT    :    eventsStates)    {    state.stepAccepted(currentT,    tEnd,    1);    isLastStep    =    isLastStep    ||    state.stop();    }    	non-compiled	[CE]  not  a  statement	31	None	replace
65	[BUG]  [BUGGY]  parent  ==  null)  {  for(final  EventState  currentT  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  parent  ==  null)  {  for(final  EventState  currentT  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	parent  ==  null)  {  for(final  EventState  currentT  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }	  if(handler!=    null)    {    for(final    EventState    currentT    :    eventsStates)    {    state.stepAccepted(currentT,    tEnd,    1);    isLastStep    =    isLastStep    ||    state.stop();    }    	non-compiled	[CE]  not  a  statement	31	None	replace
66	[BUG]  [BUGGY]  handler.handleStep(currentT,  tStart,  isLastStep,  tEnd);  [CE]  cannot  find  symbol  tStart  [FE]                AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.handleStep(currentT,  tStart,  isLastStep,  tEnd);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(currentT,  tStart,  isLastStep,  tEnd);	  handler.handleStep(currentT,    isLastStep,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  tStart	17	None	replace
67	[BUG]  [BUGGY]  handler.handleStep(interpolator,  tEnd,  yDot,  orderingSign);  [CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.handleStep(interpolator,  tEnd,  yDot,  orderingSign);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(interpolator,  tEnd,  yDot,  orderingSign);	  handler.handleStep(interpolator,    tEnd,    yDot);    	non-compiled	[CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;	22	None	replace
68	[BUG]  [BUGGY]  handler.handleStep(interpolator,  tStart,  yDot);  [CE]  cannot  find  symbol  tStart  [FE]                AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.handleStep(interpolator,  tStart,  yDot);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(interpolator,  tStart,  yDot);	  handler.handleStep(interpolator,    tEnd,    yDot);    	non-compiled	[CE]  cannot  find  symbol  tStart	22	None	replace
69	[BUG]  [BUGGY]  handler.handleStep(currentT,  tEnd,  isLastStep,  orderingSign);  [CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.handleStep(currentT,  tEnd,  isLastStep,  orderingSign);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(currentT,  tEnd,  isLastStep,  orderingSign);	  handler.handleStep(currentT,    tEnd,    isLastStep);    	non-compiled	[CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;	16	None	replace
70	[BUG]  [BUGGY]  try  ==  false)  {  for(final  EventState  currentT  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }  [CE]  '{'  expected  [FE]          AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  try  ==  false)  {  for(final  EventState  currentT  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	try  ==  false)  {  for(final  EventState  currentT  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }	  if(handler!=    null)    {    for(final    EventState    currentT    :    eventsStates)    {    state.stepAccepted(currentT,    tEnd,    1);    isLastStep    =    isLastStep    ||    state.stop();    }    	non-compiled	[CE]  '{'  expected	31	None	replace
71	[BUG]  [BUGGY]  try  ==  null)  {  for(final  EventState  currentT  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }  [CE]  '{'  expected  [FE]            AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  try  ==  null)  {  for(final  EventState  currentT  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	try  ==  null)  {  for(final  EventState  currentT  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }	  if(handler!=    null)    {    for(final    EventState    currentT    :    eventsStates)    {    state.stepAccepted(currentT,    tEnd,    1);    isLastStep    =    isLastStep    ||    state.stop();    }    	non-compiled	[CE]  '{'  expected	31	None	replace
72	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(expansion,  t0,  yDot,  tEnd);  [CE]  cannot  find  symbol  expansion  [FE]              AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  ((  StepHandler)handler).stepAccepted(expansion,  t0,  yDot,  tEnd);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(expansion,  t0,  yDot,  tEnd);	  ((    StepHandler)handler).stepAccepted(expandableEvents,    t0,    yDot,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  expansion	34	None	replace
73	[BUG]  [BUGGY]  stepHandlers.add(handler,  tEnd,  yDot);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  stepHandlers.add(handler,  tEnd,  yDot);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	stepHandlers.add(handler,  tEnd,  yDot);	  stepHandlers.add(handler,    tEnd);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	24	None	replace
74	[BUG]  [BUGGY]  handler.handleStep(currentT,  currentT,  tEnd);  [CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.handleStep(currentT,  currentT,  tEnd);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(currentT,  currentT,  tEnd);	  handler.handleStep(interpolator,    currentT,    tEnd);    	non-compiled	[CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;	1	None	replace
75	[BUG]  [BUGGY]  aughtExceptionHandler(eventT,  handler,  tEnd,  orderingSign);  [CE]  cannot  find  symbol  eventT  [FE]        AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  aughtExceptionHandler(eventT,  handler,  tEnd,  orderingSign);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	aughtExceptionHandler(eventT,  handler,  tEnd,  orderingSign);	          if(handler!=    null)    {    for(final    EventState    state    :    eventsStates)    {    state.stepAccepted(currentT,    tEnd,    1);    isLastStep    =    isLastStep;    }    	non-compiled	[CE]  cannot  find  symbol  eventT	35	None	replace
76	[BUG]  [BUGGY]  aughtExceptionHandler(eventT,  handler,  tEnd,  orderableEvents);  [CE]  cannot  find  symbol  eventT  [FE]          AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  aughtExceptionHandler(eventT,  handler,  tEnd,  orderableEvents);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	aughtExceptionHandler(eventT,  handler,  tEnd,  orderableEvents);	          if(handler!=    null)    {    for(final    EventState    state    :    eventsStates)    {    state.stepAccepted(currentT,    tEnd,    1);    isLastStep    =    isLastStep;    }    	non-compiled	[CE]  cannot  find  symbol  eventT	35	None	replace
77	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(currentT,  yDot,  tEnd,  0);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  ((  StepHandler)handler).stepAccepted(currentT,  yDot,  tEnd,  0);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(currentT,  yDot,  tEnd,  0);	  ((    StepHandler)handler).stepAccepted(currentT,    yDot,    0);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
78	[BUG]  [BUGGY]  handler.handleStep(interpolator,  tEnd,  yDot,  currentT);  [CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.handleStep(interpolator,  tEnd,  yDot,  currentT);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(interpolator,  tEnd,  yDot,  currentT);	  handler.handleStep(interpolator,    tEnd,    yDot);    	non-compiled	[CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;	22	None	replace
79	[BUG]  [BUGGY]  handler.handleStep(currentT,  tStart,  isLastStep);  [CE]  cannot  find  symbol  tStart  [FE]              AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.handleStep(currentT,  tStart,  isLastStep);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(currentT,  tStart,  isLastStep);	  handler.handleStep(currentT,    tEnd,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  tStart	16	None	replace
80	[BUG]  [BUGGY]  handler.handleStep(interpolator,  currentT,  isLastStep);  [CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.handleStep(interpolator,  currentT,  isLastStep);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(interpolator,  currentT,  isLastStep);	  handler.handleStep(interpolator,    tStart,    isLastStep);    	non-compiled	[CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;	27	None	replace
81	[BUG]  [BUGGY]  Interpolator  interpolator  =(Interpolator)handlers.get(tEnd,  events);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  Interpolator  interpolator  =(Interpolator)handlers.get(tEnd,  events);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	Interpolator  interpolator  =(Interpolator)handlers.get(tEnd,  events);	  Interpolator    interpolator    =(Interpolator)events.get(tEnd,    handler);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
82	[BUG]  [BUGGY]  Interpolator  interpolator  =(Interpolator)events.get(tEnd,  yDot,  handler);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  Interpolator  interpolator  =(Interpolator)events.get(tEnd,  yDot,  handler);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	Interpolator  interpolator  =(Interpolator)events.get(tEnd,  yDot,  handler);	  Interpolator    interpolator    =(Interpolator)events.get(tEnd,    yDot);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
83	[BUG]  [BUGGY]  Interpolator  interpolator  =(Interpolator)handlers.get(events);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  Interpolator  interpolator  =(Interpolator)handlers.get(events);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	Interpolator  interpolator  =(Interpolator)handlers.get(events);	  Interpolator    interpolator    =(Interpolator)events.get(handler);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
84	[BUG]  [BUGGY]  try  ==  false)  {  for(final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }  [CE]  '{'  expected  [FE]        AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  try  ==  false)  {  for(final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	try  ==  false)  {  for(final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }	  if(handler!=    null)    {    for(final    EventState    state    :    eventsStates)    {    state.stepAccepted(currentT,    tEnd,    1);    isLastStep    =    isLastStep    ||    state.stop();    }    	non-compiled	[CE]  '{'  expected	30	None	replace
85	[BUG]  [BUGGY]  try  ==  null)  {  for(final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }  [CE]  '{'  expected  [FE]          AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  try  ==  null)  {  for(final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	try  ==  null)  {  for(final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }	  if(handler!=    null)    {    for(final    EventState    state    :    eventsStates)    {    state.stepAccepted(currentT,    tEnd,    1);    isLastStep    =    isLastStep    ||    state.stop();    }    	non-compiled	[CE]  '{'  expected	30	None	replace
86	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(yDot,  tEnd,  isLastStep);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  ((  StepHandler)handler).stepAccepted(yDot,  tEnd,  isLastStep);  [BUGGY]      handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(yDot,  tEnd,  isLastStep);	  ((    StepHandler)handler).stepAccepted(yDot,    tEnd,    1);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
87	[BUG]  [BUGGY]  handler.handleStep(currentT,  yDot,  interpolator);  [CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  handler.handleStep(currentT,  yDot,  interpolator);  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(currentT,  yDot,  interpolator);	  handler.handleStep(currentT,    interpolator);    	non-compiled	[CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;	2	None	replace
88	[BUG]  [BUGGY]  isLastStep  ||  handler.isInitialized()  &&  state.stop();  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {      [BUGGY]  isLastStep  ||  handler.isInitialized()  &&  state.stop();  [BUGGY]      }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	isLastStep  ||  handler.isInitialized()  &&  state.stop();	  isLastStep    ||    handler.isInitialized();    	non-compiled	[CE]  not  a  statement	19	None	replace
