bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  handler.handleStep(interpolator,  currentT,  tEnd);  [CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  handler.handleStep(interpolator,  currentT,  tEnd);  [BUGGY]    }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(interpolator,  currentT,  tEnd);	  handler.handleStep(interpolator,    currentT);    	non-compiled	[CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;	13	None	replace
2	[BUG]  [BUGGY]  handler.handleStep(currentT,  interpolator);  [CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  handler.handleStep(currentT,  interpolator);  [BUGGY]    }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(currentT,  interpolator);	  handler.handleStep(interpolator,    currentT);    	non-compiled	[CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;	13	None	replace
3	[BUG]  [BUGGY]  Interpolator  interpolator  =(Interpolator)events.get(tEnd,  yDot);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  Interpolator  interpolator  =(Interpolator)events.get(tEnd,  yDot);  [BUGGY]    handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	Interpolator  interpolator  =(Interpolator)events.get(tEnd,  yDot);	      Interpolator    interpolator    =(Interpolator)events.get(tEnd);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
4	[BUG]  [BUGGY]  Interpolator  interpolator  =(Interpolator)events.get(handler);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  Interpolator  interpolator  =(Interpolator)events.get(handler);  [BUGGY]    handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	Interpolator  interpolator  =(Interpolator)events.get(handler);	      Interpolator    interpolator    =(Interpolator)events.get(tEnd);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
5	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(y,  tEnd,  1);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  ((  StepHandler)handler).stepAccepted(y,  tEnd,  1);  [BUGGY]    handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(y,  tEnd,  1);	      ((    StepHandler)handler).stepAccepted(t0,    tEnd,    1);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
6	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(currentT,  yDot,  tEnd);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  ((  StepHandler)handler).stepAccepted(currentT,  yDot,  tEnd);  [BUGGY]    handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(currentT,  yDot,  tEnd);	      ((    StepHandler)handler).stepAccepted(t,    yDot,    tEnd);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
7	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(t0,  yDot,  tEnd);  [CE]  cannot  find  symbol  t0  [FE]            AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  ((  StepHandler)handler).stepAccepted(t0,  yDot,  tEnd);  [BUGGY]    handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(t0,  yDot,  tEnd);	      ((    StepHandler)handler).stepAccepted(t,    yDot,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t0	6	None	replace
8	[BUG]  [BUGGY]  handler.handleStep(interpolator,  tStart,  tEnd,  isLastStep);  [CE]  cannot  find  symbol  tStart  [FE]          AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  handler.handleStep(interpolator,  tStart,  tEnd,  isLastStep);  [BUGGY]    }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(interpolator,  tStart,  tEnd,  isLastStep);	  handler.handleStep(interpolator,    tEnd,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  tStart	2	None	replace
9	[BUG]  [BUGGY]  handler.handleStep(interpolator,  tEnd,  yDot,  isLastStep);  [CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  handler.handleStep(interpolator,  tEnd,  yDot,  isLastStep);  [BUGGY]    }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(interpolator,  tEnd,  yDot,  isLastStep);	  handler.handleStep(interpolator,    tEnd,    isLastStep);    	non-compiled	[CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;	2	None	replace
10	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(currentT,  tStart,  0);  [CE]  cannot  find  symbol  tStart  [FE]            AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  ((  StepHandler)handler).stepAccepted(currentT,  tStart,  0);  [BUGGY]    handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(currentT,  tStart,  0);	      ((    StepHandler)handler).stepAccepted(currentT,    tEnd,    0);    	non-compiled	[CE]  cannot  find  symbol  tStart	10	None	replace
11	[BUG]  [BUGGY]  tEnd  =  state.stepAccepted(currentT,  yDot);  [CE]  cannot  find  symbol  state  [FE]          AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  tEnd  =  state.stepAccepted(currentT,  yDot);  [BUGGY]    handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	tEnd  =  state.stepAccepted(currentT,  yDot);	      tEnd    =    state.stepAccepted(currentT,    y);    	non-compiled	[CE]  cannot  find  symbol  state	9	None	replace
12	[BUG]  [BUGGY]  stepHandlers.add(interpolator,  handler);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  stepHandlers.add(interpolator,  handler);  [BUGGY]    handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	stepHandlers.add(interpolator,  handler);	      stepHandlers.add(interpolator);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	14	None	replace
13	[BUG]  [BUGGY]  stepHandlers.add(interpolator,  tEnd);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  stepHandlers.add(interpolator,  tEnd);  [BUGGY]    handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	stepHandlers.add(interpolator,  tEnd);	      stepHandlers.add(interpolator);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	14	None	replace
14	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(currentT,  tEnd,  3);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  ((  StepHandler)handler).stepAccepted(currentT,  tEnd,  3);  [BUGGY]    handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(currentT,  tEnd,  3);	      ((    StepHandler)handler).stepAccepted(currentT,    tEnd,    1);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
15	[BUG]  [BUGGY]  handler.handleStep(interpolator,  tStart,  isLastStep,  tEnd);  [CE]  cannot  find  symbol  tStart  [FE]        AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  handler.handleStep(interpolator,  tStart,  isLastStep,  tEnd);  [BUGGY]    }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(interpolator,  tStart,  isLastStep,  tEnd);	  handler.handleStep(interpolator,    isLastStep,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  tStart	1	None	replace
16	[BUG]  [BUGGY]  handler.handleStep(currentT,  tEnd,  isLastStep);  [CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  handler.handleStep(currentT,  tEnd,  isLastStep);  [BUGGY]    }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(currentT,  tEnd,  isLastStep);	  handler.handleStep(currentT,    isLastStep);    	non-compiled	[CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;	12	None	replace
17	[BUG]  [BUGGY]  handler.handleStep(currentT,  isLastStep,  tEnd);  [CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  handler.handleStep(currentT,  isLastStep,  tEnd);  [BUGGY]    }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(currentT,  isLastStep,  tEnd);	  handler.handleStep(currentT,    isLastStep);    	non-compiled	[CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;	12	None	replace
18	[BUG]  [BUGGY]  isLastStep  =  handler.isLastStep();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  isLastStep  =  handler.isLastStep();  [BUGGY]    }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	isLastStep  =  handler.isLastStep();	      	non-compiled	[CE]  cannot  find  symbol	4	None	replace
19	[BUG]  [BUGGY]  isLastStep  ||  handler.isInitialized();  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  isLastStep  ||  handler.isInitialized();  [BUGGY]    }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	isLastStep  ||  handler.isInitialized();	      	non-compiled	[CE]  not  a  statement	4	None	replace
20	[BUG]  [BUGGY]      isLastStep  =  handler.isLastStep()?  currentT.getImplicitReturn()  :  null;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]      isLastStep  =  handler.isLastStep()?  currentT.getImplicitReturn()  :  null;  [BUGGY]    }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	        isLastStep  =  handler.isLastStep()?  currentT.getImplicitReturn()  :  null;	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
21	[BUG]  [BUGGY]  handler.handleStep(interpolator,  tStart,  tEnd);  [CE]  cannot  find  symbol  tStart  [FE]        AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  handler.handleStep(interpolator,  tStart,  tEnd);  [BUGGY]    }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(interpolator,  tStart,  tEnd);	  handler.handleStep(interpolator,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  tStart	11	None	replace
22	[BUG]  [BUGGY]  handler.handleStep(interpolator,  tEnd,  yDot);  [CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  handler.handleStep(interpolator,  tEnd,  yDot);  [BUGGY]    }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(interpolator,  tEnd,  yDot);	  handler.handleStep(interpolator,    tEnd);    	non-compiled	[CE]  method  handleStep  in  interface  StepHandler  cannot  be  applied  to  given  types;	11	None	replace
23	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(currentT,  yDot,  0);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  ((  StepHandler)handler).stepAccepted(currentT,  yDot,  0);  [BUGGY]    handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(currentT,  yDot,  0);	      ((    StepHandler)handler).stepAccepted(currentT,    tEnd,    0);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
24	[BUG]  [BUGGY]  stepHandlers.add(handler,  tEnd);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  stepHandlers.add(handler,  tEnd);  [BUGGY]    handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	stepHandlers.add(handler,  tEnd);	      stepHandlers.add(interpolator);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	14	None	replace
25	[BUG]  [BUGGY]  Interpolator  interpolator  =(Interpolator)events.get(tEnd,  handler);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  Interpolator  interpolator  =(Interpolator)events.get(tEnd,  handler);  [BUGGY]    handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	Interpolator  interpolator  =(Interpolator)events.get(tEnd,  handler);	      Interpolator    interpolator    =(Interpolator)events.get(tEnd);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
26	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(y,  tStart,  tEnd);  [CE]  cannot  find  symbol  tStart  [FE]          AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  ((  StepHandler)handler).stepAccepted(y,  tStart,  tEnd);  [BUGGY]    handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(y,  tStart,  tEnd);	      ((    StepHandler)handler).stepAccepted(t,    yDot,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  tStart	6	None	replace
27	[BUG]  [BUGGY]  handler.handleStep(interpolator,  tStart,  isLastStep);  [CE]  cannot  find  symbol  tStart  [FE]          AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  handler.handleStep(interpolator,  tStart,  isLastStep);  [BUGGY]    }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(interpolator,  tStart,  isLastStep);	  handler.handleStep(interpolator,    tEnd,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  tStart	2	None	replace
28	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(currentT,  yDot,  1);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  ((  StepHandler)handler).stepAccepted(currentT,  yDot,  1);  [BUGGY]    handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(currentT,  yDot,  1);	      ((    StepHandler)handler).stepAccepted(currentT,    tEnd,    1);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
29	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(currentT,  tStart,  1);  [CE]  cannot  find  symbol  tStart  [FE]          AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  ((  StepHandler)handler).stepAccepted(currentT,  tStart,  1);  [BUGGY]    handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(currentT,  tStart,  1);	      ((    StepHandler)handler).stepAccepted(currentT,    tEnd,    1);    	non-compiled	[CE]  cannot  find  symbol  tStart	8	None	replace
30	[BUG]  [BUGGY]  if(handler!=  null)  {  for(final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  if(handler!=  null)  {  for(final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }  [BUGGY]    }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	if(handler!=  null)  {  for(final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
31	[BUG]  [BUGGY]  if(handler!=  null)  {  for(final  EventState  currentT  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  if(handler!=  null)  {  for(final  EventState  currentT  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }  [BUGGY]    }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	if(handler!=  null)  {  for(final  EventState  currentT  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep  ||  state.stop();  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
32	[BUG]  [BUGGY]  handler.handleStep(interpolator,  t0,  tEnd,  isLastStep);  [CE]  cannot  find  symbol  t0  [FE]          AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  handler.handleStep(interpolator,  t0,  tEnd,  isLastStep);  [BUGGY]    }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	handler.handleStep(interpolator,  t0,  tEnd,  isLastStep);	  handler.handleStep(interpolator,    tEnd,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  t0	2	None	replace
33	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(yDot,  tEnd,  1);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  ((  StepHandler)handler).stepAccepted(yDot,  tEnd,  1);  [BUGGY]    handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(yDot,  tEnd,  1);	      ((    StepHandler)handler).stepAccepted(t0,    tEnd,    1);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
34	[BUG]  [BUGGY]  ((  StepHandler)handler).stepAccepted(expandableEvents,  t0,  yDot,  tEnd);  [CE]  cannot  find  symbol  expandableEvents  [FE]          AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]  ((  StepHandler)handler).stepAccepted(expandableEvents,  t0,  yDot,  tEnd);  [BUGGY]    handler.handleStep(interpolator,  isLastStep);  }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	((  StepHandler)handler).stepAccepted(expandableEvents,  t0,  yDot,  tEnd);	      ((    StepHandler)handler).stepAccepted(t,    yDot,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  expandableEvents	6	None	replace
35	[BUG]  [BUGGY]      if(handler!=  null)  {  for(final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    interpolator.setInterpolatedTime(currentT);  final  double[]  currentY  =  interpolator.getInterpolatedState();  for  (final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  currentY);  isLastStep  =  isLastStep  ||  state.stop();  }  isLastStep  =  isLastStep  ||  Precision.equals(currentT,  tEnd,  1);  for  (StepHandler  handler  :  stepHandlers)  {    [BUGGY]      if(handler!=  null)  {  for(final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep;  }  [BUGGY]    }  return  currentT;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.4082482904638631	400	400	1	replace	        if(handler!=  null)  {  for(final  EventState  state  :  eventsStates)  {  state.stepAccepted(currentT,  tEnd,  1);  isLastStep  =  isLastStep;  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
