bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  EventState[]  stepHandlers  =  state.getStepHandlers(t0,  y0);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]  EventState[]  stepHandlers  =  state.getStepHandlers(t0,  y0);  [BUGGY]      state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	EventState[]  stepHandlers  =  state.getStepHandlers(t0,  y0);	  EventState[]    stepHandlers    =    state.getStepHandlers(t0);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
2	[BUG]  [BUGGY]  EventState[]  stepHandlers  =  state.getStepHandlers(y0);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]  EventState[]  stepHandlers  =  state.getStepHandlers(y0);  [BUGGY]      state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	EventState[]  stepHandlers  =  state.getStepHandlers(y0);	  EventState[]    stepHandlers    =    state.getStepHandlers(t0);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
3	[BUG]  [BUGGY]  state.getState().init(t0,  y0);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]  state.getState().init(t0,  y0);  [BUGGY]      }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	state.getState().init(t0,  y0);	  state.getState().init(y0,    t0);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
4	[BUG]  [BUGGY]  state.getState().init(y0,  t);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]  state.getState().init(y0,  t);  [BUGGY]      }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	state.getState().init(y0,  t);	  state.getState().init(y0,    t0);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
5	[BUG]  [BUGGY]  EventState  stepHandler  =  state.getStepHandler(t0,  y0);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]  EventState  stepHandler  =  state.getStepHandler(t0,  y0);  [BUGGY]      state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	EventState  stepHandler  =  state.getStepHandler(t0,  y0);	  EventState    stepHandler    =    state.getStepHandler(t0);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
6	[BUG]  [BUGGY]  EventState  stepHandler  =  state.getStepHandler(y0);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]  EventState  stepHandler  =  state.getStepHandler(y0);  [BUGGY]      state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	EventState  stepHandler  =  state.getStepHandler(y0);	  EventState    stepHandler    =    state.getStepHandler(t0);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
7	[BUG]  [BUGGY]  Incrementor  stepHandlers  =  state.getStepHandlers(t0,  y0);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]  Incrementor  stepHandlers  =  state.getStepHandlers(t0,  y0);  [BUGGY]      state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	Incrementor  stepHandlers  =  state.getStepHandlers(t0,  y0);	  Incrementor    stepHandlers    =    state.getStepHandlers(t0);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
8	[BUG]  [BUGGY]  Integration(t0,  y0,  t);  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]  Integration(t0,  y0,  t);  [BUGGY]      state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	Integration(t0,  y0,  t);	          initIntegration(t0,    y0,    t);    Integration(t0,    y0,    t);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
9	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]          initIntegration(t0,    y0,    t);    initIntegration(t0,  y0,  t);  initIntegration(t0,  y0,  t);  initIntegration(t0,  y0,  t);  [BUGGY]      state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	add	                initIntegration(t0,        y0,        t);        initIntegration(t0,    y0,    t);    initIntegration(t0,  y0,  t);  initIntegration(t0,  y0,  t);	  	compilable	  [FE]  StackOverflowError  	8	4	add
10	[BUG]  [BUGGY]          initIntegration(t0,    y0,    t);    initIntegration(t0,  y0,  t);  initIntegration(t0,  y0,  t);  initIntegration(t0,  y0,  t);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]          initIntegration(t0,    y0,    t);    initIntegration(t0,  y0,  t);  initIntegration(t0,  y0,  t);  initIntegration(t0,  y0,  t);  [BUGGY]      state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	                initIntegration(t0,        y0,        t);        initIntegration(t0,    y0,    t);    initIntegration(t0,  y0,  t);  initIntegration(t0,  y0,  t);	  	compilable	  [FE]  StackOverflowError  	8	4	add
11	[BUG]  [BUGGY]          initIntegration(t0,    y0,    t);    initIntegration(t0,  y0,  t);  initIntegration(t0,  y0,  t);  initIntegration(t1,  y0,  t);  [CE]  cannot  find  symbol  t1  [FE]      StackOverflowError    [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]          initIntegration(t0,    y0,    t);    initIntegration(t0,  y0,  t);  initIntegration(t0,  y0,  t);  initIntegration(t1,  y0,  t);  [BUGGY]      state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	                initIntegration(t0,        y0,        t);        initIntegration(t0,    y0,    t);    initIntegration(t0,  y0,  t);  initIntegration(t1,  y0,  t);	  	non-compiled	[CE]  cannot  find  symbol  t1	8	None	add
12	[BUG]  [BUGGY]  State  state  =  t.getState().init(t0,  y0,  state);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]  State  state  =  t.getState().init(t0,  y0,  state);  [BUGGY]      }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	State  state  =  t.getState().init(t0,  y0,  state);	  State    state    =    state.getState().init(t0,    y0,    t);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
13	[BUG]  [BUGGY]  Incrementor  t0  =  state.getEventHandler(1);  [CE]  variable  t0  is  already  defined  in  method  initIntegration(double,double[],double)  [FE]            AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]  Incrementor  t0  =  state.getEventHandler(1);  [BUGGY]      state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	Incrementor  t0  =  state.getEventHandler(1);	  Incrementor    t0    =    state.getEventHandler(0);    	non-compiled	[CE]  variable  t0  is  already  defined  in  method  initIntegration(double,double[],double)	1	None	replace
14	[BUG]  [BUGGY]  EventState  state  =  state.getEventState(t0,  y0);  [CE]  variable  state  is  already  defined  in  method  initIntegration(double,double[],double)  [FE]                AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]  EventState  state  =  state.getEventState(t0,  y0);  [BUGGY]      state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	EventState  state  =  state.getEventState(t0,  y0);	  EventState    state    =    state.getEventState(t0);    	non-compiled	[CE]  variable  state  is  already  defined  in  method  initIntegration(double,double[],double)	11	None	replace
15	[BUG]  [BUGGY]  EventState  state  =  state.getEventState(y0);  [CE]  variable  state  is  already  defined  in  method  initIntegration(double,double[],double)  [FE]                  AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]  EventState  state  =  state.getEventState(y0);  [BUGGY]      state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	EventState  state  =  state.getEventState(y0);	  EventState    state    =    state.getEventState(t0);    	non-compiled	[CE]  variable  state  is  already  defined  in  method  initIntegration(double,double[],double)	11	None	replace
16	[BUG]  [BUGGY]  initState(t0,  y0,  state);  [CE]  cannot  find  symbol  [FE]        StackOverflowError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]  initState(t0,  y0,  state);  [BUGGY]      state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	initState(t0,  y0,  state);	  initState(t0,    y0,    t);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
17	[BUG]  [BUGGY]  initIntegration(t0,  y0,  t,  state.getEventHandler());  [CE]  method  initIntegration  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]  initIntegration(t0,  y0,  t,  state.getEventHandler());  [BUGGY]      state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	initIntegration(t0,  y0,  t,  state.getEventHandler());	  initIntegration(t0,    y0,    t,    state);    	non-compiled	[CE]  method  initIntegration  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	6	None	replace
18	[BUG]  [BUGGY]  initIntegration(t0,  y0,  t,  state,  convergence);  [CE]  cannot  find  symbol  convergence  [FE]                AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]  initIntegration(t0,  y0,  t,  state,  convergence);  [BUGGY]      state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	initIntegration(t0,  y0,  t,  state,  convergence);	  initIntegration(t0,    y0,    t,    state);    	non-compiled	[CE]  cannot  find  symbol  convergence	6	None	replace
19	[BUG]  [BUGGY]  initState(t0,  y0,  state.getEventHandler());  [CE]  cannot  find  symbol  [FE]        StackOverflowError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]  initState(t0,  y0,  state.getEventHandler());  [BUGGY]      state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	initState(t0,  y0,  state.getEventHandler());	  initState(t0,    y0,    t);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
20	[BUG]  [BUGGY]          initIntegration(t0,    y0,    t);    initIntegration(t0,  y0,  t);  initIntegration(t0,  y0,  t);  initIntegration(t0,  y1,  t);  [CE]  cannot  find  symbol  y1  [FE]    StackOverflowError    [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]          initIntegration(t0,    y0,    t);    initIntegration(t0,  y0,  t);  initIntegration(t0,  y0,  t);  initIntegration(t0,  y1,  t);  [BUGGY]      state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	                initIntegration(t0,        y0,        t);        initIntegration(t0,    y0,    t);    initIntegration(t0,  y0,  t);  initIntegration(t0,  y1,  t);	  	non-compiled	[CE]  cannot  find  symbol  y1	8	None	add
21	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]  if(state.getEventHandler()!=  null)  {  initIntegration(t0,  y0,  t);  initIntegration(t0,  y0,  t);  }  [BUGGY]      state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	add	if(state.getEventHandler()!=  null)  {  initIntegration(t0,  y0,  t);  initIntegration(t0,  y0,  t);  }	          initIntegration(t0,    y0,    t);    initIntegration(t0,    y0,    t);    	compilable	  [FE]  StackOverflowError  	9	4	replace
22	[BUG]  [BUGGY]  if(state.getEventHandler()!=  null)  {  initIntegration(t0,  y0,  t);  initIntegration(t0,  y0,  t);  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]  if(state.getEventHandler()!=  null)  {  initIntegration(t0,  y0,  t);  initIntegration(t0,  y0,  t);  }  [BUGGY]      state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	if(state.getEventHandler()!=  null)  {  initIntegration(t0,  y0,  t);  initIntegration(t0,  y0,  t);  }	          initIntegration(t0,    y0,    t);    initIntegration(t0,    y0,    t);    	compilable	  [FE]  StackOverflowError  	9	4	replace
23	[BUG]  [BUGGY]  initIntegration(t0,  y1,  t);  [CE]  cannot  find  symbol  y1  [FE]        StackOverflowError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]  initIntegration(t0,  y1,  t);  [BUGGY]      state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	initIntegration(t0,  y1,  t);	          initIntegration(t0,    y0,    t);    initIntegration(t0,    y1,    t);    	non-compiled	[CE]  cannot  find  symbol  y1	15	None	replace
24	[BUG]  [BUGGY]  State  state  =  state.getState().init(y0,  t0);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]  State  state  =  state.getState().init(y0,  t0);  [BUGGY]      }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	State  state  =  state.getState().init(y0,  t0);	  State    state    =    state.getState().init(t0,    y0,    t);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
25	[BUG]  [BUGGY]  EventState[]  stepHandlers  =  state.getStepHandlers1();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]  EventState[]  stepHandlers  =  state.getStepHandlers1();  [BUGGY]      state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	EventState[]  stepHandlers  =  state.getStepHandlers1();	  EventState[]    stepHandlers    =    state.getStepHandlers2();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
26	[BUG]  [BUGGY]  Incrementor  stepHandlers  =  state.getStepHandlers(y0);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]  Incrementor  stepHandlers  =  state.getStepHandlers(y0);  [BUGGY]      state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	Incrementor  stepHandlers  =  state.getStepHandlers(y0);	  Incrementor    stepHandlers    =    state.getStepHandlers(t0);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
27	[BUG]  [BUGGY]  State  state  =  state.getState().init(y0,  t0,  t);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]  State  state  =  state.getState().init(y0,  t0,  t);  [BUGGY]      }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	State  state  =  state.getState().init(y0,  t0,  t);	  State    state    =    state.getState().init(t0,    y0,    t);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
28	[BUG]  [BUGGY]  Integrator  t0  =  state.getEventHandler();  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {      [BUGGY]  Integrator  t0  =  state.getEventHandler();  [BUGGY]      state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	Integrator  t0  =  state.getEventHandler();	          initIntegration(t0,    y0,    t);    Integration(t0,    y0,    t);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
