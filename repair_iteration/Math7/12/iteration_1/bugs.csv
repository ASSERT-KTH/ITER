bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    EventState[]  stepHandlers  =  state.getStepHandlers();  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  [BUGGY]    EventState[]  stepHandlers  =  state.getStepHandlers();  [BUGGY]  state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	    EventState[]  stepHandlers  =  state.getStepHandlers();		non-compiled	[CE]  cannot  find  symbol	24	None	add
2	[BUG]  [BUGGY]    EventState[]  stepHandlers  =  state.getEventHandlers();  [CE]  cannot  find  symbol  [FE]      AssertionError  [CONTEXT]  protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  [BUGGY]    EventState[]  stepHandlers  =  state.getEventHandlers();  [BUGGY]  state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	    EventState[]  stepHandlers  =  state.getEventHandlers();		non-compiled	[CE]  cannot  find  symbol	24	None	add
3	[BUG]  [BUGGY]    EventState  state  =  state.getEventState();  [CE]  variable  state  is  already  defined  in  method  initIntegration(double,double[],double)  [FE]        AssertionError  [CONTEXT]  protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  [BUGGY]    EventState  state  =  state.getEventState();  [BUGGY]  state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	    EventState  state  =  state.getEventState();		non-compiled	[CE]  variable  state  is  already  defined  in  method  initIntegration(double,double[],double)	24	None	add
4	[BUG]  [BUGGY]  state.getState().init(t0,  y0,  t);  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  [BUGGY]  state.getState().init(t0,  y0,  t);  [BUGGY]  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	state.getState().init(t0,  y0,  t);	state.getEventHandler().init(t0,  y0,  t);  	non-compiled	[CE]  cannot  find  symbol	23	None	replace
5	[BUG]  [BUGGY]    Incrementor  t0  =  state.getEventHandler();  [CE]  variable  t0  is  already  defined  in  method  initIntegration(double,double[],double)  [FE]    AssertionError  [CONTEXT]  protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  [BUGGY]    Incrementor  t0  =  state.getEventHandler();  [BUGGY]  state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	    Incrementor  t0  =  state.getEventHandler();		non-compiled	[CE]  variable  t0  is  already  defined  in  method  initIntegration(double,double[],double)	24	None	add
6	[BUG]  [BUGGY]    initIntegration(t0,  y0,  state);  [CE]  method  initIntegration  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]      AssertionError  [CONTEXT]  protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  [BUGGY]    initIntegration(t0,  y0,  state);  [BUGGY]  state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	    initIntegration(t0,  y0,  state);		non-compiled	[CE]  method  initIntegration  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	24	None	add
7	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    AssertionError  [CONTEXT]  protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  [BUGGY]    initIntegration(t0,  y0,  t);  [BUGGY]  state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	add	    initIntegration(t0,  y0,  t);		compilable	  [FE]  StackOverflowError  	24	4	add
8	[BUG]  [BUGGY]    initIntegration(t0,  y0,  t);  [FE]  StackOverflowError  [FE]    AssertionError  [CONTEXT]  protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  [BUGGY]    initIntegration(t0,  y0,  t);  [BUGGY]  state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	    initIntegration(t0,  y0,  t);		compilable	  [FE]  StackOverflowError  	24	4	add
9	[BUG]  [BUGGY]    Incrementor  stepHandlers  =  state.getStepHandlers();  [CE]  cannot  find  symbol  [FE]      AssertionError  [CONTEXT]  protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  [BUGGY]    Incrementor  stepHandlers  =  state.getStepHandlers();  [BUGGY]  state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	    Incrementor  stepHandlers  =  state.getStepHandlers();		non-compiled	[CE]  cannot  find  symbol	24	None	add
10	[BUG]  [BUGGY]    EventState  stepHandler  =  state.getStepHandler();  [CE]  cannot  find  symbol  [FE]        AssertionError  [CONTEXT]  protected  void  initIntegration(final  double  t0,  final  double[]  y0,  final  double  t)  {  evaluations.resetCount();  for  (final  EventState  state  :  eventsStates)  {  [BUGGY]    EventState  stepHandler  =  state.getStepHandler();  [BUGGY]  state.getEventHandler().init(t0,  y0,  t);  }  for  (StepHandler  handler  :  stepHandlers)  {  handler.init(t0,  y0,  t);  }  setStateInitialized(false);  }  [CLASS]  AbstractIntegrator  1  [METHOD]  initIntegration  [RETURN_TYPE]  void  final  double  t0  final  double[]  y0  final  double  t  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  EventState  state  double[]  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  StepHandler  handler  String  name  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	191	191	1	replace	    EventState  stepHandler  =  state.getStepHandler();		non-compiled	[CE]  cannot  find  symbol	24	None	add
