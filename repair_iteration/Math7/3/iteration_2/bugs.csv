bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]    NoBracketingException    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  [BUGGY]    computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);	  	compilable	  [FE]  NoBracketingException  	1	2	add
2	[BUG]  [BUGGY]  System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  [FE]  NoBracketingException  [FE]    NoBracketingException    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  [BUGGY]    computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);	  	compilable	  [FE]  NoBracketingException  	1	2	add
3	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]      NoBracketingException    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  yDot.length);  [BUGGY]    computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  yDot.length);	  	compilable	  [FE]  NoBracketingException  	1	2	add
4	[BUG]  [BUGGY]  System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  yDot.length);  [FE]  NoBracketingException  [FE]      NoBracketingException    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  yDot.length);  [BUGGY]    computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  yDot.length);	  	compilable	  [FE]  NoBracketingException  	1	2	add
5	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]        NoBracketingException    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  [BUGGY]    computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);	  	compilable	  [FE]  NoBracketingException  	1	2	add
6	[BUG]  [BUGGY]  System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  [FE]  NoBracketingException  [FE]        NoBracketingException    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  [BUGGY]    computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);	  	compilable	  [FE]  NoBracketingException  	1	2	add
7	[BUG]  [BUGGY]  final  double  yDot  =  state.getY();  [CE]  variable  yDot  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]          AssertionError    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  final  double  yDot  =  state.getY();  [BUGGY]    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	final  double  yDot  =  state.getY();	      final    int    yDot    =    state.getY();    	non-compiled	[CE]  variable  yDot  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	8	None	replace
8	[BUG]  [BUGGY]  final  int  yDot  =  currentEvent.getY();  [CE]  variable  yDot  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]            AssertionError    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  final  int  yDot  =  currentEvent.getY();  [BUGGY]    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	final  int  yDot  =  currentEvent.getY();	      final    int    yDot    =    state.getY();    	non-compiled	[CE]  variable  yDot  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	8	None	replace
9	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  y,  tEnd);  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  yDot  =  computeDerivatives(eventT,  y,  tEnd);  [BUGGY]    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  y,  tEnd);	      yDot    =    computeDerivatives(eventT,    y.length);    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	12	None	replace
10	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  eventY.length);  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  yDot  =  computeDerivatives(eventT,  eventY.length);  [BUGGY]    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  eventY.length);	      yDot    =    computeDerivatives(eventT,    y.length);    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	12	None	replace
11	[BUG]  [BUGGY]  yDot  =  currentEvent.getY();  [CE]  cannot  find  symbol  [FE]    NoBracketingException    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  yDot  =  currentEvent.getY();  [BUGGY]    computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  currentEvent.getY();	      	non-compiled	[CE]  cannot  find  symbol	6	None	replace
12	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  tEnd,  y);  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  yDot  =  computeDerivatives(eventT,  tEnd,  y);  [BUGGY]    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  tEnd,  y);	      yDot    =    computeDerivatives(eventT,    y);    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	11	None	replace
13	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  eventY,  tEnd);  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  yDot  =  computeDerivatives(eventT,  eventY,  tEnd);  [BUGGY]    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  eventY,  tEnd);	      yDot    =    computeDerivatives(eventT,    y);    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	11	None	replace
14	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]        AssertionError    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  System.arraycopy(y,  0,  yDot,  0,  y.length);  [BUGGY]    computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,  0,  yDot,  0,  y.length);	  System.arraycopy(y,    0,    currentY,    0,    y.length);    	compilable	  [FE]  NoBracketingException  	10	2	replace
15	[BUG]  [BUGGY]  System.arraycopy(y,  0,  yDot,  0,  y.length);  [FE]  NoBracketingException  [FE]        AssertionError    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  System.arraycopy(y,  0,  yDot,  0,  y.length);  [BUGGY]    computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,  0,  yDot,  0,  y.length);	  System.arraycopy(y,    0,    currentY,    0,    y.length);    	compilable	  [FE]  NoBracketingException  	10	2	replace
16	[BUG]  [BUGGY]  System.arraycopy(y,  0,  yDot,  0,  currentEvent.length);  [CE]  cannot  find  symbol  length  [FE]          AssertionError    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  System.arraycopy(y,  0,  yDot,  0,  currentEvent.length);  [BUGGY]    computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,  0,  yDot,  0,  currentEvent.length);	  System.arraycopy(y,    0,    currentY,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  length	10	None	replace
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NoBracketingException    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  [BUGGY]    computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);	  	compilable	  [FE]  AssertionError  	3	1	add
18	[BUG]  [BUGGY]  System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  [FE]  AssertionError  [FE]    NoBracketingException    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  [BUGGY]    computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);	  	compilable	  [FE]  AssertionError  	3	1	add
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      NoBracketingException    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  yDot.length);  [BUGGY]    computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  yDot.length);	  	compilable	  [FE]  AssertionError  	3	1	add
20	[BUG]  [BUGGY]  System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  yDot.length);  [FE]  AssertionError  [FE]      NoBracketingException    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  yDot.length);  [BUGGY]    computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  yDot.length);	  	compilable	  [FE]  AssertionError  	3	1	add
21	[BUG]  [BUGGY]  int  yDot  =  state.getY()  -  1;  [CE]  variable  yDot  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]            AssertionError    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  int  yDot  =  state.getY()  -  1;  [BUGGY]    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	int  yDot  =  state.getY()  -  1;	      int    yDot    =    state.getY();    	non-compiled	[CE]  variable  yDot  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	9	None	replace
22	[BUG]  [BUGGY]  int  yDot  =  currentEvent.getY();  [CE]  variable  yDot  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]              AssertionError    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  int  yDot  =  currentEvent.getY();  [BUGGY]    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	int  yDot  =  currentEvent.getY();	      int    yDot    =    state.getY();    	non-compiled	[CE]  variable  yDot  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	9	None	replace
23	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]    NoBracketingException    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  System.arraycopy(y,  0,  y,  0,  yDot.length);  [BUGGY]    computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,  0,  y,  0,  yDot.length);	  System.arraycopy(y,    0,    y,    0,    y.length);    	compilable	  [FE]  NoBracketingException  	4	2	replace
24	[BUG]  [BUGGY]  System.arraycopy(y,  0,  y,  0,  yDot.length);  [FE]  NoBracketingException  [FE]    NoBracketingException    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  System.arraycopy(y,  0,  y,  0,  yDot.length);  [BUGGY]    computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,  0,  y,  0,  yDot.length);	  System.arraycopy(y,    0,    y,    0,    y.length);    	compilable	  [FE]  NoBracketingException  	4	2	replace
25	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NoBracketingException    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  [BUGGY]    computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);	  	compilable	  [FE]  AssertionError  	3	1	add
26	[BUG]  [BUGGY]  System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  [FE]  AssertionError  [FE]    NoBracketingException    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  [BUGGY]    computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);	  	compilable	  [FE]  AssertionError  	3	1	add
27	[BUG]  [BUGGY]  System.arraycopy(y,  0,  currentY,  0,  yDot.length);  [CE]  cannot  find  symbol  currentY  [FE]        AssertionError    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  System.arraycopy(y,  0,  currentY,  0,  yDot.length);  [BUGGY]    computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,  0,  currentY,  0,  yDot.length);	  System.arraycopy(y,    0,    currentY,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  currentY	10	None	replace
28	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  y,  stateInitialized);  [CE]  cannot  find  symbol  stateInitialized  [FE]        AssertionError    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  yDot  =  computeDerivatives(eventT,  y,  stateInitialized);  [BUGGY]    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  y,  stateInitialized);	      yDot    =    computeDerivatives(eventT,    y);    	non-compiled	[CE]  cannot  find  symbol  stateInitialized	11	None	replace
29	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  y.length,  tEnd);  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  yDot  =  computeDerivatives(eventT,  y.length,  tEnd);  [BUGGY]    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  y.length,  tEnd);	      yDot    =    computeDerivatives(eventT,    y.length);    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	12	None	replace
30	[BUG]  [BUGGY]  int  yDot  =  state.getY()  +  1;  [CE]  variable  yDot  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]            AssertionError    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  int  yDot  =  state.getY()  +  1;  [BUGGY]    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	int  yDot  =  state.getY()  +  1;	      int    yDot    =    state.getY();    	non-compiled	[CE]  variable  yDot  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	9	None	replace
31	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  eventY,  y.length);  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  yDot  =  computeDerivatives(eventT,  eventY,  y.length);  [BUGGY]    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  eventY,  y.length);	      yDot    =    computeDerivatives(eventT,    y.length);    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	12	None	replace
32	[BUG]  [BUGGY]      yDot  =  state.getY()  +  1;  [CE]  cannot  find  symbol  state  [FE]    NoBracketingException    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]      yDot  =  state.getY()  +  1;  [BUGGY]    computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	        yDot  =  state.getY()  +  1;	  	non-compiled	[CE]  cannot  find  symbol  state	5	None	add
33	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]    NoBracketingException    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  System.arraycopy(yDot,  0,  y,  0,  y.length);  [BUGGY]    computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(yDot,  0,  y,  0,  y.length);	  System.arraycopy(y,    0,    y,    0,    y.length);    	compilable	  [FE]  NoBracketingException  	4	2	replace
34	[BUG]  [BUGGY]  System.arraycopy(yDot,  0,  y,  0,  y.length);  [FE]  NoBracketingException  [FE]    NoBracketingException    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  System.arraycopy(yDot,  0,  y,  0,  y.length);  [BUGGY]    computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(yDot,  0,  y,  0,  y.length);	  System.arraycopy(y,    0,    y,    0,    y.length);    	compilable	  [FE]  NoBracketingException  	4	2	replace
35	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    NoBracketingException    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  System.arraycopy(y,  0,  yDot,  1,  y.length);  [BUGGY]    computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,  0,  yDot,  1,  y.length);	  System.arraycopy(y,    0,    eventY,    0,    y.length);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	3	replace
36	[BUG]  [BUGGY]  System.arraycopy(y,  0,  yDot,  1,  y.length);  [FE]  ArrayIndexOutOfBoundsException  [FE]    NoBracketingException    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  System.arraycopy(y,  0,  yDot,  1,  y.length);  [BUGGY]    computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,  0,  yDot,  1,  y.length);	  System.arraycopy(y,    0,    eventY,    0,    y.length);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	3	replace
37	[BUG]  [BUGGY]  double  yDot  =  state.getY();  [CE]  variable  yDot  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]            AssertionError    [CONTEXT]    for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {      [BUGGY]  double  yDot  =  state.getY();  [BUGGY]    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	double  yDot  =  state.getY();	      int    yDot    =    state.getY();    	non-compiled	[CE]  variable  yDot  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	9	None	replace
