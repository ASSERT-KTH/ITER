bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  System.arraycopy(y,  0,  yDot,  1,  currentEvent.length);  [CE]  cannot  find  symbol  length  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,  0,  yDot,  1,  currentEvent.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,  0,  yDot,  1,  currentEvent.length);	  System.arraycopy(y,    0,    yDot,    1,    y.length);    	non-compiled	[CE]  cannot  find  symbol  length	36	None	replace
2	[BUG]  [BUGGY]  System.arraycopy(y,  0,  yDot,  1,  currentY.length);  [CE]  cannot  find  symbol  currentY  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,  0,  yDot,  1,  currentY.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,  0,  yDot,  1,  currentY.length);	  System.arraycopy(y,    0,    yDot,    1,    y.length);    	non-compiled	[CE]  cannot  find  symbol  currentY	36	None	replace
3	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,  0,  yDot,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,  0,  yDot,  0,  yDot.length);	  System.arraycopy(y,    0,    y,    0,    yDot.length);    	compilable	  [FE]  NoBracketingException  	24	2	replace
4	[BUG]  [BUGGY]  System.arraycopy(y,  0,  yDot,  0,  yDot.length);  [FE]  NoBracketingException  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,  0,  yDot,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,  0,  yDot,  0,  yDot.length);	  System.arraycopy(y,    0,    y,    0,    yDot.length);    	compilable	  [FE]  NoBracketingException  	24	2	replace
5	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]      NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(yDot,  0,  yDot,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(yDot,  0,  yDot,  0,  yDot.length);	  System.arraycopy(y,    0,    y,    0,    yDot.length);    	compilable	  [FE]  NoBracketingException  	24	2	replace
6	[BUG]  [BUGGY]  System.arraycopy(yDot,  0,  yDot,  0,  yDot.length);  [FE]  NoBracketingException  [FE]      NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(yDot,  0,  yDot,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(yDot,  0,  yDot,  0,  yDot.length);	  System.arraycopy(y,    0,    y,    0,    yDot.length);    	compilable	  [FE]  NoBracketingException  	24	2	replace
7	[BUG]  [BUGGY]  yDot  =  currentEvent.getY()  +  1;  [CE]  cannot  find  symbol  [FE]        NoBracketingException      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  yDot  =  currentEvent.getY()  +  1;  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  currentEvent.getY()  +  1;	          yDot    =    state.getY()    +    1;    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
8	[BUG]  [BUGGY]  final  double  yDot  =  currentEvent.getY();  [CE]  variable  yDot  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]                AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  final  double  yDot  =  currentEvent.getY();  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	final  double  yDot  =  currentEvent.getY();	  final    int    yDot    =    currentEvent.getY();    	non-compiled	[CE]  variable  yDot  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	8	None	replace
9	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  t0,  tEnd);  [CE]  cannot  find  symbol  t0  [FE]              AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  yDot  =  computeDerivatives(eventT,  t0,  tEnd);  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  t0,  tEnd);	  yDot    =    computeDerivatives(eventT,    eventY,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t0	13	None	replace
10	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  eventY,  tEnd,  orderSign);  [CE]  cannot  find  symbol  orderSign  [FE]                AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  yDot  =  computeDerivatives(eventT,  eventY,  tEnd,  orderSign);  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  eventY,  tEnd,  orderSign);	  yDot    =    computeDerivatives(eventT,    eventY,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  orderSign	13	None	replace
11	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  eventY,  y.length,  tEnd);  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  yDot  =  computeDerivatives(eventT,  eventY,  y.length,  tEnd);  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  eventY,  y.length,  tEnd);	  yDot    =    computeDerivatives(eventT,    eventY,    y.length);    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	31	None	replace
12	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  eventY,  tEnd,  y.length);  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  yDot  =  computeDerivatives(eventT,  eventY,  tEnd,  y.length);  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  eventY,  tEnd,  y.length);	  yDot    =    computeDerivatives(eventT,    eventY,    y.length);    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	31	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    yDot,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);	  	compilable	  [FE]  AssertionError  	25	1	add
14	[BUG]  [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    yDot,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);	  	compilable	  [FE]  AssertionError  	25	1	add
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    yDot,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);	  	compilable	  [FE]  AssertionError  	25	1	add
16	[BUG]  [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    yDot,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);	  	compilable	  [FE]  AssertionError  	25	1	add
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    yDot,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  yDot.length);	  	compilable	  [FE]  AssertionError  	25	1	add
18	[BUG]  [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  yDot.length);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    yDot,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  yDot.length);	  	compilable	  [FE]  AssertionError  	25	1	add
19	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]    AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(yDot,  0,  yDot,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(yDot,  0,  yDot,  0,  y.length);	  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,    0,    yDot,    0,    y.length);    	compilable	  [FE]  NoBracketingException  	26	2	replace
20	[BUG]  [BUGGY]  System.arraycopy(yDot,  0,  yDot,  0,  y.length);  [FE]  NoBracketingException  [FE]    AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(yDot,  0,  yDot,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(yDot,  0,  yDot,  0,  y.length);	  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,    0,    yDot,    0,    y.length);    	compilable	  [FE]  NoBracketingException  	26	2	replace
21	[BUG]  [BUGGY]  double  yDot  =  currentEvent.getY();  [CE]  variable  yDot  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]                  AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  double  yDot  =  currentEvent.getY();  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	double  yDot  =  currentEvent.getY();	  int    yDot    =    currentEvent.getY();    	non-compiled	[CE]  variable  yDot  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	22	None	replace
22	[BUG]  [BUGGY]  int  yDot  =  currentEvent.getY()  -  1;  [CE]  variable  yDot  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]                    AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  int  yDot  =  currentEvent.getY()  -  1;  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	int  yDot  =  currentEvent.getY()  -  1;	  int    yDot    =    currentEvent.getY();    	non-compiled	[CE]  variable  yDot  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	22	None	replace
23	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  eventY.length,  tEnd);  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  yDot  =  computeDerivatives(eventT,  eventY.length,  tEnd);  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  eventY.length,  tEnd);	  yDot    =    computeDerivatives(eventT,    eventY.length);    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	10	None	replace
24	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,  0,  yDot,  1,  y.length);  System.arraycopy(y,  0,  yDot,  1,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,    0,    yDot,    1,    y.length);    System.arraycopy(y,  0,  yDot,  1,  y.length);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	3	add
25	[BUG]  [BUGGY]  System.arraycopy(y,  0,  yDot,  1,  y.length);  System.arraycopy(y,  0,  yDot,  1,  y.length);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,  0,  yDot,  1,  y.length);  System.arraycopy(y,  0,  yDot,  1,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,    0,    yDot,    1,    y.length);    System.arraycopy(y,  0,  yDot,  1,  y.length);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	3	add
26	[BUG]  [BUGGY]  System.arraycopy(y,  0,  yDot,  1,  y.length);  System.arraycopy(y,  0,  yDot,  1,  state.length);  [CE]  cannot  find  symbol  state  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,  0,  yDot,  1,  y.length);  System.arraycopy(y,  0,  yDot,  1,  state.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,    0,    yDot,    1,    y.length);    System.arraycopy(y,  0,  yDot,  1,  state.length);	  	non-compiled	[CE]  cannot  find  symbol  state	35	None	add
27	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  yDot.length);  System.arraycopy(y,  0,  eventY,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    eventY,    0,    yDot.length);    System.arraycopy(y,  0,  eventY,  0,  yDot.length);	  	compilable	  [FE]  NoBracketingException  	3	2	add
28	[BUG]  [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  yDot.length);  System.arraycopy(y,  0,  eventY,  0,  yDot.length);  [FE]  NoBracketingException  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  yDot.length);  System.arraycopy(y,  0,  eventY,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    eventY,    0,    yDot.length);    System.arraycopy(y,  0,  eventY,  0,  yDot.length);	  	compilable	  [FE]  NoBracketingException  	3	2	add
29	[BUG]  [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  yDot.length);  System.arraycopy(y,  0,  eventY,  0,  yDot.length);  System.arraycopy(y,  0,  yDot.length);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]      NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  yDot.length);  System.arraycopy(y,  0,  eventY,  0,  yDot.length);  System.arraycopy(y,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    eventY,    0,    yDot.length);    System.arraycopy(y,  0,  eventY,  0,  yDot.length);  System.arraycopy(y,  0,  yDot.length);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	3	None	add
30	[BUG]  [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  yDot.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  yDot.length);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  yDot.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    eventY,    0,    yDot.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  yDot.length);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	3	None	add
31	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(yDot,  0,  y,  0,  y.length);  System.arraycopy(yDot,  0,  y,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(yDot,    0,    y,    0,    y.length);    System.arraycopy(yDot,  0,  y,  0,  y.length);	  	compilable	  [FE]  AssertionError  	33	1	add
32	[BUG]  [BUGGY]  System.arraycopy(yDot,  0,  y,  0,  y.length);  System.arraycopy(yDot,  0,  y,  0,  y.length);  [FE]  AssertionError  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(yDot,  0,  y,  0,  y.length);  System.arraycopy(yDot,  0,  y,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(yDot,    0,    y,    0,    y.length);    System.arraycopy(yDot,  0,  y,  0,  y.length);	  	compilable	  [FE]  AssertionError  	33	1	add
33	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(yDot,  0,  y,  0,  y.length);  System.arraycopy(yDot,  0,  y,  1,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(yDot,    0,    y,    0,    y.length);    System.arraycopy(yDot,  0,  y,  1,  y.length);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	33	3	add
34	[BUG]  [BUGGY]  System.arraycopy(yDot,  0,  y,  0,  y.length);  System.arraycopy(yDot,  0,  y,  1,  y.length);  [FE]  ArrayIndexOutOfBoundsException  [FE]      NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(yDot,  0,  y,  0,  y.length);  System.arraycopy(yDot,  0,  y,  1,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(yDot,    0,    y,    0,    y.length);    System.arraycopy(yDot,  0,  y,  1,  y.length);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	33	3	add
35	[BUG]  [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y.length);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y.length);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	17	None	add
36	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);	  	compilable	  [FE]  AssertionError  	17	1	add
37	[BUG]  [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);	  	compilable	  [FE]  AssertionError  	17	1	add
38	[BUG]  [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  y.length);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  y.length);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	17	None	add
39	[BUG]  [BUGGY]  System.arraycopy(currentEvent,  0,  yDot,  0,  currentEvent.length);  [CE]  cannot  find  symbol  length  [FE]              AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(currentEvent,  0,  yDot,  0,  currentEvent.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(currentEvent,  0,  yDot,  0,  currentEvent.length);	  System.arraycopy(y,    0,    yDot,    0,    currentEvent.length);    	non-compiled	[CE]  cannot  find  symbol  length	16	None	replace
40	[BUG]  [BUGGY]  System.arraycopy(eventState,  0,  yDot,  0,  currentEvent.length);  [CE]  cannot  find  symbol  eventState  [FE]                AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(eventState,  0,  yDot,  0,  currentEvent.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(eventState,  0,  yDot,  0,  currentEvent.length);	  System.arraycopy(y,    0,    yDot,    0,    currentEvent.length);    	non-compiled	[CE]  cannot  find  symbol  eventState	16	None	replace
41	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  y,  needReset);  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  yDot  =  computeDerivatives(eventT,  y,  needReset);  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  y,  needReset);	  yDot    =    computeDerivatives(eventT,    y,    stateInitialized);    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	28	None	replace
42	[BUG]  [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  y.length);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  y.length);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	5	None	add
43	[BUG]  [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y.length);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]      NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y.length);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	5	None	add
44	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]        NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);	  	compilable	  [FE]  NoBracketingException  	5	2	add
45	[BUG]  [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  [FE]  NoBracketingException  [FE]        NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);	  	compilable	  [FE]  NoBracketingException  	5	2	add
46	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  tEnd,  y.length);  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  yDot  =  computeDerivatives(eventT,  tEnd,  y.length);  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  tEnd,  y.length);	  yDot    =    computeDerivatives(eventT,    y.length,    tEnd);    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	29	None	replace
47	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  t0,  y.length,  tEnd);  [CE]  cannot  find  symbol  t0  [FE]                AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  yDot  =  computeDerivatives(eventT,  t0,  y.length,  tEnd);  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  t0,  y.length,  tEnd);	  yDot    =    computeDerivatives(eventT,    y.length,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t0	29	None	replace
48	[BUG]  [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  y.length);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  y.length);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	1	None	add
49	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]      NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);	  	compilable	  [FE]  NoBracketingException  	1	2	add
50	[BUG]  [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  [FE]  NoBracketingException  [FE]      NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);	  	compilable	  [FE]  NoBracketingException  	1	2	add
51	[BUG]  [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  yDot);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  yDot);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  yDot);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	1	None	add
52	[BUG]  [BUGGY]  System.arraycopy(y,  0,  yDot,  0,  yEnd);  [CE]  cannot  find  symbol  yEnd  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,  0,  yDot,  0,  yEnd);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,  0,  yDot,  0,  yEnd);	  System.arraycopy(y,    0,    yDot,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  yEnd	15	None	replace
53	[BUG]  [BUGGY]  System.arraycopy(y,  0,  yDot,  0,  currentY.length);  [CE]  cannot  find  symbol  currentY  [FE]      NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,  0,  yDot,  0,  currentY.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,  0,  yDot,  0,  currentY.length);	  System.arraycopy(y,    0,    yDot,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  currentY	15	None	replace
54	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,    0,    yDot,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);	  	compilable	  [FE]  AssertionError  	14	1	add
55	[BUG]  [BUGGY]  System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  [FE]  AssertionError  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,    0,    yDot,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);	  	compilable	  [FE]  AssertionError  	14	1	add
56	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(y,  0,  y,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    yDot.length);    System.arraycopy(y,  0,  y,  0,  yDot.length);	  	compilable	  [FE]  AssertionError  	19	1	add
57	[BUG]  [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(y,  0,  y,  0,  yDot.length);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(y,  0,  y,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    yDot.length);    System.arraycopy(y,  0,  y,  0,  yDot.length);	  	compilable	  [FE]  AssertionError  	19	1	add
58	[BUG]  [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(y,  0,  yDot.length);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(y,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    yDot.length);    System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(y,  0,  yDot.length);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	19	None	add
59	[BUG]  [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  yDot.length);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    yDot.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  yDot.length);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	19	None	add
60	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  tEnd,  y,  stateInitialized);  [CE]  cannot  find  symbol  stateInitialized  [FE]            AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  yDot  =  computeDerivatives(eventT,  tEnd,  y,  stateInitialized);  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  tEnd,  y,  stateInitialized);	  yDot    =    computeDerivatives(eventT,    tEnd,    y);    	non-compiled	[CE]  cannot  find  symbol  stateInitialized	12	None	replace
61	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  tEnd,  y,  state);  [CE]  cannot  find  symbol  state  [FE]              AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  yDot  =  computeDerivatives(eventT,  tEnd,  y,  state);  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  tEnd,  y,  state);	  yDot    =    computeDerivatives(eventT,    tEnd,    y);    	non-compiled	[CE]  cannot  find  symbol  state	12	None	replace
62	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(y,  0,  y,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,    0,    y,    0,    yDot.length);    System.arraycopy(y,  0,  y,  0,  yDot.length);	  	compilable	  [FE]  AssertionError  	23	1	add
63	[BUG]  [BUGGY]  System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(y,  0,  y,  0,  yDot.length);  [FE]  AssertionError  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(y,  0,  y,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,    0,    y,    0,    yDot.length);    System.arraycopy(y,  0,  y,  0,  yDot.length);	  	compilable	  [FE]  AssertionError  	23	1	add
64	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(y,  0,  yDot,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,    0,    y,    0,    yDot.length);    System.arraycopy(y,  0,  yDot,  0,  yDot.length);	  	compilable	  [FE]  AssertionError  	23	1	add
65	[BUG]  [BUGGY]  System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(y,  0,  yDot,  0,  yDot.length);  [FE]  AssertionError  [FE]      NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(y,  0,  yDot,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,    0,    y,    0,    yDot.length);    System.arraycopy(y,  0,  yDot,  0,  yDot.length);	  	compilable	  [FE]  AssertionError  	23	1	add
66	[BUG]  [BUGGY]  double  yDot  =  state.getY()  -  1;  [CE]  variable  yDot  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]                AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  double  yDot  =  state.getY()  -  1;  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	double  yDot  =  state.getY()  -  1;	  double    yDot    =    state.getY();    	non-compiled	[CE]  variable  yDot  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	37	None	replace
67	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);	  	compilable	  [FE]  NoBracketingException  	1	2	add
68	[BUG]  [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  [FE]  NoBracketingException  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);	  	compilable	  [FE]  NoBracketingException  	1	2	add
69	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);	  	compilable	  [FE]  NoBracketingException  	5	2	add
70	[BUG]  [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  [FE]  NoBracketingException  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);	  	compilable	  [FE]  NoBracketingException  	5	2	add
71	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]      NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);	  	compilable	  [FE]  NoBracketingException  	5	2	add
72	[BUG]  [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  [FE]  NoBracketingException  [FE]      NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);	  	compilable	  [FE]  NoBracketingException  	5	2	add
73	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(yDot,  0,  yDot,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,    0,    yDot,    0,    y.length);    System.arraycopy(yDot,  0,  yDot,  0,  y.length);	  	compilable	  [FE]  AssertionError  	14	1	add
74	[BUG]  [BUGGY]  System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(yDot,  0,  yDot,  0,  y.length);  [FE]  AssertionError  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(yDot,  0,  yDot,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,    0,    yDot,    0,    y.length);    System.arraycopy(yDot,  0,  yDot,  0,  y.length);	  	compilable	  [FE]  AssertionError  	14	1	add
75	[BUG]  [BUGGY]  Arrays.arraycopy(y,  0,  yDot,  0,  y.length);  [CE]  cannot  find  symbol  Arrays  [FE]    AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  Arrays.arraycopy(y,  0,  yDot,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	Arrays.arraycopy(y,  0,  yDot,  0,  y.length);	  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,    0,    yDot,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  Arrays	26	None	replace
76	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  eventY,  tEnd,  orderingSign);  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  yDot  =  computeDerivatives(eventT,  eventY,  tEnd,  orderingSign);  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  eventY,  tEnd,  orderingSign);	  yDot    =    computeDerivatives(eventT,    eventY,    tEnd);    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	13	None	replace
77	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  y,  state.initialized);  [CE]  cannot  find  symbol  state  [FE]            AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  yDot  =  computeDerivatives(eventT,  y,  state.initialized);  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  y,  state.initialized);	  yDot    =    computeDerivatives(eventT,    y,    stateInitialized);    	non-compiled	[CE]  cannot  find  symbol  state	28	None	replace
78	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  yDot.length);  System.arraycopy(y,  0,  eventY,  0,  yDot.length);  System.arraycopy(y,  0,  eventY,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    eventY,    0,    yDot.length);    System.arraycopy(y,  0,  eventY,  0,  yDot.length);  System.arraycopy(y,  0,  eventY,  0,  yDot.length);	  	compilable	  [FE]  NoBracketingException  	3	2	add
79	[BUG]  [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  yDot.length);  System.arraycopy(y,  0,  eventY,  0,  yDot.length);  System.arraycopy(y,  0,  eventY,  0,  yDot.length);  [FE]  NoBracketingException  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  yDot.length);  System.arraycopy(y,  0,  eventY,  0,  yDot.length);  System.arraycopy(y,  0,  eventY,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    eventY,    0,    yDot.length);    System.arraycopy(y,  0,  eventY,  0,  yDot.length);  System.arraycopy(y,  0,  eventY,  0,  yDot.length);	  	compilable	  [FE]  NoBracketingException  	3	2	add
80	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  y,  y.length);  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  yDot  =  computeDerivatives(eventT,  y,  y.length);  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  y,  y.length);	  yDot    =    computeDerivatives(eventT,    eventY,    y.length);    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	31	None	replace
81	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);	  	compilable	  [FE]  AssertionError  	17	1	add
82	[BUG]  [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);	  	compilable	  [FE]  AssertionError  	17	1	add
83	[BUG]  [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  yDot);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  yDot);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  yDot);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	17	None	add
84	[BUG]  [BUGGY]  System.arraycopy(eventsInitialized,  0,  yDot,  0,  currentEvent.length);  [CE]  cannot  find  symbol  eventsInitialized  [FE]              AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(eventsInitialized,  0,  yDot,  0,  currentEvent.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(eventsInitialized,  0,  yDot,  0,  currentEvent.length);	  System.arraycopy(y,    0,    yDot,    0,    currentEvent.length);    	non-compiled	[CE]  cannot  find  symbol  eventsInitialized	16	None	replace
85	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,  0,  eventY,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,  0,  eventY,  0,  yDot.length);	  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,    0,    eventY,    0,    yDot.length);    	compilable	  [FE]  NoBracketingException  	4	2	replace
86	[BUG]  [BUGGY]  System.arraycopy(y,  0,  eventY,  0,  yDot.length);  [FE]  NoBracketingException  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,  0,  eventY,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,  0,  eventY,  0,  yDot.length);	  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,    0,    eventY,    0,    yDot.length);    	compilable	  [FE]  NoBracketingException  	4	2	replace
87	[BUG]  [BUGGY]  int  yDot  =  currentEvent.getY()  +  1;  [CE]  variable  yDot  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]                  AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  int  yDot  =  currentEvent.getY()  +  1;  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	int  yDot  =  currentEvent.getY()  +  1;	  int    yDot    =    currentEvent.getY();    	non-compiled	[CE]  variable  yDot  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	22	None	replace
88	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    yDot,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);	  	compilable	  [FE]  AssertionError  	25	1	add
89	[BUG]  [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    yDot,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);	  	compilable	  [FE]  AssertionError  	25	1	add
90	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(yDot,  0,  y,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,    0,    y,    0,    yDot.length);    System.arraycopy(yDot,  0,  y,  0,  yDot.length);	  	compilable	  [FE]  AssertionError  	23	1	add
91	[BUG]  [BUGGY]  System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(yDot,  0,  y,  0,  yDot.length);  [FE]  AssertionError  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(yDot,  0,  y,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,    0,    y,    0,    yDot.length);    System.arraycopy(yDot,  0,  y,  0,  yDot.length);	  	compilable	  [FE]  AssertionError  	23	1	add
92	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(y,  0,  yDot,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    yDot.length);    System.arraycopy(y,  0,  yDot,  0,  yDot.length);	  	compilable	  [FE]  AssertionError  	19	1	add
93	[BUG]  [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(y,  0,  yDot,  0,  yDot.length);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(y,  0,  yDot,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    yDot.length);    System.arraycopy(y,  0,  yDot,  0,  yDot.length);	  	compilable	  [FE]  AssertionError  	19	1	add
94	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  y,  tEnd,  orderingSign);  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  yDot  =  computeDerivatives(eventT,  y,  tEnd,  orderingSign);  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  y,  tEnd,  orderingSign);	  yDot    =    computeDerivatives(eventT,    y,    tEnd);    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	9	None	replace
95	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  y,  tEnd,  orderSign);  [CE]  cannot  find  symbol  orderSign  [FE]                AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  yDot  =  computeDerivatives(eventT,  y,  tEnd,  orderSign);  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  y,  tEnd,  orderSign);	  yDot    =    computeDerivatives(eventT,    y,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  orderSign	9	None	replace
96	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  y.length,  tEnd,  orderingSign);  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  yDot  =  computeDerivatives(eventT,  y.length,  tEnd,  orderingSign);  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  y.length,  tEnd,  orderingSign);	  yDot    =    computeDerivatives(eventT,    y.length,    tEnd);    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	29	None	replace
97	[BUG]  [BUGGY]  System.arraycopy(y,  0,  yDot,  0,  currentT.length);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,  0,  yDot,  0,  currentT.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,  0,  yDot,  0,  currentT.length);	  System.arraycopy(y,    0,    currentY,    0,    yDot.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	27	None	replace
98	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  t0,  yDot);  [CE]  cannot  find  symbol  t0  [FE]            AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  yDot  =  computeDerivatives(eventT,  t0,  yDot);  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  t0,  yDot);	  yDot    =    computeDerivatives(eventT,    tEnd,    y);    	non-compiled	[CE]  cannot  find  symbol  t0	12	None	replace
99	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,  0,  yDot,  1,  y.length  -  1);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,  0,  yDot,  1,  y.length  -  1);	  System.arraycopy(y,    0,    yDot,    1,    y.length);    	compilable	  [FE]  NoBracketingException  	36	2	replace
100	[BUG]  [BUGGY]  System.arraycopy(y,  0,  yDot,  1,  y.length  -  1);  [FE]  NoBracketingException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,  0,  yDot,  1,  y.length  -  1);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,  0,  yDot,  1,  y.length  -  1);	  System.arraycopy(y,    0,    yDot,    1,    y.length);    	compilable	  [FE]  NoBracketingException  	36	2	replace
101	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  t0,  y.length);  [CE]  cannot  find  symbol  t0  [FE]              AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  yDot  =  computeDerivatives(eventT,  t0,  y.length);  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  t0,  y.length);	  yDot    =    computeDerivatives(eventT,    y.length,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t0	29	None	replace
102	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  t,  y.length);  [CE]  cannot  find  symbol  t  [FE]                AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  yDot  =  computeDerivatives(eventT,  t,  y.length);  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  t,  y.length);	  yDot    =    computeDerivatives(eventT,    y.length,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t	29	None	replace
103	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  eventY,  t0,  tEnd);  [CE]  cannot  find  symbol  t0  [FE]              AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  yDot  =  computeDerivatives(eventT,  eventY,  t0,  tEnd);  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  eventY,  t0,  tEnd);	  yDot    =    computeDerivatives(eventT,    eventY,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t0	13	None	replace
104	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);	  	compilable	  [FE]  NoBracketingException  	1	2	add
105	[BUG]  [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  [FE]  NoBracketingException  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);	  	compilable	  [FE]  NoBracketingException  	1	2	add
106	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);	  	compilable	  [FE]  NoBracketingException  	5	2	add
107	[BUG]  [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  [FE]  NoBracketingException  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  eventY,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);	  	compilable	  [FE]  NoBracketingException  	5	2	add
108	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]      NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);	  	compilable	  [FE]  NoBracketingException  	5	2	add
109	[BUG]  [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  [FE]  NoBracketingException  [FE]      NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);	  	compilable	  [FE]  NoBracketingException  	5	2	add
110	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]        NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);	  	compilable	  [FE]  NoBracketingException  	5	2	add
111	[BUG]  [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  [FE]  NoBracketingException  [FE]        NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    eventY,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        eventY,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);	  	compilable	  [FE]  NoBracketingException  	5	2	add
112	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);	  	compilable	  [FE]  AssertionError  	17	1	add
113	[BUG]  [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  y.length);	  	compilable	  [FE]  AssertionError  	17	1	add
114	[BUG]  [BUGGY]  [FE]  NoBracketingException  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(yDot,  0,  y,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(yDot,  0,  y,  0,  yDot.length);	  System.arraycopy(yDot,    0,    y,    0,    y.length);    	compilable	  [FE]  NoBracketingException  	34	2	replace
115	[BUG]  [BUGGY]  System.arraycopy(yDot,  0,  y,  0,  yDot.length);  [FE]  NoBracketingException  [FE]    NoBracketingException    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(yDot,  0,  y,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(yDot,  0,  y,  0,  yDot.length);	  System.arraycopy(yDot,    0,    y,    0,    y.length);    	compilable	  [FE]  NoBracketingException  	34	2	replace
116	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  t0,  yDot,  tEnd);  [CE]  cannot  find  symbol  t0  [FE]              AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  yDot  =  computeDerivatives(eventT,  t0,  yDot,  tEnd);  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  t0,  yDot,  tEnd);	  yDot    =    computeDerivatives(eventT,    y,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t0	9	None	replace
117	[BUG]  [BUGGY]  yDot  =  computeDerivatives(eventT,  y,  tEnd,  t0);  [CE]  cannot  find  symbol  t0  [FE]                AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  yDot  =  computeDerivatives(eventT,  y,  tEnd,  t0);  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	yDot  =  computeDerivatives(eventT,  y,  tEnd,  t0);	  yDot    =    computeDerivatives(eventT,    y,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t0	9	None	replace
118	[BUG]  [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  yDot,  0,  y.length);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  y,  0,  yDot,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    yDot,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  yDot,  0,  y.length);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	25	None	add
119	[BUG]  [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  yd,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  [CE]  cannot  find  symbol  yd  [FE]      AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  yDot,  0,  y.length);  System.arraycopy(y,  0,  yd,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    yDot,    0,    y.length);    System.arraycopy(y,  0,  yd,  0,  y.length);  System.arraycopy(y,  0,  yDot,  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  yd	25	None	add
120	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(yDot,  0,  y,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	add	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    yDot.length);    System.arraycopy(yDot,  0,  y,  0,  yDot.length);	  	compilable	  [FE]  AssertionError  	19	1	add
121	[BUG]  [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(yDot,  0,  y,  0,  yDot.length);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  System.arraycopy(y,    0,    y,    0,    y.length);    System.arraycopy(y,  0,  y,  0,  yDot.length);  System.arraycopy(yDot,  0,  y,  0,  yDot.length);  [BUGGY]      computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	System.arraycopy(y,        0,        y,        0,        y.length);        System.arraycopy(y,    0,    y,    0,    yDot.length);    System.arraycopy(yDot,  0,  y,  0,  yDot.length);	  	compilable	  [FE]  AssertionError  	19	1	add
122	[BUG]  [BUGGY]  double  yDot  =  state.getY()  +  1;  [CE]  variable  yDot  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]                AssertionError      [CONTEXT]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {        [BUGGY]  double  yDot  =  state.getY()  +  1;  [BUGGY]      System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);  resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	367	367	1	replace	double  yDot  =  state.getY()  +  1;	  int    yDot    =    state.getY()    +    1;    	non-compiled	[CE]  variable  yDot  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	30	None	replace
