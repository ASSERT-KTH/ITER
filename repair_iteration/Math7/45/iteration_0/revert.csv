projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305state.reinitializeBegin(interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305state.reinitializeBegin(previousT);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305EventState[]events=getEvents();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305for(EventStatestate:eventsStates){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305for(EventStatestate:eventsInitialized){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305for(EventStatestate:eventStates.values()){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>iterator=eventsStates.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>iterator=events.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305for(EventStatestate:currentT){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>eventsStates=this.events.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>eventsStates=this.eventsInitialized.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java305Iterator<EventState>eventsStates=events.iterator();
