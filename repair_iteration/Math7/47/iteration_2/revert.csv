projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312finalintorderingSign=interpolator.isForward()?+1:-1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312finalintorderingSign=interpolator.isForward()?1:-1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312finalintorderingSign=interpolator.isInitializing()?+1:-1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderSign=interpolator.isForward()?+1:-1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312Integer[]stepHandlers=getStepHandlers();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderSign=interpolator.isForward()?+1:1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312Iterator<EventState>iterator=eventsStates.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(!isLastStep){for(finalEventStatestate:eventsStates){state.reinitializeBegin(interpolator);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(!isLastStep){for(finalEventStatestate:eventsStates){state.reinitializeBegin(state);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(isLastStep){for(finalEventStatestate:eventsStates){state.reinitializeBegin(interpolator);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312Iterator<EventState>iterator=events.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312finalintorderingSign=interpolator.isForward()?1:-1;finalintorderingSign=interpolator.isForward()?1:-1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312finalintorderingSign=interpolator.isForward()?1:-1;intorderingSign=interpolator.isForward()?1:-1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312finalintorderingSign=state.isInitializing()?+1:-1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderingSign=state.reinitializeBegin(interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderingEvents=state.reinitializeBegin(interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderSign=interpolator.isForward()?+1:1;intorderSign=interpolator.isForward()?+1:1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderSign=interpolator.isForward()?+1:1;intorderSign=interpolator.isForward()?+1:1);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312Iterator<EventState>iterator=state.stepHandlers.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312Iterator<EventState>iterator=this.events.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderSign=interpolator.isInitializing()?+1:-1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312finalintorderingSign=interpolator.isForward()?1:0;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312finalintorderingSign=interpolator.isInitializing()?1:-1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312Integer[]stepHandlers=getStepHandlers().length;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderSign=interpolator.isInitializing()?+1:1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312Iterator<EventState>iterator=this.eventsInitialized.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(isLastStep){for(finalEventStatestate:eventsInitialized){state.reinitializeBegin(interpolator);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderSign=interpolator.isForward()?+1:-1;intorderSign=interpolator.isForward()?+1:-1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderSign=interpolator.isForward()?-1:-1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312Iterator<EventState>iterator=this.eventsStates.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(eventsStates!=null){if(!isLastStep){for(finalEventStatestate:eventsStates){state.reinitializeBegin(interpolator);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(eventsStates!=null){if(!isLastStep){for(finalEventStatestate:eventsStates){state.reinitializeBegin(interpolator);}}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(eventsInitialized){for(finalEventStatestate:eventsStates){state.reinitializeBegin(interpolator);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(eventsInitialized){for(finalEventStatestate:eventStates){state.reinitializeBegin(interpolator);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(isLastStep){for(finalEventStatestate:eventsStates){state.reinitializeBegin(state);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(isLastStep){for(finalEventStatestate:state.events){state.reinitializeBegin(interpolator);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(isLastStep){for(finalEventStatestate:state.reinitialized){state.reinitializeBegin(interpolator);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312Integer[]stepHandlers=getStepHandlers(state);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderSign=interpolator.isForward()?+1:-1;intorderSign=interface.isForward()?+1:-1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderSign=interpolator.isForward()?+1:1;intorderSign=interpolator.isForward()?+1:2;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(!isLastStep){for(finalEventStatestate:state.events){state.reinitializeBegin(interpolator);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(!isLastStep){for(finalEventStatestate:state.reinitialized){state.reinitializeBegin(interpolator);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderSign=interpolator.isForward()?-1:1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312Iterator<EventState>iterator=this.stepHandlers.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312finalintorderingSign=interpolator.isForward()?1:0;finalintorderingSign=interpolator.isForward()?1:0;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312finalintorderingSign=interpolator.isForward()?1:0;intorderingSign=interpolator.isForward()?1:0;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderSign=state.isInitializing()?+1:-1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312Integer[]stepHandlers=getStepHandlers(state.stepStart);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderingSign=interpolator.isForward()?1:-1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312Iterator<EventState>iterator=state.events.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(!isLastStep){finalEventStatestate=state.events();state.reinitializeBegin(interpolator);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(eventsInitialized){if(!isLastStep){for(finalEventStatestate:eventsStates){state.reinitializeBegin(interpolator);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(eventsInitialized){if(!isLastStep){for(finalEventStatestate:eventsStates){state.reinitializeBegin(interpolator);}}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(isLastStep){for(finalEventStatestate:interpolator.reinitialized){state.reinitializeBegin(interpolator);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderSign=interface.isForward()?+1:-1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312finalintorderingSign=interpolator.isInitializing()?1:0;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312Iterator<EventState>iterator=state.eventsInitialized.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderingSign=interpolator.reinitializeBegin(state);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(isLastStep){for(finalEventStatestate:eventStates){state.reinitializeBegin(interpolator);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderSign=state.isInitializing()?+1:1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312IntegerorderingSign=interpolator.isForward()?1:-1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312finalintorderingSign=state.isInitializing()?1:-1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderingEvents=interpolator.reinitializeBegin(state);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(isLastStep){for(finalEventStatestate:events){state.reinitializeBegin(interpolator);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(eventsInitialized){for(finalEventStatestate:eventsInitialized){state.reinitializeBegin(interpolator);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderSign=state.isForward()?-1:-1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderSign=interface.isForward()?-1:-1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312Iterator<EventState>iterator=state.eventsStates.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(eventsInitialized){for(finalEventStatestate:events){state.reinitializeBegin(interpolator);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(isLastStep){for(finalEventStatestate:state.reinitialized){state.reinitializeBegin(state);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312finalintorderingSign=state.isInitializing()?-1:-1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderingEvents=state.reinitializeBegin(eventSign);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(isLastStep){for(finalEventStatestate:eventsInitialized){state.reinitializeBegin(state);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312Integer[]stepHandlers=getStepHandlers(remainingEvents);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderSign=interpolator.isForward()?+1:2;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderSign=state.isForward()?-1:1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderingSign=interpolator.isForward()?-1:-1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(isLastStep){for(finalEventStatestate:state.getEventStates()){state.reinitializeBegin(interpolator);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderingSign=interpolator.isForward()?1:0;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(isLastStep){for(finalEventStatestate:state.events){state.reinitializeBegin(state);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderingSign=interpolator.isForward()?-1:1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312intorderingSign=state.isForward()?-1:1;
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(isLastStep){for(finalEventStatestate:state.getEvents()){state.reinitializeBegin(interpolator);}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java312if(isLastStep){for(finalEventStatestate:state.reinitialized){state.reinitializeEnd(interpolator);}
