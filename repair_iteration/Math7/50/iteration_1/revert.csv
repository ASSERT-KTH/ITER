projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329while(!occuringEvents.isEmpty()){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329while(!occurrences.isEmpty()){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329while(!eventsStates.isEmpty()){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329EventState[]eventSigns=state.evaluateSigns();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329EventState[]eventSigns=state.getSigns();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329EventState[]eventSigns=state.getEventSigns();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329finalintstepStart=state.evaluateStep(interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329finalintorderSign=state.evaluateStep(interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329finalintstepStart=state.getStepStart();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329while(!occurrencesStates.isEmpty()){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329intorderSign=state.evaluateStep(interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329finalintstepStart=getStep(currentEvent.getStep());
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329intorderHandler=state.evaluateStep(interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329finalintstepStart=currentEvent.getStepStart();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329while(!events.isEmpty()){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329finalintstepStart=interpolator.evaluateStep(state);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329intorderSign=interpolator.evaluateStep(state);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329finalintorderHandlers=state.getState().getOrderingSign();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329finalintorderHandlers=state.getState().getReturnSignals();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329finalintorderSign=interpolator.evaluateStep(state);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329while(!eventsStates.isEmpty()){finalIterator<EventState>iterator=eventsStates.iterator();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329while(!eventsStates.isEmpty()){while(!eventsStates.isEmpty()){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329while(!eventsStates.isEmpty()&&isLastStep){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329while(!eventsStates.isEmpty()&&state.evaluateStep(interpolator)){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329finalintstepStart=getStep(currentEvent.getStep(),orderingSign);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329EventState[]eventsSigns=state.evaluateSigns();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329EventState[]events=state.getEventSigns();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329EventState[]events=state.getSigns();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329intorderHandler=interpolator.evaluateStep(state);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329intorderHandler=state.evaluateStep(orderingSign);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329finalintorderSign=state.evaluateStep(orderingSign);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329EventState[]eventsSigns=state.getSigns();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329EventState[]eventsSigns=state.getEventSigns();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329finalintstepStart=getStep(interpolator.getStep());
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329finalintstepStart=state.getStepEnd();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329intorderSign=state.evaluateStep(interpolator,orderingSign);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329if(state.evaluateStep(interpolator)){finalEventState<EventState>stepHandler=state.evaluateStepHandler(interpolator);if(stepHandler!=null){continue;}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329if(state.evaluateStep(interpolator)){finalEventState<EventState>stepHandler=state.evaluateStepHandler(interpolator);if(stepHandler!=null){returnstepHandler;}
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329EventState[]events=state.evaluateSigns();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329finalintstepStart=getStep(currentEvent.getStep()-1);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329finalintstepStart=state.getStepStart()-1;
