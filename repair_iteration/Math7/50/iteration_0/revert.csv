projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329while(!occuringEvents.isEmpty()){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329while(!occurrences.isEmpty()){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329while(!eventsStates.isEmpty()){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329EventState[]eventSigns=state.evaluateSigns();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329EventState[]eventSigns=state.getSigns();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329EventState[]eventSigns=state.getEventSigns();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329finalintstepStart=state.evaluateStep(interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329finalintorderSign=state.evaluateStep(interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329finalintstepStart=state.getStepStart();
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329while(!occurrencesStates.isEmpty()){
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329intorderSign=state.evaluateStep(interpolator);
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329finalintstepStart=getStep(currentEvent.getStep());
projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java329intorderHandler=state.evaluateStep(interpolator);
