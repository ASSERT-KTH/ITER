bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();      [BUGGY]  currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  [BUGGY]    isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	add	currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);	  	compilable	  [FE]  AssertionError  	8	1	add
2	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();      [BUGGY]  currentEvent.stepAccepted(eventT,  y);  currentEvent.stepAccepted(eventT,  y);  [BUGGY]    isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventT,    y);    currentEvent.stepAccepted(eventT,  y);	  	compilable	  [FE]  AssertionError  	8	1	add
3	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventT,  y);  y  =  interpolator.getInterpolatedState().clone();  [CE]  final  parameter  y  may  not  be  assigned  [FE]      AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();      [BUGGY]  currentEvent.stepAccepted(eventT,  y);  y  =  interpolator.getInterpolatedState().clone();  [BUGGY]    isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventT,    y);    y  =  interpolator.getInterpolatedState().clone();	  	non-compiled	[CE]  final  parameter  y  may  not  be  assigned	8	None	add
4	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventT,  y);  state.stepAccepted(eventT,  y);  [CE]  cannot  find  symbol  state  [FE]        AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();      [BUGGY]  currentEvent.stepAccepted(eventT,  y);  state.stepAccepted(eventT,  y);  [BUGGY]    isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventT,    y);    state.stepAccepted(eventT,  y);	  	non-compiled	[CE]  cannot  find  symbol  state	8	None	add
5	[BUG]  [BUGGY]  EventState  currentEvent  =  eventY.clone();  [CE]  variable  currentEvent  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]        AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();      [BUGGY]  EventState  currentEvent  =  eventY.clone();  [BUGGY]    currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	EventState  currentEvent  =  eventY.clone();	      EventState    currentEvent    =    eventY.getEventState();    	non-compiled	[CE]  variable  currentEvent  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	7	None	replace
6	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventY,  y);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();      [BUGGY]  currentEvent.stepAccepted(eventY,  y);  [BUGGY]    isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventY,  y);	  currentEvent.stepAccepted(eventT,    y);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	9	None	replace
7	[BUG]  [BUGGY]  yDot  =  interpolator.getInterpolatedState().clone();  [CE]  final  parameter  yDot  may  not  be  assigned  [FE]          AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();      [BUGGY]  yDot  =  interpolator.getInterpolatedState().clone();  [BUGGY]    currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	yDot  =  interpolator.getInterpolatedState().clone();	      y    =    interpolator.getInterpolatedState().clone();    	non-compiled	[CE]  final  parameter  yDot  may  not  be  assigned	2	None	replace
8	[BUG]  [BUGGY]  eventY  =  y.clone();  [CE]  cannot  assign  a  value  to  final  variable  eventY  [FE]            AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();      [BUGGY]  eventY  =  y.clone();  [BUGGY]    currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	eventY  =  y.clone();	      eventY    =    eventY.clone();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  eventY	3	None	replace
9	[BUG]  [BUGGY]  eventY  =  currentEvent.clone();  [CE]  cannot  assign  a  value  to  final  variable  eventY  [FE]              AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();      [BUGGY]  eventY  =  currentEvent.clone();  [BUGGY]    currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	eventY  =  currentEvent.clone();	      eventY    =    eventY.clone();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  eventY	3	None	replace
10	[BUG]  [BUGGY]  currentEvent.stepAccept(eventY,  eventT,  tEnd);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();      [BUGGY]  currentEvent.stepAccept(eventY,  eventT,  tEnd);  [BUGGY]    isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccept(eventY,  eventT,  tEnd);	  currentEvent.stepAccept(eventY,    eventT);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
11	[BUG]  [BUGGY]  currentEvent.stepAccept(eventY,  y);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();      [BUGGY]  currentEvent.stepAccept(eventY,  y);  [BUGGY]    isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccept(eventY,  y);	  currentEvent.stepAccept(eventY,    eventT);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
12	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventY,  eventT,  tEnd);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();      [BUGGY]  currentEvent.stepAccepted(eventY,  eventT,  tEnd);  [BUGGY]    isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventY,  eventT,  tEnd);	  currentEvent.stepAccepted(eventY,    eventT);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	4	None	replace
13	[BUG]  [BUGGY]  final  double[]  eventY  =  interpolator.getState().clone();  [CE]  variable  eventY  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]        AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();      [BUGGY]  final  double[]  eventY  =  interpolator.getState().clone();  [BUGGY]    currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	final  double[]  eventY  =  interpolator.getState().clone();	      final    double[]    eventY    =    interpolator.getInterpolatedState().clone();    	non-compiled	[CE]  variable  eventY  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	1	None	replace
14	[BUG]  [BUGGY]  final  y  =  interpolator.getInterpolatedState().clone();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();      [BUGGY]  final  y  =  interpolator.getInterpolatedState().clone();  [BUGGY]    currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	final  y  =  interpolator.getInterpolatedState().clone();	      y    =    interpolator.getInterpolatedState().clone();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
15	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventT,  y);  y  =  currentEvent.stepAccepted(eventT,  y);  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();      [BUGGY]  currentEvent.stepAccepted(eventT,  y);  y  =  currentEvent.stepAccepted(eventT,  y);  [BUGGY]    isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventT,    y);    y  =  currentEvent.stepAccepted(eventT,  y);	  	non-compiled	[CE]  incompatible  types	8	None	add
16	[BUG]  [BUGGY]  final  double[]  eventY  =  interpolator.getInterpolatedState().getY();  [CE]  variable  eventY  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]        AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();      [BUGGY]  final  double[]  eventY  =  interpolator.getInterpolatedState().getY();  [BUGGY]    currentEvent.stepAccepted(eventT,  eventY);  isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	final  double[]  eventY  =  interpolator.getInterpolatedState().getY();	      final    double[]    eventY    =    interpolator.getInterpolatedState().clone();    	non-compiled	[CE]  variable  eventY  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	1	None	replace
17	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventY,  y,  eventT);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();      [BUGGY]  currentEvent.stepAccepted(eventY,  y,  eventT);  [BUGGY]    isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventY,  y,  eventT);	  currentEvent.stepAccepted(eventY,    eventT);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	4	None	replace
18	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventY,  eventT,  yDot);  [CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();      [BUGGY]  currentEvent.stepAccepted(eventY,  eventT,  yDot);  [BUGGY]    isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventY,  eventT,  yDot);	  currentEvent.stepAccepted(eventY,    eventT);    	non-compiled	[CE]  method  stepAccepted  in  class  EventState  cannot  be  applied  to  given  types;	4	None	replace
19	[BUG]  [BUGGY]  currentEvent.stepAccepted(eventT,  y);  eventT.stepAccepted(eventT,  y);  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();      [BUGGY]  currentEvent.stepAccepted(eventT,  y);  eventT.stepAccepted(eventT,  y);  [BUGGY]    isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccepted(eventT,    y);    eventT.stepAccepted(eventT,  y);	  	non-compiled	[CE]  double  cannot  be  dereferenced	8	None	add
20	[BUG]  [BUGGY]  currentEvent.stepAccept(eventY,  yDot);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      final  double  eventT  =  currentEvent.getEventTime();  interpolator.setSoftPreviousTime(previousT);  interpolator.setSoftCurrentTime(eventT);  interpolator.setInterpolatedTime(eventT);  final  double[]  eventY  =  interpolator.getInterpolatedState().clone();      [BUGGY]  currentEvent.stepAccept(eventY,  yDot);  [BUGGY]    isLastStep  =  currentEvent.stop();  for  (final  StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  isLastStep);  }  if  (isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	346	346	1	replace	currentEvent.stepAccept(eventY,  yDot);	  currentEvent.stepAccept(eventY,    eventT);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
