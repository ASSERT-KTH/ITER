bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
31	[BUG] [BUGGY] if (state.evaluateStep(interpolator)) { [FE] AssertionError [CONTEXT] SortedSet<EventState> occuringEvents = new TreeSet<EventState>(new Comparator<EventState>() {  public int compare(EventState es0, EventState es1) { return orderingSign * Double.compare(es0.getEventTime(), es1.getEventTime()); } }); for (final EventState state : eventsStates) { [BUGGY] if (state.evaluateStep(interpolator)) { [BUGGY]  occuringEvents.add(state); } } while (!occuringEvents.isEmpty()) {  final Iterator<EventState> iterator = occuringEvents.iterator(); final EventState currentEvent = iterator.next(); [CLASS] AbstractIntegrator 1 [METHOD] acceptStep [RETURN_TYPE] double  AbstractStepInterpolator interpolator final double[] y final double[] yDot final double tEnd [VARIABLES] ExpandableStatefulODE equations expandable expandableODE EventState currentEvent es0 es1 remaining state double convergence currentT eventT maxCheckInterval previousT stepSize stepStart t t0 tEnd Incrementor evaluations StepHandler handler String name SortedSet occuringEvents int orderingSign boolean isLastStep needReset resetOccurred stateInitialized statesInitialized double[] currentY eventY y yDot Iterator iterator Collection eventsStates stepHandlers AbstractStepInterpolator interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	323	323	1	replace	
32	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] SortedSet<EventState> occuringEvents = new TreeSet<EventState>(new Comparator<EventState>() {  public int compare(EventState es0, EventState es1) { return orderingSign * Double.compare(es0.getEventTime(), es1.getEventTime()); } }); for (final EventState state : eventsStates) { [BUGGY] [BUGGY] if (state.evaluateStep(interpolator)) {  occuringEvents.add(state); } } while (!occuringEvents.isEmpty()) {  final Iterator<EventState> iterator = occuringEvents.iterator(); final EventState currentEvent = iterator.next(); [CLASS] AbstractIntegrator 1 [METHOD] acceptStep [RETURN_TYPE] double  AbstractStepInterpolator interpolator final double[] y final double[] yDot final double tEnd [VARIABLES] ExpandableStatefulODE equations expandable expandableODE EventState currentEvent es0 es1 remaining state double convergence currentT eventT maxCheckInterval previousT stepSize stepStart t t0 tEnd Incrementor evaluations StepHandler handler String name SortedSet occuringEvents int orderingSign boolean isLastStep needReset resetOccurred stateInitialized statesInitialized double[] currentY eventY y yDot Iterator iterator Collection eventsStates stepHandlers AbstractStepInterpolator interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5	323	323	1	add	
