bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventY,  tEnd,  t);  }  [CE]  cannot  find  symbol  t  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventY,  tEnd,  t);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventY,  tEnd,  t);  }	  if(isLastStep)    {    System.arraycopy(eventY,    0,    y,    0,    yDot.length);    computeDerivatives(eventY,    tEnd,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  t	34	None	replace
2	[BUG]  [BUGGY]  state.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventY,  tEnd,  t);  [CE]  cannot  find  symbol  state  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventY,  tEnd,  t);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventY,  tEnd,  t);	  if(isLastStep)    {    System.arraycopy(eventY,    0,    y,    0,    yDot.length);    computeDerivatives(eventY,    tEnd,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  state	34	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ArrayStoreException    [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  yDot.length);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	add	System.arraycopy(eventY,  0,  y,  0,  yDot.length);	  System.arraycopy(eventT,    0,    y,    0,    yDot.length);    	compilable	  [FE]  AssertionError  	41	1	replace
4	[BUG]  [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  yDot.length);  [FE]  AssertionError  [FE]    ArrayStoreException    [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  yDot.length);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventY,  0,  y,  0,  yDot.length);	  System.arraycopy(eventT,    0,    y,    0,    yDot.length);    	compilable	  [FE]  AssertionError  	41	1	replace
5	[BUG]  [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd,  t0);  [CE]  cannot  find  symbol  state  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd,  t0);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd,  t0);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    tEnd,    t0);    }    	non-compiled	[CE]  cannot  find  symbol  state	8	None	replace
6	[BUG]  [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tStart,  tEnd);  [CE]  cannot  find  symbol  tStart  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tStart,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tStart,  tEnd);	  System.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    tStart,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  tStart	15	None	replace
7	[BUG]  [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  eventT.length);  computeDerivatives(eventT,  tStart,  tEnd);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  eventT.length);  computeDerivatives(eventT,  tStart,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventY,  0,  y,  0,  eventT.length);  computeDerivatives(eventT,  tStart,  tEnd);	  System.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    tStart,    tEnd);    	non-compiled	[CE]  double  cannot  be  dereferenced	15	None	replace
8	[BUG]  [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd,  t0);  [CE]  cannot  find  symbol  t0  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd,  t0);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd,  t0);	  System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    t,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t0	25	None	replace
9	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd,  t);  }  [CE]  cannot  find  symbol  t  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd,  t);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd,  t);  }	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    tEnd,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  t	36	None	replace
10	[BUG]  [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd,  yDot);  [CE]  cannot  find  symbol  state  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd,  yDot);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd,  yDot);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    tEnd,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  state	36	None	replace
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  resetOccurred  =  true;  resetOccurred  =  true;  [BUGGY]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	add	resetOccurred  =  true;  resetOccurred  =  true;	  resetOccurred    =    false;    resetOccurred    =    false;    	compilable	  [FE]  AssertionError  	4	1	replace
12	[BUG]  [BUGGY]  resetOccurred  =  true;  resetOccurred  =  true;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  resetOccurred  =  true;  resetOccurred  =  true;  [BUGGY]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	resetOccurred  =  true;  resetOccurred  =  true;	  resetOccurred    =    false;    resetOccurred    =    false;    	compilable	  [FE]  AssertionError  	4	1	replace
13	[BUG]  [BUGGY]  state.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventY,  yDot,  tEnd);  [CE]  cannot  find  symbol  state  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventY,  yDot,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventY,  yDot,  tEnd);	  state.arraycopy(eventY,    0,    y,    0,    y.length);    computeDerivatives(eventY,    y,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  state	1	None	replace
14	[BUG]  [BUGGY]  state.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventY,  y,  tEnd);  [CE]  cannot  find  symbol  state  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventY,  y,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventY,  y,  tEnd);	  state.arraycopy(eventY,    0,    y,    0,    y.length);    computeDerivatives(eventY,    y,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  state	1	None	replace
15	[BUG]  [BUGGY]  if(isLastStep)  {  resetOccurred  =  false;  }  else  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  tEnd);  }  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  resetOccurred  =  false;  }  else  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  tEnd);  }  [BUGGY]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  resetOccurred  =  false;  }  else  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  tEnd);  }	  resetOccurred    =    false;    if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    y,    tEnd);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	35	None	replace
16	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  orderingSign);  }  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  orderingSign);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  orderingSign);  }	  if(isLastStep)    {    System.arraycopy(eventY,    0,    y,    0,    y.length);    computeDerivatives(eventT,    y,    tEnd,    orderingSign);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	17	None	replace
17	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t,  tEnd,  orderingSign);  }  [CE]  cannot  find  symbol  t  [FE]                  AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t,  tEnd,  orderingSign);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t,  tEnd,  orderingSign);  }	  if(isLastStep)    {    System.arraycopy(eventY,    0,    y,    0,    y.length);    computeDerivatives(eventT,    y,    tEnd,    orderingSign);    }    	non-compiled	[CE]  cannot  find  symbol  t	17	None	replace
18	[BUG]  [BUGGY]  if(isLastStep)  {  resetOccurred  =  false;  }  else  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventY,  y,  tEnd);  }  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  resetOccurred  =  false;  }  else  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventY,  y,  tEnd);  }  [BUGGY]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  resetOccurred  =  false;  }  else  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventY,  y,  tEnd);  }	  resetOccurred    =    false;    if(isLastStep)    {    System.arraycopy(eventY,    0,    y,    0,    y.length);    computeDerivatives(eventY,    y,    tEnd);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	27	None	replace
19	[BUG]  [BUGGY]  state.arraycopy(eventY,  0,  y,  0,  eventT.length);  computeDerivatives(eventY,  tDot,  tEnd);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventY,  0,  y,  0,  eventT.length);  computeDerivatives(eventY,  tDot,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventY,  0,  y,  0,  eventT.length);  computeDerivatives(eventY,  tDot,  tEnd);	  if(isLastStep)    {    System.arraycopy(eventY,    0,    y,    0,    y.length);    computeDerivatives(eventY,    tDot,    tEnd);    }    	non-compiled	[CE]  double  cannot  be  dereferenced	2	None	replace
20	[BUG]  [BUGGY]  state.arraycopy(eventY,  0,  y,  0,  eventY.length);  computeDerivatives(eventY,  tDot,  tEnd);  [CE]  cannot  find  symbol  state  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventY,  0,  y,  0,  eventY.length);  computeDerivatives(eventY,  tDot,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventY,  0,  y,  0,  eventY.length);  computeDerivatives(eventY,  tDot,  tEnd);	  if(isLastStep)    {    System.arraycopy(eventY,    0,    y,    0,    y.length);    computeDerivatives(eventY,    tDot,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  state	2	None	replace
21	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tEnd,  orderingSign);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tEnd,  orderingSign);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  tEnd,  orderingSign);	  System.arraycopy(eventT,    0,    y,    0,    tEnd);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	24	None	replace
22	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tEnd,  orderSign);  [CE]  cannot  find  symbol  orderSign  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tEnd,  orderSign);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  tEnd,  orderSign);	  System.arraycopy(eventT,    0,    y,    0,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  orderSign	24	None	replace
23	[BUG]  [BUGGY]  if(isLastStep)  {  resetOccurred  =  false;  for(final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  resetOccurred  =  false;  for(final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  [BUGGY]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  resetOccurred  =  false;  for(final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }	  resetOccurred    =    false;    if(isLastStep)    {    for(final    EventState    remaining    :    occuringEvents)    {    remaining.stepAccepted(eventT,    eventY);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
24	[BUG]  [BUGGY]  if(isLastStep)  {  resetOccurred  =  true;  for(final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  resetOccurred  =  true;  for(final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  [BUGGY]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  resetOccurred  =  true;  for(final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }	  resetOccurred    =    false;    if(isLastStep)    {    for(final    EventState    remaining    :    occuringEvents)    {    remaining.stepAccepted(eventT,    eventY);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
25	[BUG]  [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  tEnd.length);  computeDerivatives(eventT,  y,  tEnd);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  tEnd.length);  computeDerivatives(eventT,  y,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventT,  0,  y,  0,  tEnd.length);  computeDerivatives(eventT,  y,  tEnd);	  state.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    y,    tEnd);    	non-compiled	[CE]  double  cannot  be  dereferenced	12	None	replace
26	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  yDot,  0,  tEnd,  orderSign);  [CE]  cannot  find  symbol  orderSign  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  yDot,  0,  tEnd,  orderSign);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  yDot,  0,  tEnd,  orderSign);	  System.arraycopy(eventT,    0,    yDot,    0,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  orderSign	26	None	replace
27	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  yDot,  0,  tEnd,  orderingSign);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  yDot,  0,  tEnd,  orderingSign);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  yDot,  0,  tEnd,  orderingSign);	  System.arraycopy(eventT,    0,    yDot,    0,    tEnd);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	26	None	replace
28	[BUG]  [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  yDot);  [CE]  cannot  find  symbol  state  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  yDot);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  yDot);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    tEnd,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  state	39	None	replace
29	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  t);  }  [CE]  cannot  find  symbol  t  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  t);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  t);  }	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    tEnd,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  t	39	None	replace
30	[BUG]  [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  eventT);  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  eventT);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  eventT);	  System.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    tEnd,    eventY);    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	14	None	replace
31	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  eventY,  orderingSign);  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  eventY,  orderingSign);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  eventY,  orderingSign);	  System.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    tEnd,    eventY);    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	14	None	replace
32	[BUG]  [BUGGY]  if(isLastStep)  {  resetOccurred  =  false;  }  else  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  tEnd);  }  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  resetOccurred  =  false;  }  else  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  tEnd);  }  [BUGGY]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  resetOccurred  =  false;  }  else  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  tEnd);  }	  resetOccurred    =    false;    if(isLastStep)    {    System.arraycopy(eventY,    0,    y,    0,    y.length);    computeDerivatives(eventT,    y,    tEnd);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	28	None	replace
33	[BUG]  [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  y,  isLastStep);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  y,  isLastStep);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventT,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  y,  isLastStep);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventY,    y,    currentT);    }    	non-compiled	[CE]  double  cannot  be  dereferenced	42	None	replace
34	[BUG]  [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  orderingSign);  [CE]  cannot  find  symbol  state  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  orderingSign);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  orderingSign);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    tEnd,    orderingSign);    }    	non-compiled	[CE]  cannot  find  symbol  state	18	None	replace
35	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  orderingSign);  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  orderingSign);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  orderingSign);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    tEnd,    orderingSign);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	18	None	replace
36	[BUG]  [BUGGY]  state.arraycopy(eventY,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  yDot,  isLastStep);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventY,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  yDot,  isLastStep);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventY,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  yDot,  isLastStep);	  state.arraycopy(eventY,    0,    y,    0,    currentT.length);    computeDerivatives(eventY,    y,    isLastStep);    	non-compiled	[CE]  double  cannot  be  dereferenced	13	None	replace
37	[BUG]  [BUGGY]  state.arraycopy(currentT,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  y,  isLastStep);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(currentT,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  y,  isLastStep);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(currentT,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  y,  isLastStep);	  state.arraycopy(eventY,    0,    y,    0,    currentT.length);    computeDerivatives(eventY,    y,    isLastStep);    	non-compiled	[CE]  double  cannot  be  dereferenced	13	None	replace
38	[BUG]  [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t1,  y,  tEnd);  [CE]  cannot  find  symbol  state  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t1,  y,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t1,  y,  tEnd);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    t0,    y,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  state	38	None	replace
39	[BUG]  [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd,  t0,  isLastStep);  [CE]  cannot  find  symbol  state  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd,  t0,  isLastStep);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd,  t0,  isLastStep);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    t0,    y,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  state	38	None	replace
40	[BUG]  [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd,  tEnd);  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd,  tEnd);	  System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    tEnd,    t0);    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	9	None	replace
41	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	add	System.arraycopy(eventT,    0,    y,    0,    yDot.length);    System.arraycopy(eventT,  0,  y,  0,  yDot.length);	  	compilable	  [FE]  ArrayStoreException  	40	3	add
42	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,    0,    y,    0,    yDot.length);    System.arraycopy(eventT,  0,  y,  0,  yDot.length);	  	compilable	  [FE]  ArrayStoreException  	40	3	add
43	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  System.arraycopy(eventT,  0,  yDot,  0,  yDot.length);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	add	System.arraycopy(eventT,    0,    y,    0,    yDot.length);    System.arraycopy(eventT,  0,  yDot,  0,  yDot.length);	  	compilable	  [FE]  ArrayStoreException  	40	3	add
44	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  System.arraycopy(eventT,  0,  yDot,  0,  yDot.length);  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  System.arraycopy(eventT,  0,  yDot,  0,  yDot.length);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,    0,    y,    0,    yDot.length);    System.arraycopy(eventT,  0,  yDot,  0,  yDot.length);	  	compilable	  [FE]  ArrayStoreException  	40	3	add
45	[BUG]  [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  eventY);  [CE]  cannot  find  symbol  state  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  eventY);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  eventY);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    tEnd,    eventY);    }    	non-compiled	[CE]  cannot  find  symbol  state	32	None	replace
46	[BUG]  [BUGGY]  if(isLastStep)  {  resetOccurred  =  false;  for(final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  previousT);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  resetOccurred  =  false;  for(final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  previousT);  }  [BUGGY]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  resetOccurred  =  false;  for(final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  previousT);  }	  resetOccurred    =    false;    if(isLastStep)    {    for(final    EventState    remaining    :    occuringEvents)    {    remaining.stepAccepted(eventT,    previousT);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
47	[BUG]  [BUGGY]  if(isLastStep)  {  resetOccurred  =  true;  for(final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  previousT);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  resetOccurred  =  true;  for(final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  previousT);  }  [BUGGY]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  resetOccurred  =  true;  for(final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  previousT);  }	  resetOccurred    =    false;    if(isLastStep)    {    for(final    EventState    remaining    :    occuringEvents)    {    remaining.stepAccepted(eventT,    previousT);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
48	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  resetOccurred    =    false;    resetOccurred  =  false;  resetOccurred  =  false;  resetOccurred  =  false;  [BUGGY]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	add	resetOccurred        =        false;        resetOccurred    =    false;    resetOccurred  =  false;  resetOccurred  =  false;	  	compilable	  [FE]  AssertionError  	3	1	add
49	[BUG]  [BUGGY]  resetOccurred    =    false;    resetOccurred  =  false;  resetOccurred  =  false;  resetOccurred  =  false;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  resetOccurred    =    false;    resetOccurred  =  false;  resetOccurred  =  false;  resetOccurred  =  false;  [BUGGY]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	resetOccurred        =        false;        resetOccurred    =    false;    resetOccurred  =  false;  resetOccurred  =  false;	  	compilable	  [FE]  AssertionError  	3	1	add
50	[BUG]  [BUGGY]  resetOccurred    =    false;    resetOccurred  =  false;  if(isLastStep)  {  for(final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  resetOccurred    =    false;    resetOccurred  =  false;  if(isLastStep)  {  for(final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  [BUGGY]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	resetOccurred        =        false;        resetOccurred    =    false;    if(isLastStep)  {  for(final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
51	[BUG]  [BUGGY]  resetOccurred    =    false;    resetOccurred  =  false;  if(isLastStep)  {  for(final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  previousT);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  resetOccurred    =    false;    resetOccurred  =  false;  if(isLastStep)  {  for(final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  previousT);  }  [BUGGY]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	resetOccurred        =        false;        resetOccurred    =    false;    if(isLastStep)  {  for(final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  previousT);  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
52	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  y,  yDot);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  y,  yDot);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  y,  yDot);	  System.arraycopy(eventT,    0,    y,    0,    tEnd);    computeDerivatives(eventT,    y,    isLastStep);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	21	None	replace
53	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  y,  yDot,  isLastStep);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  y,  yDot,  isLastStep);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  y,  yDot,  isLastStep);	  System.arraycopy(eventT,    0,    y,    0,    tEnd);    computeDerivatives(eventT,    y,    isLastStep);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	21	None	replace
54	[BUG]  [BUGGY]  state.arraycopy(eventS,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  tEnd);  [CE]  cannot  find  symbol  eventS  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventS,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventS,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  tEnd);	  state.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    y,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  eventS	7	None	replace
55	[BUG]  [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  t0,  yDot,  tEnd);  [CE]  cannot  find  symbol  state  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  t0,  yDot,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  t0,  yDot,  tEnd);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    t0,    yDot,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  state	31	None	replace
56	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  t0);  [CE]  cannot  find  symbol  t0  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  t0);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  t0);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    t0,    yDot,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  t0	31	None	replace
57	[BUG]  [BUGGY]  System.arraycopy(currentT,  0,  y,  0,  eventY.length);  computeDerivatives(eventY,  y,  isLastStep);  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(currentT,  0,  y,  0,  eventY.length);  computeDerivatives(eventY,  y,  isLastStep);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(currentT,  0,  y,  0,  eventY.length);  computeDerivatives(eventY,  y,  isLastStep);	  System.arraycopy(eventY,    0,    y,    0,    currentT.length);    computeDerivatives(eventY,    y,    isLastStep);    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	22	None	replace
58	[BUG]  [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  yDot,  isLastStep);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  yDot,  isLastStep);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventY,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  yDot,  isLastStep);	  System.arraycopy(eventY,    0,    y,    0,    currentT.length);    computeDerivatives(eventY,    y,    isLastStep);    	non-compiled	[CE]  double  cannot  be  dereferenced	22	None	replace
59	[BUG]  [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t0,  yDot,  tEnd);  [CE]  cannot  find  symbol  state  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t0,  yDot,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t0,  yDot,  tEnd);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    t1,    yDot,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  state	37	None	replace
60	[BUG]  [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t1,  yDot,  tEnd);  [CE]  cannot  find  symbol  state  [FE]                  AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t1,  yDot,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t1,  yDot,  tEnd);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    t1,    yDot,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  state	37	None	replace
61	[BUG]  [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventY,  y,  tEnd);  [CE]  cannot  find  symbol  state  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventY,  y,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventY,  y,  tEnd);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventY,    y,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  state	33	None	replace
62	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventY,  tDot,  tEnd);  }  [CE]  cannot  find  symbol  tDot  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventY,  tDot,  tEnd);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventY,  tDot,  tEnd);  }	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventY,    y,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  tDot	33	None	replace
63	[BUG]  [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventY,  tDot,  tEnd);  [CE]  cannot  find  symbol  tDot  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventY,  tDot,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventY,  tDot,  tEnd);	  System.arraycopy(eventY,    0,    y,    0,    y.length);    computeDerivatives(eventY,    y,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  tDot	20	None	replace
64	[BUG]  [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  tEnd);  computeDerivatives(eventY,  y,  tEnd);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  tEnd);  computeDerivatives(eventY,  y,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventY,  0,  y,  0,  tEnd);  computeDerivatives(eventY,  y,  tEnd);	  System.arraycopy(eventY,    0,    y,    0,    y.length);    computeDerivatives(eventY,    y,    tEnd);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	20	None	replace
65	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  y,  tEnd);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  y,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  y,  tEnd);	  System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    y,    tEnd);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	29	None	replace
66	[BUG]  [BUGGY]  state.arraycopy(eventY,  0,  yDot,  0,  tEnd.length);  computeDerivatives(eventT,  y,  tEnd);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventY,  0,  yDot,  0,  tEnd.length);  computeDerivatives(eventT,  y,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventY,  0,  yDot,  0,  tEnd.length);  computeDerivatives(eventT,  y,  tEnd);	  state.arraycopy(eventY,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    y,    tEnd);    	non-compiled	[CE]  double  cannot  be  dereferenced	11	None	replace
67	[BUG]  [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  tEnd);  computeDerivatives(eventY,  yDot,  isLastStep);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  tEnd);  computeDerivatives(eventY,  yDot,  isLastStep);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventY,  0,  y,  0,  tEnd);  computeDerivatives(eventY,  yDot,  isLastStep);	  System.arraycopy(eventY,    0,    y,    0,    tEnd);    computeDerivatives(eventY,    y,    isLastStep);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	19	None	replace
68	[BUG]  [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  tEnd);  computeDerivatives(eventY,  y,  tDot);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  tEnd);  computeDerivatives(eventY,  y,  tDot);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventY,  0,  y,  0,  tEnd);  computeDerivatives(eventY,  y,  tDot);	  System.arraycopy(eventY,    0,    y,    0,    tEnd);    computeDerivatives(eventY,    y,    isLastStep);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	19	None	replace
69	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t0,  tEnd);  [CE]  cannot  find  symbol  t0  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t0,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t0,  tEnd);	  System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    tStart,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t0	10	None	replace
70	[BUG]  [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd);  [CE]  cannot  find  symbol  state  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    t,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  state	30	None	replace
71	[BUG]  [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  eventT.length);  computeDerivatives(eventT,  tEnd);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  eventT.length);  computeDerivatives(eventT,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventT,  0,  y,  0,  eventT.length);  computeDerivatives(eventT,  tEnd);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    t,    tEnd);    }    	non-compiled	[CE]  double  cannot  be  dereferenced	30	None	replace
72	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventY,  y,  isLastStep);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventY,  y,  isLastStep);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventY,  y,  isLastStep);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventY,    y,    tEnd);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	33	None	replace
73	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length  -  1);  computeDerivatives(eventT,  tEnd,  yDot);  }  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length  -  1);  computeDerivatives(eventT,  tEnd,  yDot);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length  -  1);  computeDerivatives(eventT,  tEnd,  yDot);  }	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    tEnd,    yDot);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	39	None	replace
74	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  yDot);  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  yDot);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  yDot);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    tEnd,    yDot);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	39	None	replace
75	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  tEnd,  yDot);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  tEnd,  yDot);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  tEnd,  yDot);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    tEnd,    yDot);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	36	None	replace
76	[BUG]  [BUGGY]  if(orderingSign)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  isLastStep);  }  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(orderingSign)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  isLastStep);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(orderingSign)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  isLastStep);  }	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    tEnd,    orderingSign);    }    	non-compiled	[CE]  incompatible  types	18	None	replace
77	[BUG]  [BUGGY]  if(orderingSign)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  orderStep);  }  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(orderingSign)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  orderStep);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(orderingSign)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  orderStep);  }	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    tEnd,    orderingSign);    }    	non-compiled	[CE]  incompatible  types	18	None	replace
78	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tEnd,  t0);  [CE]  cannot  find  symbol  t0  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tEnd,  t0);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  tEnd,  t0);	  System.arraycopy(eventT,    0,    y,    0,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t0	24	None	replace
79	[BUG]  [BUGGY]  System.arraycopy(currentT,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  y,  isLastStep);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(currentT,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  y,  isLastStep);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(currentT,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  y,  isLastStep);	  if(isLastStep)    {    System.arraycopy(eventY,    0,    y,    0,    currentT.length);    computeDerivatives(eventY,    y,    isLastStep);    }    	non-compiled	[CE]  double  cannot  be  dereferenced	23	None	replace
80	[BUG]  [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  t,  tEnd);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  t,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventY,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  t,  tEnd);	  System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    t,    tEnd);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	25	None	replace
81	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  t,  tEnd);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  t,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  t,  tEnd);	  System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    t,    tEnd);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	25	None	replace
82	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventY,  0,  yDot,  0,  tEnd.length);  computeDerivatives(eventY,  tEnd,  yDot);  }  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventY,  0,  yDot,  0,  tEnd.length);  computeDerivatives(eventY,  tEnd,  yDot);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventY,  0,  yDot,  0,  tEnd.length);  computeDerivatives(eventY,  tEnd,  yDot);  }	  if(isLastStep)    {    System.arraycopy(eventY,    0,    y,    0,    yDot.length);    computeDerivatives(eventY,    tEnd,    yDot);    }    	non-compiled	[CE]  double  cannot  be  dereferenced	34	None	replace
83	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tEnd,  order);  computeDerivatives(eventT,  y,  isLastStep);  [CE]  cannot  find  symbol  order  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tEnd,  order);  computeDerivatives(eventT,  y,  isLastStep);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  tEnd,  order);  computeDerivatives(eventT,  y,  isLastStep);	  System.arraycopy(eventT,    0,    y,    0,    tEnd);    computeDerivatives(eventT,    y,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  order	21	None	replace
84	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  1,  tEnd);  computeDerivatives(eventT,  y,  isLastStep,  orderingSign);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  1,  tEnd);  computeDerivatives(eventT,  y,  isLastStep,  orderingSign);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  1,  tEnd);  computeDerivatives(eventT,  y,  isLastStep,  orderingSign);	  System.arraycopy(eventT,    0,    y,    0,    tEnd);    computeDerivatives(eventT,    y,    isLastStep);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	21	None	replace
85	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yEnd);  computeDerivatives(eventT,  t,  isLastStep);  [CE]  cannot  find  symbol  yEnd  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yEnd);  computeDerivatives(eventT,  t,  isLastStep);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  yEnd);  computeDerivatives(eventT,  t,  isLastStep);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    t,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  yEnd	30	None	replace
86	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yEnd);  computeDerivatives(eventT,  t,  tEnd);  [CE]  cannot  find  symbol  yEnd  [FE]                  AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yEnd);  computeDerivatives(eventT,  t,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  yEnd);  computeDerivatives(eventT,  t,  tEnd);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    t,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  yEnd	30	None	replace
87	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  resetOccurred    =    false;    resetOccurred  =  false;  if(resetOccurred)  {  resetOccurred  =  false;  resetOccurred  =  false;  resetOccurred  =  false;  }  [BUGGY]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	add	resetOccurred        =        false;        resetOccurred    =    false;    if(resetOccurred)  {  resetOccurred  =  false;  resetOccurred  =  false;  resetOccurred  =  false;  }	  	compilable	  [FE]  AssertionError  	3	1	add
88	[BUG]  [BUGGY]  resetOccurred    =    false;    resetOccurred  =  false;  if(resetOccurred)  {  resetOccurred  =  false;  resetOccurred  =  false;  resetOccurred  =  false;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  resetOccurred    =    false;    resetOccurred  =  false;  if(resetOccurred)  {  resetOccurred  =  false;  resetOccurred  =  false;  resetOccurred  =  false;  }  [BUGGY]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	resetOccurred        =        false;        resetOccurred    =    false;    if(resetOccurred)  {  resetOccurred  =  false;  resetOccurred  =  false;  resetOccurred  =  false;  }	  	compilable	  [FE]  AssertionError  	3	1	add
89	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  resetOccurred    =    false;    resetOccurred  =  false;  if(resetOccurred)  {  resetOccurred  =  false;  resetOccurred  =  false;  }  [BUGGY]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	add	resetOccurred        =        false;        resetOccurred    =    false;    if(resetOccurred)  {  resetOccurred  =  false;  resetOccurred  =  false;  }	  	compilable	  [FE]  AssertionError  	3	1	add
90	[BUG]  [BUGGY]  resetOccurred    =    false;    resetOccurred  =  false;  if(resetOccurred)  {  resetOccurred  =  false;  resetOccurred  =  false;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  resetOccurred    =    false;    resetOccurred  =  false;  if(resetOccurred)  {  resetOccurred  =  false;  resetOccurred  =  false;  }  [BUGGY]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	resetOccurred        =        false;        resetOccurred    =    false;    if(resetOccurred)  {  resetOccurred  =  false;  resetOccurred  =  false;  }	  	compilable	  [FE]  AssertionError  	3	1	add
91	[BUG]  [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  tEnd);  computeDerivatives(eventY,  y,  isLastStep,  orderingSign);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  tEnd);  computeDerivatives(eventY,  y,  isLastStep,  orderingSign);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventY,  0,  y,  0,  tEnd);  computeDerivatives(eventY,  y,  isLastStep,  orderingSign);	  System.arraycopy(eventY,    0,    y,    0,    tEnd);    computeDerivatives(eventY,    y,    isLastStep);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	19	None	replace
92	[BUG]  [BUGGY]  System.arraycopy(eventY,  0,  y,  1,  tEnd);  computeDerivatives(eventY,  y,  isLastStep);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  y,  1,  tEnd);  computeDerivatives(eventY,  y,  isLastStep);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventY,  0,  y,  1,  tEnd);  computeDerivatives(eventY,  y,  isLastStep);	  System.arraycopy(eventY,    0,    y,    0,    tEnd);    computeDerivatives(eventY,    y,    isLastStep);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	19	None	replace
93	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  yDot,  0,  eventT.length);  computeDerivatives(eventT,  tEnd,  eventY);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  yDot,  0,  eventT.length);  computeDerivatives(eventT,  tEnd,  eventY);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  yDot,  0,  eventT.length);  computeDerivatives(eventT,  tEnd,  eventY);	  System.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    tEnd,    eventY);    	non-compiled	[CE]  double  cannot  be  dereferenced	14	None	replace
94	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tEnd.length);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tEnd.length);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  tEnd.length);	  System.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    tEnd,    eventY);    	non-compiled	[CE]  double  cannot  be  dereferenced	14	None	replace
95	[BUG]  [BUGGY]  System.arraycopy(eventY,  0,  yDot,  0,  eventT.length);  computeDerivatives(eventT,  tStart,  tEnd);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  yDot,  0,  eventT.length);  computeDerivatives(eventT,  tStart,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventY,  0,  yDot,  0,  eventT.length);  computeDerivatives(eventT,  tStart,  tEnd);	  System.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    tStart,    tEnd);    	non-compiled	[CE]  double  cannot  be  dereferenced	15	None	replace
96	[BUG]  [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  eventY.length);  computeDerivatives(eventT,  tStart,  tEnd);  [CE]  cannot  find  symbol  tStart  [FE]                  AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  eventY.length);  computeDerivatives(eventT,  tStart,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventY,  0,  y,  0,  eventY.length);  computeDerivatives(eventT,  tStart,  tEnd);	  System.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    tStart,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  tStart	15	None	replace
97	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  y,  isLastStep);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  y,  isLastStep);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  y,  isLastStep);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventY,    y,    currentT);    }    	non-compiled	[CE]  double  cannot  be  dereferenced	42	None	replace
98	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  y,  isLastStep);  }  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  y,  isLastStep);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  y,  isLastStep);  }	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventY,    y,    currentT);    }    	non-compiled	[CE]  double  cannot  be  dereferenced	42	None	replace
99	[BUG]  [BUGGY]  reset  =  true;  resetOccurred  =  true;  [CE]  cannot  find  symbol  reset  [FE]    AssertionError    [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  reset  =  true;  resetOccurred  =  true;  [BUGGY]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	reset  =  true;  resetOccurred  =  true;	  resetOccurred    =    false;    resetOccurred    =    false;    	non-compiled	[CE]  cannot  find  symbol  reset	4	None	replace
100	[BUG]  [BUGGY]  state.arraycopy(eventY,  0,  y,  0,  tEnd.length);  computeDerivatives(eventT,  y,  tEnd);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventY,  0,  y,  0,  tEnd.length);  computeDerivatives(eventT,  y,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventY,  0,  y,  0,  tEnd.length);  computeDerivatives(eventT,  y,  tEnd);	  state.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    y,    tEnd);    	non-compiled	[CE]  double  cannot  be  dereferenced	12	None	replace
101	[BUG]  [BUGGY]  System.arraycopy(currentT,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  yDot,  isLastStep);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(currentT,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  yDot,  isLastStep);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(currentT,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  yDot,  isLastStep);	  System.arraycopy(eventY,    0,    y,    0,    currentT.length);    computeDerivatives(eventY,    y,    isLastStep);    	non-compiled	[CE]  double  cannot  be  dereferenced	22	None	replace
102	[BUG]  [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  tEnd.length);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  tEnd.length);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventT,  0,  y,  0,  tEnd.length);	  state.arraycopy(eventY,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    y,    tEnd);    	non-compiled	[CE]  double  cannot  be  dereferenced	11	None	replace
103	[BUG]  [BUGGY]  System.arraycopy(eventY,  0,  yDot,  0,  currentT.length);  computeDerivatives(eventY,  y,  isLastStep);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  yDot,  0,  currentT.length);  computeDerivatives(eventY,  y,  isLastStep);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventY,  0,  yDot,  0,  currentT.length);  computeDerivatives(eventY,  y,  isLastStep);	  if(isLastStep)    {    System.arraycopy(eventY,    0,    y,    0,    yDot.length);    computeDerivatives(eventY,    y,    currentT);    }    	non-compiled	[CE]  double  cannot  be  dereferenced	43	None	replace
104	[BUG]  [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  t0,  yDot,  tEnd);  [CE]  cannot  find  symbol  t0  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  t0,  yDot,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  t0,  yDot,  tEnd);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    t0,    yDot,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  t0	31	None	replace
105	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  t0,  yDot,  tEnd);  [CE]  cannot  find  symbol  t0  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  t0,  yDot,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  t0,  yDot,  tEnd);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    t0,    yDot,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  t0	31	None	replace
106	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  eventY);  }  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  eventY);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  eventY);  }	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    tEnd,    eventY);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	32	None	replace
107	[BUG]  [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  tEnd);  [CE]  cannot  find  symbol  state  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventT,  0,  y,  0,  tEnd);	  state.arraycopy(eventY,    0,    y,    0,    y.length);    computeDerivatives(eventT,    y,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  state	16	None	replace
108	[BUG]  [BUGGY]  state.arraycopy(eventY,  0,  y,  0,  yEnd.length);  computeDerivatives(eventT,  y,  tEnd);  [CE]  cannot  find  symbol  yEnd  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventY,  0,  y,  0,  yEnd.length);  computeDerivatives(eventT,  y,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventY,  0,  y,  0,  yEnd.length);  computeDerivatives(eventT,  y,  tEnd);	  state.arraycopy(eventY,    0,    y,    0,    y.length);    computeDerivatives(eventT,    y,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  yEnd	16	None	replace
109	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yEnd.length);  computeDerivatives(eventT,  tEnd,  t0);  [CE]  cannot  find  symbol  yEnd  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yEnd.length);  computeDerivatives(eventT,  tEnd,  t0);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  yEnd.length);  computeDerivatives(eventT,  tEnd,  t0);	  System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    tEnd,    t0);    	non-compiled	[CE]  cannot  find  symbol  yEnd	9	None	replace
110	[BUG]  [BUGGY]  if(orderingSign)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t,  tEnd,  orderingSign);  }  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(orderingSign)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t,  tEnd,  orderingSign);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(orderingSign)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t,  tEnd,  orderingSign);  }	  if(isLastStep)    {    System.arraycopy(eventY,    0,    y,    0,    y.length);    computeDerivatives(eventT,    y,    tEnd,    orderingSign);    }    	non-compiled	[CE]  incompatible  types	17	None	replace
111	[BUG]  [BUGGY]  if(orderingSign)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  tEnd,  isLastStep);  }  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(orderingSign)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  tEnd,  isLastStep);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(orderingSign)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  tEnd,  isLastStep);  }	  if(isLastStep)    {    System.arraycopy(eventY,    0,    y,    0,    y.length);    computeDerivatives(eventT,    y,    tEnd,    orderingSign);    }    	non-compiled	[CE]  incompatible  types	17	None	replace
112	[BUG]  [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventY,  t,  tEnd);  [CE]  cannot  find  symbol  t  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventY,  t,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventY,  t,  tEnd);	  System.arraycopy(eventY,    0,    y,    0,    y.length);    computeDerivatives(eventY,    y,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t	20	None	replace
113	[BUG]  [BUGGY]  state.arraycopy(eventY,  0,  y,  0,  yEnd.length);  computeDerivatives(eventY,  y,  tEnd);  [CE]  cannot  find  symbol  yEnd  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventY,  0,  y,  0,  yEnd.length);  computeDerivatives(eventY,  y,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventY,  0,  y,  0,  yEnd.length);  computeDerivatives(eventY,  y,  tEnd);	  state.arraycopy(eventY,    0,    y,    0,    y.length);    computeDerivatives(eventY,    y,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  yEnd	1	None	replace
114	[BUG]  [BUGGY]  state.arraycopy(eventY,  0,  y,  0,  tEnd);  [CE]  cannot  find  symbol  state  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventY,  0,  y,  0,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventY,  0,  y,  0,  tEnd);	  state.arraycopy(eventY,    0,    y,    0,    y.length);    computeDerivatives(eventY,    y,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  state	1	None	replace
115	[BUG]  [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  tDot,  tEnd);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  tDot,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventY,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  tDot,  tEnd);	  if(isLastStep)    {    System.arraycopy(eventY,    0,    y,    0,    y.length);    computeDerivatives(eventY,    tDot,    tEnd);    }    	non-compiled	[CE]  double  cannot  be  dereferenced	2	None	replace
116	[BUG]  [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventY,  tEnd,  t0);  [CE]  cannot  find  symbol  t0  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventY,  tEnd,  t0);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventY,  tEnd,  t0);	  if(isLastStep)    {    System.arraycopy(eventY,    0,    y,    0,    y.length);    computeDerivatives(eventY,    tDot,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  t0	2	None	replace
117	[BUG]  [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  t0,  y,  isLastStep);  [CE]  cannot  find  symbol  state  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  t0,  y,  isLastStep);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  t0,  y,  isLastStep);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    t0,    y,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  state	38	None	replace
118	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yEnd);  computeDerivatives(eventT,  t0,  y,  tEnd);  [CE]  cannot  find  symbol  yEnd  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yEnd);  computeDerivatives(eventT,  t0,  y,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  yEnd);  computeDerivatives(eventT,  t0,  y,  tEnd);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    t0,    y,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  yEnd	38	None	replace
119	[BUG]  [BUGGY]  state.arraycopy(eventY,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  y,  tEnd);  [CE]  cannot  find  symbol  state  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventY,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  y,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventY,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  y,  tEnd);	  state.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    y,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  state	7	None	replace
120	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  currentT.length);  computeDerivatives(eventT,  t1,  yDot,  tEnd);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  currentT.length);  computeDerivatives(eventT,  t1,  yDot,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  currentT.length);  computeDerivatives(eventT,  t1,  yDot,  tEnd);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    t1,    yDot,    tEnd);    }    	non-compiled	[CE]  double  cannot  be  dereferenced	37	None	replace
121	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t0,  yDot,  tEnd);  [CE]  cannot  find  symbol  t0  [FE]                  AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t0,  yDot,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t0,  yDot,  tEnd);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    t1,    yDot,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  t0	37	None	replace
122	[BUG]  [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tStart,  tEnd);  [CE]  cannot  find  symbol  tStart  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tStart,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tStart,  tEnd);	  System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    tStart,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  tStart	10	None	replace
123	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  y,  t0,  isLastStep);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  y,  t0,  isLastStep);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  y,  t0,  isLastStep);	  System.arraycopy(eventT,    0,    y,    0,    tEnd);    computeDerivatives(eventT,    y,    isLastStep);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	21	None	replace
124	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  tEnd);  }  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  tEnd);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  tEnd);  }	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    tEnd,    t0);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	8	None	replace
125	[BUG]  [BUGGY]  System.arraycopy(currentT,  0,  eventY,  0,  currentT.length);  computeDerivatives(eventY,  y,  isLastStep);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(currentT,  0,  eventY,  0,  currentT.length);  computeDerivatives(eventY,  y,  isLastStep);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(currentT,  0,  eventY,  0,  currentT.length);  computeDerivatives(eventY,  y,  isLastStep);	  System.arraycopy(eventY,    0,    y,    0,    currentT.length);    computeDerivatives(eventY,    y,    isLastStep);    	non-compiled	[CE]  double  cannot  be  dereferenced	22	None	replace
126	[BUG]  [BUGGY]  state.arraycopy(eventT,  0,  yDot,  0,  tEnd);  [CE]  cannot  find  symbol  state  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventT,  0,  yDot,  0,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventT,  0,  yDot,  0,  tEnd);	  state.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    y,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  state	7	None	replace
127	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventX,  0,  y,  0,  y.length);  computeDerivatives(eventY,  y,  tEnd);  }  [CE]  cannot  find  symbol  eventX  [FE]        AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventX,  0,  y,  0,  y.length);  computeDerivatives(eventY,  y,  tEnd);  }  [BUGGY]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventX,  0,  y,  0,  y.length);  computeDerivatives(eventY,  y,  tEnd);  }	  resetOccurred    =    false;    if(isLastStep)    {    System.arraycopy(eventY,    0,    y,    0,    y.length);    computeDerivatives(eventY,    y,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  eventX	27	None	replace
128	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventY,  tEnd,  yDot);  }  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventY,  tEnd,  yDot);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventY,  tEnd,  yDot);  }	  if(isLastStep)    {    System.arraycopy(eventY,    0,    y,    0,    yDot.length);    computeDerivatives(eventY,    tEnd,    yDot);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	34	None	replace
129	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  yDot);  }  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  yDot);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  yDot);  }	  if(isLastStep)    {    System.arraycopy(eventY,    0,    y,    0,    yDot.length);    computeDerivatives(eventY,    tEnd,    yDot);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	34	None	replace
130	[BUG]  [BUGGY]  if(remainingEvents!=  null)  {  resetOccurred  =  false;  if(isLastStep)  {  for(final  EventState  remaining  :  remaining.stepAccepted(eventT,  previousT);  }  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(remainingEvents!=  null)  {  resetOccurred  =  false;  if(isLastStep)  {  for(final  EventState  remaining  :  remaining.stepAccepted(eventT,  previousT);  }  [BUGGY]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(remainingEvents!=  null)  {  resetOccurred  =  false;  if(isLastStep)  {  for(final  EventState  remaining  :  remaining.stepAccepted(eventT,  previousT);  }	  resetOccurred    =    false;    if(isLastStep)    {    for(final    EventState    remaining    :    occuringEvents)    {    remaining.stepAccepted(eventT,    previousT);    }    	non-compiled	[CE]  ')'  expected	6	None	replace
131	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(currentT,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  y,  isLastStep);  }  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(currentT,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  y,  isLastStep);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(currentT,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  y,  isLastStep);  }	  if(isLastStep)    {    System.arraycopy(eventY,    0,    y,    0,    currentT.length);    computeDerivatives(eventY,    y,    isLastStep);    }    	non-compiled	[CE]  double  cannot  be  dereferenced	23	None	replace
132	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  yDot,  0,  yDot.length);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	add	System.arraycopy(eventT,  0,  yDot,  0,  yDot.length);	  System.arraycopy(eventT,    0,    y,    0,    yDot.length);    	compilable	  [FE]  ArrayStoreException  	41	3	replace
133	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  yDot,  0,  yDot.length);  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  yDot,  0,  yDot.length);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  yDot,  0,  yDot.length);	  System.arraycopy(eventT,    0,    y,    0,    yDot.length);    	compilable	  [FE]  ArrayStoreException  	41	3	replace
134	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  t0,  y,  tEnd);  }  [CE]  cannot  find  symbol  t0  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  t0,  y,  tEnd);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  t0,  y,  tEnd);  }	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    t0,    y,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  t0	38	None	replace
135	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  t1,  y,  tEnd);  }  [CE]  cannot  find  symbol  t1  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  t1,  y,  tEnd);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  t1,  y,  tEnd);  }	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    t0,    y,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  t1	38	None	replace
136	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventY,  t,  tEnd);  }  [CE]  cannot  find  symbol  t  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventY,  t,  tEnd);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventY,  t,  tEnd);  }	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventY,    y,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  t	33	None	replace
137	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventY,  tEnd,  t0);  }  [CE]  cannot  find  symbol  t0  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventY,  tEnd,  t0);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventY,  tEnd,  t0);  }	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventY,    y,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  t0	33	None	replace
138	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  eventT.length);  computeDerivatives(eventT,  tEnd,  tEnd);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  eventT.length);  computeDerivatives(eventT,  tEnd,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  eventT.length);  computeDerivatives(eventT,  tEnd,  tEnd);	  System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    tEnd,    t0);    	non-compiled	[CE]  double  cannot  be  dereferenced	9	None	replace
139	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  tEnd);  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  tEnd);	  System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    tEnd,    t0);    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	9	None	replace
140	[BUG]  [BUGGY]  if(orderingSign)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  orderingSign);  }  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(orderingSign)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  orderingSign);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(orderingSign)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  orderingSign);  }	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    tEnd,    orderingSign);    }    	non-compiled	[CE]  incompatible  types	18	None	replace
141	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t,  yDot,  tEnd);  }  [CE]  cannot  find  symbol  t  [FE]        AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t,  yDot,  tEnd);  }  [BUGGY]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t,  yDot,  tEnd);  }	  resetOccurred    =    false;    if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    y,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  t	35	None	replace
142	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  eventT.length);  computeDerivatives(eventT,  tStart,  tEnd);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  eventT.length);  computeDerivatives(eventT,  tStart,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  eventT.length);  computeDerivatives(eventT,  tStart,  tEnd);	  System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    tStart,    tEnd);    	non-compiled	[CE]  double  cannot  be  dereferenced	10	None	replace
143	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  eventT.length);  computeDerivatives(eventT,  tEnd,  t0);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  eventT.length);  computeDerivatives(eventT,  tEnd,  t0);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  eventT.length);  computeDerivatives(eventT,  tEnd,  t0);	  System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    tStart,    tEnd);    	non-compiled	[CE]  double  cannot  be  dereferenced	10	None	replace
144	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length  -  1);  computeDerivatives(eventT,  tEnd,  eventY);  }  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length  -  1);  computeDerivatives(eventT,  tEnd,  eventY);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length  -  1);  computeDerivatives(eventT,  tEnd,  eventY);  }	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    tEnd,    eventY);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	32	None	replace
145	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t0,  yDot,  tEnd);  }  [CE]  cannot  find  symbol  t0  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t0,  yDot,  tEnd);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  t0,  yDot,  tEnd);  }	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    t1,    yDot,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  t0	37	None	replace
146	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  t0);  }  [CE]  cannot  find  symbol  t0  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  t0);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  t0);  }	  if(isLastStep)    {    System.arraycopy(eventY,    0,    y,    0,    y.length);    computeDerivatives(eventY,    tDot,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  t0	2	None	replace
147	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd,  orderingSign);  }  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd,  orderingSign);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd,  orderingSign);  }	  if(isLastStep)    {    System.arraycopy(eventY,    0,    y,    0,    y.length);    computeDerivatives(eventT,    y,    tEnd,    orderingSign);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	17	None	replace
148	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventY,  y,  currentT);  }  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventY,  y,  currentT);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventY,  y,  currentT);  }	  if(isLastStep)    {    System.arraycopy(eventY,    0,    y,    0,    yDot.length);    computeDerivatives(eventY,    y,    currentT);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	43	None	replace
149	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  y,  currentT);  }  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  y,  currentT);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  y,  currentT);  }	  if(isLastStep)    {    System.arraycopy(eventY,    0,    y,    0,    yDot.length);    computeDerivatives(eventY,    y,    currentT);    }    	non-compiled	[CE]  double  cannot  be  dereferenced	43	None	replace
150	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tStart,  tEnd);  [CE]  cannot  find  symbol  tStart  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tStart,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  tStart,  tEnd);	  System.arraycopy(eventT,    0,    y,    0,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  tStart	24	None	replace
151	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  t,  yDot,  tEnd);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  t,  yDot,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  t,  yDot,  tEnd);	  System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    y,    tEnd);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	29	None	replace
152	[BUG]  [BUGGY]  resetOccurred    =    false;    resetOccurred  =  false;  if(isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  tEnd);  }  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  resetOccurred    =    false;    resetOccurred  =  false;  if(isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  tEnd);  }  [BUGGY]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	resetOccurred        =        false;        resetOccurred    =    false;    if(isLastStep)  {  System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  tEnd);  }	  	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	3	None	add
153	[BUG]  [BUGGY]  resetOccurred    =    false;    resetOccurred  =  false;  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  tEnd);  }  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  resetOccurred    =    false;    resetOccurred  =  false;  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  tEnd);  }  [BUGGY]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	resetOccurred        =        false;        resetOccurred    =    false;    if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  tEnd);  }	  	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	3	None	add
154	[BUG]  [BUGGY]  state.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  t0);  [CE]  cannot  find  symbol  state  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  t0);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  t0);	  state.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    y,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  state	12	None	replace
155	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  eventY.length);  computeDerivatives(eventT,  tEnd,  eventT);  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  eventY.length);  computeDerivatives(eventT,  tEnd,  eventT);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  y,  0,  eventY.length);  computeDerivatives(eventT,  tEnd,  eventT);	  System.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    tEnd,    eventY);    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	14	None	replace
156	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  yDot,  0,  tEnd);  computeDerivatives(eventT,  tEnd,  eventY);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  yDot,  0,  tEnd);  computeDerivatives(eventT,  tEnd,  eventY);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  yDot,  0,  tEnd);  computeDerivatives(eventT,  tEnd,  eventY);	  System.arraycopy(eventT,    0,    y,    0,    yDot.length);    computeDerivatives(eventT,    tEnd,    eventY);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	14	None	replace
157	[BUG]  [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  y,  isLastStep);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  y,  isLastStep);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventY,  0,  y,  0,  tEnd);  computeDerivatives(eventT,  y,  isLastStep);	  System.arraycopy(eventY,    0,    y,    0,    tEnd);    computeDerivatives(eventY,    y,    isLastStep);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	19	None	replace
158	[BUG]  [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  tStart);  computeDerivatives(eventY,  y,  isLastStep);  [CE]  cannot  find  symbol  tStart  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  tStart);  computeDerivatives(eventY,  y,  isLastStep);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventY,  0,  y,  0,  tStart);  computeDerivatives(eventY,  y,  isLastStep);	  System.arraycopy(eventY,    0,    y,    0,    tEnd);    computeDerivatives(eventY,    y,    isLastStep);    	non-compiled	[CE]  cannot  find  symbol  tStart	19	None	replace
159	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  t0);  }  [CE]  cannot  find  symbol  t0  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  t0);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd,  t0);  }	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    t,    tEnd);    }    	non-compiled	[CE]  cannot  find  symbol  t0	30	None	replace
160	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd);  }  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  computeDerivatives(eventT,  tEnd);  }	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    t,    tEnd);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	30	None	replace
161	[BUG]  [BUGGY]  if(isLastStep)  {  for(final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  for(final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  [BUGGY]      for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  for(final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }	  resetOccurred    =    false;    if(isLastStep)    {    for(final    EventState    remaining    :    occuringEvents)    {    remaining.stepAccepted(eventT,    eventY);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
162	[BUG]  [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  y,  currentT);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventT,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  y,  currentT);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventT,  0,  y,  0,  currentT.length);  computeDerivatives(eventY,  y,  currentT);	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventY,    y,    currentT);    }    	non-compiled	[CE]  double  cannot  be  dereferenced	42	None	replace
163	[BUG]  [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  tEnd);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  tEnd);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventY,  0,  y,  0,  tEnd);	  System.arraycopy(eventY,    0,    y,    0,    y.length);    computeDerivatives(eventY,    y,    tEnd);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	20	None	replace
164	[BUG]  [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventY,  tEnd,  t0);  [CE]  cannot  find  symbol  t0  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventY,  tEnd,  t0);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventY,  0,  y,  0,  yDot.length);  computeDerivatives(eventY,  tEnd,  t0);	  System.arraycopy(eventY,    0,    y,    0,    y.length);    computeDerivatives(eventY,    y,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  t0	20	None	replace
165	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  Arrays.arraycopy(eventT,  0,  y,  0,  yDot.length);  [CE]  cannot  find  symbol  Arrays  [FE]    ArrayStoreException    [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  y,  0,  yDot.length);  Arrays.arraycopy(eventT,  0,  y,  0,  yDot.length);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,    0,    y,    0,    yDot.length);    Arrays.arraycopy(eventT,  0,  y,  0,  yDot.length);	  	non-compiled	[CE]  cannot  find  symbol  Arrays	40	None	add
166	[BUG]  [BUGGY]  System.arraycopy(eventT,  0,  yDot,  0,  tEnd,  eventT.length);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  System.arraycopy(eventT,  0,  yDot,  0,  tEnd,  eventT.length);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	System.arraycopy(eventT,  0,  yDot,  0,  tEnd,  eventT.length);	  System.arraycopy(eventT,    0,    yDot,    0,    tEnd);    	non-compiled	[CE]  double  cannot  be  dereferenced	26	None	replace
167	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tStart,  yDot);  }  [CE]  cannot  find  symbol  tStart  [FE]              AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tStart,  yDot);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tStart,  yDot);  }	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    tEnd,    yDot);    }    	non-compiled	[CE]  cannot  find  symbol  tStart	36	None	replace
168	[BUG]  [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd,  yDot,  previousT);  }  [CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd,  yDot,  previousT);  }  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	if(isLastStep)  {  System.arraycopy(eventT,  0,  y,  0,  y.length);  computeDerivatives(eventT,  tEnd,  yDot,  previousT);  }	  if(isLastStep)    {    System.arraycopy(eventT,    0,    y,    0,    y.length);    computeDerivatives(eventT,    tEnd,    yDot);    }    	non-compiled	[CE]  method  computeDerivatives  in  class  AbstractIntegrator  cannot  be  applied  to  given  types;	36	None	replace
169	[BUG]  [BUGGY]  state.arraycopy(eventY,  0,  y,  0,  yDot.length);  [CE]  cannot  find  symbol  state  [FE]            AssertionError      [CONTEXT]      }  return  eventT;  }  boolean  needReset  =  currentEvent.reset(eventT,  eventY);  if  (needReset)  {    System.arraycopy(eventY,  0,  y,  0,  y.length);  computeDerivatives(eventT,  y,  yDot);      [BUGGY]  state.arraycopy(eventY,  0,  y,  0,  yDot.length);  [BUGGY]      resetOccurred  =  true;  for  (final  EventState  remaining  :  occuringEvents)  {  remaining.stepAccepted(eventT,  eventY);  }  return  eventT;  }  previousT  =  eventT;  interpolator.setSoftPreviousTime(eventT);  interpolator.setSoftCurrentTime(currentT);  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  remaining  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  needReset  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math7/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java	0.5773502691896258	369	369	1	replace	state.arraycopy(eventY,  0,  y,  0,  yDot.length);	  state.arraycopy(eventY,    0,    y,    0,    y.length);    computeDerivatives(eventY,    y,    tEnd);    	non-compiled	[CE]  cannot  find  symbol  state	1	None	replace
