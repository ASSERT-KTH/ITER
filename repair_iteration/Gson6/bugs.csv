bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [CLASS] JsonAdapterAnnotationTypeAdapterFactory  	projects/Gson6/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java	1.0	36	36	2	replace	
2	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [CLASS] JsonAdapterAnnotationTypeAdapterFactory  	projects/Gson6/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java	1.0	36	36	2	add	
3	[BUG] [BUGGY] this.constructorConstructor = constructorConstructor; [FE] NullPointerException [CONTEXT] [BUGGY] this.constructorConstructor = constructorConstructor; [BUGGY] } [CLASS] JsonAdapterAnnotationTypeAdapterFactory [METHOD] <init> [RETURN_TYPE] ConstructorConstructor)  ConstructorConstructor constructorConstructor 	projects/Gson6/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java	1.0	37	37	2	replace	
4	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] this.constructorConstructor = constructorConstructor; } [CLASS] JsonAdapterAnnotationTypeAdapterFactory [METHOD] <init> [RETURN_TYPE] ConstructorConstructor)  ConstructorConstructor constructorConstructor 	projects/Gson6/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java	1.0	37	37	2	add	
5	[BUG] [BUGGY] } [FE] NullPointerException [CONTEXT] [BUGGY] } [BUGGY]  [CLASS] JsonAdapterAnnotationTypeAdapterFactory [METHOD] <init> [RETURN_TYPE] ConstructorConstructor)  ConstructorConstructor constructorConstructor 	projects/Gson6/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java	1.0	38	38	2	replace	
6	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] } [CLASS] JsonAdapterAnnotationTypeAdapterFactory [METHOD] <init> [RETURN_TYPE] ConstructorConstructor)  ConstructorConstructor constructorConstructor 	projects/Gson6/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java	1.0	38	38	2	add	
7	[BUG] [BUGGY] JsonAdapter annotation = targetType.getRawType().getAnnotation(JsonAdapter.class); [FE] NullPointerException [CONTEXT] [BUGGY] JsonAdapter annotation = targetType.getRawType().getAnnotation(JsonAdapter.class); [BUGGY] if (annotation == null) { return null; } return (TypeAdapter<T>) getTypeAdapter(constructorConstructor, gson, targetType, annotation); } [CLASS] JsonAdapterAnnotationTypeAdapterFactory [METHOD] create [RETURN_TYPE] <T>  Gson gson TypeToken<T> targetType 	projects/Gson6/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java	1.0	43	43	2	replace	
8	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] JsonAdapter annotation = targetType.getRawType().getAnnotation(JsonAdapter.class); if (annotation == null) { return null; } return (TypeAdapter<T>) getTypeAdapter(constructorConstructor, gson, targetType, annotation); } [CLASS] JsonAdapterAnnotationTypeAdapterFactory [METHOD] create [RETURN_TYPE] <T>  Gson gson TypeToken<T> targetType 	projects/Gson6/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java	1.0	43	43	2	add	
9	[BUG] [BUGGY] if (annotation == null) { [FE] NullPointerException [CONTEXT] [BUGGY] if (annotation == null) { [BUGGY] return null; } return (TypeAdapter<T>) getTypeAdapter(constructorConstructor, gson, targetType, annotation); } [CLASS] JsonAdapterAnnotationTypeAdapterFactory [METHOD] create [RETURN_TYPE] <T>  Gson gson TypeToken<T> targetType 	projects/Gson6/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java	1.0	44	44	2	replace	
10	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] if (annotation == null) { return null; } return (TypeAdapter<T>) getTypeAdapter(constructorConstructor, gson, targetType, annotation); } [CLASS] JsonAdapterAnnotationTypeAdapterFactory [METHOD] create [RETURN_TYPE] <T>  Gson gson TypeToken<T> targetType 	projects/Gson6/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java	1.0	44	44	2	add	
11	[BUG] [BUGGY] return (TypeAdapter<T>) getTypeAdapter(constructorConstructor, gson, targetType, annotation); [FE] NullPointerException [CONTEXT] [BUGGY] return (TypeAdapter<T>) getTypeAdapter(constructorConstructor, gson, targetType, annotation); [BUGGY] } [CLASS] JsonAdapterAnnotationTypeAdapterFactory [METHOD] create [RETURN_TYPE] <T>  Gson gson TypeToken<T> targetType 	projects/Gson6/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java	1.0	47	47	2	replace	
12	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] return (TypeAdapter<T>) getTypeAdapter(constructorConstructor, gson, targetType, annotation); } [CLASS] JsonAdapterAnnotationTypeAdapterFactory [METHOD] create [RETURN_TYPE] <T>  Gson gson TypeToken<T> targetType 	projects/Gson6/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java	1.0	47	47	2	add	
13	[BUG] [BUGGY] Class<?> value = annotation.value(); [FE] NullPointerException [CONTEXT] [BUGGY] Class<?> value = annotation.value(); [BUGGY] TypeAdapter<?> typeAdapter; if (TypeAdapter.class.isAssignableFrom(value)) { Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value; typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct(); } else if (TypeAdapterFactory.class.isAssignableFrom(value)) { Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value; typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory)) .construct() .create(gson, fieldType); } else { [CLASS] JsonAdapterAnnotationTypeAdapterFactory [METHOD] getTypeAdapter [RETURN_TYPE] TypeAdapter  ConstructorConstructor constructorConstructor Gson gson TypeToken<?> fieldType JsonAdapter annotation 	projects/Gson6/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java	1.0	53	53	2	replace	
14	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] Class<?> value = annotation.value(); TypeAdapter<?> typeAdapter; if (TypeAdapter.class.isAssignableFrom(value)) { Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value; typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct(); } else if (TypeAdapterFactory.class.isAssignableFrom(value)) { Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value; typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory)) .construct() .create(gson, fieldType); } else { [CLASS] JsonAdapterAnnotationTypeAdapterFactory [METHOD] getTypeAdapter [RETURN_TYPE] TypeAdapter  ConstructorConstructor constructorConstructor Gson gson TypeToken<?> fieldType JsonAdapter annotation 	projects/Gson6/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java	1.0	53	53	2	add	
15	[BUG] [BUGGY] if (TypeAdapter.class.isAssignableFrom(value)) { [FE] NullPointerException [CONTEXT] [BUGGY] if (TypeAdapter.class.isAssignableFrom(value)) { [BUGGY] Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value; typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct(); } else if (TypeAdapterFactory.class.isAssignableFrom(value)) { Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value; typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory)) .construct() .create(gson, fieldType); } else { throw new IllegalArgumentException( "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference."); [CLASS] JsonAdapterAnnotationTypeAdapterFactory [METHOD] getTypeAdapter [RETURN_TYPE] TypeAdapter  ConstructorConstructor constructorConstructor Gson gson TypeToken<?> fieldType JsonAdapter annotation 	projects/Gson6/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java	1.0	55	55	2	replace	
16	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] if (TypeAdapter.class.isAssignableFrom(value)) { Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value; typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct(); } else if (TypeAdapterFactory.class.isAssignableFrom(value)) { Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value; typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory)) .construct() .create(gson, fieldType); } else { throw new IllegalArgumentException( "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference."); [CLASS] JsonAdapterAnnotationTypeAdapterFactory [METHOD] getTypeAdapter [RETURN_TYPE] TypeAdapter  ConstructorConstructor constructorConstructor Gson gson TypeToken<?> fieldType JsonAdapter annotation 	projects/Gson6/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java	1.0	55	55	2	add	
17	[BUG] [BUGGY] } else if (TypeAdapterFactory.class.isAssignableFrom(value)) { [FE] NullPointerException [CONTEXT] [BUGGY] } else if (TypeAdapterFactory.class.isAssignableFrom(value)) { [BUGGY] Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value; typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory)) .construct() .create(gson, fieldType); } else { throw new IllegalArgumentException( "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference."); } typeAdapter = typeAdapter.nullSafe(); return typeAdapter; [CLASS] JsonAdapterAnnotationTypeAdapterFactory [METHOD] getTypeAdapter [RETURN_TYPE] TypeAdapter  ConstructorConstructor constructorConstructor Gson gson TypeToken<?> fieldType JsonAdapter annotation 	projects/Gson6/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java	1.0	58	58	2	replace	
18	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] } else if (TypeAdapterFactory.class.isAssignableFrom(value)) { Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value; typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory)) .construct() .create(gson, fieldType); } else { throw new IllegalArgumentException( "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference."); } typeAdapter = typeAdapter.nullSafe(); return typeAdapter; [CLASS] JsonAdapterAnnotationTypeAdapterFactory [METHOD] getTypeAdapter [RETURN_TYPE] TypeAdapter  ConstructorConstructor constructorConstructor Gson gson TypeToken<?> fieldType JsonAdapter annotation 	projects/Gson6/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java	1.0	58	58	2	add	
19	[BUG] [BUGGY] Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value; [FE] NullPointerException [CONTEXT] [BUGGY] Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value; [BUGGY] typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory)) .construct() .create(gson, fieldType); } else { throw new IllegalArgumentException( "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference."); } typeAdapter = typeAdapter.nullSafe(); return typeAdapter; } [CLASS] JsonAdapterAnnotationTypeAdapterFactory [METHOD] getTypeAdapter [RETURN_TYPE] TypeAdapter  ConstructorConstructor constructorConstructor Gson gson TypeToken<?> fieldType JsonAdapter annotation 	projects/Gson6/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java	1.0	59	59	2	replace	
20	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value; typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory)) .construct() .create(gson, fieldType); } else { throw new IllegalArgumentException( "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference."); } typeAdapter = typeAdapter.nullSafe(); return typeAdapter; } [CLASS] JsonAdapterAnnotationTypeAdapterFactory [METHOD] getTypeAdapter [RETURN_TYPE] TypeAdapter  ConstructorConstructor constructorConstructor Gson gson TypeToken<?> fieldType JsonAdapter annotation 	projects/Gson6/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java	1.0	59	59	2	add	
21	[BUG] [BUGGY] typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory)) .construct()  .create(gson, fieldType); [FE] NullPointerException [CONTEXT] [BUGGY] typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))   .construct()     .create(gson, fieldType); [BUGGY] .construct() .create(gson, fieldType); } else { throw new IllegalArgumentException( "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference."); } typeAdapter = typeAdapter.nullSafe(); return typeAdapter; } [CLASS] JsonAdapterAnnotationTypeAdapterFactory [METHOD] getTypeAdapter [RETURN_TYPE] TypeAdapter  ConstructorConstructor constructorConstructor Gson gson TypeToken<?> fieldType JsonAdapter annotation 	projects/Gson6/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java	1.0	60	62	2	replace	
22	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))   .construct()     .create(gson, fieldType); .construct() .create(gson, fieldType); } else { throw new IllegalArgumentException( "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference."); } typeAdapter = typeAdapter.nullSafe(); return typeAdapter; } [CLASS] JsonAdapterAnnotationTypeAdapterFactory [METHOD] getTypeAdapter [RETURN_TYPE] TypeAdapter  ConstructorConstructor constructorConstructor Gson gson TypeToken<?> fieldType JsonAdapter annotation 	projects/Gson6/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java	1.0	60	62	2	add	
23	[BUG] [BUGGY] } else { [FE] NullPointerException [CONTEXT] [BUGGY] } else { [BUGGY] throw new IllegalArgumentException( "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference."); } typeAdapter = typeAdapter.nullSafe(); return typeAdapter; } [CLASS] JsonAdapterAnnotationTypeAdapterFactory [METHOD] getTypeAdapter [RETURN_TYPE] TypeAdapter  ConstructorConstructor constructorConstructor Gson gson TypeToken<?> fieldType JsonAdapter annotation 	projects/Gson6/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java	1.0	63	63	2	replace	
24	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] } else { throw new IllegalArgumentException( "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference."); } typeAdapter = typeAdapter.nullSafe(); return typeAdapter; } [CLASS] JsonAdapterAnnotationTypeAdapterFactory [METHOD] getTypeAdapter [RETURN_TYPE] TypeAdapter  ConstructorConstructor constructorConstructor Gson gson TypeToken<?> fieldType JsonAdapter annotation 	projects/Gson6/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java	1.0	63	63	2	add	
25	[BUG] [BUGGY] typeAdapter = typeAdapter.nullSafe(); [FE] NullPointerException [CONTEXT] [BUGGY] typeAdapter = typeAdapter.nullSafe(); [BUGGY] return typeAdapter; } [CLASS] JsonAdapterAnnotationTypeAdapterFactory [METHOD] getTypeAdapter [RETURN_TYPE] TypeAdapter  ConstructorConstructor constructorConstructor Gson gson TypeToken<?> fieldType JsonAdapter annotation 	projects/Gson6/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java	1.0	67	67	2	replace	
26	[BUG] [BUGGY] [FE] NullPointerException [CONTEXT] [BUGGY] [BUGGY] typeAdapter = typeAdapter.nullSafe(); return typeAdapter; } [CLASS] JsonAdapterAnnotationTypeAdapterFactory [METHOD] getTypeAdapter [RETURN_TYPE] TypeAdapter  ConstructorConstructor constructorConstructor Gson gson TypeToken<?> fieldType JsonAdapter annotation 	projects/Gson6/gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java	1.0	67	67	2	add	
