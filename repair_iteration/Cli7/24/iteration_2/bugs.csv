bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  abuilder.withString(String.valueOf(opt),  type);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withString(String.valueOf(opt),  type);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString(String.valueOf(opt),  type);	      abuilder.withString(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
2	[BUG]  [BUGGY]  abuilder.withString(String.valueOf(opt),  required);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withString(String.valueOf(opt),  required);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString(String.valueOf(opt),  required);	      abuilder.withString(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
3	[BUG]  [BUGGY]  abuilder.withString(String.valueOf(type));  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withString(String.valueOf(type));  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString(String.valueOf(type));	      abuilder.withString(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
4	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMaximum(2);  abuilder.withMaximum(2);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(2);    abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
5	[BUG]  [BUGGY]  abuilder.withMaximum(2);  abuilder.withMaximum(2);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMaximum(2);  abuilder.withMaximum(2);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);    abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
6	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMaximum(2);  abuilder.withMaximum(3);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(2);    abuilder.withMaximum(3);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
7	[BUG]  [BUGGY]  abuilder.withMaximum(2);  abuilder.withMaximum(3);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMaximum(2);  abuilder.withMaximum(3);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);    abuilder.withMaximum(3);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
8	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMaximum(2);  abuilder.withMinimum(2);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(2);    abuilder.withMinimum(2);	  	compilable	  [FE]  IllegalArgumentException  	8	1	add
9	[BUG]  [BUGGY]  abuilder.withMaximum(2);  abuilder.withMinimum(2);  [FE]  IllegalArgumentException  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMaximum(2);  abuilder.withMinimum(2);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);    abuilder.withMinimum(2);	  	compilable	  [FE]  IllegalArgumentException  	8	1	add
10	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMaximum(2);  abuilder.withMaximum(1);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(2);    abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
11	[BUG]  [BUGGY]  abuilder.withMaximum(2);  abuilder.withMaximum(1);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMaximum(2);  abuilder.withMaximum(1);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);    abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
12	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]      abuilder.reset();  abuilder.reset();  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	        abuilder.reset();    abuilder.reset();	  	compilable	  [FE]  ComparisonFailure  	6	1	add
13	[BUG]  [BUGGY]      abuilder.reset();  abuilder.reset();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]      abuilder.reset();  abuilder.reset();  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	        abuilder.reset();    abuilder.reset();	  	compilable	  [FE]  ComparisonFailure  	6	1	add
14	[BUG]  [BUGGY]      abuilder.reset();  if(abuilder.reset())  {  abuilder.reset();  }  else  {  abuilder.withShortName(String.valueOf(opt));  }  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]      abuilder.reset();  if(abuilder.reset())  {  abuilder.reset();  }  else  {  abuilder.withShortName(String.valueOf(opt));  }  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	        abuilder.reset();    if(abuilder.reset())  {  abuilder.reset();  }  else  {  abuilder.withShortName(String.valueOf(opt));  }	  	non-compiled	[CE]  incompatible  types	6	None	add
15	[BUG]  [BUGGY]      abuilder.reset();  if(abuilder.reset())  {  abuilder.reset();  }  [CE]  incompatible  types  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]      abuilder.reset();  if(abuilder.reset())  {  abuilder.reset();  }  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	        abuilder.reset();    if(abuilder.reset())  {  abuilder.reset();  }	  	non-compiled	[CE]  incompatible  types	6	None	add
16	[BUG]  [BUGGY]      abuilder.reset();  if(abuilder.reset())  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [CE]  incompatible  types  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]      abuilder.reset();  if(abuilder.reset())  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	        abuilder.reset();    if(abuilder.reset())  {  abuilder.reset();  }  else  {  abuilder.reset();  }	  	non-compiled	[CE]  incompatible  types	6	None	add
17	[BUG]  [BUGGY]      abuilder.reset();  if(abuilder.reset())  {  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incompatible  types  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]      abuilder.reset();  if(abuilder.reset())  {  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	        abuilder.reset();    if(abuilder.reset())  {  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  incompatible  types	6	None	add
18	[BUG]  [BUGGY]  abuilder.withHorizontal(type);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withHorizontal(type);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontal(type);	      abuilder.withHorizontal(opt);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
19	[BUG]  [BUGGY]  abuilder.withHorizontal(opt,  required);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withHorizontal(opt,  required);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontal(opt,  required);	      abuilder.withHorizontal(opt);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
20	[BUG]  [BUGGY]  abuilder.withShortName( "* ");  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withShortName( "* ");  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withShortName( "* ");	  abuilder.withMinimum(1);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
21	[BUG]  [BUGGY]  abuilder.withShortName(String.valueOf(opt),  type);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withShortName(String.valueOf(opt),  type);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withShortName(String.valueOf(opt),  type);	      abuilder.withShortName(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
22	[BUG]  [BUGGY]  abuilder.withShortName(String.valueOf(type));  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withShortName(String.valueOf(type));  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withShortName(String.valueOf(type));	      abuilder.withShortName(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
23	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]      abuilder.withMaximum(1);  abuilder.withMaximum(1);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	        abuilder.withMaximum(1);    abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
24	[BUG]  [BUGGY]      abuilder.withMaximum(1);  abuilder.withMaximum(1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]      abuilder.withMaximum(1);  abuilder.withMaximum(1);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	        abuilder.withMaximum(1);    abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
25	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]      abuilder.withMaximum(1);  abuilder.withMinimum(1);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	        abuilder.withMaximum(1);    abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
26	[BUG]  [BUGGY]      abuilder.withMaximum(1);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]      abuilder.withMaximum(1);  abuilder.withMinimum(1);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	        abuilder.withMaximum(1);    abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
27	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]      abuilder.withMaximum(1);  abuilder.withMaximum(2);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	        abuilder.withMaximum(1);    abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
28	[BUG]  [BUGGY]      abuilder.withMaximum(1);  abuilder.withMaximum(2);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]      abuilder.withMaximum(1);  abuilder.withMaximum(2);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	        abuilder.withMaximum(1);    abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
29	[BUG]  [BUGGY]      abuilder.withMaximum(1);  Abuilder.withMaximum(1);  [CE]  cannot  find  symbol  Abuilder  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]      abuilder.withMaximum(1);  Abuilder.withMaximum(1);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	        abuilder.withMaximum(1);    Abuilder.withMaximum(1);	  	non-compiled	[CE]  cannot  find  symbol  Abuilder	3	None	add
30	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMinimum(1);  abuilder.withMinimum(1);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(1);    abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	10	1	add
31	[BUG]  [BUGGY]  abuilder.withMinimum(1);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMinimum(1);  abuilder.withMinimum(1);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);    abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	10	1	add
32	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMinimum(1);  abuilder.withMinimum(2);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(1);    abuilder.withMinimum(2);	  	compilable	  [FE]  IllegalArgumentException  	10	1	add
33	[BUG]  [BUGGY]  abuilder.withMinimum(1);  abuilder.withMinimum(2);  [FE]  IllegalArgumentException  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMinimum(1);  abuilder.withMinimum(2);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);    abuilder.withMinimum(2);	  	compilable	  [FE]  IllegalArgumentException  	10	1	add
34	[BUG]  [BUGGY]  abuilder.withMinimum(1);  abuilder.withMinimum(options);  [CE]  method  withMinimum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMinimum(1);  abuilder.withMinimum(options);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);    abuilder.withMinimum(options);	  	non-compiled	[CE]  method  withMinimum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	10	None	add
35	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMinimum(1);  abuilder.withMinimum(0);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(1);    abuilder.withMinimum(0);	  	compilable	  [FE]  ComparisonFailure  	10	1	add
36	[BUG]  [BUGGY]  abuilder.withMinimum(1);  abuilder.withMinimum(0);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMinimum(1);  abuilder.withMinimum(0);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);    abuilder.withMinimum(0);	  	compilable	  [FE]  ComparisonFailure  	10	1	add
37	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMinimum(1);  abuilder.withMinimum(3);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(1);    abuilder.withMinimum(3);	  	compilable	  [FE]  IllegalArgumentException  	10	1	add
38	[BUG]  [BUGGY]  abuilder.withMinimum(1);  abuilder.withMinimum(3);  [FE]  IllegalArgumentException  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMinimum(1);  abuilder.withMinimum(3);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);    abuilder.withMinimum(3);	  	compilable	  [FE]  IllegalArgumentException  	10	1	add
39	[BUG]  [BUGGY]  abuilder.withString( "* ",  type);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withString( "* ",  type);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString( "* ",  type);	      abuilder.withString(   "*   ");    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
40	[BUG]  [BUGGY]  abuilder.withString( "* ",  opt);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withString( "* ",  opt);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString( "* ",  opt);	      abuilder.withString(   "*   ");    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
41	[BUG]  [BUGGY]  abuilder.withStart(1);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withStart(1);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withStart(1);	      abuilder.reset();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
42	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMaximum(3);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(3);	  abuilder.withMaximum(2);    	compilable	  [FE]  ComparisonFailure  	9	1	replace
43	[BUG]  [BUGGY]  abuilder.withMaximum(3);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMaximum(3);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(3);	  abuilder.withMaximum(2);    	compilable	  [FE]  ComparisonFailure  	9	1	replace
44	[BUG]  [BUGGY]  abuilder.withHorizontalName(String.valueOf(opt),  type);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withHorizontalName(String.valueOf(opt),  type);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontalName(String.valueOf(opt),  type);	      abuilder.withHorizontalName(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
45	[BUG]  [BUGGY]  abuilder.withHorizontalName(String.valueOf(type));  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withHorizontalName(String.valueOf(type));  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontalName(String.valueOf(type));	      abuilder.withHorizontalName(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
46	[BUG]  [BUGGY]  abuilder.withHorizontalName(String.valueOf(opt,  type));  [CE]  no  suitable  method  found  for  valueOf(char,char)  [FE]              ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withHorizontalName(String.valueOf(opt,  type));  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontalName(String.valueOf(opt,  type));	      abuilder.withHorizontalName(String.valueOf(opt));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(char,char)	2	None	replace
47	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMaximum(0);  abuilder.withMaximum(1);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);    abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	12	1	add
48	[BUG]  [BUGGY]  abuilder.withMaximum(0);  abuilder.withMaximum(1);  [FE]  ComparisonFailure  [FE]    IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMaximum(0);  abuilder.withMaximum(1);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);    abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	12	1	add
49	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMaximum(0);  abuilder.withMaximum(0);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);    abuilder.withMaximum(0);	  	compilable	  [FE]  ComparisonFailure  	12	1	add
50	[BUG]  [BUGGY]  abuilder.withMaximum(0);  abuilder.withMaximum(0);  [FE]  ComparisonFailure  [FE]      IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMaximum(0);  abuilder.withMaximum(0);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);    abuilder.withMaximum(0);	  	compilable	  [FE]  ComparisonFailure  	12	1	add
51	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMaximum(0);  abuilder.withMaximum(2);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);    abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	12	1	add
52	[BUG]  [BUGGY]  abuilder.withMaximum(0);  abuilder.withMaximum(2);  [FE]  ComparisonFailure  [FE]        IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMaximum(0);  abuilder.withMaximum(2);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);    abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	12	1	add
53	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMaximum(0);  abuilder.withMinimum(1);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);    abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	12	1	add
54	[BUG]  [BUGGY]  abuilder.withMaximum(0);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]          IllegalArgumentException    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMaximum(0);  abuilder.withMinimum(1);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);    abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	12	1	add
55	[BUG]  [BUGGY]  abuilder.withMaximum(2);  Abuilder.withMaximum(2);  [CE]  cannot  find  symbol  Abuilder  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMaximum(2);  Abuilder.withMaximum(2);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);    Abuilder.withMaximum(2);	  	non-compiled	[CE]  cannot  find  symbol  Abuilder	8	None	add
56	[BUG]  [BUGGY]  obuilder.withHorizontal(opt);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  obuilder.withHorizontal(opt);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withHorizontal(opt);	      abuilder.withHorizontal(opt);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
57	[BUG]  [BUGGY]  abuilder.withHorizontal(opt)  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withHorizontal(opt)  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontal(opt)	      abuilder.withHorizontal(opt);    	non-compiled	[CE]  ';'  expected	14	None	replace
58	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]      abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	        abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	6	1	add
59	[BUG]  [BUGGY]      abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]      abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	        abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	6	1	add
60	[BUG]  [BUGGY]      abuilder.reset();  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.withString(String.valueOf(opt));  }  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]      abuilder.reset();  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.withString(String.valueOf(opt));  }  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	        abuilder.reset();    if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.withString(String.valueOf(opt));  }	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
61	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]      abuilder.reset();  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	        abuilder.reset();    if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	6	1	add
62	[BUG]  [BUGGY]      abuilder.reset();  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]      abuilder.reset();  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	        abuilder.reset();    if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	6	1	add
63	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]      abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	        abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	6	1	add
64	[BUG]  [BUGGY]      abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]      abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	        abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	6	1	add
65	[BUG]  [BUGGY]  obuilder.withString(String.valueOf(opt));  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  obuilder.withString(String.valueOf(opt));  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withString(String.valueOf(opt));	      abuilder.withString(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
66	[BUG]  [BUGGY]  abuilder.withHorizontalValue(1);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withHorizontalValue(1);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontalValue(1);	      abuilder.reset();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
67	[BUG]  [BUGGY]  obuilder.withHorizontalName(String.valueOf(opt));  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  obuilder.withHorizontalName(String.valueOf(opt));  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withHorizontalName(String.valueOf(opt));	      abuilder.withHorizontalName(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
68	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMinimum(1);  abuilder.withMinimum(opt);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(1);    abuilder.withMinimum(opt);	  	compilable	  [FE]  IllegalArgumentException  	10	1	add
69	[BUG]  [BUGGY]  abuilder.withMinimum(1);  abuilder.withMinimum(opt);  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMinimum(1);  abuilder.withMinimum(opt);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);    abuilder.withMinimum(opt);	  	compilable	  [FE]  IllegalArgumentException  	10	1	add
70	[BUG]  [BUGGY]  abuilder.withOption(opt);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withOption(opt);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withOption(opt);	  abuilder.withMinimum(1);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
71	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMinimum(2);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(2);	  abuilder.withMinimum(1);    	compilable	  [FE]  ComparisonFailure  	11	1	replace
72	[BUG]  [BUGGY]  abuilder.withMinimum(2);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMinimum(2);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(2);	  abuilder.withMinimum(1);    	compilable	  [FE]  ComparisonFailure  	11	1	replace
73	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMinimum(0);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(0);	  abuilder.withMinimum(1);    	compilable	  [FE]  ComparisonFailure  	11	1	replace
74	[BUG]  [BUGGY]  abuilder.withMinimum(0);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withMinimum(0);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(0);	  abuilder.withMinimum(1);    	compilable	  [FE]  ComparisonFailure  	11	1	replace
75	[BUG]  [BUGGY]  abuilder.withString( "* "  +  opt);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withString( "* "  +  opt);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString( "* "  +  opt);	      abuilder.withString(   "*   ");    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
76	[BUG]  [BUGGY]  abuilder.withShortName(opt.valueOf(String.valueOf(opt));  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withShortName(opt.valueOf(String.valueOf(opt));  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withShortName(opt.valueOf(String.valueOf(opt));	      abuilder.withShortName(String.valueOf(opt));    	non-compiled	[CE]  ')'  expected	1	None	replace
77	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  obuilder.withShortName(String.valueOf(opt));  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	obuilder.withShortName(String.valueOf(opt));	      abuilder.withShortName(String.valueOf(opt));    	compilable	  [FE]  ComparisonFailure  	1	1	replace
78	[BUG]  [BUGGY]  obuilder.withShortName(String.valueOf(opt));  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  obuilder.withShortName(String.valueOf(opt));  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withShortName(String.valueOf(opt));	      abuilder.withShortName(String.valueOf(opt));    	compilable	  [FE]  ComparisonFailure  	1	1	replace
79	[BUG]  [BUGGY]  abuilder.withHorizontalName(String.valueOf(opt)+  1);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withHorizontalName(String.valueOf(opt)+  1);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontalName(String.valueOf(opt)+  1);	      abuilder.withHorizontalName(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
80	[BUG]  [BUGGY]  abuilder.withShortName(opt.valueOf(opt));  [CE]  char  cannot  be  dereferenced  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withShortName(opt.valueOf(opt));  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withShortName(opt.valueOf(opt));	      abuilder.withShortName(String.valueOf(opt));    	non-compiled	[CE]  char  cannot  be  dereferenced	1	None	replace
81	[BUG]  [BUGGY]      abuilder.withMaximum(1);  abuilder.withMaximum(options);  [CE]  method  withMaximum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]      abuilder.withMaximum(1);  abuilder.withMaximum(options);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	        abuilder.withMaximum(1);    abuilder.withMaximum(options);	  	non-compiled	[CE]  method  withMaximum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	3	None	add
82	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]      abuilder.withMaximum(1);  abuilder.withMaximum(opt);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	        abuilder.withMaximum(1);    abuilder.withMaximum(opt);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
83	[BUG]  [BUGGY]      abuilder.withMaximum(1);  abuilder.withMaximum(opt);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]      abuilder.withMaximum(1);  abuilder.withMaximum(opt);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	        abuilder.withMaximum(1);    abuilder.withMaximum(opt);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
84	[BUG]  [BUGGY]  abuilder.withString( "* ".);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withString( "* ".);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString( "* ".);	      abuilder.withString(   "*   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
85	[BUG]  [BUGGY]      abuilder.reset();  if(abuilder.reset())  {  abuilder.reset();  }  else  {  abuilder.withString(String.valueOf(opt));  }  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]      abuilder.reset();  if(abuilder.reset())  {  abuilder.reset();  }  else  {  abuilder.withString(String.valueOf(opt));  }  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	        abuilder.reset();    if(abuilder.reset())  {  abuilder.reset();  }  else  {  abuilder.withString(String.valueOf(opt));  }	  	non-compiled	[CE]  incompatible  types	6	None	add
86	[BUG]  [BUGGY]      abuilder.reset();  if(abuilder.isRequired())  {  abuilder.reset();  }  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]      abuilder.reset();  if(abuilder.isRequired())  {  abuilder.reset();  }  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	        abuilder.reset();    if(abuilder.isRequired())  {  abuilder.reset();  }	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
87	[BUG]  [BUGGY]      abuilder.reset();  if(abuilder.isRequired())  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]      abuilder.reset();  if(abuilder.isRequired())  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	        abuilder.reset();    if(abuilder.isRequired())  {  abuilder.reset();  }  else  {  abuilder.reset();  }	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
88	[BUG]  [BUGGY]  abuilder.withHorizontal(opt  +  1);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withHorizontal(opt  +  1);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontal(opt  +  1);	      abuilder.withHorizontal(opt);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
89	[BUG]  [BUGGY]  abuilder.set(opt);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.set(opt);  [BUGGY]    }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.set(opt);	  abuilder.withMinimum(1);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
90	[BUG]  [BUGGY]  abuilder.withString(String.valueOf(opt,  type));  [CE]  no  suitable  method  found  for  valueOf(char,char)  [FE]        ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withString(String.valueOf(opt,  type));  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString(String.valueOf(opt,  type));	      abuilder.withString(String.valueOf(opt));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(char,char)	15	None	replace
91	[BUG]  [BUGGY]  abuilder.withHorizontalMaximum(1);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {    [BUGGY]  abuilder.withHorizontalMaximum(1);  [BUGGY]    abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontalMaximum(1);	      abuilder.withMaximum(1);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
