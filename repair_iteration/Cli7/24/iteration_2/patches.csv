bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  abuilder.withShortName(opt.valueOf(type));  [CE]  char  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withShortName(opt.valueOf(type));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withShortName(opt.valueOf(type));	  abuilder.withShortName(opt.valueOf(opt));    	non-compiled	[CE]  char  cannot  be  dereferenced	80	None	replace
2	[BUG]  [BUGGY]  abuilder.withShortName(opt,  String.valueOf(opt));  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withShortName(opt,  String.valueOf(opt));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withShortName(opt,  String.valueOf(opt));	  abuilder.withShortName(opt.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
3	[BUG]  [BUGGY]  abuilder.withShortName( "* ",  type);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withShortName( "* ",  type);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withShortName( "* ",  type);	  abuilder.withShortName(   "*   ");    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
4	[BUG]  [BUGGY]  abuilder.withShortName( ",* ");  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withShortName( ",* ");  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withShortName( ",* ");	  abuilder.withShortName(   "*   ");    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
5	[BUG]  [BUGGY]  abuilder.withString( "[ ");  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withString( "[ ");  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString( "[ ");	  abuilder.withString(   "*   ".);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
6	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(3);  abuilder.withMaximum(2);  abuilder.withMaximum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(2);        abuilder.withMaximum(3);    abuilder.withMaximum(2);  abuilder.withMaximum(3);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
7	[BUG]  [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(3);  abuilder.withMaximum(2);  abuilder.withMaximum(3);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(3);  abuilder.withMaximum(2);  abuilder.withMaximum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);        abuilder.withMaximum(3);    abuilder.withMaximum(2);  abuilder.withMaximum(3);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
8	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(3);  abuilder.withMinimum(2);  abuilder.withMaximum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(2);        abuilder.withMaximum(3);    abuilder.withMinimum(2);  abuilder.withMaximum(3);	  	compilable	  [FE]  IllegalArgumentException  	6	1	add
9	[BUG]  [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(3);  abuilder.withMinimum(2);  abuilder.withMaximum(3);  [FE]  IllegalArgumentException  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(3);  abuilder.withMinimum(2);  abuilder.withMaximum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);        abuilder.withMaximum(3);    abuilder.withMinimum(2);  abuilder.withMaximum(3);	  	compilable	  [FE]  IllegalArgumentException  	6	1	add
10	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(3);  abuilder.withMaximum(2);  abuilder.withMinimum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(2);        abuilder.withMaximum(3);    abuilder.withMaximum(2);  abuilder.withMinimum(3);	  	compilable	  [FE]  IllegalArgumentException  	6	1	add
11	[BUG]  [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(3);  abuilder.withMaximum(2);  abuilder.withMinimum(3);  [FE]  IllegalArgumentException  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(3);  abuilder.withMaximum(2);  abuilder.withMinimum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);        abuilder.withMaximum(3);    abuilder.withMaximum(2);  abuilder.withMinimum(3);	  	compilable	  [FE]  IllegalArgumentException  	6	1	add
12	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(3);  abuilder.withMaximum(3);  abuilder.withMaximum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(2);        abuilder.withMaximum(3);    abuilder.withMaximum(3);  abuilder.withMaximum(3);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
13	[BUG]  [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(3);  abuilder.withMaximum(3);  abuilder.withMaximum(3);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(3);  abuilder.withMaximum(3);  abuilder.withMaximum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);        abuilder.withMaximum(3);    abuilder.withMaximum(3);  abuilder.withMaximum(3);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
14	[BUG]  [BUGGY]  abuilder.withString(String.valueOf(opt),  type,  required);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withString(String.valueOf(opt),  type,  required);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString(String.valueOf(opt),  type,  required);	  abuilder.withString(String.valueOf(opt),    type);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
15	[BUG]  [BUGGY]  abuilder.withString( "* "  +  opt,  required);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withString( "* "  +  opt,  required);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString( "* "  +  opt,  required);	  abuilder.withString(   "*   "    +    opt);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
16	[BUG]  [BUGGY]  abuilder.withString( "* "  +  type);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withString( "* "  +  type);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString( "* "  +  type);	  abuilder.withString(   "*   "    +    opt);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
17	[BUG]  [BUGGY]  abuilder.withString( "* "  +  opt,  type);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withString( "* "  +  opt,  type);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString( "* "  +  opt,  type);	  abuilder.withString(   "*   "    +    opt);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
18	[BUG]  [BUGGY]  abuilder.withHorizontalName(String.valueOf(opt)+  1,  type);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontalName(String.valueOf(opt)+  1,  type);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontalName(String.valueOf(opt)+  1,  type);	  abuilder.withHorizontalName(String.valueOf(opt)+    1);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
19	[BUG]  [BUGGY]  abuilder.withHorizontalName(String.valueOf(opt)+  2);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontalName(String.valueOf(opt)+  2);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontalName(String.valueOf(opt)+  2);	  abuilder.withHorizontalName(String.valueOf(opt)+    1);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
20	[BUG]  [BUGGY]  abuilder.withHorizontalName(String.valueOf(opt)+  3);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontalName(String.valueOf(opt)+  3);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontalName(String.valueOf(opt)+  3);	  abuilder.withHorizontalName(String.valueOf(opt)+    1);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
21	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMaximum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);        abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	51	1	add
22	[BUG]  [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMaximum(2);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMaximum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);        abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	51	1	add
23	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(2);  abuilder.withMaximum(0);  abuilder.withMaximum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);        abuilder.withMaximum(2);    abuilder.withMaximum(0);  abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	51	1	add
24	[BUG]  [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(2);  abuilder.withMaximum(0);  abuilder.withMaximum(2);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(2);  abuilder.withMaximum(0);  abuilder.withMaximum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);        abuilder.withMaximum(2);    abuilder.withMaximum(0);  abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	51	1	add
25	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(2);  abuilder.withMaximum(2);  abuilder.withMaximum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);        abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	51	1	add
26	[BUG]  [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(2);  abuilder.withMaximum(2);  abuilder.withMaximum(2);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(2);  abuilder.withMaximum(2);  abuilder.withMaximum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);        abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	51	1	add
27	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(2);  abuilder.withMinimum(1);  abuilder.withMaximum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);        abuilder.withMaximum(2);    abuilder.withMinimum(1);  abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	51	1	add
28	[BUG]  [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(2);  abuilder.withMinimum(1);  abuilder.withMaximum(2);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(2);  abuilder.withMinimum(1);  abuilder.withMaximum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);        abuilder.withMaximum(2);    abuilder.withMinimum(1);  abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	51	1	add
29	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMaximum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);        abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMaximum(3);	  	compilable	  [FE]  ComparisonFailure  	51	1	add
30	[BUG]  [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMaximum(3);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMaximum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);        abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMaximum(3);	  	compilable	  [FE]  ComparisonFailure  	51	1	add
31	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.reset();        if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    abuilder.reset();  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	61	1	add
32	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    abuilder.reset();  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	61	1	add
33	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
34	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  abuilder.reset();  if(opt  ==  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.reset();        if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    abuilder.reset();  if(opt  ==  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	61	1	add
35	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  abuilder.reset();  if(opt  ==  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  abuilder.reset();  if(opt  ==  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    abuilder.reset();  if(opt  ==  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	61	1	add
36	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  if(opt!=  '*')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  if(opt!=  '*')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  if(opt!=  '*')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
37	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '*')  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '*')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    abuilder.reset();  if(opt!=  '*')  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
38	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	62	1	replace
39	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	62	1	replace
40	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	if(opt!=  '[')  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	62	1	replace
41	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt!=  '[')  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	62	1	replace
42	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withShortName(String.valueOf(type));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	obuilder.withShortName(String.valueOf(type));	  obuilder.withShortName(String.valueOf(opt));    	compilable	  [FE]  ComparisonFailure  	78	1	replace
43	[BUG]  [BUGGY]  obuilder.withShortName(String.valueOf(type));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withShortName(String.valueOf(type));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withShortName(String.valueOf(type));	  obuilder.withShortName(String.valueOf(opt));    	compilable	  [FE]  ComparisonFailure  	78	1	replace
44	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withShortName(String.valueOf(opt)+  1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	obuilder.withShortName(String.valueOf(opt)+  1);	  obuilder.withShortName(String.valueOf(opt));    	compilable	  [FE]  ComparisonFailure  	78	1	replace
45	[BUG]  [BUGGY]  obuilder.withShortName(String.valueOf(opt)+  1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withShortName(String.valueOf(opt)+  1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withShortName(String.valueOf(opt)+  1);	  obuilder.withShortName(String.valueOf(opt));    	compilable	  [FE]  ComparisonFailure  	78	1	replace
46	[BUG]  [BUGGY]  Abuilder.withMaximum(1);  [CE]  cannot  find  symbol  Abuilder  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  Abuilder.withMaximum(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	Abuilder.withMaximum(1);	          abuilder.withMaximum(1);    Abuilder.withMaximum(1);    	non-compiled	[CE]  cannot  find  symbol  Abuilder	29	None	replace
47	[BUG]  [BUGGY]  abuilder.withHorizontal(opt,  type);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontal(opt,  type);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontal(opt,  type);	  abuilder.withHorizontal(opt,    required);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
48	[BUG]  [BUGGY]  abuilder.withHorizontal(opt,  preferred);  [CE]  cannot  find  symbol  preferred  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontal(opt,  preferred);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontal(opt,  preferred);	  abuilder.withHorizontal(opt,    required);    	non-compiled	[CE]  cannot  find  symbol  preferred	19	None	replace
49	[BUG]  [BUGGY]  abuilder.withOption(type);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withOption(type);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withOption(type);	  abuilder.withOption(opt);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
50	[BUG]  [BUGGY]  abuilder.withOption(option);  [CE]  cannot  find  symbol  option  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withOption(option);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withOption(option);	  abuilder.withOption(opt);    	non-compiled	[CE]  cannot  find  symbol  option	70	None	replace
51	[BUG]  [BUGGY]  abuilder.withOption(opt,  required);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withOption(opt,  required);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withOption(opt,  required);	  abuilder.withOption(opt);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
52	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(opt);  abuilder.withMinimum(1);  abuilder.withMinimum(opt);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(1);        abuilder.withMinimum(opt);    abuilder.withMinimum(1);  abuilder.withMinimum(opt);	  	compilable	  [FE]  IllegalArgumentException  	68	1	add
53	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(opt);  abuilder.withMinimum(1);  abuilder.withMinimum(opt);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(opt);  abuilder.withMinimum(1);  abuilder.withMinimum(opt);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(opt);    abuilder.withMinimum(1);  abuilder.withMinimum(opt);	  	compilable	  [FE]  IllegalArgumentException  	68	1	add
54	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(opt);  abuilder.withMinimum(1);  abuilder.withShortName(String.valueOf(opt));  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(opt);  abuilder.withMinimum(1);  abuilder.withShortName(String.valueOf(opt));  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(opt);    abuilder.withMinimum(1);  abuilder.withShortName(String.valueOf(opt));	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
55	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(opt);  abuilder.withMinimum(2);  abuilder.withMinimum(opt);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(1);        abuilder.withMinimum(opt);    abuilder.withMinimum(2);  abuilder.withMinimum(opt);	  	compilable	  [FE]  IllegalArgumentException  	68	1	add
56	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(opt);  abuilder.withMinimum(2);  abuilder.withMinimum(opt);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(opt);  abuilder.withMinimum(2);  abuilder.withMinimum(opt);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(opt);    abuilder.withMinimum(2);  abuilder.withMinimum(opt);	  	compilable	  [FE]  IllegalArgumentException  	68	1	add
57	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(opt);  abuilder.withMinimum(1);  abuilder.withMaximum(opt);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(1);        abuilder.withMinimum(opt);    abuilder.withMinimum(1);  abuilder.withMaximum(opt);	  	compilable	  [FE]  ComparisonFailure  	68	1	add
58	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(opt);  abuilder.withMinimum(1);  abuilder.withMaximum(opt);  [FE]  ComparisonFailure  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(opt);  abuilder.withMinimum(1);  abuilder.withMaximum(opt);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(opt);    abuilder.withMinimum(1);  abuilder.withMaximum(opt);	  	compilable	  [FE]  ComparisonFailure  	68	1	add
59	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(opt);  abuilder.WithMinimum(1);  abuilder.withMinimum(opt);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(opt);  abuilder.WithMinimum(1);  abuilder.withMinimum(opt);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(opt);    abuilder.WithMinimum(1);  abuilder.withMinimum(opt);	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
60	[BUG]  [BUGGY]  abuilder.withHorizontalName(String.valueOf(opt),  type,  required);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontalName(String.valueOf(opt),  type,  required);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontalName(String.valueOf(opt),  type,  required);	  abuilder.withHorizontalName(String.valueOf(opt),    type);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
61	[BUG]  [BUGGY]  abuilder.reset();  abuilder.withString(String.valueOf(opt));  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.reset();  abuilder.withString(String.valueOf(opt));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.reset();  abuilder.withString(String.valueOf(opt));	          abuilder.reset();    if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.withString(String.valueOf(opt));    }    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
62	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(2);  abuilder.withMinimum(1);  abuilder.withMinimum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(1);        abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(2);	  	compilable	  [FE]  IllegalArgumentException  	32	1	add
63	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(2);  abuilder.withMinimum(1);  abuilder.withMinimum(2);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(2);  abuilder.withMinimum(1);  abuilder.withMinimum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(2);	  	compilable	  [FE]  IllegalArgumentException  	32	1	add
64	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(2);  abuilder.withMinimum(2);  abuilder.withMinimum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(1);        abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(2);	  	compilable	  [FE]  IllegalArgumentException  	32	1	add
65	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(2);  abuilder.withMinimum(2);  abuilder.withMinimum(2);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(2);  abuilder.withMinimum(2);  abuilder.withMinimum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(2);	  	compilable	  [FE]  IllegalArgumentException  	32	1	add
66	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(2);  abuilder.withMinimum(1);  abuilder.withMinimum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(1);        abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(3);	  	compilable	  [FE]  IllegalArgumentException  	32	1	add
67	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(2);  abuilder.withMinimum(1);  abuilder.withMinimum(3);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(2);  abuilder.withMinimum(1);  abuilder.withMinimum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(2);    abuilder.withMinimum(1);  abuilder.withMinimum(3);	  	compilable	  [FE]  IllegalArgumentException  	32	1	add
68	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(2);  abuilder.WithMinimum(1);  abuilder.withMinimum(2);  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(2);  abuilder.WithMinimum(1);  abuilder.withMinimum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(2);    abuilder.WithMinimum(1);  abuilder.withMinimum(2);	  	non-compiled	[CE]  cannot  find  symbol	32	None	add
69	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(3);  abuilder.withMinimum(1);  abuilder.withMinimum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(1);        abuilder.withMinimum(3);    abuilder.withMinimum(1);  abuilder.withMinimum(3);	  	compilable	  [FE]  IllegalArgumentException  	37	1	add
70	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(3);  abuilder.withMinimum(1);  abuilder.withMinimum(3);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(3);  abuilder.withMinimum(1);  abuilder.withMinimum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(3);    abuilder.withMinimum(1);  abuilder.withMinimum(3);	  	compilable	  [FE]  IllegalArgumentException  	37	1	add
71	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(3);  abuilder.withMinimum(2);  abuilder.withMinimum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(1);        abuilder.withMinimum(3);    abuilder.withMinimum(2);  abuilder.withMinimum(3);	  	compilable	  [FE]  IllegalArgumentException  	37	1	add
72	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(3);  abuilder.withMinimum(2);  abuilder.withMinimum(3);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(3);  abuilder.withMinimum(2);  abuilder.withMinimum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(3);    abuilder.withMinimum(2);  abuilder.withMinimum(3);	  	compilable	  [FE]  IllegalArgumentException  	37	1	add
73	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(3);  abuilder.WithMinimum(1);  abuilder.withMinimum(3);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(3);  abuilder.WithMinimum(1);  abuilder.withMinimum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(3);    abuilder.WithMinimum(1);  abuilder.withMinimum(3);	  	non-compiled	[CE]  cannot  find  symbol	37	None	add
74	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(3);  abuilder.withMinimum(1);  abuilder.withMinimum(4);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(1);        abuilder.withMinimum(3);    abuilder.withMinimum(1);  abuilder.withMinimum(4);	  	compilable	  [FE]  IllegalArgumentException  	37	1	add
75	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(3);  abuilder.withMinimum(1);  abuilder.withMinimum(4);  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(3);  abuilder.withMinimum(1);  abuilder.withMinimum(4);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(3);    abuilder.withMinimum(1);  abuilder.withMinimum(4);	  	compilable	  [FE]  IllegalArgumentException  	37	1	add
76	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMaximum(1);  abuilder.withMaximum(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.withMaximum(1);        abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	23	1	add
77	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMaximum(1);  abuilder.withMaximum(1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMaximum(1);  abuilder.withMaximum(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	23	1	add
78	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMinimum(1);  abuilder.withMaximum(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.withMaximum(1);        abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	23	1	add
79	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMinimum(1);  abuilder.withMaximum(1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMinimum(1);  abuilder.withMaximum(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	23	1	add
80	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMaximum(1);  abuilder.withMinimum(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.withMaximum(1);        abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	23	1	add
81	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMaximum(1);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMaximum(1);  abuilder.withMinimum(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	23	1	add
82	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.WithMaximum(1);  abuilder.withMaximum(1);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.WithMaximum(1);  abuilder.withMaximum(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMaximum(1);    abuilder.WithMaximum(1);  abuilder.withMaximum(1);	  	non-compiled	[CE]  cannot  find  symbol	23	None	add
83	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(1);  Abuilder.withMaximum(1);  abuilder.withMaximum(1);  [CE]  cannot  find  symbol  Abuilder  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(1);  Abuilder.withMaximum(1);  abuilder.withMaximum(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMaximum(1);    Abuilder.withMaximum(1);  abuilder.withMaximum(1);	  	non-compiled	[CE]  cannot  find  symbol  Abuilder	23	None	add
84	[BUG]  [BUGGY]  abuilder.withString( "* ",  opt,  required);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withString( "* ",  opt,  required);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString( "* ",  opt,  required);	  abuilder.withString(   "*   ",    opt);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
85	[BUG]  [BUGGY]  abuilder.withString( "* ",  opt,  type);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withString( "* ",  opt,  type);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString( "* ",  opt,  type);	  abuilder.withString(   "*   ",    opt);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
86	[BUG]  [BUGGY]  abuilder.withHorizontalName(String.valueOf(opt,  type),  required);  [CE]  no  suitable  method  found  for  valueOf(char,char)  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontalName(String.valueOf(opt,  type),  required);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontalName(String.valueOf(opt,  type),  required);	  abuilder.withHorizontalName(String.valueOf(opt,    type));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(char,char)	46	None	replace
87	[BUG]  [BUGGY]  abuilder.withHorizontalName(String.valueOf(opt,  type),  preferred);  [CE]  no  suitable  method  found  for  valueOf(char,char)  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontalName(String.valueOf(opt,  type),  preferred);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontalName(String.valueOf(opt,  type),  preferred);	  abuilder.withHorizontalName(String.valueOf(opt,    type));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(char,char)	46	None	replace
88	[BUG]  [BUGGY]  abuilder.withHorizontalName(String.valueOf(opt,  type),  gbuilder);  [CE]  no  suitable  method  found  for  valueOf(char,char)  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontalName(String.valueOf(opt,  type),  gbuilder);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontalName(String.valueOf(opt,  type),  gbuilder);	  abuilder.withHorizontalName(String.valueOf(opt,    type));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(char,char)	46	None	replace
89	[BUG]  [BUGGY]  abuilder.withHorizontalName(String.valueOf(opt,  type)+  1);  [CE]  no  suitable  method  found  for  valueOf(char,char)  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontalName(String.valueOf(opt,  type)+  1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontalName(String.valueOf(opt,  type)+  1);	  abuilder.withHorizontalName(String.valueOf(opt,    type));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(char,char)	46	None	replace
90	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(opt);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(opt);	          abuilder.withMaximum(1);    abuilder.withMinimum(1);    	compilable	  [FE]  ComparisonFailure  	26	1	replace
91	[BUG]  [BUGGY]  abuilder.withMaximum(opt);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(opt);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(opt);	          abuilder.withMaximum(1);    abuilder.withMinimum(1);    	compilable	  [FE]  ComparisonFailure  	26	1	replace
92	[BUG]  [BUGGY]  obuilder.withHorizontal(type);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withHorizontal(type);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withHorizontal(type);	  obuilder.withHorizontal(opt);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
93	[BUG]  [BUGGY]  obuilder.withHorizontal(opt,  required);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withHorizontal(opt,  required);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withHorizontal(opt,  required);	  obuilder.withHorizontal(opt);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
94	[BUG]  [BUGGY]  abuilder.withHorizontalMaximum(2);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontalMaximum(2);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontalMaximum(2);	  abuilder.withHorizontalMaximum(1);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
95	[BUG]  [BUGGY]  abuilder.withHorizontalMaximum(type);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontalMaximum(type);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontalMaximum(type);	  abuilder.withHorizontalMaximum(1);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
96	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(0);  abuilder.withMinimum(0);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(0);    abuilder.withMinimum(0);	  	compilable	  [FE]  ComparisonFailure  	73	1	add
97	[BUG]  [BUGGY]  abuilder.withMinimum(0);  abuilder.withMinimum(0);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(0);  abuilder.withMinimum(0);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(0);    abuilder.withMinimum(0);	  	compilable	  [FE]  ComparisonFailure  	73	1	add
98	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(0);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(0);    abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	73	1	add
99	[BUG]  [BUGGY]  abuilder.withMinimum(0);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(0);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(0);    abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	73	1	add
100	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(0);  abuilder.withMinimum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(0);    abuilder.withMinimum(2);	  	compilable	  [FE]  IllegalArgumentException  	73	1	add
101	[BUG]  [BUGGY]  abuilder.withMinimum(0);  abuilder.withMinimum(2);  [FE]  IllegalArgumentException  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(0);  abuilder.withMinimum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(0);    abuilder.withMinimum(2);	  	compilable	  [FE]  IllegalArgumentException  	73	1	add
102	[BUG]  [BUGGY]  abuilder.withMinimum(0);  abuilder.withMinimum(options);  [CE]  method  withMinimum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(0);  abuilder.withMinimum(options);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(0);    abuilder.withMinimum(options);	  	non-compiled	[CE]  method  withMinimum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	73	None	add
103	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.reset();        if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	58	1	add
104	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	58	1	add
105	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.reset();        if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	58	1	add
106	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	58	1	add
107	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.re  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.re  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.re	  	non-compiled	[CE]  ';'  expected	58	None	add
108	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
109	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.re  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.re  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.re	  	non-compiled	[CE]  ';'  expected	58	None	add
110	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMaximum(2);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.withMaximum(1);        abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
111	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMaximum(2);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMaximum(2);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
112	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMinimum(1);  abuilder.withMaximum(2);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.withMaximum(1);        abuilder.withMaximum(2);    abuilder.withMinimum(1);  abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
113	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMinimum(1);  abuilder.withMaximum(2);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMinimum(1);  abuilder.withMaximum(2);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMaximum(2);    abuilder.withMinimum(1);  abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
114	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMinimum(2);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.withMaximum(1);        abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMinimum(2);	  	compilable	  [FE]  IllegalArgumentException  	27	1	add
115	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMinimum(2);  [FE]  IllegalArgumentException  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMinimum(2);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMinimum(2);	  	compilable	  [FE]  IllegalArgumentException  	27	1	add
116	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMaximum(3);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.withMaximum(1);        abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMaximum(3);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
117	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMaximum(3);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMaximum(3);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMaximum(3);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
118	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(2);  Abuilder.withMaximum(1);  abuilder.withMaximum(2);  [CE]  cannot  find  symbol  Abuilder  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(2);  Abuilder.withMaximum(1);  abuilder.withMaximum(2);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMaximum(2);    Abuilder.withMaximum(1);  abuilder.withMaximum(2);	  	non-compiled	[CE]  cannot  find  symbol  Abuilder	27	None	add
119	[BUG]  [BUGGY]  abuilder.withHorizontalValue(type);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontalValue(type);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontalValue(type);	  abuilder.withHorizontalValue(1);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
120	[BUG]  [BUGGY]  abuilder.withHorizontalValue(opt);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontalValue(opt);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontalValue(opt);	  abuilder.withHorizontalValue(1);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
121	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(opt);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(opt);	  abuilder.withMinimum(1);    abuilder.withMinimum(opt);    	compilable	  [FE]  ComparisonFailure  	69	1	replace
122	[BUG]  [BUGGY]  abuilder.withMinimum(opt);  [FE]  ComparisonFailure  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(opt);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(opt);	  abuilder.withMinimum(1);    abuilder.withMinimum(opt);    	compilable	  [FE]  ComparisonFailure  	69	1	replace
123	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMinimum(2);  abuilder.withMaximum(2);  abuilder.withMinimum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(2);        abuilder.withMinimum(2);    abuilder.withMaximum(2);  abuilder.withMinimum(2);	  	compilable	  [FE]  IllegalArgumentException  	8	1	add
124	[BUG]  [BUGGY]  abuilder.withMaximum(2);    abuilder.withMinimum(2);  abuilder.withMaximum(2);  abuilder.withMinimum(2);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMinimum(2);  abuilder.withMaximum(2);  abuilder.withMinimum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);        abuilder.withMinimum(2);    abuilder.withMaximum(2);  abuilder.withMinimum(2);	  	compilable	  [FE]  IllegalArgumentException  	8	1	add
125	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMinimum(2);  abuilder.withMaximum(2);  abuilder.withMinimum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(2);        abuilder.withMinimum(2);    abuilder.withMaximum(2);  abuilder.withMinimum(3);	  	compilable	  [FE]  IllegalArgumentException  	8	1	add
126	[BUG]  [BUGGY]  abuilder.withMaximum(2);    abuilder.withMinimum(2);  abuilder.withMaximum(2);  abuilder.withMinimum(3);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMinimum(2);  abuilder.withMaximum(2);  abuilder.withMinimum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);        abuilder.withMinimum(2);    abuilder.withMaximum(2);  abuilder.withMinimum(3);	  	compilable	  [FE]  IllegalArgumentException  	8	1	add
127	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(2);  abuilder.withMinimum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(2);        abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(2);	  	compilable	  [FE]  IllegalArgumentException  	8	1	add
128	[BUG]  [BUGGY]  abuilder.withMaximum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(2);  abuilder.withMinimum(2);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(2);  abuilder.withMinimum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);        abuilder.withMinimum(2);    abuilder.withMinimum(2);  abuilder.withMinimum(2);	  	compilable	  [FE]  IllegalArgumentException  	8	1	add
129	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMinimum(2);  abuilder.withMaximum(1);  abuilder.withMinimum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(2);        abuilder.withMinimum(2);    abuilder.withMaximum(1);  abuilder.withMinimum(2);	  	compilable	  [FE]  IllegalArgumentException  	8	1	add
130	[BUG]  [BUGGY]  abuilder.withMaximum(2);    abuilder.withMinimum(2);  abuilder.withMaximum(1);  abuilder.withMinimum(2);  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMinimum(2);  abuilder.withMaximum(1);  abuilder.withMinimum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);        abuilder.withMinimum(2);    abuilder.withMaximum(1);  abuilder.withMinimum(2);	  	compilable	  [FE]  IllegalArgumentException  	8	1	add
131	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMinimum(2);  abuilder.withMaximum(3);  abuilder.withMinimum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(2);        abuilder.withMinimum(2);    abuilder.withMaximum(3);  abuilder.withMinimum(2);	  	compilable	  [FE]  IllegalArgumentException  	8	1	add
132	[BUG]  [BUGGY]  abuilder.withMaximum(2);    abuilder.withMinimum(2);  abuilder.withMaximum(3);  abuilder.withMinimum(2);  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMinimum(2);  abuilder.withMaximum(3);  abuilder.withMinimum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);        abuilder.withMinimum(2);    abuilder.withMaximum(3);  abuilder.withMinimum(2);	  	compilable	  [FE]  IllegalArgumentException  	8	1	add
133	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMinimum(1);  abuilder.withMaximum(0);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);        abuilder.withMinimum(1);    abuilder.withMaximum(0);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	53	1	add
134	[BUG]  [BUGGY]  abuilder.withMaximum(0);    abuilder.withMinimum(1);  abuilder.withMaximum(0);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMinimum(1);  abuilder.withMaximum(0);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);        abuilder.withMinimum(1);    abuilder.withMaximum(0);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	53	1	add
135	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMinimum(1);  abuilder.withMaximum(1);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);        abuilder.withMinimum(1);    abuilder.withMaximum(1);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	53	1	add
136	[BUG]  [BUGGY]  abuilder.withMaximum(0);    abuilder.withMinimum(1);  abuilder.withMaximum(1);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMinimum(1);  abuilder.withMaximum(1);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);        abuilder.withMinimum(1);    abuilder.withMaximum(1);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	53	1	add
137	[BUG]  [BUGGY]  abuilder.withMaximum(0);    abuilder.withMinimum(1);  abuilder.withMaximum(;  abuilder.withMinimum(1);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMinimum(1);  abuilder.withMaximum(;  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);        abuilder.withMinimum(1);    abuilder.withMaximum(;  abuilder.withMinimum(1);	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
138	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMinimum(1);  abuilder.withMinimum(0);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);        abuilder.withMinimum(1);    abuilder.withMinimum(0);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	53	1	add
139	[BUG]  [BUGGY]  abuilder.withMaximum(0);    abuilder.withMinimum(1);  abuilder.withMinimum(0);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMinimum(1);  abuilder.withMinimum(0);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);        abuilder.withMinimum(1);    abuilder.withMinimum(0);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	53	1	add
140	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(0);  abuilder.withMinimum(1);  abuilder.withMinimum(0);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(1);        abuilder.withMinimum(0);    abuilder.withMinimum(1);  abuilder.withMinimum(0);	  	compilable	  [FE]  ComparisonFailure  	35	1	add
141	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(0);  abuilder.withMinimum(1);  abuilder.withMinimum(0);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(0);  abuilder.withMinimum(1);  abuilder.withMinimum(0);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(0);    abuilder.withMinimum(1);  abuilder.withMinimum(0);	  	compilable	  [FE]  ComparisonFailure  	35	1	add
142	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(0);  abuilder.withMinimum(1);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(1);        abuilder.withMinimum(0);    abuilder.withMinimum(1);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	35	1	add
143	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(0);  abuilder.withMinimum(1);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(0);  abuilder.withMinimum(1);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(0);    abuilder.withMinimum(1);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	35	1	add
144	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(0);  abuilder.withMinimum(2);  abuilder.withMinimum(0);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(1);        abuilder.withMinimum(0);    abuilder.withMinimum(2);  abuilder.withMinimum(0);	  	compilable	  [FE]  ComparisonFailure  	35	1	add
145	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(0);  abuilder.withMinimum(2);  abuilder.withMinimum(0);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(0);  abuilder.withMinimum(2);  abuilder.withMinimum(0);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(0);    abuilder.withMinimum(2);  abuilder.withMinimum(0);	  	compilable	  [FE]  ComparisonFailure  	35	1	add
146	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    abuilder.reset();  abuilder.reset();  abuilder.reset();  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.reset();        abuilder.reset();    abuilder.reset();  abuilder.reset();	  	compilable	  [FE]  ComparisonFailure  	12	1	add
147	[BUG]  [BUGGY]          abuilder.reset();    abuilder.reset();  abuilder.reset();  abuilder.reset();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    abuilder.reset();  abuilder.reset();  abuilder.reset();  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        abuilder.reset();    abuilder.reset();  abuilder.reset();	  	compilable	  [FE]  ComparisonFailure  	12	1	add
148	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    abuilder.reset();  if(type!=  '*')  {  abuilder.reset();  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.reset();        abuilder.reset();    if(type!=  '*')  {  abuilder.reset();  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	12	1	add
149	[BUG]  [BUGGY]          abuilder.reset();    abuilder.reset();  if(type!=  '*')  {  abuilder.reset();  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    abuilder.reset();  if(type!=  '*')  {  abuilder.reset();  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        abuilder.reset();    if(type!=  '*')  {  abuilder.reset();  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	12	1	add
150	[BUG]  [BUGGY]          abuilder.reset();    abuilder.reset();  Abuilder.reset();  abuilder.reset();  [CE]  cannot  find  symbol  Abuilder  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    abuilder.reset();  Abuilder.reset();  abuilder.reset();  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        abuilder.reset();    Abuilder.reset();  abuilder.reset();	  	non-compiled	[CE]  cannot  find  symbol  Abuilder	12	None	add
151	[BUG]  [BUGGY]          abuilder.reset();    abuilder.reset();  if(abuilder.reset();  abuilder.reset();  }  else  {  abuilder.reset();  }  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    abuilder.reset();  if(abuilder.reset();  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        abuilder.reset();    if(abuilder.reset();  abuilder.reset();  }  else  {  abuilder.reset();  }	  	non-compiled	[CE]  ')'  expected	12	None	add
152	[BUG]  [BUGGY]  abuilder.withHorizontal(type)  ==  abuilder.withMaximum(1);  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontal(type)  ==  abuilder.withMaximum(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontal(type)  ==  abuilder.withMaximum(1);	  abuilder.withHorizontal(opt)    	non-compiled	[CE]  not  a  statement	57	None	replace
153	[BUG]  [BUGGY]  abuilder.withHorizontal(type)!=  abuilder.withMaximum(1);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontal(type)!=  abuilder.withMaximum(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontal(type)!=  abuilder.withMaximum(1);	  abuilder.withHorizontal(opt)    	non-compiled	[CE]  not  a  statement	57	None	replace
154	[BUG]  [BUGGY]  abuilder.withHorizontal(opt)  ==  abuilder.withMaximum(1);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontal(opt)  ==  abuilder.withMaximum(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontal(opt)  ==  abuilder.withMaximum(1);	  abuilder.withHorizontal(opt)    	non-compiled	[CE]  not  a  statement	57	None	replace
155	[BUG]  [BUGGY]  abuilder.withHorizontal(opt)!=  abuilder.withMaximum(1);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontal(opt)!=  abuilder.withMaximum(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontal(opt)!=  abuilder.withMaximum(1);	  abuilder.withHorizontal(opt)    	non-compiled	[CE]  not  a  statement	57	None	replace
156	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.reset();        if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	63	1	add
157	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	63	1	add
158	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.reset();        if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	63	1	add
159	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	63	1	add
160	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
161	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  abuilder.reset();  if(opt  ==  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.reset();        if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    abuilder.reset();  if(opt  ==  '['  ||  opt  ==  ']')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	63	1	add
162	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  abuilder.reset();  if(opt  ==  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  abuilder.reset();  if(opt  ==  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    abuilder.reset();  if(opt  ==  '['  ||  opt  ==  ']')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	63	1	add
163	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  abuilder.reset();  if(opt  >=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.reset();        if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    abuilder.reset();  if(opt  >=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	63	1	add
164	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  abuilder.reset();  if(opt  >=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  abuilder.reset();  if(opt  >=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    abuilder.reset();  if(opt  >=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	63	1	add
165	[BUG]  [BUGGY]  abuilder.withHorizontal(type  +  1);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontal(type  +  1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontal(type  +  1);	  abuilder.withHorizontal(opt    +    1);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
166	[BUG]  [BUGGY]  abuilder.withHorizontal(opt  +  1,  type);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontal(opt  +  1,  type);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontal(opt  +  1,  type);	  abuilder.withHorizontal(opt    +    1);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
167	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withShortName(String.valueOf(opt));  obuilder.withShortName(String.valueOf(opt));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	obuilder.withShortName(String.valueOf(opt));    obuilder.withShortName(String.valueOf(opt));	  	compilable	  [FE]  ComparisonFailure  	77	1	add
168	[BUG]  [BUGGY]  obuilder.withShortName(String.valueOf(opt));  obuilder.withShortName(String.valueOf(opt));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withShortName(String.valueOf(opt));  obuilder.withShortName(String.valueOf(opt));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withShortName(String.valueOf(opt));    obuilder.withShortName(String.valueOf(opt));	  	compilable	  [FE]  ComparisonFailure  	77	1	add
169	[BUG]  [BUGGY]  obuilder.withShortName(String.valueOf(opt));  abuilder.withShortName(String.valueOf(opt));  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withShortName(String.valueOf(opt));  abuilder.withShortName(String.valueOf(opt));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withShortName(String.valueOf(opt));    abuilder.withShortName(String.valueOf(opt));	  	non-compiled	[CE]  cannot  find  symbol	77	None	add
170	[BUG]  [BUGGY]  obuilder.withShortName(String.valueOf(opt));  obuilder.WithShortName(String.valueOf(opt));  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withShortName(String.valueOf(opt));  obuilder.WithShortName(String.valueOf(opt));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withShortName(String.valueOf(opt));    obuilder.WithShortName(String.valueOf(opt));	  	non-compiled	[CE]  cannot  find  symbol	77	None	add
171	[BUG]  [BUGGY]  obuilder.withShortName(String.valueOf(opt));  obuilder.withShortName(String.valueOf(option));  [CE]  cannot  find  symbol  option  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withShortName(String.valueOf(opt));  obuilder.withShortName(String.valueOf(option));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withShortName(String.valueOf(opt));    obuilder.withShortName(String.valueOf(option));	  	non-compiled	[CE]  cannot  find  symbol  option	77	None	add
172	[BUG]  [BUGGY]  obuilder.withHorizontalName(String.valueOf(opt),  type);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withHorizontalName(String.valueOf(opt),  type);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withHorizontalName(String.valueOf(opt),  type);	  obuilder.withHorizontalName(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
173	[BUG]  [BUGGY]  obuilder.withHorizontalName(String.valueOf(type));  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withHorizontalName(String.valueOf(type));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withHorizontalName(String.valueOf(type));	  obuilder.withHorizontalName(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
174	[BUG]  [BUGGY]  AffineTransformer  abuilder.reset();  abuilder.isRequired();  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  AffineTransformer  abuilder.reset();  abuilder.isRequired();  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	AffineTransformer  abuilder.reset();  abuilder.isRequired();	          abuilder.reset();    if(abuilder.isRequired())    {    abuilder.reset();    }    	non-compiled	[CE]  ';'  expected	86	None	replace
175	[BUG]  [BUGGY]  abuilder.reset();  abuilder.withRequired(required);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.reset();  abuilder.withRequired(required);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.reset();  abuilder.withRequired(required);	          abuilder.reset();    if(abuilder.isRequired())    {    abuilder.reset();    }    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
176	[BUG]  [BUGGY]  abuilder.withShortName(String.valueOf(opt),  type,  required);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withShortName(String.valueOf(opt),  type,  required);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withShortName(String.valueOf(opt),  type,  required);	  abuilder.withShortName(String.valueOf(opt),    type);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
177	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(3);  abuilder.withMaximum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(3);    abuilder.withMaximum(3);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
178	[BUG]  [BUGGY]  abuilder.withMaximum(3);  abuilder.withMaximum(3);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(3);  abuilder.withMaximum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(3);    abuilder.withMaximum(3);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
179	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(3);  abuilder.withMinimum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(3);    abuilder.withMinimum(3);	  	compilable	  [FE]  IllegalArgumentException  	42	1	add
180	[BUG]  [BUGGY]  abuilder.withMaximum(3);  abuilder.withMinimum(3);  [FE]  IllegalArgumentException  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(3);  abuilder.withMinimum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(3);    abuilder.withMinimum(3);	  	compilable	  [FE]  IllegalArgumentException  	42	1	add
181	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(3);  abuilder.withMaximum(4);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(3);    abuilder.withMaximum(4);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
182	[BUG]  [BUGGY]  abuilder.withMaximum(3);  abuilder.withMaximum(4);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(3);  abuilder.withMaximum(4);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(3);    abuilder.withMaximum(4);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
183	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(3);  abuilder.withMaximum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(3);    abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
184	[BUG]  [BUGGY]  abuilder.withMaximum(3);  abuilder.withMaximum(2);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(3);  abuilder.withMaximum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(3);    abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	42	1	add
185	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.withMaximum(1);  abuilder.withMinimum(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.withMaximum(1);        abuilder.withMinimum(1);    abuilder.withMaximum(1);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	25	1	add
186	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.withMaximum(1);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.withMaximum(1);  abuilder.withMinimum(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMinimum(1);    abuilder.withMaximum(1);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	25	1	add
187	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.withMinimum(1);  abuilder.withMinimum(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.withMaximum(1);        abuilder.withMinimum(1);    abuilder.withMinimum(1);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	25	1	add
188	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.withMinimum(1);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.withMinimum(1);  abuilder.withMinimum(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMinimum(1);    abuilder.withMinimum(1);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	25	1	add
189	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.WithMaximum(1);  abuilder.withMinimum(1);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.WithMaximum(1);  abuilder.withMinimum(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMinimum(1);    abuilder.WithMaximum(1);  abuilder.withMinimum(1);	  	non-compiled	[CE]  cannot  find  symbol	25	None	add
190	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMinimum(1);  Abuilder.withMaximum(1);  abuilder.withMinimum(1);  [CE]  cannot  find  symbol  Abuilder  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMinimum(1);  Abuilder.withMaximum(1);  abuilder.withMinimum(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMinimum(1);    Abuilder.withMaximum(1);  abuilder.withMinimum(1);	  	non-compiled	[CE]  cannot  find  symbol  Abuilder	25	None	add
191	[BUG]  [BUGGY]  abuilder.withRequired(required);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withRequired(required);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withRequired(required);	          abuilder.reset();    if(abuilder.reset())    {    abuilder.reset();    }    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
192	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(1);  abuilder.withMinimum(1);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(1);        abuilder.withMinimum(1);    abuilder.withMinimum(1);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	30	1	add
193	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(1);  abuilder.withMinimum(1);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(1);  abuilder.withMinimum(1);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(1);    abuilder.withMinimum(1);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	30	1	add
194	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(1);  abuilder.WithMinimum(1);  abuilder.withMinimum(1);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(1);  abuilder.WithMinimum(1);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(1);    abuilder.WithMinimum(1);  abuilder.withMinimum(1);	  	non-compiled	[CE]  cannot  find  symbol	30	None	add
195	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(1);  abuilder.withMinimum(1);  abuilder.withMaximum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(1);        abuilder.withMinimum(1);    abuilder.withMinimum(1);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	30	1	add
196	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(1);  abuilder.withMinimum(1);  abuilder.withMaximum(1);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(1);  abuilder.withMinimum(1);  abuilder.withMaximum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(1);    abuilder.withMinimum(1);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	30	1	add
197	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(1);  abuilder.withMinimum(2);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(1);        abuilder.withMinimum(1);    abuilder.withMinimum(2);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	30	1	add
198	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(1);  abuilder.withMinimum(2);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(1);  abuilder.withMinimum(2);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(1);    abuilder.withMinimum(2);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	30	1	add
199	[BUG]  [BUGGY]  abuilder.withStringName(String.valueOf(opt));  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withStringName(String.valueOf(opt));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withStringName(String.valueOf(opt));	          abuilder.reset();    if(abuilder.reset())    {    abuilder.reset();    }    else    {    abuilder.withShortName(String.valueOf(opt));    }    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
200	[BUG]  [BUGGY]  ASTRequired.withStart(1);  [CE]  cannot  find  symbol  ASTRequired  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  ASTRequired.withStart(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	ASTRequired.withStart(1);	  abuilder.withStart(1);    	non-compiled	[CE]  cannot  find  symbol  ASTRequired	41	None	replace
201	[BUG]  [BUGGY]  abuilder.withEnd(1);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withEnd(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withEnd(1);	  abuilder.withStart(1);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
202	[BUG]  [BUGGY]  obuilder.withString(String.valueOf(opt),  type);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withString(String.valueOf(opt),  type);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withString(String.valueOf(opt),  type);	  obuilder.withString(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
203	[BUG]  [BUGGY]  obuilder.withString(String.valueOf(opt),  required);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withString(String.valueOf(opt),  required);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withString(String.valueOf(opt),  required);	  obuilder.withString(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
204	[BUG]  [BUGGY]  abuilder.withString(String.valueOf(opt,  type),  required);  [CE]  no  suitable  method  found  for  valueOf(char,char)  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withString(String.valueOf(opt,  type),  required);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString(String.valueOf(opt,  type),  required);	  abuilder.withString(String.valueOf(opt,    type));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(char,char)	90	None	replace
205	[BUG]  [BUGGY]  abuilder.withString(String.valueOf(opt,  type),  argument);  [CE]  no  suitable  method  found  for  valueOf(char,char)  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withString(String.valueOf(opt,  type),  argument);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString(String.valueOf(opt,  type),  argument);	  abuilder.withString(String.valueOf(opt,    type));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(char,char)	90	None	replace
206	[BUG]  [BUGGY]  abuilder.withString(String.valueOf(opt,  type)+  1);  [CE]  no  suitable  method  found  for  valueOf(char,char)  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withString(String.valueOf(opt,  type)+  1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString(String.valueOf(opt,  type)+  1);	  abuilder.withString(String.valueOf(opt,    type));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(char,char)	90	None	replace
207	[BUG]  [BUGGY]  abuilder.withString(String.valueOf(opt,  type),  arguments);  [CE]  no  suitable  method  found  for  valueOf(char,char)  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withString(String.valueOf(opt,  type),  arguments);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString(String.valueOf(opt,  type),  arguments);	  abuilder.withString(String.valueOf(opt,    type));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(char,char)	90	None	replace
208	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(2);  abuilder.withMaximum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(2);        abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	4	1	add
209	[BUG]  [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(2);  abuilder.withMaximum(2);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(2);  abuilder.withMaximum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);        abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	4	1	add
210	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMinimum(2);  abuilder.withMaximum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(2);        abuilder.withMaximum(2);    abuilder.withMinimum(2);  abuilder.withMaximum(2);	  	compilable	  [FE]  IllegalArgumentException  	4	1	add
211	[BUG]  [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMinimum(2);  abuilder.withMaximum(2);  [FE]  IllegalArgumentException  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMinimum(2);  abuilder.withMaximum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);        abuilder.withMaximum(2);    abuilder.withMinimum(2);  abuilder.withMaximum(2);	  	compilable	  [FE]  IllegalArgumentException  	4	1	add
212	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(2);  abuilder.withMinimum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(2);        abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMinimum(2);	  	compilable	  [FE]  IllegalArgumentException  	4	1	add
213	[BUG]  [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(2);  abuilder.withMinimum(2);  [FE]  IllegalArgumentException  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(2);  abuilder.withMinimum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);        abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMinimum(2);	  	compilable	  [FE]  IllegalArgumentException  	4	1	add
214	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMaximum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(2);        abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	4	1	add
215	[BUG]  [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMaximum(2);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMaximum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);        abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	4	1	add
216	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(2);  abuilder.withMaximum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(2);        abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	4	1	add
217	[BUG]  [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(2);  abuilder.withMaximum(1);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(2);  abuilder.withMaximum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);        abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	4	1	add
218	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(0);  abuilder.withMaximum(1);  abuilder.withMaximum(0);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);        abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMaximum(0);	  	compilable	  [FE]  ComparisonFailure  	49	1	add
219	[BUG]  [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(0);  abuilder.withMaximum(1);  abuilder.withMaximum(0);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(0);  abuilder.withMaximum(1);  abuilder.withMaximum(0);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);        abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMaximum(0);	  	compilable	  [FE]  ComparisonFailure  	49	1	add
220	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(0);  abuilder.withMaximum(0);  abuilder.withMaximum(0);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);        abuilder.withMaximum(0);    abuilder.withMaximum(0);  abuilder.withMaximum(0);	  	compilable	  [FE]  ComparisonFailure  	49	1	add
221	[BUG]  [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(0);  abuilder.withMaximum(0);  abuilder.withMaximum(0);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(0);  abuilder.withMaximum(0);  abuilder.withMaximum(0);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);        abuilder.withMaximum(0);    abuilder.withMaximum(0);  abuilder.withMaximum(0);	  	compilable	  [FE]  ComparisonFailure  	49	1	add
222	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(0);  abuilder.withMaximum(0);  abuilder.withMaximum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);        abuilder.withMaximum(0);    abuilder.withMaximum(0);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	49	1	add
223	[BUG]  [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(0);  abuilder.withMaximum(0);  abuilder.withMaximum(1);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(0);  abuilder.withMaximum(0);  abuilder.withMaximum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);        abuilder.withMaximum(0);    abuilder.withMaximum(0);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	49	1	add
224	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(0);  abuilder.withMaximum(1);  abuilder.withMaximum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);        abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	49	1	add
225	[BUG]  [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(0);  abuilder.withMaximum(1);  abuilder.withMaximum(1);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(0);  abuilder.withMaximum(1);  abuilder.withMaximum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);        abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	49	1	add
226	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(0);  abuilder.withMinimum(1);  abuilder.withMaximum(0);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);        abuilder.withMaximum(0);    abuilder.withMinimum(1);  abuilder.withMaximum(0);	  	compilable	  [FE]  ComparisonFailure  	49	1	add
227	[BUG]  [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(0);  abuilder.withMinimum(1);  abuilder.withMaximum(0);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(0);  abuilder.withMinimum(1);  abuilder.withMaximum(0);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);        abuilder.withMaximum(0);    abuilder.withMinimum(1);  abuilder.withMaximum(0);	  	compilable	  [FE]  ComparisonFailure  	49	1	add
228	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMaximum(0);  abuilder.withMaximum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);        abuilder.withMaximum(1);    abuilder.withMaximum(0);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	47	1	add
229	[BUG]  [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMaximum(0);  abuilder.withMaximum(1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMaximum(0);  abuilder.withMaximum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);        abuilder.withMaximum(1);    abuilder.withMaximum(0);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	47	1	add
230	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMaximum(1);  abuilder.withMaximum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);        abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	47	1	add
231	[BUG]  [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMaximum(1);  abuilder.withMaximum(1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMaximum(1);  abuilder.withMaximum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);        abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	47	1	add
232	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMinimum(0);  abuilder.withMaximum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);        abuilder.withMaximum(1);    abuilder.withMinimum(0);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	47	1	add
233	[BUG]  [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMinimum(0);  abuilder.withMaximum(1);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMinimum(0);  abuilder.withMaximum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);        abuilder.withMaximum(1);    abuilder.withMinimum(0);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	47	1	add
234	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMaximum(0);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);        abuilder.withMaximum(1);    abuilder.withMaximum(0);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	47	1	add
235	[BUG]  [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMaximum(0);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMaximum(0);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);        abuilder.withMaximum(1);    abuilder.withMaximum(0);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	47	1	add
236	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMinimum(1);  abuilder.withMaximum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);        abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	47	1	add
237	[BUG]  [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMinimum(1);  abuilder.withMaximum(1);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMinimum(1);  abuilder.withMaximum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);        abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	47	1	add
238	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(2);  abuilder.withMinimum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(2);    abuilder.withMinimum(2);	  	compilable	  [FE]  IllegalArgumentException  	71	1	add
239	[BUG]  [BUGGY]  abuilder.withMinimum(2);  abuilder.withMinimum(2);  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(2);  abuilder.withMinimum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(2);    abuilder.withMinimum(2);	  	compilable	  [FE]  IllegalArgumentException  	71	1	add
240	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(2);  abuilder.withMinimum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(2);    abuilder.withMinimum(3);	  	compilable	  [FE]  IllegalArgumentException  	71	1	add
241	[BUG]  [BUGGY]  abuilder.withMinimum(2);  abuilder.withMinimum(3);  [FE]  IllegalArgumentException  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(2);  abuilder.withMinimum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(2);    abuilder.withMinimum(3);	  	compilable	  [FE]  IllegalArgumentException  	71	1	add
242	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(2);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(2);    abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	71	1	add
243	[BUG]  [BUGGY]  abuilder.withMinimum(2);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(2);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(2);    abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	71	1	add
244	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(2);  abuilder.withMinimum(4);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(2);    abuilder.withMinimum(4);	  	compilable	  [FE]  IllegalArgumentException  	71	1	add
245	[BUG]  [BUGGY]  abuilder.withMinimum(2);  abuilder.withMinimum(4);  [FE]  IllegalArgumentException  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(2);  abuilder.withMinimum(4);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(2);    abuilder.withMinimum(4);	  	compilable	  [FE]  IllegalArgumentException  	71	1	add
246	[BUG]  [BUGGY]  abuilder.withShortName(opt.valueOf(String.valueOf(type));  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withShortName(opt.valueOf(String.valueOf(type));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withShortName(opt.valueOf(String.valueOf(type));	  abuilder.withShortName(opt.valueOf(String.valueOf(opt));    	non-compiled	[CE]  ')'  expected	76	None	replace
247	[BUG]  [BUGGY]  abuilder.withShortName(type.valueOf(String.valueOf(opt));  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withShortName(type.valueOf(String.valueOf(opt));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withShortName(type.valueOf(String.valueOf(opt));	  abuilder.withShortName(opt.valueOf(String.valueOf(opt));    	non-compiled	[CE]  ')'  expected	76	None	replace
248	[BUG]  [BUGGY]  abuilder.withShortName(opt.valueOf(String.valueOf(0));  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withShortName(opt.valueOf(String.valueOf(0));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withShortName(opt.valueOf(String.valueOf(0));	  abuilder.withShortName(opt.valueOf(String.valueOf(opt));    	non-compiled	[CE]  ')'  expected	76	None	replace
249	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(opt);  abuilder.withMaximum(1);  abuilder.withMaximum(opt);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.withMaximum(1);        abuilder.withMaximum(opt);    abuilder.withMaximum(1);  abuilder.withMaximum(opt);	  	compilable	  [FE]  ComparisonFailure  	82	1	add
250	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(opt);  abuilder.withMaximum(1);  abuilder.withMaximum(opt);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(opt);  abuilder.withMaximum(1);  abuilder.withMaximum(opt);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMaximum(opt);    abuilder.withMaximum(1);  abuilder.withMaximum(opt);	  	compilable	  [FE]  ComparisonFailure  	82	1	add
251	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(opt);  abuilder.withMinimum(1);  abuilder.withMaximum(opt);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.withMaximum(1);        abuilder.withMaximum(opt);    abuilder.withMinimum(1);  abuilder.withMaximum(opt);	  	compilable	  [FE]  ComparisonFailure  	82	1	add
252	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(opt);  abuilder.withMinimum(1);  abuilder.withMaximum(opt);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(opt);  abuilder.withMinimum(1);  abuilder.withMaximum(opt);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMaximum(opt);    abuilder.withMinimum(1);  abuilder.withMaximum(opt);	  	compilable	  [FE]  ComparisonFailure  	82	1	add
253	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(opt);  abuilder.withMaximum(1);  abuilder.withMinimum(opt);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.withMaximum(1);        abuilder.withMaximum(opt);    abuilder.withMaximum(1);  abuilder.withMinimum(opt);	  	compilable	  [FE]  IllegalArgumentException  	82	1	add
254	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(opt);  abuilder.withMaximum(1);  abuilder.withMinimum(opt);  [FE]  IllegalArgumentException  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(opt);  abuilder.withMaximum(1);  abuilder.withMinimum(opt);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMaximum(opt);    abuilder.withMaximum(1);  abuilder.withMinimum(opt);	  	compilable	  [FE]  IllegalArgumentException  	82	1	add
255	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(opt);  abuilder.withMaximum(1);  abuilder.withShortName(String.valueOf(opt));  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(opt);  abuilder.withMaximum(1);  abuilder.withShortName(String.valueOf(opt));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMaximum(opt);    abuilder.withMaximum(1);  abuilder.withShortName(String.valueOf(opt));	  	non-compiled	[CE]  cannot  find  symbol	82	None	add
256	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(opt);  abuilder.WithMaximum(1);  abuilder.withMaximum(opt);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(opt);  abuilder.WithMaximum(1);  abuilder.withMaximum(opt);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMaximum(opt);    abuilder.WithMaximum(1);  abuilder.withMaximum(opt);	  	non-compiled	[CE]  cannot  find  symbol	82	None	add
257	[BUG]  [BUGGY]  abuilder.withHorizontal(option);  [CE]  cannot  find  symbol  option  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontal(option);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontal(option);	  abuilder.withHorizontal(type);    	non-compiled	[CE]  cannot  find  symbol  option	18	None	replace
258	[BUG]  [BUGGY]  abuilder.withMaximum(options);  [CE]  method  withMaximum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(options);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(options);	          abuilder.withMaximum(1);    abuilder.withMaximum(options);    	non-compiled	[CE]  method  withMaximum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	81	None	replace
259	[BUG]  [BUGGY]  abuilder.withMaximum(options,  type);  [CE]  method  withMaximum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(options,  type);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(options,  type);	          abuilder.withMaximum(1);    abuilder.withMaximum(options);    	non-compiled	[CE]  method  withMaximum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	81	None	replace
260	[BUG]  [BUGGY]  abuilder.withString( "* ", "* ");  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withString( "* ", "* ");  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString( "* ", "* ");	  abuilder.withString(   "*   ",    type);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
261	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMaximum(2);  abuilder.withMaximum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(2);        abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	10	1	add
262	[BUG]  [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMaximum(2);  abuilder.withMaximum(1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMaximum(2);  abuilder.withMaximum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);        abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	10	1	add
263	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMinimum(2);  abuilder.withMaximum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(2);        abuilder.withMaximum(1);    abuilder.withMinimum(2);  abuilder.withMaximum(1);	  	compilable	  [FE]  IllegalArgumentException  	10	1	add
264	[BUG]  [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMinimum(2);  abuilder.withMaximum(1);  [FE]  IllegalArgumentException  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMinimum(2);  abuilder.withMaximum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);        abuilder.withMaximum(1);    abuilder.withMinimum(2);  abuilder.withMaximum(1);	  	compilable	  [FE]  IllegalArgumentException  	10	1	add
265	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMaximum(2);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(2);        abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	10	1	add
266	[BUG]  [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMaximum(2);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMaximum(2);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);        abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	10	1	add
267	[BUG]  [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(1);  Abuilder.withMaximum(2);  abuilder.withMaximum(1);  [CE]  cannot  find  symbol  Abuilder  [FE]          ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(1);  Abuilder.withMaximum(2);  abuilder.withMaximum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);        abuilder.withMaximum(1);    Abuilder.withMaximum(2);  abuilder.withMaximum(1);	  	non-compiled	[CE]  cannot  find  symbol  Abuilder	10	None	add
268	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(3);	  abuilder.withMinimum(1);    abuilder.withMinimum(3);    	compilable	  [FE]  ComparisonFailure  	38	1	replace
269	[BUG]  [BUGGY]  abuilder.withMinimum(3);  [FE]  ComparisonFailure  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(3);	  abuilder.withMinimum(1);    abuilder.withMinimum(3);    	compilable	  [FE]  ComparisonFailure  	38	1	replace
270	[BUG]  [BUGGY]  abuilder.withMinimum(options);  [CE]  method  withMinimum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(options);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(options);	  abuilder.withMinimum(1);    abuilder.withMinimum(options);    	non-compiled	[CE]  method  withMinimum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	34	None	replace
271	[BUG]  [BUGGY]  abuilder.withMinimum(options,  type);  [CE]  method  withMinimum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(options,  type);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(options,  type);	  abuilder.withMinimum(1);    abuilder.withMinimum(options);    	non-compiled	[CE]  method  withMinimum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	34	None	replace
272	[BUG]  [BUGGY]  abuilder.withMinimum(opt,  options);  [CE]  method  withMinimum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(opt,  options);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(opt,  options);	  abuilder.withMinimum(1);    abuilder.withMinimum(options);    	non-compiled	[CE]  method  withMinimum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	34	None	replace
273	[BUG]  [BUGGY]  abuilder.set(type);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.set(type);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.set(type);	  abuilder.set(opt);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
274	[BUG]  [BUGGY]  abuilder.set(opt,  type);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.set(opt,  type);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.set(opt,  type);	  abuilder.set(opt);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
275	[BUG]  [BUGGY]  abuilder.set(opt,  required);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.set(opt,  required);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.set(opt,  required);	  abuilder.set(opt);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
276	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withShortName( "* ");  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	obuilder.withShortName( "* ");	  abuilder.withShortName(   "*   ");    	compilable	  [FE]  ComparisonFailure  	20	1	replace
277	[BUG]  [BUGGY]  obuilder.withShortName( "* ");  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withShortName( "* ");  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withShortName( "* ");	  abuilder.withShortName(   "*   ");    	compilable	  [FE]  ComparisonFailure  	20	1	replace
278	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt  ==  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	if(opt  ==  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	62	1	replace
279	[BUG]  [BUGGY]  if(opt  ==  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt  ==  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt  ==  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	62	1	replace
280	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.withMinimum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.withMinimum(1);  }	          abuilder.reset();    if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	62	1	replace
281	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.withMinimum(1);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.withMinimum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.withMinimum(1);  }	          abuilder.reset();    if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	62	1	replace
282	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '[')  {  abuilder.withMinimum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	if(opt!=  '[')  {  abuilder.withMinimum(1);  }	          abuilder.reset();    if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	62	1	replace
283	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.withMinimum(1);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '[')  {  abuilder.withMinimum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt!=  '[')  {  abuilder.withMinimum(1);  }	          abuilder.reset();    if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	62	1	replace
284	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMaximum(1);  abuilder.withShortName(String.valueOf(opt));  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMaximum(1);  abuilder.withShortName(String.valueOf(opt));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withShortName(String.valueOf(opt));	  	non-compiled	[CE]  cannot  find  symbol	23	None	add
285	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMinimum(1);  abuilder.withMaximum(2);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);        abuilder.withMinimum(1);    abuilder.withMaximum(2);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	53	1	add
286	[BUG]  [BUGGY]  abuilder.withMaximum(0);    abuilder.withMinimum(1);  abuilder.withMaximum(2);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMinimum(1);  abuilder.withMaximum(2);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);        abuilder.withMinimum(1);    abuilder.withMaximum(2);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	53	1	add
287	[BUG]  [BUGGY]  abuilder.withHorizontal(opt)  ==  abuilder.withHorizontal(1);  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontal(opt)  ==  abuilder.withHorizontal(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontal(opt)  ==  abuilder.withHorizontal(1);	  abuilder.withHorizontal(opt)    	non-compiled	[CE]  not  a  statement	57	None	replace
288	[BUG]  [BUGGY]  abuilder.withHorizontal(opt)!=  abuilder.withHorizontal(1);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontal(opt)!=  abuilder.withHorizontal(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontal(opt)!=  abuilder.withHorizontal(1);	  abuilder.withHorizontal(opt)    	non-compiled	[CE]  not  a  statement	57	None	replace
289	[BUG]  [BUGGY]  abuilder.withHorizontal(opt)  >=  abuilder.withHorizontal(1);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontal(opt)  >=  abuilder.withHorizontal(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontal(opt)  >=  abuilder.withHorizontal(1);	  abuilder.withHorizontal(opt)    	non-compiled	[CE]  not  a  statement	57	None	replace
290	[BUG]  [BUGGY]  abuilder.withHorizontal(opt)  >>  abuilder.withHorizontal(1);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontal(opt)  >>  abuilder.withHorizontal(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontal(opt)  >>  abuilder.withHorizontal(1);	  abuilder.withHorizontal(opt)    	non-compiled	[CE]  not  a  statement	57	None	replace
291	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(0);  abuilder.withMaximum(1);  abuilder.withMinimum(0);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);        abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMinimum(0);	  	compilable	  [FE]  ComparisonFailure  	49	1	add
292	[BUG]  [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(0);  abuilder.withMaximum(1);  abuilder.withMinimum(0);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(0);  abuilder.withMaximum(1);  abuilder.withMinimum(0);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);        abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMinimum(0);	  	compilable	  [FE]  ComparisonFailure  	49	1	add
293	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	64	1	replace
294	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	64	1	replace
295	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	if(opt  ==  '['  ||  opt  ==  ']')  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	64	1	replace
296	[BUG]  [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt  ==  '['  ||  opt  ==  ']')  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	64	1	replace
297	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  if(abuilder.reset())  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  if(abuilder.reset())  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt!=  '[')  {  abuilder.reset();  if(abuilder.reset())  {  abuilder.reset();  }	          abuilder.reset();    if(abuilder.reset())    {    abuilder.reset();    }    else    {    abuilder.withShortName(String.valueOf(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
298	[BUG]  [BUGGY]  if(opt!=  '*')  {  abuilder.reset();  if(abuilder.reset())  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '*')  {  abuilder.reset();  if(abuilder.reset())  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt!=  '*')  {  abuilder.reset();  if(abuilder.reset())  {  abuilder.reset();  }	          abuilder.reset();    if(abuilder.reset())    {    abuilder.reset();    }    else    {    abuilder.withShortName(String.valueOf(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
299	[BUG]  [BUGGY]  if(opt!=  '*')  {  abuilder.reset();  if(abuilder.reset())  {  abuilder.withShortName(String.valueOf(opt));  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '*')  {  abuilder.reset();  if(abuilder.reset())  {  abuilder.withShortName(String.valueOf(opt));  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt!=  '*')  {  abuilder.reset();  if(abuilder.reset())  {  abuilder.withShortName(String.valueOf(opt));  }	          abuilder.reset();    if(abuilder.reset())    {    abuilder.reset();    }    else    {    abuilder.withShortName(String.valueOf(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
300	[BUG]  [BUGGY]  abuilder.withString(String.valueOf(option));  [CE]  cannot  find  symbol  option  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withString(String.valueOf(option));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString(String.valueOf(option));	  abuilder.withString(String.valueOf(type));    	non-compiled	[CE]  cannot  find  symbol  option	3	None	replace
301	[BUG]  [BUGGY]  obuilder.withString(String.valueOf(opt,  type));  [CE]  no  suitable  method  found  for  valueOf(char,char)  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withString(String.valueOf(opt,  type));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withString(String.valueOf(opt,  type));	  obuilder.withString(String.valueOf(opt));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(char,char)	65	None	replace
302	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.withMaximum(2);  abuilder.withMinimum(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.withMaximum(1);        abuilder.withMinimum(1);    abuilder.withMaximum(2);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	25	1	add
303	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.withMaximum(2);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMinimum(1);  abuilder.withMaximum(2);  abuilder.withMinimum(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMinimum(1);    abuilder.withMaximum(2);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	25	1	add
304	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(3);  Abuilder.withMinimum(1);  abuilder.withMinimum(3);  [CE]  cannot  find  symbol  Abuilder  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(3);  Abuilder.withMinimum(1);  abuilder.withMinimum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(3);    Abuilder.withMinimum(1);  abuilder.withMinimum(3);	  	non-compiled	[CE]  cannot  find  symbol  Abuilder	37	None	add
305	[BUG]  [BUGGY]  abuilder.withHorizontalName(String.valueOf(opt),  type  +  1);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontalName(String.valueOf(opt),  type  +  1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontalName(String.valueOf(opt),  type  +  1);	  abuilder.withHorizontalName(String.valueOf(opt),    type);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
306	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMinimum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);        abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMinimum(2);	  	compilable	  [FE]  IllegalArgumentException  	51	1	add
307	[BUG]  [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMinimum(2);  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(2);  abuilder.withMaximum(1);  abuilder.withMinimum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);        abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMinimum(2);	  	compilable	  [FE]  IllegalArgumentException  	51	1	add
308	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(2);  abuilder.withMaximum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(2);        abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(3);	  	compilable	  [FE]  ComparisonFailure  	4	1	add
309	[BUG]  [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(2);  abuilder.withMaximum(3);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(2);  abuilder.withMaximum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);        abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(3);	  	compilable	  [FE]  ComparisonFailure  	4	1	add
310	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
311	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
312	[BUG]  [BUGGY]  abuilder.withMinimum(2);  Abuilder.withMinimum(2);  [CE]  cannot  find  symbol  Abuilder  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(2);  Abuilder.withMinimum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(2);    Abuilder.withMinimum(2);	  	non-compiled	[CE]  cannot  find  symbol  Abuilder	71	None	add
313	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  if(abuilder.reset())  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  if(abuilder.reset())  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt!=  '.')  {  abuilder.reset();  if(abuilder.reset())  {  abuilder.reset();  }	          abuilder.reset();    if(abuilder.reset())    {    abuilder.reset();    }    else    {    abuilder.withString(String.valueOf(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
314	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(1);  Abuilder.withMinimum(1);  abuilder.withMinimum(1);  [CE]  cannot  find  symbol  Abuilder  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(1);  Abuilder.withMinimum(1);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(1);    Abuilder.withMinimum(1);  abuilder.withMinimum(1);	  	non-compiled	[CE]  cannot  find  symbol  Abuilder	30	None	add
315	[BUG]  [BUGGY]  obuilder.withHorizontal(opt  +  1);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withHorizontal(opt  +  1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withHorizontal(opt  +  1);	  abuilder.withHorizontal(opt    +    1);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
316	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    abuilder.reset();  abuilder.reset();  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.reset();        abuilder.reset();    abuilder.reset();	  	compilable	  [FE]  ComparisonFailure  	12	1	add
317	[BUG]  [BUGGY]          abuilder.reset();    abuilder.reset();  abuilder.reset();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    abuilder.reset();  abuilder.reset();  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        abuilder.reset();    abuilder.reset();	  	compilable	  [FE]  ComparisonFailure  	12	1	add
318	[BUG]  [BUGGY]          abuilder.reset();    abuilder.reset();  abuilder.reset();  if  (abuilder.reset();  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    abuilder.reset();  abuilder.reset();  if  (abuilder.reset();  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        abuilder.reset();    abuilder.reset();  if  (abuilder.reset();	  	non-compiled	[CE]  ')'  expected	12	None	add
319	[BUG]  [BUGGY]  if(options!=  null)  {  abuilder.withMaximum(1);  abuilder.withMaximum(options);  }  [CE]  method  withMaximum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(options!=  null)  {  abuilder.withMaximum(1);  abuilder.withMaximum(options);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(options!=  null)  {  abuilder.withMaximum(1);  abuilder.withMaximum(options);  }	          abuilder.withMaximum(1);    abuilder.withMaximum(options);    	non-compiled	[CE]  method  withMaximum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	81	None	replace
320	[BUG]  [BUGGY]  if(options!=  null)  {  abuilder.withMaximum(1);  abuilder.withMaximum(options);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  method  withMaximum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(options!=  null)  {  abuilder.withMaximum(1);  abuilder.withMaximum(options);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(options!=  null)  {  abuilder.withMaximum(1);  abuilder.withMaximum(options);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          abuilder.withMaximum(1);    abuilder.withMaximum(options);    	non-compiled	[CE]  method  withMaximum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	81	None	replace
321	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
322	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  Abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [CE]  cannot  find  symbol  Abuilder  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  Abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    Abuilder.reset();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }	  	non-compiled	[CE]  cannot  find  symbol  Abuilder	63	None	add
323	[BUG]  [BUGGY]  obuilder.withHorizontal(opt)  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withHorizontal(opt)  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withHorizontal(opt)	  obuilder.withHorizontal(opt);    	non-compiled	[CE]  ';'  expected	56	None	replace
324	[BUG]  [BUGGY]  obuilder.withHorizontalName(String.valueOf(opt,  type));  [CE]  no  suitable  method  found  for  valueOf(char,char)  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withHorizontalName(String.valueOf(opt,  type));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withHorizontalName(String.valueOf(opt,  type));	  obuilder.withHorizontalName(String.valueOf(opt));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(char,char)	67	None	replace
325	[BUG]  [BUGGY]  obuilder.withHorizontalName(String.valueOf(opt),  required);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withHorizontalName(String.valueOf(opt),  required);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withHorizontalName(String.valueOf(opt),  required);	  obuilder.withHorizontalName(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
326	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(3);  abuilder.withMaximum(2);  abuilder.withMaximum(4);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(2);        abuilder.withMaximum(3);    abuilder.withMaximum(2);  abuilder.withMaximum(4);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
327	[BUG]  [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(3);  abuilder.withMaximum(2);  abuilder.withMaximum(4);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(3);  abuilder.withMaximum(2);  abuilder.withMaximum(4);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);        abuilder.withMaximum(3);    abuilder.withMaximum(2);  abuilder.withMaximum(4);	  	compilable	  [FE]  ComparisonFailure  	6	1	add
328	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(0);  abuilder.withMinimum(opt);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(0);    abuilder.withMinimum(opt);	  	compilable	  [FE]  IllegalArgumentException  	73	1	add
329	[BUG]  [BUGGY]  abuilder.withMinimum(0);  abuilder.withMinimum(opt);  [FE]  IllegalArgumentException  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(0);  abuilder.withMinimum(opt);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(0);    abuilder.withMinimum(opt);	  	compilable	  [FE]  IllegalArgumentException  	73	1	add
330	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(0);  abuilder.withMinimum(2);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(1);        abuilder.withMinimum(0);    abuilder.withMinimum(2);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	35	1	add
331	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(0);  abuilder.withMinimum(2);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(0);  abuilder.withMinimum(2);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(0);    abuilder.withMinimum(2);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	35	1	add
332	[BUG]  [BUGGY]  abuilder.withString(opt);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withString(opt);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString(opt);	          abuilder.reset();    if(abuilder.reset())    {    abuilder.reset();    }    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
333	[BUG]  [BUGGY]  abuilder.withRequired();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withRequired();  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withRequired();	          abuilder.reset();    if(abuilder.isRequired())    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
334	[BUG]  [BUGGY]  obuilder.withShortName(String.valueOf(opt),  type);  [CE]  method  withShortName  in  class  DefaultOptionBuilder  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withShortName(String.valueOf(opt),  type);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withShortName(String.valueOf(opt),  type);	  abuilder.withShortName(String.valueOf(opt),    type);    	non-compiled	[CE]  method  withShortName  in  class  DefaultOptionBuilder  cannot  be  applied  to  given  types;	21	None	replace
335	[BUG]  [BUGGY]  abuilder.withShortName(String.valueOf(opt),  type  +  1);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withShortName(String.valueOf(opt),  type  +  1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withShortName(String.valueOf(opt),  type  +  1);	  abuilder.withShortName(String.valueOf(opt),    type);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
336	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '[')  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '[')  {  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    abuilder.reset();  if(opt!=  '[')  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
337	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '*')  {  abuilder.reset();  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  abuilder.reset();  if(opt!=  '*')  {  abuilder.reset();  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    abuilder.reset();  if(opt!=  '*')  {  abuilder.reset();  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
338	[BUG]  [BUGGY]  abuilder.withMaximum(1);  Abuilder.withMaximum(2);  [CE]  cannot  find  symbol  Abuilder  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(1);  Abuilder.withMaximum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(1);  Abuilder.withMaximum(2);	  abuilder.withMaximum(2);    Abuilder.withMaximum(2);    	non-compiled	[CE]  cannot  find  symbol  Abuilder	55	None	replace
339	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	59	1	replace
340	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	59	1	replace
341	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	if(opt  ==  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	59	1	replace
342	[BUG]  [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt  ==  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt  ==  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	59	1	replace
343	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.withMinimum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.withMinimum(1);  }	          abuilder.reset();    if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	59	1	replace
344	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.withMinimum(1);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.withMinimum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  else  {  abuilder.withMinimum(1);  }	          abuilder.reset();    if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	59	1	replace
345	[BUG]  [BUGGY]  obuilder.withShortName(String.valueOf(opt));  OptOptionBuilder  obuilder  =  gbuilder.create();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withShortName(String.valueOf(opt));  OptOptionBuilder  obuilder  =  gbuilder.create();  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withShortName(String.valueOf(opt));    OptOptionBuilder  obuilder  =  gbuilder.create();	  	non-compiled	[CE]  cannot  find  symbol	77	None	add
346	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(1);  abuilder.withMinimum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(1);  abuilder.withMinimum(2);	  abuilder.withMaximum(2);    abuilder.withMinimum(2);    	compilable	  [FE]  IllegalArgumentException  	9	1	replace
347	[BUG]  [BUGGY]  abuilder.withMaximum(1);  abuilder.withMinimum(2);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(1);  abuilder.withMinimum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(1);  abuilder.withMinimum(2);	  abuilder.withMaximum(2);    abuilder.withMinimum(2);    	compilable	  [FE]  IllegalArgumentException  	9	1	replace
348	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.withString(String.valueOf(opt));  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.withString(String.valueOf(opt));  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.withString(String.valueOf(opt));  }	          abuilder.reset();    if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.withString(String.valueOf(opt));    }    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
349	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.withString(string.valueOf(opt));  }  [CE]  cannot  find  symbol  string  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.withString(string.valueOf(opt));  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.withString(string.valueOf(opt));  }	          abuilder.reset();    if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.withString(String.valueOf(opt));    }    	non-compiled	[CE]  cannot  find  symbol  string	60	None	replace
350	[BUG]  [BUGGY]  abuilder.withHorizontalName(opt);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontalName(opt);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontalName(opt);	          abuilder.reset();    if(abuilder.reset())    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
351	[BUG]  [BUGGY]  obuilder.withOption(opt);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withOption(opt);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withOption(opt);	  abuilder.withOption(opt);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
352	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(2);  abuilder.withMaximum(2);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.withMaximum(1);        abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
353	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(2);  abuilder.withMaximum(2);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(2);  abuilder.withMaximum(2);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMaximum(2);    abuilder.withMaximum(2);  abuilder.withMaximum(2);	  	compilable	  [FE]  ComparisonFailure  	27	1	add
354	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMinimum(2);  abuilder.withMaximum(2);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(2);        abuilder.withMinimum(2);    abuilder.withMaximum(2);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
355	[BUG]  [BUGGY]  abuilder.withMaximum(2);    abuilder.withMinimum(2);  abuilder.withMaximum(2);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMinimum(2);  abuilder.withMaximum(2);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);        abuilder.withMinimum(2);    abuilder.withMaximum(2);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
356	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(opt);  abuilder.withMinimum(1);  abuilder.withValidator(validator(opt));  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(1);        abuilder.withMinimum(opt);    abuilder.withMinimum(1);  abuilder.withValidator(validator(opt));	  	compilable	  [FE]  IllegalArgumentException  	68	1	add
357	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(opt);  abuilder.withMinimum(1);  abuilder.withValidator(validator(opt));  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(opt);  abuilder.withMinimum(1);  abuilder.withValidator(validator(opt));  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(opt);    abuilder.withMinimum(1);  abuilder.withValidator(validator(opt));	  	compilable	  [FE]  IllegalArgumentException  	68	1	add
358	[BUG]  [BUGGY]  abuilder.withHorizontalValue(2);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontalValue(2);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontalValue(2);	  abuilder.withHorizontalValue(1);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
359	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMaximum(1);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);        abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	47	1	add
360	[BUG]  [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMaximum(1);  abuilder.withMinimum(1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(1);  abuilder.withMaximum(1);  abuilder.withMinimum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);        abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMinimum(1);	  	compilable	  [FE]  ComparisonFailure  	47	1	add
361	[BUG]  [BUGGY]  AffineTransformer  abuilder  =  new  AffineTransformer(opt).reset();  if(abuilder.isRequired())  {  abuilder.reset();  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  AffineTransformer  abuilder  =  new  AffineTransformer(opt).reset();  if(abuilder.isRequired())  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	AffineTransformer  abuilder  =  new  AffineTransformer(opt).reset();  if(abuilder.isRequired())  {  abuilder.reset();  }	          abuilder.reset();    if(abuilder.isRequired())    {    abuilder.reset();    }    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
362	[BUG]  [BUGGY]  ASTReshold.reset();  if(abuilder.isRequired())  {  abuilder.reset();  }  [CE]  cannot  find  symbol  ASTReshold  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  ASTReshold.reset();  if(abuilder.isRequired())  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	ASTReshold.reset();  if(abuilder.isRequired())  {  abuilder.reset();  }	          abuilder.reset();    if(abuilder.isRequired())    {    abuilder.reset();    }    	non-compiled	[CE]  cannot  find  symbol  ASTReshold	86	None	replace
363	[BUG]  [BUGGY]  AffineTransformer  abuilder  =  new  AffineTransformer(abuilder.getType()).reset();  if(abuilder.isRequired())  {  abuilder.reset();  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  AffineTransformer  abuilder  =  new  AffineTransformer(abuilder.getType()).reset();  if(abuilder.isRequired())  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	AffineTransformer  abuilder  =  new  AffineTransformer(abuilder.getType()).reset();  if(abuilder.isRequired())  {  abuilder.reset();  }	          abuilder.reset();    if(abuilder.isRequired())    {    abuilder.reset();    }    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
364	[BUG]  [BUGGY]  abuilder.withString(String.valueOf(opt,  type),  value);  [CE]  no  suitable  method  found  for  valueOf(char,char)  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withString(String.valueOf(opt,  type),  value);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString(String.valueOf(opt,  type),  value);	  abuilder.withString(String.valueOf(opt,    type));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(char,char)	90	None	replace
365	[BUG]  [BUGGY]  abuilder.withString(String.valueOf(opt,  type),  gbuilder);  [CE]  no  suitable  method  found  for  valueOf(char,char)  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withString(String.valueOf(opt,  type),  gbuilder);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString(String.valueOf(opt,  type),  gbuilder);	  abuilder.withString(String.valueOf(opt,    type));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(char,char)	90	None	replace
366	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '*')  {  abuilder.withMaximum(1);  abuilder.withMaximum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	if(opt!=  '*')  {  abuilder.withMaximum(1);  abuilder.withMaximum(1);  }	          abuilder.withMaximum(1);    abuilder.withMaximum(opt);    	compilable	  [FE]  ComparisonFailure  	83	1	replace
367	[BUG]  [BUGGY]  if(opt!=  '*')  {  abuilder.withMaximum(1);  abuilder.withMaximum(1);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '*')  {  abuilder.withMaximum(1);  abuilder.withMaximum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt!=  '*')  {  abuilder.withMaximum(1);  abuilder.withMaximum(1);  }	          abuilder.withMaximum(1);    abuilder.withMaximum(opt);    	compilable	  [FE]  ComparisonFailure  	83	1	replace
368	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMaximum(2);  abuilder.withMaximum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(2);        abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(3);	  	compilable	  [FE]  ComparisonFailure  	10	1	add
369	[BUG]  [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMaximum(2);  abuilder.withMaximum(3);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(2);    abuilder.withMaximum(1);  abuilder.withMaximum(2);  abuilder.withMaximum(3);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(2);        abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(3);	  	compilable	  [FE]  ComparisonFailure  	10	1	add
370	[BUG]  [BUGGY]  abuilder.withHorizontalMaximum(opt);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontalMaximum(opt);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontalMaximum(opt);	  abuilder.withHorizontalMaximum(1);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
371	[BUG]  [BUGGY]  abuilder.withHorizontal(optimize);  [CE]  cannot  find  symbol  optimize  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontal(optimize);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontal(optimize);	  abuilder.withHorizontal(type);    	non-compiled	[CE]  cannot  find  symbol  optimize	18	None	replace
372	[BUG]  [BUGGY]  abuilder.set(opt  +  1);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.set(opt  +  1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.set(opt  +  1);	  abuilder.set(opt);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
373	[BUG]  [BUGGY]  abuilder.withString(String.valueOf(opt),  opt);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withString(String.valueOf(opt),  opt);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString(String.valueOf(opt),  opt);	  abuilder.withString(String.valueOf(opt),    type);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
374	[BUG]  [BUGGY]  abuilder.withString(String.valueOf(opt),  preferred);  [CE]  cannot  find  symbol  preferred  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withString(String.valueOf(opt),  preferred);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString(String.valueOf(opt),  preferred);	  abuilder.withString(String.valueOf(opt),    required);    	non-compiled	[CE]  cannot  find  symbol  preferred	2	None	replace
375	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(opt);  abuilder.withMaximum(1);  abuilder.withOption(opt);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(opt);  abuilder.withMaximum(1);  abuilder.withOption(opt);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMaximum(opt);    abuilder.withMaximum(1);  abuilder.withOption(opt);	  	non-compiled	[CE]  cannot  find  symbol	82	None	add
376	[BUG]  [BUGGY]  AffineTransformer  abuilder  =  AffineTransformer.create(opt,  abuilder.withStart(1));  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  AffineTransformer  abuilder  =  AffineTransformer.create(opt,  abuilder.withStart(1));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	AffineTransformer  abuilder  =  AffineTransformer.create(opt,  abuilder.withStart(1));	  abuilder.withStart(1);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
377	[BUG]  [BUGGY]  AffineTransformer  abuilder  =  AffineTransformer.transform(opt).withStart(1);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  AffineTransformer  abuilder  =  AffineTransformer.transform(opt).withStart(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	AffineTransformer  abuilder  =  AffineTransformer.transform(opt).withStart(1);	  abuilder.withStart(1);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
378	[BUG]  [BUGGY]  abuilder.withShortName(opt.charValue());  [CE]  char  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withShortName(opt.charValue());  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withShortName(opt.charValue());	  abuilder.withShortName(opt.valueOf(String.valueOf(opt));    	non-compiled	[CE]  char  cannot  be  dereferenced	76	None	replace
379	[BUG]  [BUGGY]  abuilder.withShortName(opt.charAt(0));  [CE]  char  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withShortName(opt.charAt(0));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withShortName(opt.charAt(0));	  abuilder.withShortName(opt.valueOf(String.valueOf(opt));    	non-compiled	[CE]  char  cannot  be  dereferenced	76	None	replace
380	[BUG]  [BUGGY]  abuilder.withHorizontalName(String.valueOf(opt,  type),  obuilder);  [CE]  no  suitable  method  found  for  valueOf(char,char)  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontalName(String.valueOf(opt,  type),  obuilder);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontalName(String.valueOf(opt,  type),  obuilder);	  abuilder.withHorizontalName(String.valueOf(opt,    type));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(char,char)	46	None	replace
381	[BUG]  [BUGGY]  obuilder.withHorizontalName(String.valueOf(opt)+  1);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withHorizontalName(String.valueOf(opt)+  1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withHorizontalName(String.valueOf(opt)+  1);	  obuilder.withHorizontalName(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
382	[BUG]  [BUGGY]  abuilder.withHorizontal(opt)  >>  abuilder.withMaximum(1);  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontal(opt)  >>  abuilder.withMaximum(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontal(opt)  >>  abuilder.withMaximum(1);	  abuilder.withHorizontal(opt)    	non-compiled	[CE]  not  a  statement	57	None	replace
383	[BUG]  [BUGGY]  Abuilder.withMaximum(2);  [CE]  cannot  find  symbol  Abuilder  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  Abuilder.withMaximum(2);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	Abuilder.withMaximum(2);	  abuilder.withMaximum(2);    Abuilder.withMaximum(2);    	non-compiled	[CE]  cannot  find  symbol  Abuilder	55	None	replace
384	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	if(opt!=  '.')  {  abuilder.reset();  }	          abuilder.reset();    if(abuilder.reset())    {    abuilder.reset();    }    else    {    abuilder.withString(String.valueOf(opt));    }    	compilable	  [FE]  ComparisonFailure  	85	1	replace
385	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt!=  '.')  {  abuilder.reset();  }	          abuilder.reset();    if(abuilder.reset())    {    abuilder.reset();    }    else    {    abuilder.withString(String.valueOf(opt));    }    	compilable	  [FE]  ComparisonFailure  	85	1	replace
386	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  abuilder.withString(String.valueOf(opt));  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  abuilder.withString(String.valueOf(opt));  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt!=  '[')  {  abuilder.reset();  abuilder.withString(String.valueOf(opt));  }	          abuilder.reset();    if(abuilder.reset())    {    abuilder.reset();    }    else    {    abuilder.withString(String.valueOf(opt));    }    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
387	[BUG]  [BUGGY]  abuilder.withHorizontalCharacter(opt);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontalCharacter(opt);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontalCharacter(opt);	          abuilder.reset();    if(abuilder.reset())    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
388	[BUG]  [BUGGY]  abuilder.withCharacter(opt);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withCharacter(opt);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withCharacter(opt);	          abuilder.reset();    if(abuilder.reset())    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
389	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(opt);  if(opt!=  '*')  {  abuilder.withMinimum(1);  abuilder.withMinimum(opt);  }  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMinimum(1);        abuilder.withMinimum(opt);    if(opt!=  '*')  {  abuilder.withMinimum(1);  abuilder.withMinimum(opt);  }	  	compilable	  [FE]  IllegalArgumentException  	68	1	add
390	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(opt);  if(opt!=  '*')  {  abuilder.withMinimum(1);  abuilder.withMinimum(opt);  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(opt);  if(opt!=  '*')  {  abuilder.withMinimum(1);  abuilder.withMinimum(opt);  }  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(opt);    if(opt!=  '*')  {  abuilder.withMinimum(1);  abuilder.withMinimum(opt);  }	  	compilable	  [FE]  IllegalArgumentException  	68	1	add
391	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(opt);  abuilder.withMinimum(1);  abuilder.withShort(opt);  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(opt);  abuilder.withMinimum(1);  abuilder.withShort(opt);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(opt);    abuilder.withMinimum(1);  abuilder.withShort(opt);	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
392	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt  ==  '[')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	if(opt  ==  '[')  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	62	1	replace
393	[BUG]  [BUGGY]  if(opt  ==  '[')  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt  ==  '[')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt  ==  '[')  {  abuilder.reset();  }	          abuilder.reset();    if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	62	1	replace
394	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.withMaximum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.withMaximum(1);  }	          abuilder.reset();    if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	62	1	replace
395	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.withMaximum(1);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.withMaximum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.withMaximum(1);  }	          abuilder.reset();    if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    	compilable	  [FE]  ComparisonFailure  	62	1	replace
396	[BUG]  [BUGGY]  abuilder.withString( "- ");  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withString( "- ");  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withString( "- ");	  abuilder.withString(   "*   ".);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
397	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  if(opt!=  '*')  {  abuilder.reset();  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  if(opt!=  '*')  {  abuilder.reset();  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    if(opt!=  '*')  {  abuilder.reset();  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
398	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.reset();        if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	61	1	add
399	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        if(opt!=    '[')    {    abuilder.reset();    }    else    {    abuilder.reset();    }    if(opt!=  '[')  {  abuilder.reset();  }  else  {  abuilder.reset();  }	  	compilable	  [FE]  ComparisonFailure  	61	1	add
400	[BUG]  [BUGGY]  AffineTransformer  abuilder  =(AffineTransformer)abuilder.clone();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  AffineTransformer  abuilder  =(AffineTransformer)abuilder.clone();  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	AffineTransformer  abuilder  =(AffineTransformer)abuilder.clone();	          abuilder.reset();    if(abuilder.isRequired())    {    abuilder.reset();    }    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
401	[BUG]  [BUGGY]  abuilder.withHorizontal(opt  +  1,  required);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontal(opt  +  1,  required);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontal(opt  +  1,  required);	  abuilder.withHorizontal(opt    +    1);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
402	[BUG]  [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  abuilder.set();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  abuilder.set();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        if(opt!=    '['    ||    opt    ==    ']')    {    abuilder.reset();    }    abuilder.set();  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  }	  	non-compiled	[CE]  cannot  find  symbol	63	None	add
403	[BUG]  [BUGGY]  if(opt!=  '*')  {  abuilder.reset();  if(abuilder.reset())  {  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '*')  {  abuilder.reset();  if(abuilder.reset())  {  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt!=  '*')  {  abuilder.reset();  if(abuilder.reset())  {  abuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          abuilder.reset();    if(abuilder.reset())    {    abuilder.reset();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
404	[BUG]  [BUGGY]  if(opt!=  '*')  {  abuilder.reset();  if(abuilder.reset())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '*')  {  abuilder.reset();  if(abuilder.reset())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt!=  '*')  {  abuilder.reset();  if(abuilder.reset())  {  throw  new  IllegalArgumentException( " ");  }	          abuilder.reset();    if(abuilder.reset())    {    abuilder.reset();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
405	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(0);  abuilder.withMinimum(1);  abuilder.withMaximum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	abuilder.withMaximum(0);        abuilder.withMaximum(0);    abuilder.withMinimum(1);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	49	1	add
406	[BUG]  [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(0);  abuilder.withMinimum(1);  abuilder.withMaximum(1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(0);    abuilder.withMaximum(0);  abuilder.withMinimum(1);  abuilder.withMaximum(1);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(0);        abuilder.withMaximum(0);    abuilder.withMinimum(1);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	49	1	add
407	[BUG]  [BUGGY]  abuilder.withHorizontalName(String.valueOf(option));  [CE]  cannot  find  symbol  option  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontalName(String.valueOf(option));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontalName(String.valueOf(option));	  abuilder.withHorizontalName(String.valueOf(type));    	non-compiled	[CE]  cannot  find  symbol  option	45	None	replace
408	[BUG]  [BUGGY]  obuilder.withString(String.valueOf(opt)+  1);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withString(String.valueOf(opt)+  1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withString(String.valueOf(opt)+  1);	  obuilder.withString(String.valueOf(opt));    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
409	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(1);  if(opt!=  '*')  {  abuilder.withMaximum(1);  abuilder.withMaximum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.withMaximum(1);        abuilder.withMaximum(1);    if(opt!=  '*')  {  abuilder.withMaximum(1);  abuilder.withMaximum(1);  }	  	compilable	  [FE]  ComparisonFailure  	23	1	add
410	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(1);  if(opt!=  '*')  {  abuilder.withMaximum(1);  abuilder.withMaximum(1);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(1);  if(opt!=  '*')  {  abuilder.withMaximum(1);  abuilder.withMaximum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMaximum(1);    if(opt!=  '*')  {  abuilder.withMaximum(1);  abuilder.withMaximum(1);  }	  	compilable	  [FE]  ComparisonFailure  	23	1	add
411	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMaximum(2);  abuilder.withMaximum(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.withMaximum(1);        abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	23	1	add
412	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMaximum(2);  abuilder.withMaximum(1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(1);  abuilder.withMaximum(2);  abuilder.withMaximum(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMaximum(1);    abuilder.withMaximum(2);  abuilder.withMaximum(1);	  	compilable	  [FE]  ComparisonFailure  	23	1	add
413	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '[')  {  obuilder.withShortName(String.valueOf(opt));  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	if(opt!=  '[')  {  obuilder.withShortName(String.valueOf(opt));  }	  obuilder.withShortName(String.valueOf(opt));    	compilable	  [FE]  ComparisonFailure  	78	1	replace
414	[BUG]  [BUGGY]  if(opt!=  '[')  {  obuilder.withShortName(String.valueOf(opt));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '[')  {  obuilder.withShortName(String.valueOf(opt));  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt!=  '[')  {  obuilder.withShortName(String.valueOf(opt));  }	  obuilder.withShortName(String.valueOf(opt));    	compilable	  [FE]  ComparisonFailure  	78	1	replace
415	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '*')  {  obuilder.withShortName(String.valueOf(opt));  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	if(opt!=  '*')  {  obuilder.withShortName(String.valueOf(opt));  }	  obuilder.withShortName(String.valueOf(opt));    	compilable	  [FE]  ComparisonFailure  	78	1	replace
416	[BUG]  [BUGGY]  if(opt!=  '*')  {  obuilder.withShortName(String.valueOf(opt));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '*')  {  obuilder.withShortName(String.valueOf(opt));  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt!=  '*')  {  obuilder.withShortName(String.valueOf(opt));  }	  obuilder.withShortName(String.valueOf(opt));    	compilable	  [FE]  ComparisonFailure  	78	1	replace
417	[BUG]  [BUGGY]  abuilder.withShortName(opt.toLowerCase());  [CE]  char  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withShortName(opt.toLowerCase());  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withShortName(opt.toLowerCase());	  abuilder.withShortName(opt.valueOf(String.valueOf(opt));    	non-compiled	[CE]  char  cannot  be  dereferenced	76	None	replace
418	[BUG]  [BUGGY]  abuilder.withHorizontalName(opt.charAt(0));  [CE]  char  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontalName(opt.charAt(0));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontalName(opt.charAt(0));	  abuilder.withShortName(opt.valueOf(String.valueOf(opt));    	non-compiled	[CE]  char  cannot  be  dereferenced	76	None	replace
419	[BUG]  [BUGGY]  AffineTransformer  abuilder  =  ARRAY.transform(opt).withStart(1);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  AffineTransformer  abuilder  =  ARRAY.transform(opt).withStart(1);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	AffineTransformer  abuilder  =  ARRAY.transform(opt).withStart(1);	  abuilder.withStart(1);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
420	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(opt);  if(opt!=  '*')  {  abuilder.withMaximum(1);  abuilder.withMaximum(opt);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.withMaximum(1);        abuilder.withMaximum(opt);    if(opt!=  '*')  {  abuilder.withMaximum(1);  abuilder.withMaximum(opt);  }	  	compilable	  [FE]  ComparisonFailure  	82	1	add
421	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(opt);  if(opt!=  '*')  {  abuilder.withMaximum(1);  abuilder.withMaximum(opt);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMaximum(opt);  if(opt!=  '*')  {  abuilder.withMaximum(1);  abuilder.withMaximum(opt);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMaximum(opt);    if(opt!=  '*')  {  abuilder.withMaximum(1);  abuilder.withMaximum(opt);  }	  	compilable	  [FE]  ComparisonFailure  	82	1	add
422	[BUG]  [BUGGY]  abuilder.withHorizontal(opt,  true);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withHorizontal(opt,  true);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withHorizontal(opt,  true);	  abuilder.withHorizontal(opt,    required);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
423	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '*')  {  abuilder.withMaximum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	if(opt!=  '*')  {  abuilder.withMaximum(1);  }	          abuilder.withMaximum(1);    abuilder.withMaximum(opt);    	compilable	  [FE]  ComparisonFailure  	83	1	replace
424	[BUG]  [BUGGY]  if(opt!=  '*')  {  abuilder.withMaximum(1);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '*')  {  abuilder.withMaximum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt!=  '*')  {  abuilder.withMaximum(1);  }	          abuilder.withMaximum(1);    abuilder.withMaximum(opt);    	compilable	  [FE]  ComparisonFailure  	83	1	replace
425	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '.')  {  abuilder.withMaximum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	if(opt!=  '.')  {  abuilder.withMaximum(1);  }	          abuilder.withMaximum(1);    abuilder.withMaximum(opt);    	compilable	  [FE]  ComparisonFailure  	83	1	replace
426	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withMaximum(1);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '.')  {  abuilder.withMaximum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt!=  '.')  {  abuilder.withMaximum(1);  }	          abuilder.withMaximum(1);    abuilder.withMaximum(opt);    	compilable	  [FE]  ComparisonFailure  	83	1	replace
427	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '[')  {  abuilder.withMaximum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	if(opt!=  '[')  {  abuilder.withMaximum(1);  }	          abuilder.withMaximum(1);    abuilder.withMaximum(opt);    	compilable	  [FE]  ComparisonFailure  	83	1	replace
428	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.withMaximum(1);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '[')  {  abuilder.withMaximum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt!=  '[')  {  abuilder.withMaximum(1);  }	          abuilder.withMaximum(1);    abuilder.withMaximum(opt);    	compilable	  [FE]  ComparisonFailure  	83	1	replace
429	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMinimum(1);  if(opt!=  '*')  {  abuilder.withMaximum(1);  abuilder.withMinimum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.withMaximum(1);        abuilder.withMinimum(1);    if(opt!=  '*')  {  abuilder.withMaximum(1);  abuilder.withMinimum(1);  }	  	compilable	  [FE]  ComparisonFailure  	25	1	add
430	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMinimum(1);  if(opt!=  '*')  {  abuilder.withMaximum(1);  abuilder.withMinimum(1);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMinimum(1);  if(opt!=  '*')  {  abuilder.withMaximum(1);  abuilder.withMinimum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMinimum(1);    if(opt!=  '*')  {  abuilder.withMaximum(1);  abuilder.withMinimum(1);  }	  	compilable	  [FE]  ComparisonFailure  	25	1	add
431	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMinimum(1);  if(opt!=  '[')  {  abuilder.withMaximum(1);  abuilder.withMinimum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	                abuilder.withMaximum(1);        abuilder.withMinimum(1);    if(opt!=  '[')  {  abuilder.withMaximum(1);  abuilder.withMinimum(1);  }	  	compilable	  [FE]  ComparisonFailure  	25	1	add
432	[BUG]  [BUGGY]          abuilder.withMaximum(1);    abuilder.withMinimum(1);  if(opt!=  '[')  {  abuilder.withMaximum(1);  abuilder.withMinimum(1);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.withMaximum(1);    abuilder.withMinimum(1);  if(opt!=  '[')  {  abuilder.withMaximum(1);  abuilder.withMinimum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.withMaximum(1);        abuilder.withMinimum(1);    if(opt!=  '[')  {  abuilder.withMaximum(1);  abuilder.withMinimum(1);  }	  	compilable	  [FE]  ComparisonFailure  	25	1	add
433	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '*')  {  abuilder.withMaximum(1);  abuilder.withMaximum(2);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	if(opt!=  '*')  {  abuilder.withMaximum(1);  abuilder.withMaximum(2);  }	          abuilder.withMaximum(1);    abuilder.withMaximum(2);    	compilable	  [FE]  ComparisonFailure  	28	1	replace
434	[BUG]  [BUGGY]  if(opt!=  '*')  {  abuilder.withMaximum(1);  abuilder.withMaximum(2);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '*')  {  abuilder.withMaximum(1);  abuilder.withMaximum(2);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt!=  '*')  {  abuilder.withMaximum(1);  abuilder.withMaximum(2);  }	          abuilder.withMaximum(1);    abuilder.withMaximum(2);    	compilable	  [FE]  ComparisonFailure  	28	1	replace
435	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '*')  {  abuilder.withMaximum(1);  }  else  {  abuilder.withMaximum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	add	if(opt!=  '*')  {  abuilder.withMaximum(1);  }  else  {  abuilder.withMaximum(1);  }	          abuilder.withMaximum(1);    abuilder.withMaximum(1);    	compilable	  [FE]  ComparisonFailure  	24	1	replace
436	[BUG]  [BUGGY]  if(opt!=  '*')  {  abuilder.withMaximum(1);  }  else  {  abuilder.withMaximum(1);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  if(opt!=  '*')  {  abuilder.withMaximum(1);  }  else  {  abuilder.withMaximum(1);  }  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	if(opt!=  '*')  {  abuilder.withMaximum(1);  }  else  {  abuilder.withMaximum(1);  }	          abuilder.withMaximum(1);    abuilder.withMaximum(1);    	compilable	  [FE]  ComparisonFailure  	24	1	replace
437	[BUG]  [BUGGY]  abuilder.withMinimum(options,  opt);  [CE]  method  withMinimum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(options,  opt);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(options,  opt);	  abuilder.withMinimum(1);    abuilder.withMinimum(options);    	non-compiled	[CE]  method  withMinimum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	34	None	replace
438	[BUG]  [BUGGY]  abuilder.withMaximum(options,  opt);  [CE]  method  withMaximum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMaximum(options,  opt);  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMaximum(options,  opt);	          abuilder.withMaximum(1);    abuilder.withMaximum(options);    	non-compiled	[CE]  method  withMaximum  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	81	None	replace
439	[BUG]  [BUGGY]  obuilder.withShortName(String.valueOf(opt));  obuilder.withString(String.valueOf(opt));  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withShortName(String.valueOf(opt));  obuilder.withString(String.valueOf(opt));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withShortName(String.valueOf(opt));    obuilder.withString(String.valueOf(opt));	  	non-compiled	[CE]  cannot  find  symbol	77	None	add
440	[BUG]  [BUGGY]  obuilder.withShortName(String.valueOf(opt));  obuilder.withName(String.valueOf(opt));  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withShortName(String.valueOf(opt));  obuilder.withName(String.valueOf(opt));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withShortName(String.valueOf(opt));    obuilder.withName(String.valueOf(opt));	  	non-compiled	[CE]  cannot  find  symbol	77	None	add
441	[BUG]  [BUGGY]  obuilder.withShortName(String.valueOf(opt));  obuilder.withVar(String.valueOf(opt));  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  obuilder.withShortName(String.valueOf(opt));  obuilder.withVar(String.valueOf(opt));  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	obuilder.withShortName(String.valueOf(opt));    obuilder.withVar(String.valueOf(opt));	  	non-compiled	[CE]  cannot  find  symbol	77	None	add
442	[BUG]  [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(0);  abuilder.withMinimum(1);  abuilder.withMinimum(;  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withMinimum(1);    abuilder.withMinimum(0);  abuilder.withMinimum(1);  abuilder.withMinimum(;  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withMinimum(1);        abuilder.withMinimum(0);    abuilder.withMinimum(1);  abuilder.withMinimum(;	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
443	[BUG]  [BUGGY]          abuilder.reset();    abuilder.reset();  abuilder.set();  abuilder.reset();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]          abuilder.reset();    abuilder.reset();  abuilder.set();  abuilder.reset();  [BUGGY]      abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	                abuilder.reset();        abuilder.reset();    abuilder.set();  abuilder.reset();	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
444	[BUG]  [BUGGY]  abuilder.withOption(opt,  type);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {      [BUGGY]  abuilder.withOption(opt,  type);  [BUGGY]      }  argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	112	112	1	replace	abuilder.withOption(opt,  type);	  abuilder.withOption(opt);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
