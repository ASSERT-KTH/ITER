bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type,  required);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type,  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type,  required);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt,    type);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
2	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.create(opt,  type);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.create(opt,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  abuilder  =  OptionBuilder.create(opt,  type);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt,    type);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
3	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type,  options);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type,  options);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type,  options);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt,    type);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
4	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(0);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(0);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(0);	  OptionBuilder    abuilder    =    OptionBuilder.createOptionBuilder();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
5	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(option);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(option);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(option);	  OptionBuilder    abuilder    =    OptionBuilder.createOptionBuilder();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
6	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '.')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(type!=  '.')  {  throw  new  IllegalArgumentException( " ");  }	          if(opt!=    '.')    {    throw    new    IllegalArgumentException(       "       ");    }    if(opt    >=    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    	compilable	  [FE]  IllegalArgumentException  	16	1	replace
7	[BUG]  [BUGGY]  if(type!=  '.')  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '.')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '.')  {  throw  new  IllegalArgumentException( " ");  }	          if(opt!=    '.')    {    throw    new    IllegalArgumentException(       "       ");    }    if(opt    >=    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    	compilable	  [FE]  IllegalArgumentException  	16	1	replace
8	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  options,  required);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  options,  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  options,  required);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt,    options);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
9	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.create(opt,  options);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.create(opt,  options);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  abuilder  =  OptionBuilder.create(opt,  options);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt,    options);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
10	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  options,  type);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  options,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  options,  type);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt,    options);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
11	[BUG]  [BUGGY]  abuilder.withOption(options,  type,  required);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(options,  type,  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(options,  type,  required);	  abuilder.withOption(options,    type);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
12	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	                if(opt!=        'n')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    ==    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	45	1	add
13	[BUG]  [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        'n')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    ==    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	45	1	add
14	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	                if(opt!=        'n')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    ==    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	45	1	add
15	[BUG]  [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        'n')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    ==    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	45	1	add
16	[BUG]  [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        'n')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    ==    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	45	None	add
17	[BUG]  [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException(  [CE]  ')'  expected  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException(  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        'n')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    ==    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException(	  	non-compiled	[CE]  ')'  expected	45	None	add
18	[BUG]  [BUGGY]  parent  ==  null  ||  opt  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  parent  ==  null  ||  opt  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	parent  ==  null  ||  opt  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    '.')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	72	None	replace
19	[BUG]  [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	try  {  [Delete]  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    '.')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
20	[BUG]  [BUGGY]  if(type!=  '[')  {  if(opt!=  ']')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '[')  {  if(opt!=  ']')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '[')  {  if(opt!=  ']')  {  throw  new  IllegalArgumentException( " ");  }	          if(opt!=    'n')    {    throw    new    IllegalArgumentException(       "       ");    }    if(opt    ==    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
21	[BUG]  [BUGGY]  if(type!=  '.')  {  if(opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '.')  {  if(opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '.')  {  if(opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }	          if(opt!=    'n')    {    throw    new    IllegalArgumentException(       "       ");    }    if(opt    ==    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
22	[BUG]  [BUGGY]  if(type!=  '.')  {  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '.')  {  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '.')  {  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }	          if(opt!=    'n')    {    throw    new    IllegalArgumentException(       "       ");    }    if(opt    ==    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
23	[BUG]  [BUGGY]  if(type!=  '.')  {  if(opt!=  '#')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '.')  {  if(opt!=  '#')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '.')  {  if(opt!=  '#')  {  throw  new  IllegalArgumentException( " ");  }	          if(opt!=    'n')    {    throw    new    IllegalArgumentException(       "       ");    }    if(opt    ==    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
24	[BUG]  [BUGGY]  if(opt  ==  '.')  {  abuilder.withOption(type);  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt  ==  '.')  {  abuilder.withOption(type);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt  ==  '.')  {  abuilder.withOption(type);  }	  if(opt!=    '.')    {    abuilder.withOption(type);    }    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
25	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt  ==  '.')  {  throw  new  IllegalArgumentException(   "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(opt    ==    '.')    {    throw    new    IllegalArgumentException(   "   ");    }    if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  ComparisonFailure  	71	1	add
26	[BUG]  [BUGGY]  if(opt  ==  '.')  {  throw  new  IllegalArgumentException(   "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt  ==  '.')  {  throw  new  IllegalArgumentException(   "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt    ==    '.')    {    throw    new    IllegalArgumentException(   "   ");    }    if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  ComparisonFailure  	71	1	add
27	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt  ==  '.')  {  throw  new  IllegalArgumentException(   "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(opt    ==    '.')    {    throw    new    IllegalArgumentException(   "   ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	71	1	add
28	[BUG]  [BUGGY]  if(opt  ==  '.')  {  throw  new  IllegalArgumentException(   "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt  ==  '.')  {  throw  new  IllegalArgumentException(   "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt    ==    '.')    {    throw    new    IllegalArgumentException(   "   ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	71	1	add
29	[BUG]  [BUGGY]  if(type!=  '[')  {  if(opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '[')  {  if(opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '[')  {  if(opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }	          if(opt!=    'n')    {    throw    new    IllegalArgumentException(       "       ");    }    if(opt    >=    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
30	[BUG]  [BUGGY]  if(type!=  '.')  {  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '.')  {  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '.')  {  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( " ");  }	          if(opt!=    'n')    {    throw    new    IllegalArgumentException(       "       ");    }    if(opt    >=    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
31	[BUG]  [BUGGY]  abuilder.withOption(opt,  type,  required);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(opt,  type,  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(opt,  type,  required);	  abuilder.withOption(opt,    type);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
32	[BUG]  [BUGGY]  abuilder.withOption(type,  opt);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(type,  opt);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(type,  opt);	  abuilder.withOption(opt,    type);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
33	[BUG]  [BUGGY]  abuilder.withOption(opt,  type));  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(opt,  type));  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(opt,  type));	  abuilder.withOption(opt,    type);    	non-compiled	[CE]  ';'  expected	76	None	replace
34	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	                if(opt!=        '.')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    ==    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	13	1	add
35	[BUG]  [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        '.')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    ==    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	13	1	add
36	[BUG]  [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        '.')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    ==    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	13	None	add
37	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	                if(opt!=        '.')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    ==    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	13	1	add
38	[BUG]  [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        '.')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    ==    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	13	1	add
39	[BUG]  [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException(  [CE]  ')'  expected  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException(  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        '.')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    ==    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException(	  	non-compiled	[CE]  ')'  expected	13	None	add
40	[BUG]  [BUGGY]  abuilder.withOption(validator(type),  argument);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(validator(type),  argument);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(validator(type),  argument);	  abuilder.withOption(validator(opt),    argument);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
41	[BUG]  [BUGGY]  if(type!=  'n'  ||  type!=  'a')  {  abuilder.withOption(opt);  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  'n'  ||  type!=  'a')  {  abuilder.withOption(opt);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  'n'  ||  type!=  'a')  {  abuilder.withOption(opt);  }	  if(type!=    'n')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
42	[BUG]  [BUGGY]  parent  ==  null  &&  opt!=  '.')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  parent  ==  null  &&  opt!=  '.')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	parent  ==  null  &&  opt!=  '.')  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    opt!=    '.')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	78	None	replace
43	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	abuilder.withValidator(validator(opt));        if(validator(opt)!=    null)    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	32	1	add
44	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt));        if(validator(opt)!=    null)    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	32	1	add
45	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt));        if(validator(opt)!=    null)    {    abuilder.withValidator(validator(opt));    }    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
46	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	abuilder.withValidator(validator(opt));        if(validator(opt)!=    null)    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	32	1	add
47	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt));        if(validator(opt)!=    null)    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	32	1	add
48	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	abuilder.withValidator(validator(opt));        if(validator(opt)!=    null)    {    abuilder.withValidator(validator(opt));    }    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	32	1	add
49	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt));        if(validator(opt)!=    null)    {    abuilder.withValidator(validator(opt));    }    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	32	1	add
50	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  opt.getOptionBuilder();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  opt.getOptionBuilder();  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  opt.getOptionBuilder();	  OptionBuilder    obuilder    =    option.getOptionBuilder();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
51	[BUG]  [BUGGY]  abuilder.withOption(validator(opt),  type,  required);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(validator(opt),  type,  required);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(validator(opt),  type,  required);	  abuilder.withOption(validator(opt),    type);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
52	[BUG]  [BUGGY]  abuilder.withOption(validator(opt),  type,  needed);  [CE]  cannot  find  symbol  needed  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(validator(opt),  type,  needed);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(validator(opt),  type,  needed);	  abuilder.withOption(validator(opt),    type);    	non-compiled	[CE]  cannot  find  symbol  needed	21	None	replace
53	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(type);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOption(type);	  OptionBuilder    obuilder    =    OptionBuilder.createOption(opt);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
54	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  type);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  type);	  OptionBuilder    obuilder    =    OptionBuilder.createOption(opt);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
55	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOption(opt);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOption(opt);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  abuilder  =  OptionBuilder.createOption(opt);	  OptionBuilder    obuilder    =    OptionBuilder.createOption(opt);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
56	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  required);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  required);	  OptionBuilder    obuilder    =    OptionBuilder.createOption(opt);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
57	[BUG]  [BUGGY]  abuilder.setValidator(validator(opt),  type);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.setValidator(validator(opt),  type);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.setValidator(validator(opt),  type);	  abuilder.setValidator(validator(opt),    required);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
58	[BUG]  [BUGGY]  abuilder.setValidator(validator(opt),  required,  type);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.setValidator(validator(opt),  required,  type);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.setValidator(validator(opt),  required,  type);	  abuilder.setValidator(validator(opt),    required);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
59	[BUG]  [BUGGY]  abuilder.setValidator(validator(opt),  type,  required);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.setValidator(validator(opt),  type,  required);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.setValidator(validator(opt),  type,  required);	  abuilder.setValidator(validator(opt),    required);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
60	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(type!=  '.')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)!=    null)    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	33	1	replace
61	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '.')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)!=    null)    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	33	1	replace
62	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(type!=  '[')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)!=    null)    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	33	1	replace
63	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '[')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)!=    null)    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	33	1	replace
64	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type  ==  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(type  ==  '.')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)!=    null)    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  ComparisonFailure  	33	1	replace
65	[BUG]  [BUGGY]  if(type  ==  '.')  {  abuilder.withValidator(validator(opt));  }  [FE]  ComparisonFailure  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type  ==  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type  ==  '.')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)!=    null)    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  ComparisonFailure  	33	1	replace
66	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '.')  {  abuilder.withMinimum(1);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(type!=  '.')  {  abuilder.withMinimum(1);  }	  abuilder.withValidator(validator(opt));    if(validator(opt)!=    null)    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  ComparisonFailure  	33	1	replace
67	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.withMinimum(1);  }  [FE]  ComparisonFailure  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '.')  {  abuilder.withMinimum(1);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '.')  {  abuilder.withMinimum(1);  }	  abuilder.withValidator(validator(opt));    if(validator(opt)!=    null)    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  ComparisonFailure  	33	1	replace
68	[BUG]  [BUGGY]  try  {  'n')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  try  {  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	try  {  'n')  {  throw  new  IllegalArgumentException( " ");  }	  try    ==    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	88	None	replace
69	[BUG]  [BUGGY]  abuilder.withOption(validator(option));  [CE]  cannot  find  symbol  option  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(validator(option));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(validator(option));	  abuilder.withOption(validator(type));    	non-compiled	[CE]  cannot  find  symbol  option	20	None	replace
70	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.create(opt,  required);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.create(opt,  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  abuilder  =  OptionBuilder.create(opt,  required);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt,    required);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
71	[BUG]  [BUGGY]  obuilder.setOption(type);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  obuilder.setOption(type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	obuilder.setOption(type);	  obuilder.setOption(opt);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
72	[BUG]  [BUGGY]  obuilder.setOption(option);  [CE]  cannot  find  symbol  option  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  obuilder.setOption(option);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	obuilder.setOption(option);	  obuilder.setOption(opt);    	non-compiled	[CE]  cannot  find  symbol  option	67	None	replace
73	[BUG]  [BUGGY]  abuilder.setOption(type);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.setOption(type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.setOption(type);	  gbuilder.setOption(type);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
74	[BUG]  [BUGGY]  abuilder.withOption(options,  opt,  required);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(options,  opt,  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(options,  opt,  required);	  abuilder.withOption(options,    opt);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
75	[BUG]  [BUGGY]  abuilder.withOption(options,  opt,  type);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(options,  opt,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(options,  opt,  type);	  abuilder.withOption(options,    opt);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
76	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(1);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(1);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(1);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(0);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
77	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder(type);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder(type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  options.getOptionBuilder(type);	  OptionBuilder    obuilder    =    options.getOptionBuilder(opt);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
78	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder(opt,  type);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder(opt,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  options.getOptionBuilder(opt,  type);	  OptionBuilder    obuilder    =    options.getOptionBuilder(opt);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
79	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  opt.getOptionBuilder(option);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  opt.getOptionBuilder(option);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  opt.getOptionBuilder(option);	  OptionBuilder    obuilder    =    options.getOptionBuilder(opt);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
80	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(required)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(required)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(required)  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)!=    required)    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
81	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(required)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(required)  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)!=    required)    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	36	1	replace
82	[BUG]  [BUGGY]  if(required)  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]                IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(required)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(required)  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)!=    required)    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	36	1	replace
83	[BUG]  [BUGGY]  abuilder!=  null  &&  opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder!=  null  &&  opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder!=  null  &&  opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }	  parent!=    null    &&    opt!=    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	4	None	replace
84	[BUG]  [BUGGY]  if(opt!=  '.')  {  parent!=  null  &&  opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  '.')  {  parent!=  null  &&  opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt!=  '.')  {  parent!=  null  &&  opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }	  parent!=    null    &&    opt!=    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	4	None	replace
85	[BUG]  [BUGGY]  parent  ==  null  &&  opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  parent  ==  null  &&  opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	parent  ==  null  &&  opt!=  'n')  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    opt!=    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	87	None	replace
86	[BUG]  [BUGGY]  if(type  ==  '.')  {  abuilder.withOption(opt);  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type  ==  '.')  {  abuilder.withOption(opt);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type  ==  '.')  {  abuilder.withOption(opt);  }	  if(type!=    '.')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
87	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	                if(opt!=        '.')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt!=    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	11	1	add
88	[BUG]  [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        '.')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt!=    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	11	1	add
89	[BUG]  [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        '.')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt!=    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	11	None	add
90	[BUG]  [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException(  [CE]  ')'  expected  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException(  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        '.')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt!=    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException(	  	non-compiled	[CE]  ')'  expected	11	None	add
91	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	                if(opt!=        '.')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt!=    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	11	1	add
92	[BUG]  [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        '.')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt!=    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	11	1	add
93	[BUG]  [BUGGY]  abuilder.setValidator(validator(opt,  type,  required));  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.setValidator(validator(opt,  type,  required));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.setValidator(validator(opt,  type,  required));	  abuilder.setValidator(validator(opt,    type));    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	10	None	replace
94	[BUG]  [BUGGY]  abuilder.setValidator(validator(type,  opt));  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.setValidator(validator(type,  opt));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.setValidator(validator(type,  opt));	  abuilder.setValidator(validator(opt,    type));    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	10	None	replace
95	[BUG]  [BUGGY]  abuilder.setValidator(validator(opt,  type),  required);  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.setValidator(validator(opt,  type),  required);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.setValidator(validator(opt,  type),  required);	  abuilder.setValidator(validator(opt,    type));    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	10	None	replace
96	[BUG]  [BUGGY]  abuilder.setValidator(validator(opt,  type),  argument);  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.setValidator(validator(opt,  type),  argument);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.setValidator(validator(opt,  type),  argument);	  abuilder.setValidator(validator(opt,    type));    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	10	None	replace
97	[BUG]  [BUGGY]  if(opt!=  '.')  {  opt  =  abuilder.withOption(opt);  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  '.')  {  opt  =  abuilder.withOption(opt);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt!=  '.')  {  opt  =  abuilder.withOption(opt);  }	  if(type!=    '.')    {    opt    =    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
98	[BUG]  [BUGGY]  if(opt!=  '.')  {  opt  =  abuilder.withOption(type);  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  '.')  {  opt  =  abuilder.withOption(type);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt!=  '.')  {  opt  =  abuilder.withOption(type);  }	  if(type!=    '.')    {    opt    =    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
99	[BUG]  [BUGGY]  opt  =  abuilder.withOption(opt);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  opt  =  abuilder.withOption(opt);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	opt  =  abuilder.withOption(opt);	  if(type!=    '.')    {    opt    =    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
100	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(type!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	compilable	  [FE]  IllegalArgumentException  	31	1	replace
101	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	compilable	  [FE]  IllegalArgumentException  	31	1	replace
102	[BUG]  [BUGGY]  if(opt!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incomparable  types:  char  and  <null>  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  allowNull(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incomparable  types:  char  and  <null>	48	None	replace
103	[BUG]  [BUGGY]  if(opt  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incomparable  types:  char  and  <null>  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  allowNull(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incomparable  types:  char  and  <null>	48	None	replace
104	[BUG]  [BUGGY]  validateOption(opt)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  validateOption(opt)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	validateOption(opt)  {  throw  new  IllegalArgumentException( " ");  }	  allowNull(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	48	None	replace
105	[BUG]  [BUGGY]  abuilder.setValidator(validator(type),  argument);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.setValidator(validator(type),  argument);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.setValidator(validator(type),  argument);	  abuilder.setValidator(validator(opt),    argument);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
106	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  options.createOptionBuilder(opt);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  abuilder  =  options.createOptionBuilder(opt);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  abuilder  =  options.createOptionBuilder(opt);	  OptionBuilder    abuilder    =    options.createOptionBuilder();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
107	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  options.createOptionBuilder(0);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  abuilder  =  options.createOptionBuilder(0);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  abuilder  =  options.createOptionBuilder(0);	  OptionBuilder    abuilder    =    options.createOptionBuilder();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
108	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  option.createOptionBuilder();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  abuilder  =  option.createOptionBuilder();  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  abuilder  =  option.createOptionBuilder();	  OptionBuilder    abuilder    =    options.createOptionBuilder();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
109	[BUG]  [BUGGY]  abuilder.withOption(validator(opt),  required,  type);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(validator(opt),  required,  type);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(validator(opt),  required,  type);	  abuilder.withOption(validator(opt),    required);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
110	[BUG]  [BUGGY]  abuilder.setValidator(validator(option));  [CE]  cannot  find  symbol  option  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.setValidator(validator(option));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.setValidator(validator(option));	  abuilder.setValidator(validator(type));    	non-compiled	[CE]  cannot  find  symbol  option	8	None	replace
111	[BUG]  [BUGGY]  abuilder.withValidator(opt,  type);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(opt,  type);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(opt,  type);	  abuilder.withValidator(opt);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	60	None	replace
112	[BUG]  [BUGGY]  abuilder.withValidator(type,  opt);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(type,  opt);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(type,  opt);	  abuilder.withValidator(opt);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	60	None	replace
113	[BUG]  [BUGGY]  abuilder.withValidator(gbuilder,  opt);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(gbuilder,  opt);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(gbuilder,  opt);	  abuilder.withValidator(opt);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	60	None	replace
114	[BUG]  [BUGGY]  abuilder.withValidator(opt,  required);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(opt,  required);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(opt,  required);	  abuilder.withValidator(opt);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	60	None	replace
115	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	                if(opt!=        '.')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	15	1	add
116	[BUG]  [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        '.')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	15	1	add
117	[BUG]  [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        '.')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	15	None	add
118	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	                if(opt!=        '.')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	15	1	add
119	[BUG]  [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        '.')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	15	1	add
120	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	                if(opt!=        '.')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	15	1	add
121	[BUG]  [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        '.')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	15	1	add
122	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	                if(opt!=        '.')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	15	1	add
123	[BUG]  [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        '.')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	15	1	add
124	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));	  	compilable	  [FE]  IllegalArgumentException  	30	1	add
125	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));	  	compilable	  [FE]  IllegalArgumentException  	30	1	add
126	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  Abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  [CE]  cannot  find  symbol  Abuilder  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  Abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    Abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));	  	non-compiled	[CE]  cannot  find  symbol  Abuilder	30	None	add
127	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  if(validator(opt));  abuilder.withValidator(validator(opt));  [CE]  incompatible  types  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  if(validator(opt));  abuilder.withValidator(validator(opt));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    if(validator(opt));  abuilder.withValidator(validator(opt));	  	non-compiled	[CE]  incompatible  types	30	None	add
128	[BUG]  [BUGGY]  abuilder.withOption(validator(opt,  type),  required);  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(validator(opt,  type),  required);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(validator(opt,  type),  required);	  abuilder.withOption(validator(opt,    type));    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	86	None	replace
129	[BUG]  [BUGGY]  abuilder.withOption(validator(opt,  type,  required));  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(validator(opt,  type,  required));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(validator(opt,  type,  required));	  abuilder.withOption(validator(opt,    type));    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	86	None	replace
130	[BUG]  [BUGGY]  abuilder.withOption(validator(type,  opt));  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(validator(type,  opt));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(validator(type,  opt));	  abuilder.withOption(validator(opt,    type));    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	86	None	replace
131	[BUG]  [BUGGY]  abuilder.withOption(validator(opt,  type),  argument);  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(validator(opt,  type),  argument);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(validator(opt,  type),  argument);	  abuilder.withOption(validator(opt,    type));    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	86	None	replace
132	[BUG]  [BUGGY]  abuilder.throwAsUnquotedException( " ");  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.throwAsUnquotedException( " ");  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.throwAsUnquotedException( " ");	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
133	[BUG]  [BUGGY]  gbuilder.throwAsUnquotedException( " ");  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  gbuilder.throwAsUnquotedException( " ");  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	gbuilder.throwAsUnquotedException( " ");	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
134	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  options.getOptionBuilder1();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  abuilder  =  options.getOptionBuilder1();  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  abuilder  =  options.getOptionBuilder1();	  OptionBuilder    abuilder    =    options.getOptionBuilder2();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
135	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  option.getOptionBuilder2();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  abuilder  =  option.getOptionBuilder2();  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  abuilder  =  option.getOptionBuilder2();	  OptionBuilder    abuilder    =    options.getOptionBuilder2();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
136	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  type.getOptionBuilder();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  abuilder  =  type.getOptionBuilder();  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  abuilder  =  type.getOptionBuilder();	  OptionBuilder    abuilder    =    opt.getOptionBuilder();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
137	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.getOption(type);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  options.getOption(type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  options.getOption(type);	  OptionBuilder    obuilder    =    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
138	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.getOption(opt,  type);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  options.getOption(opt,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  options.getOption(opt,  type);	  OptionBuilder    obuilder    =    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
139	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  opt.getOption(option);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  opt.getOption(option);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  opt.getOption(option);	  OptionBuilder    obuilder    =    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
140	[BUG]  [BUGGY]  if(type!=  '.'  ||  opt!=  '@')  {  abuilder.withOption(opt);  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '.'  ||  opt!=  '@')  {  abuilder.withOption(opt);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '.'  ||  opt!=  '@')  {  abuilder.withOption(opt);  }	  if(opt!=    '.'    ||    opt!=    '@')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
141	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  ==  '@')  {  abuilder.withOption(opt);  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  '.'  ||  opt  ==  '@')  {  abuilder.withOption(opt);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt!=  '.'  ||  opt  ==  '@')  {  abuilder.withOption(opt);  }	  if(opt!=    '.'    ||    opt!=    '@')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
142	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt!=  '@')  {  abuilder.withOption(type);  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  '.'  ||  opt!=  '@')  {  abuilder.withOption(type);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt!=  '.'  ||  opt!=  '@')  {  abuilder.withOption(type);  }	  if(opt!=    '.'    ||    opt!=    '@')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
143	[BUG]  [BUGGY]  abuilder.throwAsIgnoredException( " ");  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.throwAsIgnoredException( " ");  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.throwAsIgnoredException( " ");	  aughtExceptionHandler.throwAsIgnoredException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
144	[BUG]  [BUGGY]  gbuilder.throwAsIgnoredException( " ");  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  gbuilder.throwAsIgnoredException( " ");  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	gbuilder.throwAsIgnoredException( " ");	  aughtExceptionHandler.throwAsIgnoredException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
145	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  ==  'a')  {  abuilder.withOption(opt);  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  'n'  ||  opt  ==  'a')  {  abuilder.withOption(opt);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt!=  'n'  ||  opt  ==  'a')  {  abuilder.withOption(opt);  }	  if(opt!=    'n'    ||    opt!=    'a')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
146	[BUG]  [BUGGY]  if(type!=  'n'  ||  opt!=  'a')  {  abuilder.withOption(opt);  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  'n'  ||  opt!=  'a')  {  abuilder.withOption(opt);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  'n'  ||  opt!=  'a')  {  abuilder.withOption(opt);  }	  if(opt!=    'n'    ||    opt!=    'a')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
147	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt!=  'a')  {  abuilder.withOption(type);  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  'n'  ||  opt!=  'a')  {  abuilder.withOption(type);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt!=  'n'  ||  opt!=  'a')  {  abuilder.withOption(type);  }	  if(opt!=    'n'    ||    opt!=    'a')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
148	[BUG]  [BUGGY]  abuilder.setOption(argument);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.setOption(argument);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.setOption(argument);	  gbuilder.setOption(argument);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
149	[BUG]  [BUGGY]  gbuilder.setOption(abuilder);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  gbuilder.setOption(abuilder);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	gbuilder.setOption(abuilder);	  gbuilder.setOption(argument);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
150	[BUG]  [BUGGY]  abuilder.withOption(option)  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(option)  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(option)	  abuilder.withOption(opt)    	non-compiled	[CE]  ';'  expected	64	None	replace
151	[BUG]  [BUGGY]  abuilder.withOption(type)  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(type)  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(type)	  abuilder.withOption(opt)    	non-compiled	[CE]  ';'  expected	64	None	replace
152	[BUG]  [BUGGY]  try  {  '.')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  try  {  '.')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	try  {  '.')  {  throw  new  IllegalArgumentException( " ");  }	  try    ==    '.')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	77	None	replace
153	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  option,  opt.getOptionBuilder();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  abuilder  =  option,  opt.getOptionBuilder();  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  abuilder  =  option,  opt.getOptionBuilder();	  OptionBuilder    abuilder    =    option.getOptionBuilder();    	non-compiled	[CE]  ';'  expected	26	None	replace
154	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt),  type,  required);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt),  type,  required);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt),  type,  required);	  abuilder.withValidator(validator(opt),    type);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	54	None	replace
155	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt,  type),  required);  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt,  type),  required);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt,  type),  required);	  abuilder.withValidator(validator(opt),    type);    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	54	None	replace
156	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt,  type),  argument);  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt,  type),  argument);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt,  type),  argument);	  abuilder.withValidator(validator(opt),    type);    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	54	None	replace
157	[BUG]  [BUGGY]  abuilder.withValidator(validator(type),  opt);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(type),  opt);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(type),  opt);	  abuilder.withValidator(validator(opt),    type);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	54	None	replace
158	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.create(type);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.create(type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  abuilder  =  OptionBuilder.create(type);	  OptionBuilder    abuilder    =    OptionBuilder.create(opt);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
159	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(type);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(type);	  OptionBuilder    abuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
160	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(opt,  type);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(opt,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(opt,  type);	  OptionBuilder    abuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
161	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(opt,  required);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(opt,  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(opt,  required);	  OptionBuilder    abuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
162	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	abuilder.withValidator(validator(opt));        if(validator(opt)    ==    null)    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	34	1	add
163	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt));        if(validator(opt)    ==    null)    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	34	1	add
164	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt));        if(validator(opt)    ==    null)    {    abuilder.withValidator(validator(opt));    }    if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
165	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	abuilder.withValidator(validator(opt));        if(validator(opt)    ==    null)    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	34	1	add
166	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt));        if(validator(opt)    ==    null)    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	34	1	add
167	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt));        if(validator(opt)    ==    null)    {    abuilder.withValidator(validator(opt));    }    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
168	[BUG]  [BUGGY]  abuilder.withOption(optimized);  [CE]  cannot  find  symbol  optimized  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(optimized);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(optimized);	  abuilder.withOption(type);    	non-compiled	[CE]  cannot  find  symbol  optimized	38	None	replace
169	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	                if(opt!=        'n')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt!=    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	41	1	add
170	[BUG]  [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        'n')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt!=    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	41	1	add
171	[BUG]  [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        'n')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt!=    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	41	None	add
172	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	                if(opt!=        'n')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt!=    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	41	1	add
173	[BUG]  [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        'n')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt!=    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	41	1	add
174	[BUG]  [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException(  [CE]  ')'  expected  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException(  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        'n')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt!=    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException(	  	non-compiled	[CE]  ')'  expected	41	None	add
175	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(type);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(type);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
176	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  type);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  type);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
177	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  required);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  required);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
178	[BUG]  [BUGGY]  abuilder.setOption(option);  [CE]  cannot  find  symbol  option  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.setOption(option);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.setOption(option);	  abuilder.setOption(opt);    	non-compiled	[CE]  cannot  find  symbol  option	37	None	replace
179	[BUG]  [BUGGY]  abuilder.setOption(op);  [CE]  cannot  find  symbol  op  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.setOption(op);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.setOption(op);	  abuilder.setOption(opt);    	non-compiled	[CE]  cannot  find  symbol  op	37	None	replace
180	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  options.getOptionBuilder(type);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  abuilder  =  options.getOptionBuilder(type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  abuilder  =  options.getOptionBuilder(type);	  OptionBuilder    abuilder    =    options.getOptionBuilder(opt);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
181	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  opt.getOptionBuilder(option);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  abuilder  =  opt.getOptionBuilder(option);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  abuilder  =  opt.getOptionBuilder(option);	  OptionBuilder    abuilder    =    options.getOptionBuilder(opt);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
182	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  options.getOptionBuilder(opt,  type);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  abuilder  =  options.getOptionBuilder(opt,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  abuilder  =  options.getOptionBuilder(opt,  type);	  OptionBuilder    abuilder    =    options.getOptionBuilder(opt);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
183	[BUG]  [BUGGY]  abuilder.withOption(required);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(required);	  abuilder.withOption(option);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
184	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	                if(opt!=        'n')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	43	1	add
185	[BUG]  [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        'n')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	43	1	add
186	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	                if(opt!=        'n')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	43	1	add
187	[BUG]  [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        'n')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	43	1	add
188	[BUG]  [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        'n')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	43	None	add
189	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	                if(opt!=        'n')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	43	1	add
190	[BUG]  [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        'n')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	43	1	add
191	[BUG]  [BUGGY]  if(opt  ==  'n')  {  abuilder.withOption(type);  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt  ==  'n')  {  abuilder.withOption(type);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt  ==  'n')  {  abuilder.withOption(type);  }	  if(opt!=    'n')    {    abuilder.withOption(type);    }    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
192	[BUG]  [BUGGY]  opt  =  abuilder.withOption(type);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  opt  =  abuilder.withOption(type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	opt  =  abuilder.withOption(type);	  if(type!=    'n')    {    opt    =    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
193	[BUG]  [BUGGY]  if(opt!=  'n')  {  opt  =  abuilder.withOption(opt);  }  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  'n')  {  opt  =  abuilder.withOption(opt);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt!=  'n')  {  opt  =  abuilder.withOption(opt);  }	  if(type!=    'n')    {    opt    =    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
194	[BUG]  [BUGGY]  if(type!=  'n')  {  opt  =  opt.withOption(abuilder);  }  [CE]  char  cannot  be  dereferenced  [FE]                          ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  'n')  {  opt  =  opt.withOption(abuilder);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  'n')  {  opt  =  opt.withOption(abuilder);  }	  if(type!=    'n')    {    opt    =    abuilder.withOption(opt);    }    	non-compiled	[CE]  char  cannot  be  dereferenced	57	None	replace
195	[BUG]  [BUGGY]  abuilder.setOption(options);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.setOption(options);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.setOption(options);	  gbuilder.setOption(options);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
196	[BUG]  [BUGGY]  gbuilder.setOption(options,  opt);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  gbuilder.setOption(options,  opt);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	gbuilder.setOption(options,  opt);	  gbuilder.setOption(options);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
197	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '[')  {  abuilder.withMinimum(1);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(type!=  '[')  {  abuilder.withMinimum(1);  }	  abuilder.withValidator(validator(opt));    if(validator(opt)    ==    null)    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  ComparisonFailure  	35	1	replace
198	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withMinimum(1);  }  [FE]  ComparisonFailure  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '[')  {  abuilder.withMinimum(1);  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '[')  {  abuilder.withMinimum(1);  }	  abuilder.withValidator(validator(opt));    if(validator(opt)    ==    null)    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  ComparisonFailure  	35	1	replace
199	[BUG]  [BUGGY]  aughtExceptionHandler(abuilder,  opt, "Unknown  argument ");  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  aughtExceptionHandler(abuilder,  opt, "Unknown  argument ");  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	aughtExceptionHandler(abuilder,  opt, "Unknown  argument ");	  aughtExceptionHandler(abuilder,   "Unknown    argument   ");    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
200	[BUG]  [BUGGY]  if(abuilder!=  null)  {  aughtExceptionHandler(abuilder,   "Unknown  argument ");  }  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(abuilder!=  null)  {  aughtExceptionHandler(abuilder,   "Unknown  argument ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(abuilder!=  null)  {  aughtExceptionHandler(abuilder,   "Unknown  argument ");  }	  aughtExceptionHandler(abuilder,   "Unknown    argument   ");    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
201	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '.')  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(type!=  '.')  {  throw  new  IllegalArgumentException( ". ");  }	          if(opt!=    '.')    {    throw    new    IllegalArgumentException(       "       ");    }    if(opt!=    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    	compilable	  [FE]  IllegalArgumentException  	12	1	replace
202	[BUG]  [BUGGY]  if(type!=  '.')  {  throw  new  IllegalArgumentException( ". ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '.')  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '.')  {  throw  new  IllegalArgumentException( ". ");  }	          if(opt!=    '.')    {    throw    new    IllegalArgumentException(       "       ");    }    if(opt!=    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    	compilable	  [FE]  IllegalArgumentException  	12	1	replace
203	[BUG]  [BUGGY]  parent  ==  null  ||  opt  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  parent  ==  null  ||  opt  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	parent  ==  null  ||  opt  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	69	None	replace
204	[BUG]  [BUGGY]  if(opt!=  '.')  {  parent!=  null  &&  opt!=  '.')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  '.')  {  parent!=  null  &&  opt!=  '.')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt!=  '.')  {  parent!=  null  &&  opt!=  '.')  {  throw  new  IllegalArgumentException( " ");  }	  parent!=    null    &&    opt!=    '.')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	47	None	replace
205	[BUG]  [BUGGY]  abuilder!=  null  &&  opt!=  '.')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder!=  null  &&  opt!=  '.')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder!=  null  &&  opt!=  '.')  {  throw  new  IllegalArgumentException( " ");  }	  parent!=    null    &&    opt!=    '.')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	47	None	replace
206	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(abuilder,  type);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(abuilder,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(abuilder,  type);	  OptionBuilder    obuilder    =    OptionBuilder.create(type);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
207	[BUG]  [BUGGY]  abuilder.withOption(type,  required);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(type,  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(type,  required);	  abuilder.withOption(opt,    required);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
208	[BUG]  [BUGGY]  abuilder.withOption(opt,  preferred);  [CE]  cannot  find  symbol  preferred  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(opt,  preferred);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(opt,  preferred);	  abuilder.withOption(opt,    required);    	non-compiled	[CE]  cannot  find  symbol  preferred	40	None	replace
209	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt  ==  'n')  {  throw  new  IllegalArgumentException(   "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(opt    ==    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
210	[BUG]  [BUGGY]  if(opt  ==  'n')  {  throw  new  IllegalArgumentException(   "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt  ==  'n')  {  throw  new  IllegalArgumentException(   "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt    ==    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
211	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt  ==  'n')  {  throw  new  IllegalArgumentException(   "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(opt    ==    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	68	1	add
212	[BUG]  [BUGGY]  if(opt  ==  'n')  {  throw  new  IllegalArgumentException(   "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt  ==  'n')  {  throw  new  IllegalArgumentException(   "   ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt    ==    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	68	1	add
213	[BUG]  [BUGGY]  abuilder.withOption(validator(opt,  type,  argument));  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(validator(opt,  type,  argument));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(validator(opt,  type,  argument));	  abuilder.withOption(validator(opt,    type));    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	86	None	replace
214	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(type!=  '[')  {  throw  new  IllegalArgumentException( " ");  }	          if(opt!=    'n')    {    throw    new    IllegalArgumentException(       "       ");    }    if(opt!=    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    	compilable	  [FE]  IllegalArgumentException  	42	1	replace
215	[BUG]  [BUGGY]  if(type!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '[')  {  throw  new  IllegalArgumentException( " ");  }	          if(opt!=    'n')    {    throw    new    IllegalArgumentException(       "       ");    }    if(opt!=    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    	compilable	  [FE]  IllegalArgumentException  	42	1	replace
216	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withOption(option);  }  [CE]  cannot  find  symbol  option  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  '.')  {  abuilder.withOption(option);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt!=  '.')  {  abuilder.withOption(option);  }	  if(opt!=    '.')    {    abuilder.withOption(type);    }    	non-compiled	[CE]  cannot  find  symbol  option	2	None	replace
217	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '>')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(type!=  '>')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)    ==    null)    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	35	1	replace
218	[BUG]  [BUGGY]  if(type!=  '>')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '>')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '>')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)    ==    null)    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	35	1	replace
219	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  ':')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(type!=  ':')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)    ==    null)    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	35	1	replace
220	[BUG]  [BUGGY]  if(type!=  ':')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  ':')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  ':')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)    ==    null)    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	35	1	replace
221	[BUG]  [BUGGY]  abuilder.withOption(validator(opt),  preferred);  [CE]  cannot  find  symbol  preferred  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(validator(opt),  preferred);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(validator(opt),  preferred);	  abuilder.withOption(validator(opt),    required);    	non-compiled	[CE]  cannot  find  symbol  preferred	19	None	replace
222	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	abuilder.withValidator(validator(opt));        if(validator(opt)!=    null)    {    abuilder.withValidator(validator(opt));    }    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  }	  	compilable	  [FE]  IllegalArgumentException  	32	1	add
223	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt));        if(validator(opt)!=    null)    {    abuilder.withValidator(validator(opt));    }    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  }	  	compilable	  [FE]  IllegalArgumentException  	32	1	add
224	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt));        if(validator(opt)!=    null)    {    abuilder.withValidator(validator(opt));    }    if(type!=  '.')  {  abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
225	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  if(type!=  '-')  {  abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  if(type!=  '-')  {  abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt));        if(validator(opt)!=    null)    {    abuilder.withValidator(validator(opt));    }    if(type!=  '-')  {  abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
226	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	abuilder.withValidator(validator(opt));        if(validator(opt)    ==    null)    {    abuilder.withValidator(validator(opt));    }    if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  }	  	compilable	  [FE]  IllegalArgumentException  	34	1	add
227	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt));        if(validator(opt)    ==    null)    {    abuilder.withValidator(validator(opt));    }    if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  }	  	compilable	  [FE]  IllegalArgumentException  	34	1	add
228	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt));        if(validator(opt)    ==    null)    {    abuilder.withValidator(validator(opt));    }    if(type!=  '.')  {  abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
229	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  if(validator!=  required)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  if(validator!=  required)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '.')  {  abuilder.withValidator(validator(opt));  if(validator!=  required)  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)!=    required)    {    abuilder.withValidator(validator(opt));    }    else    {    OptionBuilder    obuilder    =    options.getOptionBuilder();    obuilder.create();    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
230	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(validator(opt)!=  required)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(validator(opt)!=  required)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(validator(opt)!=  required)  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)!=    required)    {    abuilder.withValidator(validator(opt));    }    else    {    OptionBuilder    obuilder    =    options.getOptionBuilder();    obuilder.create();    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
231	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  if(validator  ==  required)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '.')  {  abuilder.withValidator(validator(opt));  if(validator  ==  required)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '.')  {  abuilder.withValidator(validator(opt));  if(validator  ==  required)  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)!=    required)    {    abuilder.withValidator(validator(opt));    }    else    {    OptionBuilder    obuilder    =    options.getOptionBuilder();    obuilder.create();    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
232	[BUG]  [BUGGY]  if(type!=  '-')  {  abuilder.withValidator(validator(opt));  if(validator!=  required)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '-')  {  abuilder.withValidator(validator(opt));  if(validator!=  required)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '-')  {  abuilder.withValidator(validator(opt));  if(validator!=  required)  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)!=    required)    {    abuilder.withValidator(validator(opt));    }    else    {    OptionBuilder    obuilder    =    options.getOptionBuilder();    obuilder.create();    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
233	[BUG]  [BUGGY]  abuilder.withOption(validator(opt),  argument,  required);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(validator(opt),  argument,  required);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(validator(opt),  argument,  required);	  abuilder.withOption(validator(opt),    argument);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
234	[BUG]  [BUGGY]  abuilder.withOption(validator(opt),  opt,  required);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(validator(opt),  opt,  required);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(validator(opt),  opt,  required);	  abuilder.withOption(validator(opt),    argument);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
235	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(type!=  'n')  {  throw  new  IllegalArgumentException( " ");  }	          if(opt!=    'n')    {    throw    new    IllegalArgumentException(       "       ");    }    if(opt    >=    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    	compilable	  [FE]  IllegalArgumentException  	44	1	replace
236	[BUG]  [BUGGY]  if(type!=  'n')  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  'n')  {  throw  new  IllegalArgumentException( " ");  }	          if(opt!=    'n')    {    throw    new    IllegalArgumentException(       "       ");    }    if(opt    >=    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    	compilable	  [FE]  IllegalArgumentException  	44	1	replace
237	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  null);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  null);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  null);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt,    type);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
238	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type,  gbuilder);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type,  gbuilder);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  type,  gbuilder);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt,    type);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
239	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(option);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(option);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(option);	  OptionBuilder    obuilder    =    OptionBuilder.create(type);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
240	[BUG]  [BUGGY]  ASTRequired.setValidator(validator(opt));  [CE]  cannot  find  symbol  ASTRequired  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  ASTRequired.setValidator(validator(opt));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	ASTRequired.setValidator(validator(opt));	  abuilder.setValidator(validator(type));    	non-compiled	[CE]  cannot  find  symbol  ASTRequired	8	None	replace
241	[BUG]  [BUGGY]  if(opt!=  '.'  ||  opt  >=  '@')  {  abuilder.withOption(opt);  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  '.'  ||  opt  >=  '@')  {  abuilder.withOption(opt);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt!=  '.'  ||  opt  >=  '@')  {  abuilder.withOption(opt);  }	  if(opt!=    '.'    ||    opt!=    '@')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
242	[BUG]  [BUGGY]  if(type!=  '+')  {  abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '+')  {  abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '+')  {  abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)!=    null)    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
243	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)!=    null)    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
244	[BUG]  [BUGGY]  obuilder.setOption(argument);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  obuilder.setOption(argument);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	obuilder.setOption(argument);	  gbuilder.setOption(argument);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
245	[BUG]  [BUGGY]  if(opt!='')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  empty  character  literal  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!='')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt!='')  {  throw  new  IllegalArgumentException( " ");  }	  allowNull(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  empty  character  literal	48	None	replace
246	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  ':')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(opt  ==  'n'  ||  opt  ==  ':')  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ComparisonFailure  	69	1	replace
247	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  ':')  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  ':')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt  ==  'n'  ||  opt  ==  ':')  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ComparisonFailure  	69	1	replace
248	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(opt  ==  'n'  ||  opt  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ComparisonFailure  	69	1	replace
249	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt  ==  'n'  ||  opt  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ComparisonFailure  	69	1	replace
250	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(opt  ==  'n'  ||  opt  ==  'r')  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ComparisonFailure  	69	1	replace
251	[BUG]  [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt  ==  'n'  ||  opt  ==  'r')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt  ==  'n'  ||  opt  ==  'r')  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ComparisonFailure  	69	1	replace
252	[BUG]  [BUGGY]  if(type!=  '.')  {  opt  =  opt.withOption(abuilder);  }  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '.')  {  opt  =  opt.withOption(abuilder);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '.')  {  opt  =  opt.withOption(abuilder);  }	  if(type!=    '.')    {    opt    =    abuilder.withOption(opt);    }    	non-compiled	[CE]  char  cannot  be  dereferenced	3	None	replace
253	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder(opt,  required);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  options.getOptionBuilder(opt,  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  options.getOptionBuilder(opt,  required);	  OptionBuilder    obuilder    =    options.getOptionBuilder(opt);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
254	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt),  argument,  type);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt),  argument,  type);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt),  argument,  type);	  abuilder.withValidator(validator(opt),    type);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	54	None	replace
255	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt),  type,  argument);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt),  type,  argument);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt),  type,  argument);	  abuilder.withValidator(validator(opt),    type);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	54	None	replace
256	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt),  argument);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt),  argument);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt),  argument);	  abuilder.withValidator(validator(opt),    type);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	54	None	replace
257	[BUG]  [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException(  [CE]  ')'  expected  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException(  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        '.')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException(	  	non-compiled	[CE]  ')'  expected	15	None	add
258	[BUG]  [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        '.')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  '.')  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	15	None	add
259	[BUG]  [BUGGY]  abuilder.setValidator(validator(opt),  argument,  required);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.setValidator(validator(opt),  argument,  required);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.setValidator(validator(opt),  argument,  required);	  abuilder.setValidator(validator(opt),    argument);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
260	[BUG]  [BUGGY]  abuilder.setValidator(validator(opt),  preferred);  [CE]  cannot  find  symbol  preferred  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.setValidator(validator(opt),  preferred);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.setValidator(validator(opt),  preferred);	  abuilder.setValidator(validator(opt),    argument);    	non-compiled	[CE]  cannot  find  symbol  preferred	73	None	replace
261	[BUG]  [BUGGY]  if(opt!=  'n')  {  abuilder.withOption(option);  }  [CE]  cannot  find  symbol  option  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  'n')  {  abuilder.withOption(option);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt!=  'n')  {  abuilder.withOption(option);  }	  if(opt!=    'n')    {    abuilder.withOption(type);    }    	non-compiled	[CE]  cannot  find  symbol  option	56	None	replace
262	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.withOption(opt,  type);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  options.withOption(opt,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  options.withOption(opt,  type);	  abuilder.withOption(options,    type);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
263	[BUG]  [BUGGY]  if(type!=  '*')  {  abuilder.withValidator(validator(opt));  if(validator(opt)!=  required)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '*')  {  abuilder.withValidator(validator(opt));  if(validator(opt)!=  required)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '*')  {  abuilder.withValidator(validator(opt));  if(validator(opt)!=  required)  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)!=    required)    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
264	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '-')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(type!=  '-')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)!=    required)    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	36	1	replace
265	[BUG]  [BUGGY]  if(type!=  '-')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]                IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '-')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '-')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)!=    required)    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	36	1	replace
266	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  options.getOptionBuilder(opt,  required);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  abuilder  =  options.getOptionBuilder(opt,  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  abuilder  =  options.getOptionBuilder(opt,  required);	  OptionBuilder    abuilder    =    options.getOptionBuilder(opt);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
267	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  argument);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  argument);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  argument);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt,    required);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
268	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  option);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(opt,  option);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(opt,  option);	  OptionBuilder    obuilder    =    OptionBuilder.create(opt,    required);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
269	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  options);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  options);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(opt,  options);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
270	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(type!=  '[')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	compilable	  [FE]  IllegalArgumentException  	31	1	replace
271	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '[')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	compilable	  [FE]  IllegalArgumentException  	31	1	replace
272	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '>')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(type!=  '>')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	compilable	  [FE]  IllegalArgumentException  	31	1	replace
273	[BUG]  [BUGGY]  if(type!=  '>')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '>')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '>')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	compilable	  [FE]  IllegalArgumentException  	31	1	replace
274	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type  ==  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(type  ==  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	compilable	  [FE]  ComparisonFailure  	31	1	replace
275	[BUG]  [BUGGY]  if(type  ==  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [FE]  ComparisonFailure  [FE]        IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type  ==  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type  ==  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	compilable	  [FE]  ComparisonFailure  	31	1	replace
276	[BUG]  [BUGGY]  abuilder.withOption(opt,  argument);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(opt,  argument);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(opt,  argument);	  abuilder.withOption(opt,    required);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
277	[BUG]  [BUGGY]  if(opt!=  ';')  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  ';')  {  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt!=  ';')  {	  abuilder.withOption(opt)    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
278	[BUG]  [BUGGY]  abuilder.withOption(options)  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(options)  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(options)	  abuilder.withOption(opt)    	non-compiled	[CE]  ';'  expected	64	None	replace
279	[BUG]  [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException(  [CE]  ')'  expected  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  >=  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException(  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        'n')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    >=    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  >=  'n')  {  throw  new  IllegalArgumentException(	  	non-compiled	[CE]  ')'  expected	43	None	add
280	[BUG]  [BUGGY]  parent!=  null  &&  opt  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  parent!=  null  &&  opt  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	parent!=  null  &&  opt  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }	  parent!=    null    &&    opt!=    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	4	None	replace
281	[BUG]  [BUGGY]  ASTRequired.throwAsUnquotedException( " ");  [CE]  cannot  find  symbol  ASTRequired  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  ASTRequired.throwAsUnquotedException( " ");  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	ASTRequired.throwAsUnquotedException( " ");	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  ASTRequired	7	None	replace
282	[BUG]  [BUGGY]  OptOptionBuilder  obuilder  =  options.getOption(opt);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptOptionBuilder  obuilder  =  options.getOption(opt);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptOptionBuilder  obuilder  =  options.getOption(opt);	  obuilder.setOption(opt);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
283	[BUG]  [BUGGY]  OptOptionBuilder  obuilder  =  new  OptOptionBuilder(opt);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptOptionBuilder  obuilder  =  new  OptOptionBuilder(opt);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptOptionBuilder  obuilder  =  new  OptOptionBuilder(opt);	  obuilder.setOption(opt);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
284	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  option.createOptionBuilder();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  option.createOptionBuilder();  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  option.createOptionBuilder();	  OptionBuilder    obuilder    =    option.getOptionBuilder();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
285	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  options);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  options);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOption(opt,  options);	  OptionBuilder    obuilder    =    OptionBuilder.createOption(opt);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
286	[BUG]  [BUGGY]  aughtExceptionHandler.handleOption(abuilder,  opt);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  aughtExceptionHandler.handleOption(abuilder,  opt);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	aughtExceptionHandler.handleOption(abuilder,  opt);	  if(opt    ==    '.')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	72	None	replace
287	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  gbuilder.getOptionBuilder();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  abuilder  =  gbuilder.getOptionBuilder();  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  abuilder  =  gbuilder.getOptionBuilder();	  OptionBuilder    abuilder    =    opt.getOptionBuilder();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
288	[BUG]  [BUGGY]  parent!=  null  ||  opt  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  parent!=  null  ||  opt  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	parent!=  null  ||  opt  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }	  parent!=    null    ||    opt!=    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	5	None	replace
289	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.getOption(opt,  required);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  options.getOption(opt,  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  options.getOption(opt,  required);	  OptionBuilder    obuilder    =    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
290	[BUG]  [BUGGY]  abuilder.withValidator(opt,  argument);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(opt,  argument);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(opt,  argument);	  abuilder.withValidator(opt);    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	60	None	replace
291	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(opt,  options);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(opt,  options);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  abuilder  =  OptionBuilder.createOptionBuilder(opt,  options);	  OptionBuilder    abuilder    =    OptionBuilder.createOptionBuilder(opt);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
292	[BUG]  [BUGGY]  abuilder.withOption(opt,  null);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(opt,  null);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(opt,  null);	  abuilder.withOption(opt,    type);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
293	[BUG]  [BUGGY]  abuilder.withOption(opt,  opt);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(opt,  opt);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(opt,  opt);	  abuilder.withOption(opt,    type);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
294	[BUG]  [BUGGY]  if(opt!=  'n')  {  opt  =  abuilder.withOption(type);  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  'n')  {  opt  =  abuilder.withOption(type);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt!=  'n')  {  opt  =  abuilder.withOption(type);  }	  if(type!=    'n')    {    opt    =    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
295	[BUG]  [BUGGY]  OptOptionBuilder  abuilder  =  abuilder.withOption(opt);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptOptionBuilder  abuilder  =  abuilder.withOption(opt);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptOptionBuilder  abuilder  =  abuilder.withOption(opt);	  if(type!=    'n')    {    opt    =    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
296	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(2);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(2);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  OptionBuilder.createOptionBuilder(2);	  OptionBuilder    obuilder    =    OptionBuilder.createOptionBuilder(0);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
297	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  options.createOptionBuilder(options);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  abuilder  =  options.createOptionBuilder(options);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  abuilder  =  options.createOptionBuilder(options);	  OptionBuilder    abuilder    =    options.createOptionBuilder();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
298	[BUG]  [BUGGY]  abuilder.setValidator(validator(opt,  type,  argument));  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.setValidator(validator(opt,  type,  argument));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.setValidator(validator(opt,  type,  argument));	  abuilder.setValidator(validator(opt,    type));    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	10	None	replace
299	[BUG]  [BUGGY]  abuilder.setValidator(validator(opt,  type,  null));  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.setValidator(validator(opt,  type,  null));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.setValidator(validator(opt,  type,  null));	  abuilder.setValidator(validator(opt,    type));    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	10	None	replace
300	[BUG]  [BUGGY]  if(opt!=  '.')  {  aughtExceptionHandler(abuilder, "Unknown  argument ");  }  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  '.')  {  aughtExceptionHandler(abuilder, "Unknown  argument ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt!=  '.')  {  aughtExceptionHandler(abuilder, "Unknown  argument ");  }	  aughtExceptionHandler(abuilder,   "Unknown    argument   ");    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
301	[BUG]  [BUGGY]  parent!=  null  &&  opt  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  parent!=  null  &&  opt  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	parent!=  null  &&  opt  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }	  parent!=    null    &&    opt!=    '.')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	47	None	replace
302	[BUG]  [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '  [CE]  illegal  line  end  in  character  literal  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    'n')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  'n')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        'n')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    ==    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	45	None	add
303	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt  >=  'a')  {  abuilder.withOption(opt);  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  'n'  ||  opt  >=  'a')  {  abuilder.withOption(opt);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt!=  'n'  ||  opt  >=  'a')  {  abuilder.withOption(opt);  }	  if(opt!=    'n'    ||    opt!=    'a')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
304	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	30	1	add
305	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	30	1	add
306	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));	  	compilable	  [FE]  IllegalArgumentException  	30	1	add
307	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));	  	compilable	  [FE]  IllegalArgumentException  	30	1	add
308	[BUG]  [BUGGY]  abuilder.setOption(opt,  required);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.setOption(opt,  required);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.setOption(opt,  required);	  abuilder.setOption(opt);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
309	[BUG]  [BUGGY]  if(options!=  null)  {  abuilder.withOption(opt);  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(options!=  null)  {  abuilder.withOption(opt);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(options!=  null)  {  abuilder.withOption(opt);  }	  if(type!=    'n')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
310	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  ':')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(type!=  ':')  {  throw  new  IllegalArgumentException( " ");  }	          if(opt!=    'n')    {    throw    new    IllegalArgumentException(       "       ");    }    if(opt!=    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    	compilable	  [FE]  IllegalArgumentException  	42	1	replace
311	[BUG]  [BUGGY]  if(type!=  ':')  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  ':')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  ':')  {  throw  new  IllegalArgumentException( " ");  }	          if(opt!=    'n')    {    throw    new    IllegalArgumentException(       "       ");    }    if(opt!=    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    	compilable	  [FE]  IllegalArgumentException  	42	1	replace
312	[BUG]  [BUGGY]  if(type!=  '.')  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '.')  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '.')  {  throw  new  IllegalArgumentException( " ".);  }	          if(opt!=    'n')    {    throw    new    IllegalArgumentException(       "       ");    }    if(opt!=    'n')    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
313	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	compilable	  [FE]  IllegalArgumentException  	31	1	replace
314	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt!=  '.')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));    	compilable	  [FE]  IllegalArgumentException  	31	1	replace
315	[BUG]  [BUGGY]  abuilder.setOption(opt;  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.setOption(opt;  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.setOption(opt;	  abuilder.setOption(opt);    	non-compiled	[CE]  ')'  expected	37	None	replace
316	[BUG]  [BUGGY]  if(opt  ==  '.'  ||  opt!=  '@')  {  abuilder.withOption(opt);  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt  ==  '.'  ||  opt!=  '@')  {  abuilder.withOption(opt);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt  ==  '.'  ||  opt!=  '@')  {  abuilder.withOption(opt);  }	  if(opt!=    '.'    ||    opt!=    '@')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
317	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt));        if(validator(opt)!=    null)    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(opt));  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  ';'  expected	32	None	add
318	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(opt);  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(opt);  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt));        if(validator(opt)!=    null)    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(opt);  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	32	None	add
319	[BUG]  [BUGGY]  abuilder.withOption(options,  options,  type);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(options,  options,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(options,  options,  type);	  abuilder.withOption(options,    type);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
320	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }	  allowNull(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	48	1	replace
321	[BUG]  [BUGGY]  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt!=  '[')  {  throw  new  IllegalArgumentException( " ");  }	  allowNull(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	48	1	replace
322	[BUG]  [BUGGY]  ASTRING_ExceptionHandler.throwAsUnquotedException( " ");  [CE]  cannot  find  symbol  ASTRING_ExceptionHandler  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  ASTRING_ExceptionHandler.throwAsUnquotedException( " ");  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	ASTRING_ExceptionHandler.throwAsUnquotedException( " ");	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  ASTRING_ExceptionHandler	7	None	replace
323	[BUG]  [BUGGY]  gbuilder.setOption(optimize);  [CE]  cannot  find  symbol  optimize  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  gbuilder.setOption(optimize);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	gbuilder.setOption(optimize);	  gbuilder.setOption(type);    	non-compiled	[CE]  cannot  find  symbol  optimize	17	None	replace
324	[BUG]  [BUGGY]  abuilder.withOption(opt,  opt,  type);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(opt,  opt,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(opt,  opt,  type);	  abuilder.withOption(opt,    type);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
325	[BUG]  [BUGGY]  parent  ==  null  ||  opt  ==  'n')  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  parent  ==  null  ||  opt  ==  'n')  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	parent  ==  null  ||  opt  ==  'n')  {  throw  new  IllegalArgumentException( " ".);  }	  if(opt    ==    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	69	None	replace
326	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  option,  options.getOptionBuilder();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  option,  options.getOptionBuilder();  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  option,  options.getOptionBuilder();	  OptionBuilder    obuilder    =    option.getOptionBuilder();    	non-compiled	[CE]  ';'  expected	50	None	replace
327	[BUG]  [BUGGY]  ASTRING_Exception.throwAsIgnoredException( " ");  [CE]  cannot  find  symbol  ASTRING_Exception  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  ASTRING_Exception.throwAsIgnoredException( " ");  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	ASTRING_Exception.throwAsIgnoredException( " ");	  aughtExceptionHandler.throwAsIgnoredException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  ASTRING_Exception	6	None	replace
328	[BUG]  [BUGGY]  ASTRING_ExceptionHANDLER.throwAsIgnoredException( " ");  [CE]  cannot  find  symbol  ASTRING_ExceptionHANDLER  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  ASTRING_ExceptionHANDLER.throwAsIgnoredException( " ");  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	ASTRING_ExceptionHANDLER.throwAsIgnoredException( " ");	  aughtExceptionHandler.throwAsIgnoredException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  ASTRING_ExceptionHANDLER	6	None	replace
329	[BUG]  [BUGGY]  if(abuilder!=  null)  {  aughtExceptionHandler(abuilder,  opt, "Unknown  argument ");  }  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(abuilder!=  null)  {  aughtExceptionHandler(abuilder,  opt, "Unknown  argument ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(abuilder!=  null)  {  aughtExceptionHandler(abuilder,  opt, "Unknown  argument ");  }	  aughtExceptionHandler(abuilder,   "Unknown    argument   ");    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
330	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder, "Unknown  argument ");  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  gbuilder.addArgument(abuilder, "Unknown  argument ");  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	gbuilder.addArgument(abuilder, "Unknown  argument ");	  aughtExceptionHandler(abuilder,   "Unknown    argument   ");    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
331	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt,  type));  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt,  type));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt,  type));	  abuilder.withValidator(validator(opt),    type);    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	54	None	replace
332	[BUG]  [BUGGY]  if(argument!=  null)  {  abuilder.withValidator(validator(opt));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]              IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(argument!=  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(argument!=  null)  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)!=    required)    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	36	None	replace
333	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '*')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(type!=  '*')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)!=    required)    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	36	1	replace
334	[BUG]  [BUGGY]  if(type!=  '*')  {  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]                IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '*')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '*')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)!=    required)    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  IllegalArgumentException  	36	1	replace
335	[BUG]  [BUGGY]  if(opt!=  ';')  {  abuilder.withOption(opt);  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  ';')  {  abuilder.withOption(opt);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt!=  ';')  {  abuilder.withOption(opt);  }	  abuilder.withOption(opt)    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
336	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  ';')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(opt!=  ';')  {  throw  new  IllegalArgumentException( " ");  }	  abuilder.withOption(opt)    	compilable	  [FE]  IllegalArgumentException  	64	1	replace
337	[BUG]  [BUGGY]  if(opt!=  ';')  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  ';')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt!=  ';')  {  throw  new  IllegalArgumentException( " ");  }	  abuilder.withOption(opt)    	compilable	  [FE]  IllegalArgumentException  	64	1	replace
338	[BUG]  [BUGGY]  if(opt!=  ';')  {  abuilder.withOption(opt)  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  ';')  {  abuilder.withOption(opt)  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt!=  ';')  {  abuilder.withOption(opt)  }	  abuilder.withOption(opt)    	non-compiled	[CE]  ';'  expected	64	None	replace
339	[BUG]  [BUGGY]  if(type!=  '*')  {  abuilder.withValidator(validator(opt));  if(validator!=  required)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '*')  {  abuilder.withValidator(validator(opt));  if(validator!=  required)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '*')  {  abuilder.withValidator(validator(opt));  if(validator!=  required)  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)!=    required)    {    abuilder.withValidator(validator(opt));    }    else    {    OptionBuilder    obuilder    =    options.getOptionBuilder();    obuilder.create();    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
340	[BUG]  [BUGGY]  if(argument!=  null)  {  abuilder.withValidator(validator(opt));  if(validator!=  required)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(argument!=  null)  {  abuilder.withValidator(validator(opt));  if(validator!=  required)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(argument!=  null)  {  abuilder.withValidator(validator(opt));  if(validator!=  required)  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)!=    required)    {    abuilder.withValidator(validator(opt));    }    else    {    OptionBuilder    obuilder    =    options.getOptionBuilder();    obuilder.create();    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
341	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(validator!=  required)  {  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(validator!=  required)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  '[')  {  abuilder.withValidator(validator(opt));  if(validator!=  required)  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)!=    required)    {    abuilder.withValidator(validator(opt));    }    else    {    OptionBuilder    obuilder    =    options.getOptionBuilder();    obuilder.create();    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
342	[BUG]  [BUGGY]  if(opt!=  '.')  {  opt  =  opt.withOption(abuilder);  }  [CE]  char  cannot  be  dereferenced  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  '.')  {  opt  =  opt.withOption(abuilder);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt!=  '.')  {  opt  =  opt.withOption(abuilder);  }	  if(type!=    '.')    {    opt    =    abuilder.withOption(opt);    }    	non-compiled	[CE]  char  cannot  be  dereferenced	3	None	replace
343	[BUG]  [BUGGY]  gbuilder.setOption(options,  type);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  gbuilder.setOption(options,  type);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	gbuilder.setOption(options,  type);	  gbuilder.setOption(options);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
344	[BUG]  [BUGGY]  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt  ==  '.')  {  throw  new  IllegalArgumentException( " ".);  }	          if(opt!=    '.')    {    throw    new    IllegalArgumentException(       "       ");    }    if(opt    ==    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
345	[BUG]  [BUGGY]  if(type!=  'n'  ||  type!=  '-')  {  abuilder.withOption(opt);  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type!=  'n'  ||  type!=  '-')  {  abuilder.withOption(opt);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type!=  'n'  ||  type!=  '-')  {  abuilder.withOption(opt);  }	  if(type!=    'n')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
346	[BUG]  [BUGGY]  parent  ==  null  ||  opt  ==  '.')  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  parent  ==  null  ||  opt  ==  '.')  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	parent  ==  null  ||  opt  ==  '.')  {  throw  new  IllegalArgumentException( " ".);  }	  if(opt    ==    '.')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	72	None	replace
347	[BUG]  [BUGGY]  abuilder.withOption(validator(gbuilder,  opt,  type));  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withOption(validator(gbuilder,  opt,  type));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withOption(validator(gbuilder,  opt,  type));	  abuilder.withOption(validator(opt,    type));    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	86	None	replace
348	[BUG]  [BUGGY]  if(argument  ==  null)  {  abuilder.withValidator(validator(opt));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(argument  ==  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(argument  ==  null)  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)    ==    null)    {    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	35	None	replace
349	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type  ==  '[')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(type  ==  '[')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)    ==    null)    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  ComparisonFailure  	35	1	replace
350	[BUG]  [BUGGY]  if(type  ==  '[')  {  abuilder.withValidator(validator(opt));  }  [FE]  ComparisonFailure  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(type  ==  '[')  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(type  ==  '[')  {  abuilder.withValidator(validator(opt));  }	  abuilder.withValidator(validator(opt));    if(validator(opt)    ==    null)    {    abuilder.withValidator(validator(opt));    }    	compilable	  [FE]  ComparisonFailure  	35	1	replace
351	[BUG]  [BUGGY]  abuilder.setValidator(validator(gbuilder,  opt,  type));  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.setValidator(validator(gbuilder,  opt,  type));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.setValidator(validator(gbuilder,  opt,  type));	  abuilder.setValidator(validator(opt,    type));    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	10	None	replace
352	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  abuilder.withValidator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt));        if(validator(opt)    ==    null)    {    abuilder.withValidator(validator(opt));    }    abuilder.withValidator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  ';'  expected	34	None	add
353	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	abuilder.withValidator(validator(opt));        if(validator(opt)    ==    null)    {    abuilder.withValidator(validator(opt));    }    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  }	  	compilable	  [FE]  IllegalArgumentException  	34	1	add
354	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt));        if(validator(opt)    ==    null)    {    abuilder.withValidator(validator(opt));    }    if(validator(opt)!=  null)  {  abuilder.withValidator(validator(opt));  if(validator(opt)  ==  null)  {  abuilder.withValidator(validator(opt));  }  }	  	compilable	  [FE]  IllegalArgumentException  	34	1	add
355	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt  ==  'n')  {  throw  new  IllegalArgumentException(   "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	if(opt    ==    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    if(opt  ==  'n')  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
356	[BUG]  [BUGGY]  if(opt  ==  'n')  {  throw  new  IllegalArgumentException(   "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt  ==  'n')  {  throw  new  IllegalArgumentException(   "   ");  }  if(opt  ==  'n')  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt    ==    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    if(opt  ==  'n')  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  ComparisonFailure  	68	1	add
357	[BUG]  [BUGGY]  if(option!=  '.')  {  abuilder.withOption(opt);  }  [CE]  cannot  find  symbol  option  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(option!=  '.')  {  abuilder.withOption(opt);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(option!=  '.')  {  abuilder.withOption(opt);  }	  if(type!=    '.')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol  option	1	None	replace
358	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.withOption(opt,  type);  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  '.')  {  abuilder.withOption(opt,  type);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt!=  '.')  {  abuilder.withOption(opt,  type);  }	  if(opt!=    '.')    {    abuilder.withOption(type);    }    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
359	[BUG]  [BUGGY]  abuilder.setValidator(validator(opt),  type,  argument);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.setValidator(validator(opt),  type,  argument);  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.setValidator(validator(opt),  type,  argument);	  abuilder.setValidator(validator(opt),    argument);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
360	[BUG]  [BUGGY]  if(opt!=  'n'  ||  opt!=  'a'  &&  opt!=  'a')  {  abuilder.withOption(opt);  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  if(opt!=  'n'  ||  opt!=  'a'  &&  opt!=  'a')  {  abuilder.withOption(opt);  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	if(opt!=  'n'  ||  opt!=  'a'  &&  opt!=  'a')  {  abuilder.withOption(opt);  }	  if(opt!=    'n'    ||    opt!=    'a')    {    abuilder.withOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
361	[BUG]  [BUGGY]  OptionBuilder  abuilder  =  option.getOptionBuilder(opt);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  abuilder  =  option.getOptionBuilder(opt);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  abuilder  =  option.getOptionBuilder(opt);	  OptionBuilder    abuilder    =    option.getOptionBuilder();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
362	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(optimized);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  OptionBuilder  obuilder  =  OptionBuilder.create(optimized);  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	OptionBuilder  obuilder  =  OptionBuilder.create(optimized);	  OptionBuilder    obuilder    =    OptionBuilder.create(type);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
363	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	                if(opt!=        '.')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    ==    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	13	1	add
364	[BUG]  [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]          if(opt!=    '.')    {    throw    new    IllegalArgumentException(     "     ");    }    if(opt  ==  '.')  {  throw  new  IllegalArgumentException(   "     ");  }  if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	                if(opt!=        '.')        {        throw        new        IllegalArgumentException(       "       ");        }        if(opt    ==    '.')    {    throw    new    IllegalArgumentException(   "       ");    }    if(opt!=  '.')  {  throw  new  IllegalArgumentException( "   ");  }  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	13	1	add
365	[BUG]  [BUGGY]  try  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          IllegalArgumentException      [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  try  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	try  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }	  try    ==    'n')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	88	None	replace
366	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	add	abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	30	1	add
367	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    if(opt!=  '-')  {  abuilder.withValidator(validator(opt));  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	30	1	add
368	[BUG]  [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(opt));  abuilder.withValidator(validator(opt));  [CE]  ';'  expected  [FE]      IllegalArgumentException    [CONTEXT]      final  char  opt)  {  final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();      [BUGGY]  abuilder.withValidator(validator(opt));    abuilder.withValidator(validator(opt));  abuilder.withValidator(opt));  abuilder.withValidator(validator(opt));  [BUGGY]      if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }  argument  =  abuilder.create();  }  else  {  argument  =  null;  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	107	107	1	replace	abuilder.withValidator(validator(opt));        abuilder.withValidator(validator(opt));    abuilder.withValidator(opt));  abuilder.withValidator(validator(opt));	  	non-compiled	[CE]  ';'  expected	30	None	add
