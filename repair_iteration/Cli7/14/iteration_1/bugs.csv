bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Option  option  =(Option)options.iterator().next();  [CE]  variable  option  is  already  defined  in  method  create()  [FE]    ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]    Option  option  =(Option)options.iterator().next();  [BUGGY]  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	replace	    Option  option  =(Option)options.iterator().next();		non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	28	None	add
2	[BUG]  [BUGGY]    Option  option  =(Option)options.get(i.next());  [CE]  variable  option  is  already  defined  in  method  create()  [FE]      ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]    Option  option  =(Option)options.get(i.next());  [BUGGY]  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	replace	    Option  option  =(Option)options.get(i.next());		non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	28	None	add
3	[BUG]  [BUGGY]    Option  option  =  options.iterator().next();  [CE]  variable  option  is  already  defined  in  method  create()  [FE]        ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]    Option  option  =  options.iterator().next();  [BUGGY]  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	replace	    Option  option  =  options.iterator().next();		non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	28	None	add
4	[BUG]  [BUGGY]    Option  option  =  options.get(i.next());  [CE]  variable  option  is  already  defined  in  method  create()  [FE]          ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]    Option  option  =  options.get(i.next());  [BUGGY]  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	replace	    Option  option  =  options.get(i.next());		non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	28	None	add
5	[BUG]  [BUGGY]    Option  option  =(Option)options.get(i);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]            ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]    Option  option  =(Option)options.get(i);  [BUGGY]  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	replace	    Option  option  =(Option)options.get(i);		non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	28	None	add
6	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]  if(option!=  null)reset();  if(option  ==  null)  {  reset();  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	add	if(option!=  null)reset();  if(option  ==  null)  {  reset();  }	reset();  	compilable	  [FE]  ComparisonFailure  	27	1	replace
7	[BUG]  [BUGGY]  if(option!=  null)reset();  if(option  ==  null)  {  reset();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]  if(option!=  null)reset();  if(option  ==  null)  {  reset();  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	replace	if(option!=  null)reset();  if(option  ==  null)  {  reset();  }	reset();  	compilable	  [FE]  ComparisonFailure  	27	1	replace
8	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]  if(option  ==  null)reset();  if(option!=  null)  {  reset();  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	add	if(option  ==  null)reset();  if(option!=  null)  {  reset();  }	reset();  	compilable	  [FE]  ComparisonFailure  	27	1	replace
9	[BUG]  [BUGGY]  if(option  ==  null)reset();  if(option!=  null)  {  reset();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]  if(option  ==  null)reset();  if(option!=  null)  {  reset();  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	replace	if(option  ==  null)reset();  if(option!=  null)  {  reset();  }	reset();  	compilable	  [FE]  ComparisonFailure  	27	1	replace
10	[BUG]  [BUGGY]  if(option!=  null)reset();  if(option  ==  null)reset();  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]  if(option!=  null)reset();  if(option  ==  null)reset();  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	replace	if(option!=  null)reset();  if(option  ==  null)reset();  }	reset();  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
11	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]  if(option!=  null)reset();  if(option!=  null)  {  reset();  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	add	if(option!=  null)reset();  if(option!=  null)  {  reset();  }	reset();  	compilable	  [FE]  ComparisonFailure  	27	1	replace
12	[BUG]  [BUGGY]  if(option!=  null)reset();  if(option!=  null)  {  reset();  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]  if(option!=  null)reset();  if(option!=  null)  {  reset();  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	replace	if(option!=  null)reset();  if(option!=  null)  {  reset();  }	reset();  	compilable	  [FE]  ComparisonFailure  	27	1	replace
13	[BUG]  [BUGGY]    Option  option  =  options.get(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]    ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]    Option  option  =  options.get(option);  [BUGGY]  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	replace	    Option  option  =  options.get(option);		non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	28	None	add
14	[BUG]  [BUGGY]    Option  option  =  options.getOption(option);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]      ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]    Option  option  =  options.getOption(option);  [BUGGY]  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	replace	    Option  option  =  options.getOption(option);		non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	28	None	add
15	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]  if(option!=  null)reset();  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	add	if(option!=  null)reset();	reset();  	compilable	  [FE]  ComparisonFailure  	27	1	replace
16	[BUG]  [BUGGY]  if(option!=  null)reset();  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]  if(option!=  null)reset();  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	replace	if(option!=  null)reset();	reset();  	compilable	  [FE]  ComparisonFailure  	27	1	replace
17	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]  if(option!=  null)  {  reset();  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	add	if(option!=  null)  {  reset();  }	reset();  	compilable	  [FE]  ComparisonFailure  	27	1	replace
18	[BUG]  [BUGGY]  if(option!=  null)  {  reset();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]  if(option!=  null)  {  reset();  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	replace	if(option!=  null)  {  reset();  }	reset();  	compilable	  [FE]  ComparisonFailure  	27	1	replace
19	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]  options.clear();  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	add	options.clear();	reset();  	compilable	  [FE]  ComparisonFailure  	27	1	replace
20	[BUG]  [BUGGY]  options.clear();  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]  options.clear();  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	replace	options.clear();	reset();  	compilable	  [FE]  ComparisonFailure  	27	1	replace
21	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]  if(option  ==  null)reset();  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	add	if(option  ==  null)reset();	reset();  	compilable	  [FE]  ComparisonFailure  	27	1	replace
22	[BUG]  [BUGGY]  if(option  ==  null)reset();  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]  if(option  ==  null)reset();  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	replace	if(option  ==  null)reset();	reset();  	compilable	  [FE]  ComparisonFailure  	27	1	replace
23	[BUG]  [BUGGY]    Option  option  =  options.get(i);  [CE]  variable  option  is  already  defined  in  method  create()  [FE]    ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]    Option  option  =  options.get(i);  [BUGGY]  reset();  return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	replace	    Option  option  =  options.get(i);		non-compiled	[CE]  variable  option  is  already  defined  in  method  create()	28	None	add
24	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]  if(option!=  null)reset();  if(option!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	add	if(option!=  null)reset();  if(option!=  null)  {  throw  new  IllegalArgumentException( " ");  }	reset();  	compilable	  [FE]  IllegalArgumentException  	27	1	replace
25	[BUG]  [BUGGY]  if(option!=  null)reset();  if(option!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]  if(option!=  null)reset();  if(option!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	replace	if(option!=  null)reset();  if(option!=  null)  {  throw  new  IllegalArgumentException( " ");  }	reset();  	compilable	  [FE]  IllegalArgumentException  	27	1	replace
26	[BUG]  [BUGGY]  if(option!=  null)reset();  if(!option.hasOption(option))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]  if(option!=  null)reset();  if(!option.hasOption(option))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	replace	if(option!=  null)reset();  if(!option.hasOption(option))  {  throw  new  IllegalArgumentException( " ");  }	reset();  	non-compiled	[CE]  cannot  find  symbol	27	None	replace
27	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]  if(option!=  null)reset();  if(option!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	add	if(option!=  null)reset();  if(option!=  null)  {  throw  new  IllegalStateException( " ");  }	reset();  	compilable	  [FE]  IllegalStateException  	27	1	replace
28	[BUG]  [BUGGY]  if(option!=  null)reset();  if(option!=  null)  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]        ComparisonFailure  [CONTEXT]  option  =  (Option)options.iterator().next();  }  else  {  gbuilder.reset();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  gbuilder.withOption((Option)i.next());  }  option  =  gbuilder.create();  }  [BUGGY]  if(option!=  null)reset();  if(option!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    return  option;  }  [CLASS]  PatternBuilder  [METHOD]  create  [RETURN_TYPE]  Option  [VARIABLES]  Set  options  boolean  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  Iterator  i  DefaultOptionBuilder  obuilder  Option  option  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	87	87	1	replace	if(option!=  null)reset();  if(option!=  null)  {  throw  new  IllegalStateException( " ");  }	reset();  	compilable	  [FE]  IllegalStateException  	27	1	replace
