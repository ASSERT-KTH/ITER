bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  abuilder  =  abuilder.create();  [CE]  cannot  assign  a  value  to  final  variable  abuilder  [FE]        ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  abuilder  =  abuilder.create();  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder  =  abuilder.create();	  if(abuilder!=    null)    {    argument    =    abuilder.create();    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  abuilder	5	None	replace
2	[BUG]  [BUGGY]  abuilder.withArgument(argument);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  abuilder.withArgument(argument);  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.withArgument(argument);	  if(abuilder!=    null)    {    argument    =    abuilder.create();    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
3	[BUG]  [BUGGY]  abuilder  =  abuilder.createOption();  [CE]  cannot  assign  a  value  to  final  variable  abuilder  [FE]        ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  abuilder  =  abuilder.createOption();  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder  =  abuilder.createOption();	  argument    =    abuilder.createOption();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  abuilder	14	None	replace
4	[BUG]  [BUGGY]  obuilder  =  abuilder.createOption();  [CE]  cannot  assign  a  value  to  final  variable  obuilder  [FE]          ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  obuilder  =  abuilder.createOption();  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder  =  abuilder.createOption();	  argument    =    abuilder.createOption();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  obuilder	14	None	replace
5	[BUG]  [BUGGY]  Argument  argument  =  abuilder.createOption();  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]            ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  Argument  argument  =  abuilder.createOption();  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	Argument  argument  =  abuilder.createOption();	  argument    =    abuilder.createOption();    	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	14	None	replace
6	[BUG]  [BUGGY]  if(abuilder!=  null)  {  gbuilder.reset();  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(abuilder!=  null)  {  gbuilder.reset();  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  null)  {  gbuilder.reset();  }	      gbuilder.reset();    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	9	None	replace
7	[BUG]  [BUGGY]  if(type!=  '.')  {  gbuilder.reset();  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]      ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(type!=  '.')  {  gbuilder.reset();  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '.')  {  gbuilder.reset();  }	      gbuilder.reset();    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	9	None	replace
8	[BUG]  [BUGGY]  if(abuilder!=  null)  {  gbuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]        ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(abuilder!=  null)  {  gbuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  null)  {  gbuilder.reset();  }  else  {  throw  new  IllegalArgumentException( " ");  }	      gbuilder.reset();    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	9	None	replace
9	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  gbuilder.addArgument(abuilder);  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addArgument(abuilder);	      gbuilder.addArgument(argument);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
10	[BUG]  [BUGGY]  gbuilder.addArgument(argument,  type);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  gbuilder.addArgument(argument,  type);  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addArgument(argument,  type);	      gbuilder.addArgument(argument);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
11	[BUG]  [BUGGY]  gbuilder.addArgument(abuilder,  argument);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  gbuilder.addArgument(abuilder,  argument);  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addArgument(abuilder,  argument);	      gbuilder.addArgument(argument);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
12	[BUG]  [BUGGY]  gbuilder.addArgument(argument,  opt);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  gbuilder.addArgument(argument,  opt);  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addArgument(argument,  opt);	      gbuilder.addArgument(argument);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
13	[BUG]  [BUGGY]  if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	      if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
14	[BUG]  [BUGGY]  if(obuilder.isOptional())  {  argument  =  obuilder.create();  }  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(obuilder.isOptional())  {  argument  =  obuilder.create();  }  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(obuilder.isOptional())  {  argument  =  obuilder.create();  }	  argument    =    obuilder.create();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
15	[BUG]  [BUGGY]  obuilder.withArgument(argument);  [CE]  variable  argument  might  not  have  been  initialized  [FE]          ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  obuilder.withArgument(argument);  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder.withArgument(argument);	  argument    =    obuilder.create();    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	22	None	replace
16	[BUG]  [BUGGY]  abuilder.reset();  abuilder.withValidator(validator(type));  [CE]  variable  argument  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  abuilder.reset();  abuilder.withValidator(validator(type));  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.reset();  abuilder.withValidator(validator(type));	      if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	4	None	replace
17	[BUG]  [BUGGY]  if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]      ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	      if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	4	None	replace
18	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]        ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	      if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	4	None	replace
19	[BUG]  [BUGGY]  argument  =  argument.withValidator(validator(type));  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  argument  =  argument.withValidator(validator(type));  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  argument.withValidator(validator(type));	  argument    =    abuilder.withValidator(validator(type));    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
20	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(type),  required);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  argument  =  abuilder.withValidator(validator(type),  required);  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(type),  required);	  argument    =    abuilder.withValidator(validator(type));    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	6	None	replace
21	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(type),  type);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  argument  =  abuilder.withValidator(validator(type),  type);  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(type),  type);	  argument    =    abuilder.withValidator(validator(type));    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	6	None	replace
22	[BUG]  [BUGGY]  argument  =  abuilder.createOption(type,  options);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  argument  =  abuilder.createOption(type,  options);  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.createOption(type,  options);	  argument    =    abuilder.createOption(type);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
23	[BUG]  [BUGGY]  argument  =  abuilder.createOption(argument);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  argument  =  abuilder.createOption(argument);  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.createOption(argument);	  argument    =    abuilder.createOption(type);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
24	[BUG]  [BUGGY]  Argument  argument  =  abuilder.createOption(type);  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]                ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  Argument  argument  =  abuilder.createOption(type);  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	Argument  argument  =  abuilder.createOption(type);	  argument    =    abuilder.createOption(type);    	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	7	None	replace
25	[BUG]  [BUGGY]  argument  =  options.createOption(abuilder);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  argument  =  options.createOption(abuilder);  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  options.createOption(abuilder);	  argument    =    abuilder.createOption(options);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
26	[BUG]  [BUGGY]  Argument  argument  =  options.createOption(abuilder);  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]              ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  Argument  argument  =  options.createOption(abuilder);  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	Argument  argument  =  options.createOption(abuilder);	  argument    =    abuilder.createOption(options);    	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	16	None	replace
27	[BUG]  [BUGGY]  OptionBuilder  obuilder  =  options.createOption(abuilder);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  OptionBuilder  obuilder  =  options.createOption(abuilder);  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	OptionBuilder  obuilder  =  options.createOption(abuilder);	  argument    =    abuilder.createOption(options);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
28	[BUG]  [BUGGY]  abuilder.createOption(options);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  abuilder.createOption(options);  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.createOption(options);	  argument    =    abuilder.createOption(options);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
29	[BUG]  [BUGGY]  gbuilder.setOption(type);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  gbuilder.setOption(type);  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.setOption(type);	      gbuilder.setOption(opt);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
30	[BUG]  [BUGGY]  gbuilder.setOption(argument);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  gbuilder.setOption(argument);  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.setOption(argument);	      gbuilder.setOption(opt);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
31	[BUG]  [BUGGY]  gbuilder.setOption(option);  [CE]  cannot  find  symbol  option  [FE]                ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  gbuilder.setOption(option);  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.setOption(option);	      gbuilder.setOption(opt);    	non-compiled	[CE]  cannot  find  symbol  option	11	None	replace
32	[BUG]  [BUGGY]  abuilder.reset();  abuilder.withShortName(String.valueOf(opt));  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  abuilder.reset();  abuilder.withShortName(String.valueOf(opt));  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.reset();  abuilder.withShortName(String.valueOf(opt));	      if(opt!=    '[')    {    abuilder.reset();    abuilder.withShortName(String.valueOf(opt));    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
33	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.reset();  abuilder.withShortName(String.valueOf(opt));  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(type!=  '[')  {  abuilder.reset();  abuilder.withShortName(String.valueOf(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '[')  {  abuilder.reset();  abuilder.withShortName(String.valueOf(opt));  }	      if(opt!=    '[')    {    abuilder.reset();    abuilder.withShortName(String.valueOf(opt));    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
34	[BUG]  [BUGGY]  if(abuilder!=  '[')  {  abuilder.reset();  abuilder.withShortName(String.valueOf(opt));  }  [CE]  incomparable  types:  ArgumentBuilder  and  char  [FE]                ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(abuilder!=  '[')  {  abuilder.reset();  abuilder.withShortName(String.valueOf(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  '[')  {  abuilder.reset();  abuilder.withShortName(String.valueOf(opt));  }	      if(opt!=    '[')    {    abuilder.reset();    abuilder.withShortName(String.valueOf(opt));    }    	non-compiled	[CE]  incomparable  types:  ArgumentBuilder  and  char	21	None	replace
35	[BUG]  [BUGGY]  if(type  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(type  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	      if(type!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
36	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]    IllegalArgumentException    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	      if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	20	None	replace
37	[BUG]  [BUGGY]  abuilder.reset();  abuilder.withValidator(validator(opt));  [CE]  variable  argument  might  not  have  been  initialized  [FE]      IllegalArgumentException    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  abuilder.reset();  abuilder.withValidator(validator(opt));  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder.reset();  abuilder.withValidator(validator(opt));	      if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	20	None	replace
38	[BUG]  [BUGGY]  if(required)  {  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(required)  {  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(required)  {  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	      if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
39	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	        if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	19	1	add
40	[BUG]  [BUGGY]      if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	        if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	19	1	add
41	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	        if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	19	1	add
42	[BUG]  [BUGGY]      if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	        if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	19	1	add
43	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	        if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	19	1	add
44	[BUG]  [BUGGY]      if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	        if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	19	1	add
45	[BUG]  [BUGGY]      if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >>  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  incompatible  types  [FE]          IllegalArgumentException    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >>  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	        if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >>  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  incompatible  types	19	None	add
46	[BUG]  [BUGGY]  argument  =  opt.createOption(abuilder);  [CE]  char  cannot  be  dereferenced  [FE]          ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  argument  =  opt.createOption(abuilder);  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  opt.createOption(abuilder);	  argument    =    abuilder.createOption(opt);    	non-compiled	[CE]  char  cannot  be  dereferenced	15	None	replace
47	[BUG]  [BUGGY]  obuilder  =  abuilder.createOption(opt);  [CE]  cannot  assign  a  value  to  final  variable  obuilder  [FE]            ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  obuilder  =  abuilder.createOption(opt);  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder  =  abuilder.createOption(opt);	  argument    =    abuilder.createOption(opt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  obuilder	15	None	replace
48	[BUG]  [BUGGY]  abuilder  =  abuilder.createOption(opt);  [CE]  cannot  assign  a  value  to  final  variable  abuilder  [FE]              ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  abuilder  =  abuilder.createOption(opt);  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	abuilder  =  abuilder.createOption(opt);	  argument    =    abuilder.createOption(opt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  abuilder	15	None	replace
49	[BUG]  [BUGGY]  gbuilder.addOption(OptionBuilder.createWithType(type));  [CE]  cannot  find  symbol  OptionBuilder  [FE]                ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  gbuilder.addOption(OptionBuilder.createWithType(type));  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addOption(OptionBuilder.createWithType(type));	      gbuilder.addOption(OptionBuilder.create());    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	13	None	replace
50	[BUG]  [BUGGY]  gbuilder.addOption(OptionBuilder.create(type));  [CE]  cannot  find  symbol  OptionBuilder  [FE]                  ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  gbuilder.addOption(OptionBuilder.create(type));  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addOption(OptionBuilder.create(type));	      gbuilder.addOption(OptionBuilder.create());    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	13	None	replace
51	[BUG]  [BUGGY]  gbuilder.addOption(OptionBuilder.create(),  type);  [CE]  cannot  find  symbol  OptionBuilder  [FE]                    ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  gbuilder.addOption(OptionBuilder.create(),  type);  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addOption(OptionBuilder.create(),  type);	      gbuilder.addOption(OptionBuilder.create());    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	13	None	replace
52	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	17	1	add
53	[BUG]  [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	17	1	add
54	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	17	1	add
55	[BUG]  [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	17	1	add
56	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	17	1	add
57	[BUG]  [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	17	1	add
58	[BUG]  [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >>  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  incompatible  types  [FE]          IllegalArgumentException    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt  >>  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt  >>  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	non-compiled	[CE]  incompatible  types	17	None	add
59	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]    IllegalArgumentException    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	      if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	18	None	replace
60	[BUG]  [BUGGY]  if(required)  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(required)  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(required)  {  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	      if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
61	[BUG]  [BUGGY]  gbuilder.setOption(options,  type);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  gbuilder.setOption(options,  type);  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.setOption(options,  type);	      gbuilder.setOption(options);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
62	[BUG]  [BUGGY]  gbuilder.setOption(options,  required);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  gbuilder.setOption(options,  required);  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.setOption(options,  required);	      gbuilder.setOption(options);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
63	[BUG]  [BUGGY]  gbuilder.setOption(options,  options);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  gbuilder.setOption(options,  options);  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.setOption(options,  options);	      gbuilder.setOption(options);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
64	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	        if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	3	1	add
65	[BUG]  [BUGGY]      if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	        if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	3	1	add
66	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	        if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	3	1	add
67	[BUG]  [BUGGY]      if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	        if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	3	1	add
68	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	        if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	3	1	add
69	[BUG]  [BUGGY]      if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	        if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	compilable	  [FE]  ComparisonFailure  	3	1	add
70	[BUG]  [BUGGY]      if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >>  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [CE]  incompatible  types  [FE]          ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      if(type!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  if(type  >>  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	        if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    if(type  >>  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	  	non-compiled	[CE]  incompatible  types	3	None	add
71	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      gbuilder.reset();  gbuilder.reset();  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	        gbuilder.reset();    gbuilder.reset();	  	compilable	  [FE]  ComparisonFailure  	8	1	add
72	[BUG]  [BUGGY]      gbuilder.reset();  gbuilder.reset();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      gbuilder.reset();  gbuilder.reset();  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	        gbuilder.reset();    gbuilder.reset();	  	compilable	  [FE]  ComparisonFailure  	8	1	add
73	[BUG]  [BUGGY]      gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  abuilder.reset();  }  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]      ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  abuilder.reset();  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	        gbuilder.reset();    final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  abuilder.reset();  }	  	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	8	None	add
74	[BUG]  [BUGGY]      gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  gbuilder.reset();  }  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]        ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  gbuilder.reset();  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	        gbuilder.reset();    final  Argument  argument  =  getOption(type);  if(argument!=  null)  {  gbuilder.reset();  }	  	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	8	None	add
75	[BUG]  [BUGGY]      gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  abuilder.reset();  }  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]          ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  abuilder.reset();  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	        gbuilder.reset();    final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  abuilder.reset();  }	  	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	8	None	add
76	[BUG]  [BUGGY]      gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  gbuilder.reset();  }  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]            ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      gbuilder.reset();  final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  gbuilder.reset();  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	        gbuilder.reset();    final  Argument  argument  =  getOption(type);  if(argument  ==  null)  {  gbuilder.reset();  }	  	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	8	None	add
77	[BUG]  [BUGGY]  ArgumentBuilder  obuilder  =  options.createOption(abuilder);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  ArgumentBuilder  obuilder  =  options.createOption(abuilder);  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	ArgumentBuilder  obuilder  =  options.createOption(abuilder);	  argument    =    abuilder.createOption(options);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
78	[BUG]  [BUGGY]  options  =  abuilder.createOption(options);  [CE]  cannot  assign  a  value  to  final  variable  options  [FE]              ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  options  =  abuilder.createOption(options);  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	options  =  abuilder.createOption(options);	  argument    =    abuilder.createOption(options);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  options	16	None	replace
79	[BUG]  [BUGGY]  obuilder  =  abuilder.create();  [CE]  cannot  assign  a  value  to  final  variable  obuilder  [FE]        ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  obuilder  =  abuilder.create();  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder  =  abuilder.create();	  if(abuilder!=    null)    {    argument    =    abuilder.create();    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  obuilder	5	None	replace
80	[BUG]  [BUGGY]  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]    IllegalArgumentException    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt  ==  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	      if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	18	None	replace
81	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(opt!=  '[')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '[')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }	      if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
82	[BUG]  [BUGGY]  argument  =  obuilder.createOption(type);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  argument  =  obuilder.createOption(type);  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  obuilder.createOption(type);	  argument    =    abuilder.createOption(type);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
83	[BUG]  [BUGGY]  ArgumentBuilder  obuilder  =  gbuilder.create();  [CE]  incompatible  types  [FE]        ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  ArgumentBuilder  obuilder  =  gbuilder.create();  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	ArgumentBuilder  obuilder  =  gbuilder.create();	  argument    =    obuilder.create();    	non-compiled	[CE]  incompatible  types	22	None	replace
84	[BUG]  [BUGGY]  argument  =  obuilder.createOption();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  argument  =  obuilder.createOption();  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  obuilder.createOption();	  argument    =    obuilder.create();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
85	[BUG]  [BUGGY]  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]    IllegalArgumentException    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt  ==  '.')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	      if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	20	None	replace
86	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(opt!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(opt));  }	      if(opt!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
87	[BUG]  [BUGGY]      gbuilder.reset();  OptionBuilder  obuilder  =  options.getOptionBuilder();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      gbuilder.reset();  OptionBuilder  obuilder  =  options.getOptionBuilder();  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	        gbuilder.reset();    OptionBuilder  obuilder  =  options.getOptionBuilder();	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
88	[BUG]  [BUGGY]      gbuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.create();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      gbuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.create();  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	        gbuilder.reset();    OptionBuilder  obuilder  =  OptionBuilder.create();	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
89	[BUG]  [BUGGY]      gbuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.createOption();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      gbuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.createOption();  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	        gbuilder.reset();    OptionBuilder  obuilder  =  OptionBuilder.createOption();	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
90	[BUG]  [BUGGY]      gbuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      gbuilder.reset();  OptionBuilder  obuilder  =  OptionBuilder.createOption(opt);  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	        gbuilder.reset();    OptionBuilder  obuilder  =  OptionBuilder.createOption(opt);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
91	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  obuilder.withShortName(String.valueOf(opt));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]            ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  obuilder.withShortName(String.valueOf(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '[')  {  abuilder.reset();  obuilder.withShortName(String.valueOf(opt));  }	      if(opt!=    '[')    {    abuilder.reset();    abuilder.withShortName(String.valueOf(opt));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	21	None	replace
92	[BUG]  [BUGGY]  if(type!=  '-')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(type!=  '-')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '-')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	      if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
93	[BUG]  [BUGGY]  if(type!=  'n')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(type!=  'n')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  'n')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	      if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
94	[BUG]  [BUGGY]  gbuilder.setOption(options,  option);  [CE]  cannot  find  symbol  option  [FE]              ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  gbuilder.setOption(options,  option);  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.setOption(options,  option);	      gbuilder.setOption(options);    	non-compiled	[CE]  cannot  find  symbol  option	12	None	replace
95	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(type),  argument);  [CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  argument  =  abuilder.withValidator(validator(type),  argument);  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(type),  argument);	  argument    =    abuilder.withValidator(validator(type));    	non-compiled	[CE]  method  withValidator  in  class  ArgumentBuilder  cannot  be  applied  to  given  types;	6	None	replace
96	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(opt));  [CE]  incompatible  types  [FE]            ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  argument  =  abuilder.withValidator(validator(opt));  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(opt));	  argument    =    abuilder.withValidator(validator(type));    	non-compiled	[CE]  incompatible  types	6	None	replace
97	[BUG]  [BUGGY]  argument  =  abuilder.withValidator(validator(argument));  [CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  argument  =  abuilder.withValidator(validator(argument));  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.withValidator(validator(argument));	  argument    =    abuilder.withValidator(validator(type));    	non-compiled	[CE]  method  validator  in  class  PatternBuilder  cannot  be  applied  to  given  types;	6	None	replace
98	[BUG]  [BUGGY]  argument  =  obuilder.createOption(opt);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  argument  =  obuilder.createOption(opt);  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  obuilder.createOption(opt);	  argument    =    abuilder.createOption(opt);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
99	[BUG]  [BUGGY]  ArgumentBuilder  obuilder  =  abuilder.createOption(opt);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  ArgumentBuilder  obuilder  =  abuilder.createOption(opt);  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	ArgumentBuilder  obuilder  =  abuilder.createOption(opt);	  argument    =    abuilder.createOption(opt);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
100	[BUG]  [BUGGY]  argument  =  gbuilder.createOption(opt);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  argument  =  gbuilder.createOption(opt);  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  gbuilder.createOption(opt);	  argument    =    abuilder.createOption(opt);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
101	[BUG]  [BUGGY]  ArgumentBuilder  obuilder  =  abuilder.createOption();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  ArgumentBuilder  obuilder  =  abuilder.createOption();  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	ArgumentBuilder  obuilder  =  abuilder.createOption();	  argument    =    abuilder.createOption();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
102	[BUG]  [BUGGY]  if(type!=  '[')  {  abuilder.set();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(type!=  '[')  {  abuilder.set();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '[')  {  abuilder.set();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	      if(type!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
103	[BUG]  [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	      if(type!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
104	[BUG]  [BUGGY]  gbuilder.addValidator(validator(type));  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  gbuilder.addValidator(validator(type));  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addValidator(validator(type));	      gbuilder.reset();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
105	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	add	        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	17	1	add
106	[BUG]  [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      if(opt!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	        if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    if(opt!=  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	  	compilable	  [FE]  IllegalArgumentException  	17	1	add
107	[BUG]  [BUGGY]  if(type!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(type));  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(type!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(type));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '.')  {  abuilder.set();  abuilder.withValidator(validator(type));  }	      if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
108	[BUG]  [BUGGY]  if(type!=  '-')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]      ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(type!=  '-')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '-')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	      if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	4	None	replace
109	[BUG]  [BUGGY]  obuilder.addOption(OptionBuilder.create());  [CE]  cannot  find  symbol  OptionBuilder  [FE]                ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  obuilder.addOption(OptionBuilder.create());  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	obuilder.addOption(OptionBuilder.create());	      gbuilder.addOption(OptionBuilder.create());    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	13	None	replace
110	[BUG]  [BUGGY]  argument  =  abuilder.createOption(opt,  type);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  argument  =  abuilder.createOption(opt,  type);  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  abuilder.createOption(opt,  type);	  argument    =    abuilder.createOption(opt);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
111	[BUG]  [BUGGY]  Argument  argument  =  abuilder.withValidator(validator(type));  [CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)  [FE]          ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  Argument  argument  =  abuilder.withValidator(validator(type));  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	Argument  argument  =  abuilder.withValidator(validator(type));	  argument    =    abuilder.withValidator(validator(type));    	non-compiled	[CE]  variable  argument  is  already  defined  in  method  createOption(char,boolean,char)	6	None	replace
112	[BUG]  [BUGGY]  gbuilder.withOption(opt);  [CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  gbuilder.withOption(opt);  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.withOption(opt);	      gbuilder.reset();    	non-compiled	[CE]  method  withOption  in  class  GroupBuilder  cannot  be  applied  to  given  types;	9	None	replace
113	[BUG]  [BUGGY]  if(opt!=  '[')  {  obuilder.reset();  abuilder.withShortName(String.valueOf(opt));  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(opt!=  '[')  {  obuilder.reset();  abuilder.withShortName(String.valueOf(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '[')  {  obuilder.reset();  abuilder.withShortName(String.valueOf(opt));  }	      if(opt!=    '[')    {    abuilder.reset();    abuilder.withShortName(String.valueOf(opt));    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
114	[BUG]  [BUGGY]  if(type!=  '@')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(type!=  '@')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(type!=  '@')  {  abuilder.reset();  abuilder.withValidator(validator(type));  }	      if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	4	None	replace
115	[BUG]  [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '.')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	      if(type!=    '.')    {    abuilder.reset();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
116	[BUG]  [BUGGY]  if(abuilder!=  null)  {  arguments  =  abuilder.create();  }  [CE]  cannot  find  symbol  arguments  [FE]        ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(abuilder!=  null)  {  arguments  =  abuilder.create();  }  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(abuilder!=  null)  {  arguments  =  abuilder.create();  }	  if(abuilder!=    null)    {    argument    =    abuilder.create();    }    	non-compiled	[CE]  cannot  find  symbol  arguments	5	None	replace
117	[BUG]  [BUGGY]  argument  =  gbuilder.create();  [CE]  incompatible  types  [FE]        ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  argument  =  gbuilder.create();  [BUGGY]    }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	argument  =  gbuilder.create();	  argument    =    obuilder.create();    	non-compiled	[CE]  incompatible  types	22	None	replace
118	[BUG]  [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [CE]  variable  argument  might  not  have  been  initialized  [FE]    IllegalArgumentException    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(opt!=  '['  ||  opt  ==  ']')  {  abuilder.reset();  abuilder.withValidator(validator(opt));  }	      if(opt!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(opt));    }    	non-compiled	[CE]  variable  argument  might  not  have  been  initialized	18	None	replace
119	[BUG]  [BUGGY]  if(obuilder!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  if(obuilder!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	if(obuilder!=  null)  {  if(type!=  '[')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }	      if(type!=    '[')    {    abuilder.reset();    abuilder.withValidator(validator(type));    if    (required)    {    abuilder.withMinimum(1);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
120	[BUG]  [BUGGY]  gbuilder.setOption(abuilder);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  gbuilder.setOption(abuilder);  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.setOption(abuilder);	      gbuilder.setOption(opt);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
121	[BUG]  [BUGGY]  gbuilder.addOption(OptionBuilder.create(opt));  [CE]  cannot  find  symbol  OptionBuilder  [FE]                ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]  gbuilder.addOption(OptionBuilder.create(opt));  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	gbuilder.addOption(OptionBuilder.create(opt));	      gbuilder.addOption(OptionBuilder.create());    	non-compiled	[CE]  cannot  find  symbol  OptionBuilder	13	None	replace
122	[BUG]  [BUGGY]      gbuilder.reset();  gbuilder.set();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      gbuilder.reset();  gbuilder.set();  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	        gbuilder.reset();    gbuilder.set();	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
123	[BUG]  [BUGGY]      gbuilder.reset();  Gbuilder.reset();  [CE]  cannot  find  symbol  Gbuilder  [FE]      ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      gbuilder.reset();  Gbuilder.reset();  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	        gbuilder.reset();    Gbuilder.reset();	  	non-compiled	[CE]  cannot  find  symbol  Gbuilder	8	None	add
124	[BUG]  [BUGGY]      gbuilder.reset();  gbuilder.init();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    final  Argument  argument;  if  (type  !=  '  ')  {  abuilder.reset();  abuilder.withValidator(validator(type));  if  (required)  {  abuilder.withMinimum(1);  }  if  (type  !=  '*')  {  abuilder.withMaximum(1);  }    [BUGGY]      gbuilder.reset();  gbuilder.init();  [BUGGY]    argument  =  abuilder.create();  }  else  {  argument  =  null;  }  obuilder.reset();  obuilder.withArgument(argument);  obuilder.withShortName(String.valueOf(opt));  obuilder.withRequired(required);  [CLASS]  PatternBuilder  [METHOD]  createOption  [RETURN_TYPE]  void  final  char  type  final  boolean  required  final  char  opt  [VARIABLES]  Set  options  boolean  required  Argument  argument  ArgumentBuilder  abuilder  GroupBuilder  gbuilder  char  opt  type  DefaultOptionBuilder  obuilder  	projects/Cli7/src/java/org/apache/commons/cli2/builder/PatternBuilder.java	1.0	114	114	1	replace	        gbuilder.reset();    gbuilder.init();	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
